cset: moving following pidspec: 3071417
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.229407128 seconds)
loading group "shootout"... done (took 1.078953439 seconds)
loading group "string"... done (took 0.667764048 seconds)
loading group "linalg"... done (took 8.75895102 seconds)
loading group "parallel"... done (took 0.238280706 seconds)
loading group "find"... done (took 3.442699283 seconds)
loading group "tuple"... done (took 2.215076806 seconds)
loading group "union"... done (took 13.275210398 seconds)
loading group "dates"... done (took 1.727932979 seconds)
loading group "micro"... done (took 0.211960338 seconds)
loading group "simd"... done (took 6.381136848 seconds)
loading group "io"... done (took 1.414635471 seconds)
loading group "random"... done (took 12.219213136 seconds)
loading group "problem"... done (took 1.760726773 seconds)
loading group "array"... done (took 34.288631994 seconds)
loading group "misc"... done (took 2.039938413 seconds)
loading group "scalar"... done (took 62.096348479 seconds)
loading group "sort"... done (took 4.962772716 seconds)
loading group "sparse"... done (took 17.95857618 seconds)
loading group "collection"... done (took 23.356447316 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.507377767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.114797046 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148851284 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118763217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.270330012 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131996153 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130458105 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113809471 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.084430474 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162132874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138381629 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430578705 seconds)
done (took 5.775007176 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.30654171 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244902341 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181214136 seconds)
  done (took 1.576804319 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.125412596 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.058316561 seconds)
    (3/3) benchmarking "different"...
    done (took 0.065561836 seconds)
  done (took 1.396066873 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.063738106 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14152896 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064539777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064938113 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067594196 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064469019 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064337531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064415359 seconds)
  done (took 1.680414573 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072487518 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066083156 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063889223 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065471778 seconds)
  done (took 1.41547612 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.066126618 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.12526645 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062821424 seconds)
    (4/4) benchmarking "different"...
    done (took 0.062598413 seconds)
  done (took 1.461971869 seconds)
done (took 9.067541217 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.194312396 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.791836793 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.881189578 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.166318548 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.337296512 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.346033877 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.122522221 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.222502758 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.134695422 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07533721 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.165994458 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.080906468 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.50905809 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.490828365 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071416912 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.187855672 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.607784729 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08452858 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.112897095 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.191649351 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.082360939 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.08299053 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087932312 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.071729993 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.11425304 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.282381794 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.606943321 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.097107687 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.067059041 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089012859 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.069991092 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074548053 seconds)
  done (took 10.683797253 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.13348542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.130183931 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066929877 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.101137714 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093697895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067953685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073294552 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066890683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086431921 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129877867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090202797 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143232883 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066337405 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067797638 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.131075028 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.157373819 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082665668 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081085256 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067050193 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080265637 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.093380718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079177546 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077312458 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076794025 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.110988176 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.131394388 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.088769115 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106831883 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06686145 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087074659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.09387869 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.107224613 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067216346 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065308021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.107986232 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.083907447 seconds)
  done (took 4.545852636 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.038217082 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099683822 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.12487229 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.116024043 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106045569 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.093148513 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.167141548 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.122005183 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099690818 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067474915 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.197463869 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.700290196 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.153372799 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.093185361 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071310543 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.168185626 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.364958593 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.922640494 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072966285 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067992015 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.119728417 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070253197 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.159626967 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067021734 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.180610028 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.788486789 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070545299 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067982238 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095781901 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.130856243 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064266062 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141448608 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093589508 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068510044 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.581366081 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065977632 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063210334 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.084095374 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.100082712 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06555047 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066488267 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077744411 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064671551 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.115726442 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080119208 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.556688558 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070253312 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.670560127 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.355830366 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073754333 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071999868 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.101906976 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064200908 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067517958 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.626983259 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.155096972 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067088579 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.287113975 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.0705843 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068653738 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069275034 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.101812745 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06798766 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069454203 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073564538 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.085269404 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.090294513 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.153960579 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.087091435 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.066969595 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067135152 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.065651157 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.567731278 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.076773668 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068991636 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.063945064 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069872836 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065863379 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06520329 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106651981 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.092058869 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.089060484 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069147947 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066097981 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065156116 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.5827093 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.963513319 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.069755078 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067482931 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.506850109 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.064591894 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065805025 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067597932 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.087670292 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066574876 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063213638 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099831859 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068771987 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.114013505 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.597086406 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.067629908 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.063826062 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.534565792 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.07006741 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101729271 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.1246427 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067791036 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.108590645 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.067908489 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064989845 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07349962 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064419221 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069315935 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065659191 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066541102 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.065279981 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068764448 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068481429 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067064972 seconds)
  done (took 23.790043093 seconds)
done (took 41.209729795 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.421388288 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.079151678 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.078933453 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.078671407 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.078672272 seconds)
  done (took 1.943325047 seconds)
done (took 3.262114752 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.267437129 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.093350484 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.063463921 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.211626564 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.090190133 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.182541506 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.22697409 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.174096718 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.091782044 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.0916862 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.092213921 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.230393795 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.242607159 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.093339727 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.166195454 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.242982686 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.095110791 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065011862 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.09180311 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.094419744 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.094298373 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065307603 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.093099769 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.094465627 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.166719835 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.092156983 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.064520496 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.167049769 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.095242973 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.172190513 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.095854201 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.094392867 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.095439583 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.168088398 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.095722305 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.168178442 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06518944 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.09530283 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.095520814 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.097057207 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.095458475 seconds)
  done (took 6.430217711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.090639066 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080735478 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083756812 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061024212 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07029501 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080514394 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06115237 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08017249 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097081009 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081264182 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08080245 seconds)
  done (took 2.169636195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.084428923 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08459609 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083378212 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060621985 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072008559 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081370197 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061020561 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081366912 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08527836 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082334729 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082188219 seconds)
  done (took 2.097756285 seconds)
done (took 11.929363543 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.214094963 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.11163016 seconds)
  done (took 1.549639518 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.58921701 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.211743111 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.122918619 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.262180007 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.114268203 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.150144095 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.551000004 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.151305553 seconds)
  done (took 7.435990627 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.124477813 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.135760545 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.068926545 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.067230323 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.067715714 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.0674993 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.072010641 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.06775265 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.067102263 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.069532396 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.069038607 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.067653296 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.068127133 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.06960714 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.067553258 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.067951439 seconds)
  done (took 2.583611949 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.073648999 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.069982905 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.071257186 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.061408416 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.072402259 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.07220946 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.072827986 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.073087738 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.07224144 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.073376834 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.070397123 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.072131869 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.071181997 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.069793768 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.072136265 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.061503572 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.072125775 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.071951735 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.074102462 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.073895987 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.072272636 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.070323902 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.075475351 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.072175389 seconds)
  done (took 2.978195949 seconds)
done (took 15.790639918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.190849666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075663712 seconds)
  done (took 1.504616493 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.119217524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117874901 seconds)
  done (took 1.490936981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075879352 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.060159162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.07824919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070203451 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061127753 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060619821 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077548107 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061028366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060848258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060999506 seconds)
  done (took 1.926824616 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064951646 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06834087 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066048406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063748498 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066786495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061754862 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064639207 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062221608 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068870351 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060912605 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065050329 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083894721 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064757857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084110213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065028961 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065210171 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067157819 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065279874 seconds)
  done (took 2.466265595 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063539232 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061325197 seconds)
  done (took 1.384028501 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066394696 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061026536 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063108587 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063019165 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060908424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060622395 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061380878 seconds)
  done (took 1.688276744 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.447787258 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.194813668 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.431627344 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070747764 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085529611 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278067193 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065544472 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070344672 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07047718 seconds)
  done (took 2.969477247 seconds)
done (took 14.691311794 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086159354 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.187602829 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.140760761 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457183458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.080703628 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067754095 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.095863933 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247010638 seconds)
done (took 2.6371446 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.54908734 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.392817763 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.321253075 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.069694098 seconds)
  done (took 3.04811285 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.433459702 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.204853589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074619882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065082007 seconds)
  done (took 2.05684309 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065625939 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069258193 seconds)
  done (took 1.420816423 seconds)
done (took 8.359410785 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073328235 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059097626 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065024427 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060531049 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063303727 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060037579 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.060263083 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061093611 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059122225 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.061111441 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.061083519 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061172779 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060851575 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060887034 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.060291775 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061249783 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.05930686 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060873216 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060851298 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061274187 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.059717244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062079426 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061212883 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061998513 seconds)
  done (took 2.737356793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.07981909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063399614 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063991043 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063819465 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064228628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063958199 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064271477 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063309981 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064458295 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063136605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064669949 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064876844 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063096699 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064833466 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063341967 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064846423 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06461724 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063596575 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063332864 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064947882 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06445809 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063880359 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065295633 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065092734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065648091 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06565739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063977189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064391612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065253589 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065804271 seconds)
  done (took 3.230976607 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066903107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057463338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057890906 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067627616 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057293505 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057622494 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05790345 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057457042 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057965646 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058732384 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058332583 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05763222 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058465321 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057659388 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057733231 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058385981 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062982395 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078131066 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058033058 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05779994 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062497789 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058044425 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057791188 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05787056 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058279289 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058174723 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058138572 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05868147 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058445567 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059184945 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058573884 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063221282 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064633243 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058563794 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068879713 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063799982 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058663351 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065278648 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059461695 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058328227 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058355051 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058413164 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058688584 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058744681 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069288784 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059035901 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060061092 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059318446 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058987177 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058426246 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058663055 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060403252 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064416512 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060001698 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058515041 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059892796 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058473803 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059294488 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058669395 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058488806 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058590382 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062546597 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060006041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059496301 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080023097 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060136023 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069395348 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05867224 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059113247 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062865657 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059243202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077919899 seconds)
  done (took 5.66343967 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.072523978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068820837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076508251 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06751946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061461565 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058795135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062037094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05879879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068103113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062684992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058763061 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061824143 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06774791 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065152957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059842091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067782023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062162203 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061474061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059159172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062837304 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060206208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062391817 seconds)
  done (took 2.71959001 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.144867171 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064176193 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105760833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067730981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066426258 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067596518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064067677 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064176816 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06419984 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064720025 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064623017 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06410556 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066284427 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064666303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064806968 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064589054 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064657874 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065144851 seconds)
  done (took 2.587603937 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077189836 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063788366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090408655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063371459 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063413443 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063521585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067350156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067566928 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063509733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063928366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067743543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063580687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063666803 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064035498 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063878648 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06399267 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063740478 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064000725 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067629888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067804581 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068239398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068395689 seconds)
  done (took 2.767829794 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078616831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06285099 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078866751 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06418041 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057867167 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057867316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076286028 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063179752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064571553 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062873653 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063350714 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058310706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065324767 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063325536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065603134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063351945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062901485 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063213659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062848519 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058152835 seconds)
  done (took 2.593520116 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116314219 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060515525 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060305711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064803989 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060541945 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060503222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06521699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060716579 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060740686 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085021174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060975346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060844224 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065515798 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063616531 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060825254 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065386038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065584545 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066000029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062593081 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061402272 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085873565 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061683145 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066636035 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061756472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061743002 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061705058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061580075 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064789562 seconds)
  done (took 3.154154607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065235503 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061557141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061572836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061467752 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061310462 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061256165 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061317983 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061469175 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061357597 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061728868 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061344241 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061384537 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061342236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061264299 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061490566 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061321659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061445849 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061665282 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061707512 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061663223 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061361147 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061418395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061326641 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061704857 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061554542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061299754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061888305 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062170835 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061808891 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062117882 seconds)
  done (took 3.163342917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073436827 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068949908 seconds)
  done (took 1.448486737 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062027152 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075199225 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057269197 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070250487 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066007036 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061470105 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066740109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066535663 seconds)
  done (took 1.825476551 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.11087136 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.133715778 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059926388 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06008862 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108611692 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126350318 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119606649 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073073992 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07409465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062685377 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059951414 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119914304 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059690629 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073769547 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06131696 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07246804 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06762775 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078246509 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07326599 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058658074 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073324394 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061033788 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059625809 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06121587 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060868987 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06750513 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076681363 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073158936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069192113 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058122303 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079732778 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05905901 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060184417 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069078563 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111913953 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059484172 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09744646 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059688376 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064121818 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058772617 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072152345 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08071936 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073964235 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077705344 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060700585 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061074136 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058612068 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060808304 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063306057 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068905334 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058951756 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067199774 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058604135 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060619288 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070361427 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059624393 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06447304 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069366858 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073532997 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070533566 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072150337 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075411945 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068628148 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068116011 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060192314 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079729342 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060890687 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073042683 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07470393 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.06036441 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073166772 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058813562 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058298993 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059326759 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094588598 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061495157 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.06077959 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059898462 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059574749 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061514736 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071298267 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066688324 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068857283 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064519427 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077943488 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070736488 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060869063 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069433714 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.08030833 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065594253 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061856732 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.079828297 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065656095 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061457908 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08109461 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072510342 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064222304 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063290067 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065999857 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.232364953 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060317568 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057541945 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067713233 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059956435 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107278341 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062352846 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06704531 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058222887 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068856852 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063526913 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059516224 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057057775 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063062103 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058980887 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056942384 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068101444 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058145416 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072927254 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065157983 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073204776 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073583743 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069100889 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074493314 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05810285 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056997006 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.076538647 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06801116 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059194033 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076466171 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057508915 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06900617 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057729622 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059308137 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067891442 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057225571 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059653026 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057997303 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063596309 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.059370392 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059734493 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064686488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067996227 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071644056 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060152751 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068695664 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059808363 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075902312 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070022031 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064423001 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06258912 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059952857 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071789979 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06632616 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069082456 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058742063 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059886381 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059434171 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070481471 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069407158 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061007465 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067815893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064267096 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059928988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059569346 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060276977 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06330255 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062459168 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059905505 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067601059 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068564206 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073772024 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066570995 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068964061 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061315397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058886869 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060959209 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058856942 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064262091 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069160656 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075508757 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071623302 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081333621 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.05961999 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069791859 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060889524 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076908885 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073388412 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060543183 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064073109 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058332583 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061529193 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070719194 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0732551 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075781392 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076855135 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065849499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065897075 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060324802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076757396 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061365878 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070221275 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.071306458 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068244527 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061510649 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063447011 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071569605 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066715014 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062561769 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.078500279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070841005 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.223075653 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074212756 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059013644 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069459039 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057983246 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062513261 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064043385 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059798338 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068113217 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073957855 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057060023 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058746691 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074201815 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059669637 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059371135 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066810129 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073768161 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063208362 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066480957 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069156765 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068646246 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06321009 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068550119 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059067845 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067930162 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060986848 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07028938 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058207199 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076682771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057238299 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073845531 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058466601 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069591035 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05880943 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068082113 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058932529 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075605783 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059649556 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058915924 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070268994 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057048084 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06777061 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057722948 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063831321 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065169998 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068039029 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060554531 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069027008 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060782214 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068540775 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064164935 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067787382 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068717358 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064065429 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058791751 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068195285 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070803576 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067903903 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060754536 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060668895 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059799175 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069257328 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060693833 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060537446 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068067555 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064472302 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06561451 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06084376 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061059226 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060774277 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068388848 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069291733 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077961811 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068338077 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067256181 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069020035 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058713621 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075383185 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059407746 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067325006 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058234682 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066541661 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069155195 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05959278 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079339987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060862935 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067876284 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07248292 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068668692 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063703057 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078176668 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06269438 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068478788 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068181246 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064607271 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066656857 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061376848 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068730185 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07105109 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072276837 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06201835 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0690457 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070605669 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062795288 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071222215 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062777227 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070048826 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063450867 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060561469 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066515531 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07401188 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067093292 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067348891 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062190675 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060544032 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062497052 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.234902445 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064315265 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06788552 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074659021 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057537301 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062101901 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058005667 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06248628 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076550358 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068241891 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066723042 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063464959 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057330338 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059543279 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059701782 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058517374 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060982921 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057100649 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05764175 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069120827 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059719295 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063033099 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058521161 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05911844 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068648736 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062307028 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058778883 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065286387 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057867729 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063755908 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057276069 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059470446 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063223277 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057577804 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062370213 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06890429 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075004096 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065560158 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067711934 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059299759 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066776281 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075252071 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065791713 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059346856 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06818892 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05758056 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077788186 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069009256 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068389429 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06941325 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060211216 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076457827 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064091352 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069446586 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075248926 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060414101 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.06697837 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058974724 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075743771 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064455642 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05900948 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068127819 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067747411 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065413019 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071521439 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060073246 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067755631 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064402365 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063193325 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060943881 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060864582 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068624764 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076199142 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060174715 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064926768 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067818391 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068233999 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064367685 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072136253 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068092178 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06069495 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061146936 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063524782 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060427438 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072086622 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060148818 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064689392 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064548939 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059170579 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066785755 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076834613 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06954118 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06963559 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059079418 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058867284 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078365003 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06375001 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062917412 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068582653 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071325809 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074116933 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071163095 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0791778 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06191481 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067459482 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074104227 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062061555 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060856724 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065338514 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063519988 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071395505 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072377382 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069892186 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064136016 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069237172 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07632118 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.226816753 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064721267 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063980153 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059134292 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069324948 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066861026 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067376001 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059391435 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057687132 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062066228 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067495787 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06633211 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067638666 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05902858 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065056939 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072151405 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066175727 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060974631 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057635026 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060905636 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067768431 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06325639 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057690453 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063487355 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062544711 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065372287 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067905083 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063291169 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057722079 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075439969 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066677031 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067699933 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059828645 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059912446 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058892299 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057697126 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069731246 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057680207 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.327294127 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064836387 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059972382 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07631413 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066888315 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074588452 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059168078 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06401389 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058556049 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072003298 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064133315 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059342212 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070022987 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058367931 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075085932 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071227641 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06549877 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058598768 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064604259 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067577228 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074716036 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069552268 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068647107 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062592963 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069422695 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061048271 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070812094 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058953251 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058287033 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069826901 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068309375 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072162034 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058835782 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069943099 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061064628 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068043739 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067791565 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060924178 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060875318 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061186435 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069284656 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064322889 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069100724 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064541408 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076795977 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060464699 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071566436 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069049422 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070975937 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074059004 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072384562 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068343428 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060394223 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067673944 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068124148 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060815834 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065154889 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063033664 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082594237 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061616968 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061926277 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076651609 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069965278 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06125951 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069653272 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066231457 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071738379 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062060163 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072372259 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.067882058 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062545028 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06705641 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067005741 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060692092 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061471288 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062095111 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.230554869 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063971142 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058959914 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077964225 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059882057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067474376 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069603311 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065645699 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059632552 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057261308 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059169872 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07204872 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074147451 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062037446 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067246018 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059490277 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067880707 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057020802 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06741246 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066601316 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067340009 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057604114 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058537639 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073692155 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074257771 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063446614 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074614793 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067732148 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059543289 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08020283 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067734397 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059268039 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069468227 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060263607 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057566937 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057339973 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059562859 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070058928 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057860897 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060359168 seconds)
  done (took 42.008955569 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102537721 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059466546 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057932305 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057867296 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064986623 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059411119 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058307707 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059368201 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059313543 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060379711 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058226051 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058079942 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063753501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073505287 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066086081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061916817 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058339524 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059535443 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058261557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059573118 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065068347 seconds)
  done (took 2.720156234 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064599612 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062118447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061677296 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061778349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060877884 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058233545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.061869971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058435242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062341486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058755713 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062384063 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058416996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.05885146 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.058780033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058790442 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059869002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.062276857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064154022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.05836162 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061824527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059955227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.062293406 seconds)
  done (took 2.718728162 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062792092 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058900174 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067473825 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057501403 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057415719 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060573342 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057409666 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062904999 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06294137 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062840758 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067609844 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.05927321 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057709175 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064335062 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057701082 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05883554 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102719838 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059133172 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059152825 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057897611 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.060668991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067776763 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057930189 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058403645 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063330652 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061600497 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058456273 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061088632 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059213138 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063353499 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059582182 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058093704 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068020806 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067421917 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063375851 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063308687 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060147849 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059417431 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058456866 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058445238 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067489 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059962063 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058610046 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059931575 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067968459 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058465276 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05824763 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068250449 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058179549 seconds)
  done (took 4.424160834 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073171967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116499899 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064512953 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09972356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070527417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063676075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064275607 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.102947642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059428344 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059792076 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071257236 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071299283 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060840378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062006653 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064248818 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060811308 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061925109 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060624609 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063764827 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061549663 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063717659 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066314358 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071050626 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07134233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062259927 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060588853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060894428 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062494102 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071019354 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064214646 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062736264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0632354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071613171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065014539 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061066068 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061196669 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072258179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061977353 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062269598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060287033 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061402775 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063007755 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066450378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07315802 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062083468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066771606 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061911913 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059955511 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072163518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061689332 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06530957 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073021822 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062806662 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062002076 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063202 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072029596 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061916457 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060564455 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061964047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071757801 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060687148 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062717749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072781367 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061393779 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065182143 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073145156 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066992693 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06310104 seconds)
  done (took 6.05261931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070839213 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093746101 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072635914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072487018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068425825 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068537001 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068372939 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068470147 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068332005 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071121529 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06870701 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.151322558 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06566689 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070069349 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069104788 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069231506 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06915773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069218439 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06921499 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069029866 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0692115 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073817219 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069096695 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074053621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073940869 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065903266 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069021028 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069082022 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074130595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069183077 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073780338 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069164264 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069266118 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076974672 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073952338 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069440943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060018312 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069572443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069703371 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069812851 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066231382 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07471207 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069370841 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066176671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069758946 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069401745 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074603449 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074317962 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071378335 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072712634 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069837969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074766807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069684623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069825354 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074623942 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077892117 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074955847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075070434 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070138807 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074959815 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074952309 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078006635 seconds)
  done (took 5.922870888 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076013362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063987966 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076835066 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.057778095 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057878781 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067524537 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058163268 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05806356 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064226396 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06420279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065597475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067564908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069370594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065688119 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067659659 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069353448 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06750587 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068097555 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06502731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068355409 seconds)
  done (took 2.748844445 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.063069973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063185287 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.058598981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073922194 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.058633158 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066145461 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.05898969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058992352 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059026432 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058938502 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06349018 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06342534 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058828979 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066715923 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062338565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066412455 seconds)
  done (took 2.402516889 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064292572 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066386863 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.111792553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059860597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061350602 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058884021 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059706015 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058621518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060780202 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072727747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059777069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.061538518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.05961144 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05878474 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058832777 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.061516686 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061099374 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059625493 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059567804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.114363006 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068463513 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060603687 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062275523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060706086 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061738111 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068042992 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061499235 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061706036 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059930144 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062142184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.061795891 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070953585 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061741424 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060635063 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058974728 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059688738 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060155557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062303634 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062264453 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060148503 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059117781 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061747633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060231283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060613609 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061382307 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062493017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061684346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070529274 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060536655 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.062217826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060471531 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062002017 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061210587 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071998954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062881479 seconds)
  done (took 4.916148738 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07897698 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063706929 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057779643 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057720823 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063248976 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063824335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06359218 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063815704 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064258512 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0581324 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064213326 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063230636 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064226807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06379037 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064151433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06378575 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058074869 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063871588 seconds)
  done (took 2.570246402 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071197384 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063341247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.063694156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059677038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.059615213 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064133112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058370172 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059691341 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059627806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.060034038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059990483 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.059668691 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059602836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.059698544 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063615255 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060336382 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.059655565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05851635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.059896111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058216162 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064567106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058950013 seconds)
  done (took 2.750306568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.135678298 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081903999 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.176696167 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078522802 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088714322 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070228691 seconds)
  done (took 2.041850096 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094716105 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095594179 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06333646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063342968 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067514336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065979344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066223304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066360009 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069353222 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072095304 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066310974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06955433 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069190707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07093727 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067781388 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067745958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06640752 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066864173 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064098324 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07469575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067028746 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070370747 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067006819 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066787903 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066989794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072713483 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070153488 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073052054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066902723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070452916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068655822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067035699 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070354226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072971012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064237281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070203383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067050705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075108242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068852949 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072585215 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06448476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069177223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070802924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0703039 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070894601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067641137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070471777 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067565925 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067541294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079134701 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069458903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072325792 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069354062 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071233488 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070905052 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079247412 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073871453 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072717415 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069862622 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074037339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073053133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069809776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072889581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074404298 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06969532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073100442 seconds)
  done (took 6.070731943 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103825467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06391285 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066153779 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07154012 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070814286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066369754 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066552555 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06651553 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066433235 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06397968 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101887469 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066942291 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071226492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071266304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06669156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066644926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067016135 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071946269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064667132 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078713074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067221662 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072033184 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072103297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072040318 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073167653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068909823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067273351 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067055474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067123634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067213188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070108457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067308818 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072122369 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06454259 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071958657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06742539 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067002957 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070001499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067303177 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069337231 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07275337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075644336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06767615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067429189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073683284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067508685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067526611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064945329 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067544224 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06505359 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073745661 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076624373 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073868338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072630208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067862436 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067807983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067682361 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067736267 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067768567 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069720562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072905863 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067847797 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080053891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06812288 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068096608 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096843827 seconds)
  done (took 6.108999148 seconds)
done (took 126.629813672 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.251776145 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.22302707 seconds)
  done (took 1.871829323 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.122652064 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.120137339 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.141395619 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.069730153 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.128175117 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.222320835 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.17364135 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.073522925 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.070134951 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.07217536 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.069799971 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.071861717 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.072276366 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.069558349 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.133259952 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.073679618 seconds)
  done (took 3.110183489 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.121441008 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.226358546 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.104899565 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068020285 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151110498 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075988927 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.070935272 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074541527 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075837405 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.068812835 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117096503 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.082726921 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.073417971 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.074917328 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.070648698 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07326014 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074398641 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075758441 seconds)
  done (took 3.11426545 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.13942463 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.080429462 seconds)
  done (took 1.655652902 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160800187 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10692747 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145068845 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351447007 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.139733411 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.143892798 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145756241 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140909922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114394194 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138615477 seconds)
  done (took 3.012190221 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10669467 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102680426 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.326280545 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100338682 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079927328 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074823872 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07256026 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077770608 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072840248 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074238856 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120239119 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073025293 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070281847 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122170772 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.09780837 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105243214 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069235034 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076748486 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078075831 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068949816 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073857447 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078332226 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.177850256 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077224835 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100449497 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.073389692 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075278129 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072386765 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07221765 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07622018 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076885492 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100426225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077018744 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082808315 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.074712345 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.096595789 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070188255 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099333523 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072922363 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070777714 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073166263 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077057352 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070449284 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.076367653 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073443966 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075743775 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079006738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069379038 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073808505 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073044489 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071101733 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074906188 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07444259 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.07566648 seconds)
  done (took 6.147290343 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123241716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109948163 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06788622 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114879142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108698926 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068140812 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124113986 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104061594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.122245528 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067651374 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068595292 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067742868 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074613883 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078700548 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119839367 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113229096 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069838129 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068194228 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112652322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113058352 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067045772 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124708995 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115723978 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112016334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066856888 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06819934 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066798224 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067433581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075679839 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075382201 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06720051 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077847143 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079855033 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074704012 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066588983 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066775494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066691923 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075422074 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079997758 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076880951 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073844681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066434076 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066693631 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067345052 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067793675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066362836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076955915 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076193515 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077435877 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068242722 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067712436 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0670454 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068414968 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074918386 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073998037 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075275698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078532711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068337207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067566031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06895856 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079148921 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076373657 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075668108 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068521914 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077085686 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067627947 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078304809 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080409925 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067423447 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067882857 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067804416 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067614221 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067912418 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074256875 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074365902 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068114055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068580703 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067525427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076859943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076535751 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069132279 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079152139 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068420911 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068986673 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069472646 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070445959 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081677577 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079127205 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070461848 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07076054 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070251575 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070307618 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069573416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2345645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074299964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073847867 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075430564 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066686526 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075762866 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074382845 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066846657 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072721388 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066288329 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06655024 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066455888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072536603 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072193327 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074176816 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06626937 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065847354 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074055926 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075998477 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06637628 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072463016 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075240161 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07303124 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065866493 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075952919 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066473252 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075365581 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066412211 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074785246 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06645008 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073057543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066313716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06566566 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066357393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075800204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066674173 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066283668 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066467181 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066322566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073084343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07692737 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067362841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074262383 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074441447 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06759342 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076505879 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067213242 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076490287 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067373898 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067476544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066450004 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078642857 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067038382 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068219642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067378419 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076755008 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067635861 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076535406 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073923808 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066938015 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077559163 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076388678 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073965791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077236445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068291572 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067693441 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067370818 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067592462 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077017157 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078356273 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06893439 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06766973 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073843481 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077327581 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067230099 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074347591 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074230298 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074686519 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067762539 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067617272 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077952073 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07928909 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075633369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080040963 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077991546 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069111628 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076606222 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08003227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06950526 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083750787 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069689724 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081336311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081742456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077758303 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.236861766 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07723915 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075547721 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.074994281 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076821426 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065918423 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066274813 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072667079 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066004703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069146461 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072004362 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066555171 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067243903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079302454 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066753398 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075464935 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065988442 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07325011 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065824274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066740479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077255276 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066313855 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066679322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073591353 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066356384 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072401225 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075308843 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072641594 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066139014 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066716427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075949887 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075788947 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06619276 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066083131 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066681574 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075044905 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074346632 seconds)
  done (took 18.453666876 seconds)
done (took 38.814429537 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.197144498 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.115494794 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.203074097 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.134636457 seconds)
  done (took 2.081689385 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.100971091 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.063296174 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.125511335 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.136176348 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.063513072 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.121750733 seconds)
  done (took 2.075925642 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.256465642 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.181180205 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.184874957 seconds)
  done (took 2.093006266 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.175852273 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.312902804 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.571573846 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.172953017 seconds)
  done (took 2.707431895 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.162650148 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151282291 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.075111262 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165294415 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.082314912 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.060103081 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145982619 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.067529588 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.097553986 seconds)
  done (took 2.536122249 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140893311 seconds)
done (took 13.10907774 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.301688031 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.125486284 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.077104467 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.070869707 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.176554107 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.176721332 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.260530986 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.07334416 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.250726497 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.357330121 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.206414669 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.092607411 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.142991075 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.087699728 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.320316477 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.075560418 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.072940826 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.068499608 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.189381312 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.187581594 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.226590961 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.072932926 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.137428411 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.074542892 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.149400078 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.123128729 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.212455651 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.348725051 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.319249889 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.075086865 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.171929968 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.091633252 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.16545311 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.176900305 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.180209588 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.097942113 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.064993976 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.305748716 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.14976289 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.370090811 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.199795834 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.071618612 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.189977594 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.069850616 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.128181523 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.133899561 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.078420626 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.071768042 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.089651474 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.071665506 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086994293 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.071929972 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.187882701 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.068756804 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.139819204 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.189219416 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.378785574 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.207079364 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.069216258 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.080858896 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.072606181 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.193593061 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.086598498 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.068007856 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.074456208 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.064623846 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.17549824 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.082886955 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.06477835 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.072836316 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.0710638 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.149084856 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.132463509 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.107421145 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.074003154 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.161083181 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.139053429 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.089448723 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.094271383 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.072159702 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.063668539 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.207207457 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.068717489 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.081364911 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.068708579 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.098434132 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.064024345 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.082823374 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.193572068 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.190881734 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.120082734 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.065003429 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.265186578 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.065604699 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.092763364 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.128088367 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.065790973 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.208194651 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.065202818 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.064974589 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.073383083 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.072029561 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.066690602 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.196055791 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.148272355 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.071494371 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.070334041 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.064592699 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.069287839 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.066558539 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.064509167 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.064358392 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.142791811 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.084724964 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.065247497 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.152026621 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.171230646 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075179603 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.082742496 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.124503983 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.067218853 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.073161609 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.071916838 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.169242958 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.072393834 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.179218439 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.067434293 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.087775995 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.163891333 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.140809326 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.152184673 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.066549765 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.201019457 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.074898481 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.065558278 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.072046815 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.093579992 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.074559269 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.080620229 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.073326696 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.20300516 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076173093 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.070789412 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.167449406 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.067345442 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.160289347 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.143934944 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.356763716 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.070459488 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074650237 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.204749817 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.088237975 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.093089649 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.087071267 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.069931212 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.065390548 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.064839068 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.078671598 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.064539089 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.065496563 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.077688756 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.069638048 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.063535473 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.225405041 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.073492304 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.067334824 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.245428348 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.075808525 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.131021108 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.084852541 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.065203519 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.148413577 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.065286734 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.084892628 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.200319663 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.064220301 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.140224516 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.065566822 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.064636871 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.070792039 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.066415676 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.071861029 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.076271955 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.065512583 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.076856087 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.070779642 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.063719217 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.148015487 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.067310477 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.211891673 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.148515087 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.152176976 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.06488099 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.083685173 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.065466302 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.177926593 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.065963752 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.113058395 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.160348836 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.080727009 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.085975365 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.065586292 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.139516183 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.079134421 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.063990445 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.146485002 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.172917659 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.132272157 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.071762608 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.231121516 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.073636457 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.064681731 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.071620094 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.072321546 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.065039962 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.141976219 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.069122622 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.065340434 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.065187931 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.067281019 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.064507649 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.090232444 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.06504452 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.071629133 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.064521855 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.066877346 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.067786165 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.064669495 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.071805077 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.142058045 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.17472594 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.070139272 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.085218257 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077221984 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075777719 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.18822769 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.071647061 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.186759705 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.065770786 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.074432592 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.087624535 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.066932149 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.072389498 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.066275554 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.085711463 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.070027655 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.068617567 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.262632065 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.068637892 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.06486581 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.065628691 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.065804962 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.072211705 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.06677847 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.064474048 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.064339275 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.063516347 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.068118255 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.069571506 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.073336563 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.083882059 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.234274936 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.064643866 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.066818316 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.063377479 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.063353495 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.064818119 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.064573504 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.064402591 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.065923149 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.064772481 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.063889945 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.090867819 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.068703283 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.063881053 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.084924709 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.063282146 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.072226895 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.169385702 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.08062107 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.068682205 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.063715424 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.246679108 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.146087856 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.085177997 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.083386696 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.063801973 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.073142241 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.063905591 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.067903715 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.063915841 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.089393419 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.069626684 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.063937017 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.064390863 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.06454891 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.185447849 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.071636668 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.064621564 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.071305972 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.065222343 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.064834707 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.090770903 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.064764983 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.065369527 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.082666877 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.076512138 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.142525658 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.075609955 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.066518243 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.189133436 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.065069286 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.065217556 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.064435935 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.155848787 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076334174 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.066728739 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.06500434 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.070864034 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.072259118 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.247231763 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.070019819 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.067223801 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.07155978 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.064679014 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.064587197 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.089125202 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.092518505 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.06713371 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.067541831 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.06585906 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.06477456 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.137489065 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.071974688 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.069029014 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.149831837 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.068087237 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.071848074 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.065155898 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.238794712 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.071652101 seconds)
  done (took 38.006069359 seconds)
done (took 39.50206785 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148705013 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.077799313 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075131968 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072217582 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075917046 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07632766 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075919372 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073567711 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076011732 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07472927 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.127414365 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063175905 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070897366 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.078322868 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07219653 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07911535 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075914108 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078640716 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064197866 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.079103845 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.090987874 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077003383 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072739955 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078796757 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064414348 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072581494 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141051184 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084087497 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068901725 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073816654 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071640352 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079919926 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071655938 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071266168 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081634431 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069059252 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074153861 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07038355 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.141471706 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.06922475 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064421044 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076589482 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071017607 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071981465 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072406555 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075904107 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.06929807 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.077751086 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063649962 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075023982 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142092296 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069653869 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.069013878 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072515129 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069285183 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073828634 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068846652 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075737648 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069088232 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.075657264 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0736668 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072150578 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064035129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072850115 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074112673 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071573706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063211299 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06957976 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064324795 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064329308 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063741219 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073225814 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071411857 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069267973 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063682314 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06453339 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063842056 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076140686 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071371767 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073554288 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064721137 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069613688 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069244592 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06484631 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069783587 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076113341 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063793765 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064849763 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063716105 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079557698 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071294324 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064730605 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076707717 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070221448 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070131558 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064720909 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064275911 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070050984 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072678636 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.065645912 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064565334 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071039506 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07061379 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075068629 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.066673753 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071593528 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072120729 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065837206 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076157162 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074010335 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.241894039 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077333242 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072552487 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074632719 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.064040364 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062307119 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072867762 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.063748178 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068693806 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07092291 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06831375 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071171453 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.063708218 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062307685 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06831759 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068823311 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063572309 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.063609626 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063404131 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072008281 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070449607 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062137251 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063126547 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071952294 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071951212 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062787971 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062613561 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071835067 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.063637986 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069048421 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068374171 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.071966629 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.062797849 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.063607346 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062260503 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062705251 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062426767 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.06833603 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068485398 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.063637336 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071785285 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070249757 seconds)
done (took 12.854074498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068398855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.107341832 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.135531161 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.126551463 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077560014 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065401469 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068164294 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083982711 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067514072 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.089294258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089684145 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085940929 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149569986 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062963503 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0644802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065162587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062900473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076957319 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.130588559 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088594857 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107327655 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064142312 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.077882799 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084423922 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077836611 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083906254 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065850631 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065177933 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067415046 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082480117 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09053547 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064531688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065609328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.083623353 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080854337 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073454929 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065383895 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071543284 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0653771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064477753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066560425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083566072 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071895295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072180386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065622693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065574306 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064574163 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072325434 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079212931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070909113 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.077555865 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.081890755 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066402817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064705079 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062844243 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.072641104 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064553186 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065305833 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06537398 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064833592 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065492715 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067826055 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070753475 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075850529 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069177968 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.072516898 seconds)
  done (took 6.635617116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084158825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092519815 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078535816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081464453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063855853 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064382213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064672804 seconds)
  done (took 2.144524129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068313349 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124884903 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131457319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132932853 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.145218385 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.130970668 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065637799 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097768593 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0639943 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127133353 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.141107713 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136631161 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068551371 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077615888 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065613355 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.135556245 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066027001 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072391873 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131787805 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137680713 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069748516 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095691838 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078718251 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065881261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.135824796 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.128117423 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.067785493 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066060399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067521925 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064935682 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064766577 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.088256773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.127790638 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080117305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065714503 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064432015 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.125822888 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066188547 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128203569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072668149 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128266022 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067518189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067756868 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065274917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066181599 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1314836 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067038243 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065769343 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065304172 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132562123 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065511882 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130985513 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068514818 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070980744 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072946991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072405542 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073174996 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066090791 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133452805 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.076398104 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067839579 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143535974 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143436737 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135119515 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.309678961 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.073997085 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125942772 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.124108114 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064331584 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064091112 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064584337 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13486897 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067653397 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06692225 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069164082 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071544059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127419602 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138538507 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138407841 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077945483 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067071626 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064248422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069891684 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138995611 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069143061 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064320623 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065205875 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063968661 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069142886 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066183565 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069158686 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064249938 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074553545 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066993895 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066453889 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13245025 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064658834 seconds)
  done (took 10.601121722 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070008837 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066842082 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065628904 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065475461 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065835624 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065910538 seconds)
  done (took 2.047543771 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092585534 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065698717 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077357083 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065410557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.087070959 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129254423 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129083403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067029353 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081439029 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07660673 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130034816 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.131697524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.132293356 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067518361 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.131334724 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067409891 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13175473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069557364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076830696 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067531711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079914409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067155319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067269152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13904697 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068597102 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067067502 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066659802 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077249186 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076615636 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.067351627 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067099642 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068115988 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074906152 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067263243 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132968397 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075283998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066252716 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070707177 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067820843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068234204 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135113529 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067759997 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070187398 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07075142 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.067121291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075058265 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070640986 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069999011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133222521 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070888665 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070614955 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069662999 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069365511 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071132748 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075564307 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067745235 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071096157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134823484 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067864179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075516403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068724118 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067776985 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068449945 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071918052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071374876 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075878732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068355548 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068439243 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067339578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071669473 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067015655 seconds)
  done (took 7.463796563 seconds)
done (took 30.485642991 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544303725 seconds)
  done (took 2.146679551 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.968567023 seconds)
  done (took 2.615251923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.196013469 seconds)
  done (took 11.843661015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396296426 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474650943 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.767999611 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139569967 seconds)
  done (took 3.454365019 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.873304206 seconds)
  done (took 2.527729169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238724495 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22510678 seconds)
  done (took 2.13944663 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.472617208 seconds)
  done (took 2.1153935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.302059441 seconds)
  done (took 2.955695496 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23557055 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160505403 seconds)
  done (took 2.052558767 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.663150451 seconds)
  done (took 2.309511358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.59451081 seconds)
  done (took 6.25061905 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251671978 seconds)
  done (took 1.961420548 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239207034 seconds)
  done (took 1.893993197 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.647980116 seconds)
  done (took 4.298127164 seconds)
done (took 50.249579732 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085913072 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083733373 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083442042 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078885599 seconds)
  done (took 1.958008213 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075306242 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068535081 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070877863 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071413111 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068789487 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070495482 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070784705 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067462495 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.06896641 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068080832 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066250445 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067833516 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070452289 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067485638 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070053921 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07151399 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067990363 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068310223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070065163 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067545929 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070518611 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067960054 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067755265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069229375 seconds)
  done (took 3.316325946 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0790057 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07002055 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072788029 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068548119 seconds)
  done (took 1.950799566 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077141824 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.074141311 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082582766 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087228034 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07342425 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074136247 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081125425 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081468457 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.087559098 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084232937 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065550919 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065376564 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064456121 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08309508 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080656876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059932715 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061311124 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074765615 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073947482 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076589207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067478901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063093153 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073781451 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074904293 seconds)
  done (took 3.444231835 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082911726 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06332876 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079601705 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088495515 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089768975 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062940928 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077235575 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090037339 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126360345 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063586617 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069414965 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063269017 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102379633 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063294633 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078626404 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108080699 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111196551 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067222168 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096273756 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063425442 seconds)
  done (took 3.317415318 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078017865 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068294631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067996118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063444425 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074004554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070189807 seconds)
  done (took 2.092784007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068975066 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.06596386 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064991378 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069839703 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.065498563 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.065517216 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.064943645 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.063800122 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064113164 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.064885908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064635171 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.065047697 seconds)
  done (took 2.452078469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21955594 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070911664 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071698709 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064120611 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065353649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064318671 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078655448 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066423918 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081514769 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064567972 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064799196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066584281 seconds)
  done (took 2.642361243 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.106336233 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.109413143 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141913879 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113647796 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112613959 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093304377 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.184465464 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.0919968 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.164748046 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.136321292 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115410128 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.090144899 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084892675 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067877704 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098951105 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11928781 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13739074 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071165888 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111992432 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.23219552 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132690542 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135401629 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.147344953 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115826762 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092355733 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.14735277 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095775938 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102273574 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.122716732 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127857296 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118651183 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.097121036 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07056545 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069548862 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150802385 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.108789336 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.12186837 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.0927338 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10674706 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.088776202 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10938728 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069151466 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083277622 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.114111402 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086689226 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136314137 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.094080004 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120835755 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.256483898 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.136749657 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125281412 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.154900356 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083831594 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102370356 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135036347 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109852597 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132098372 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103679681 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079913162 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116343385 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.103699209 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097462423 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105742719 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077557509 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.174062467 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087125512 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.109526664 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109597762 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.094077668 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094799379 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106075932 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.136427724 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128112823 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127712778 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140678283 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092326935 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120075515 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.101287795 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.128452461 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104122852 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.071654819 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.123817755 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130324786 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101065977 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101661645 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134395384 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.093281281 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075585065 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102413306 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.121227297 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080406534 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116488164 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081404669 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.112093534 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143518192 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104512383 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.292406669 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.117317456 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076172832 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150282635 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105773126 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070506652 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.113995171 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109303393 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152676945 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092409124 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.073837068 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097651161 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1002788 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.15130372 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105459884 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077641088 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106789698 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13770877 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091601497 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.230433264 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093408148 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138309812 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109698452 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085913441 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073741105 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.089077215 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113630022 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107617845 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111417257 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093554301 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.083372933 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08563863 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114832759 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093115783 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080086249 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.114025705 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.104256889 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074319883 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088107679 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.07587981 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14298549 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.077804427 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139285487 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127312254 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076820246 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108405387 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.096620288 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107547364 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.098243903 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121647391 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145058678 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.188688069 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.09560386 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101809903 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115902161 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15557369 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.135969781 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.09728026 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.080157527 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106579604 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119247374 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.103710305 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.135627599 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.099792038 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114847781 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109844713 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.15338707 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.16163733 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106719655 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.106964243 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116345639 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.13216947 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07720144 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.168806395 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112140742 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126112527 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092088675 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.153270864 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.117412922 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095152192 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09090674 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105329361 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113589698 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113052734 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.154501689 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09976759 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.074379334 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098800477 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.155232273 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08074157 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116304309 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.094477503 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.095682044 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125920606 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101910834 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084769639 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069855366 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138442111 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.171182585 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.071636782 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.117890847 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.121457102 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110698236 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132020805 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.071196487 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127031623 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.504805324 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117364103 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141361253 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.167864581 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118879158 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120654613 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114341505 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106111555 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078875597 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.126083781 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.135661107 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09568519 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091681017 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135859522 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.119838596 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138167306 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119759053 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120771619 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.107410906 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107907202 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104247945 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.106332637 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146755187 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122875713 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.125614593 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083358445 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106249963 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.119106663 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137114808 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081420542 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.14260094 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08523588 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121075246 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077871484 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124278749 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077004283 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.170599964 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078749751 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100199572 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.068777786 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.073876495 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.146011979 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.114469538 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109843334 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10383627 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142222021 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.140696595 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079353462 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.109345283 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.29873544 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099353148 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114313979 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106486223 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.087124273 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092527103 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.104973885 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083606329 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079633925 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112972146 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091465478 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122609823 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081987836 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072737257 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136825926 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101566144 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092717235 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073943834 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105097472 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.120835442 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090677689 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08455837 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112785328 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103637242 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.142133424 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.090381066 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.097167588 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.12545993 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079358571 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.09185442 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068445881 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084570562 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07533261 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13031561 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075379264 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117370898 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067720305 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.131502718 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087174423 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.092052198 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101813867 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110132397 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127707614 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093921136 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.141651923 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089369785 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.12214829 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108414624 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094550418 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.087135929 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104399061 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101513725 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125311137 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096673454 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126718874 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148575353 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10467631 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.320969626 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08839978 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120127547 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104547784 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.122025092 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109072133 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.164838596 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135871112 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109316956 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10748545 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073020372 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096199224 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102321006 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.110291073 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170985514 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123396824 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.070260519 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102956958 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091822015 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107586059 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103668681 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081374759 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145956328 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10318757 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087343565 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112277366 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09153306 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104078701 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075471309 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09981572 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104665862 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095146675 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097012854 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115275365 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.130299296 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11297891 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.145361357 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.10023859 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.091799052 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.119109196 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111209441 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110577243 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08565608 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086357345 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141188951 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.123200874 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129794854 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102326849 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111175361 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113843674 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102330455 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.300460789 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105156869 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.123424478 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078001124 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074301417 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066030481 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069856204 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.121134518 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105102627 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108974052 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095848968 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.07003539 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100675321 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100668971 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069793671 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085678604 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091317736 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095843799 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.089696535 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104604909 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114173943 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.094240433 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101697548 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09522099 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.144866863 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100082031 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087605544 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145185793 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.151995089 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087511141 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092406928 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.070564256 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07809804 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112495859 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150765636 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.153506497 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078167162 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086170851 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.08568424 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085981273 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070525746 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.088953573 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.088145714 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105380051 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098449404 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.113552736 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105553861 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074971777 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102765883 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099915422 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09317115 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.109482763 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.124119482 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.130899474 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.145875731 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.117061142 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11042327 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.249064032 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078377644 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073798628 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077471363 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098937648 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076741025 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074228045 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.139938221 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.089457212 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102115769 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105231814 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085348671 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073163897 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13101369 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067264192 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131865881 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.069047198 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079509709 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079818683 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07657797 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090844711 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134632721 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106977008 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109254404 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105043108 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103056562 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.16207021 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.159459523 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081646757 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.142616473 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075213041 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075567593 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075060874 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111089195 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089260784 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113917904 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143089751 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090073614 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101508671 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077387617 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144428605 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.100019788 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104315396 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085586311 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078428487 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.145306248 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079128005 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.081890366 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089454831 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.112613435 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072075015 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.103376331 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083618934 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07962465 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.168278667 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.712601097 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091303609 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075734929 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.271003027 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.141828414 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130041149 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094947317 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105740171 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116317106 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.098522607 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.092168194 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104947222 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.188788424 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072225026 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091905894 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.101299345 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095126318 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098988712 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.096454587 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087124494 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.089984358 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.084829198 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077050967 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104888397 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08591449 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095168917 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.106227429 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081376205 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.087009424 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.130604734 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104137974 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082269386 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087689261 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.104680774 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087117813 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102893136 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.06897948 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112302295 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.088440475 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119647714 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.098552685 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108108453 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126032615 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093773721 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138254761 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108344797 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.123263267 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087149079 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078258965 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128929712 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.091430005 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077685598 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14855158 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098484793 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.105686637 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105234427 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.09740513 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114954538 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.291350536 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110820482 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094448912 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076869333 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098847138 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.099778236 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084564184 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077118516 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07230484 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07432239 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104459415 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083455936 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.084216229 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.110135391 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086491091 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100624338 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100717866 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119753787 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085456946 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099397925 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108553811 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089206411 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107443383 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098766571 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.126753253 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.174163043 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125396946 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129912825 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135414379 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077364063 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075015238 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.067720471 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.113394054 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078760122 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.088920429 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077804083 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134948502 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.081566173 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113056541 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.243888057 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080311812 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09511229 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096769104 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.068774054 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083100005 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10790553 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086656311 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079543593 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12049136 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081627409 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.13025878 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112418821 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101067172 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097591082 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081630079 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117297346 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10590436 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132415255 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096189182 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076027526 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.297348361 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101507698 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134762699 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071074309 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078628305 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127369483 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101132867 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128405282 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.077605755 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146618562 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.139733861 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097976489 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131632469 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069052196 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.637806698 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089281972 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.124255624 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082103319 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109002877 seconds)
  done (took 69.583679654 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.185313832 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.182731143 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.120406217 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.132385021 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.289238717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.298534654 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.151920162 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.123468362 seconds)
  done (took 3.330346756 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.072652298 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081149465 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.078904021 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.266713677 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.100050552 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066470614 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.071624505 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.080413636 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.072542749 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.065903337 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.10336464 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.066117536 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.069479136 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.545070947 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.065467461 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.070965859 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.069122198 seconds)
  done (took 3.791518337 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345158562 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.637675666 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.31702285 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.771906422 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167773283 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.7234808 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073625834 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081232467 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.951142255 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.215487225 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15862187 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087036975 seconds)
  done (took 21.376190895 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.076992931 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.139801418 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.139119935 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.072585056 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.072501795 seconds)
  done (took 2.331492453 seconds)
done (took 123.275937082 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.085381297 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.174793081 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.066498228 seconds)
  done (took 2.107765003 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.141468841 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139849795 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.13873237 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.140593846 seconds)
  done (took 2.400963469 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075567384 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074102717 seconds)
  done (took 1.99620025 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.226055995 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.235008626 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.089189888 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084224318 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077501219 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079033043 seconds)
  done (took 2.093632621 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072239237 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068889649 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069012903 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069132892 seconds)
  done (took 2.116691742 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.180903545 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065013975 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067255356 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069200341 seconds)
  done (took 2.220355478 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.085567016 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.084216465 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.113332463 seconds)
  done (took 2.127393072 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084024074 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082545676 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076706944 seconds)
  done (took 2.087617719 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109724862 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094262401 seconds)
  done (took 2.04366356 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079955005 seconds)
  done (took 1.924164786 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092022842 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095561468 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.203198968 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.170048588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.207511941 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.192865509 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075354261 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075680846 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071283658 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070352527 seconds)
  done (took 3.092182533 seconds)
done (took 26.692032372 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08435547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.189339522 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.315369104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083791155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.651753444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.312316477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.730370696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087788146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098073596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066431279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082879957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.631349372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.730588677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.143706629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.716588227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.133493432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.56063834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066906138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066061879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066421817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.715640264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065952248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066282096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066761719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.557977695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.330883537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067159088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.133294474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066056481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070224833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.312679152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067344449 seconds)
  done (took 14.157248936 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075830474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123952037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071147379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081215272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067968642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068103399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069888024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066867514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109164726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066782845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083540656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066507836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071015536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067769022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08688372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066694475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068739014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067344472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066618717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067002679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085173887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066139546 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066911475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066970187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066680669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080451284 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067649295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066281788 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066583748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070602512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071676228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067678064 seconds)
  done (took 4.213387617 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141933077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128068363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071859581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106131204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115064755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068601819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152556867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088982817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113063396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067164564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083688018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066607075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102110567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067976538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087396985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067004417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069068778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067167869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066698252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067185984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085825717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066422674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066999874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067321976 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06719802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082441609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067853962 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066724805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066783835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07091513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072620598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068007631 seconds)
  done (took 4.509583779 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070252886 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068912579 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074999259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.07793778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064309055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066358753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067387911 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064470154 seconds)
  done (took 2.423973635 seconds)
done (took 27.174195073 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079708826 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06559983 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068308489 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085136535 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071685709 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130934488 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063111735 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072718433 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069239258 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069487763 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071183376 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065641779 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068392884 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062814619 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069769011 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063904691 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134489882 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068257122 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132258043 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132845454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066467342 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06948188 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072449356 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132996557 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.132590075 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13381451 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073589776 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070424848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064613599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0671599 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204287088 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.2065859 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074172253 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.129204795 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06484696 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064396869 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068539221 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067030486 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137476404 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073772367 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066676603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073373348 seconds)
  done (took 5.590184756 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.209952513 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.214852166 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.208514251 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079301506 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091054484 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07843076 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.215669117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075979488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073918975 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.214605974 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070090391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074223487 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076522992 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067147231 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073752835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070189527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075466196 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068283358 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07387264 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073941528 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.214312247 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067678596 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078699954 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075367451 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069593844 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075718955 seconds)
  done (took 4.666412161 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07545133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088040711 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090248905 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144402589 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108665427 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081186047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081753997 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092334251 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100090796 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066741507 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.088845185 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094098273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094875002 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073351706 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106145418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084626743 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078684121 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068086567 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073146746 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10062732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089414719 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084994811 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09952981 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086492935 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114701144 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075730956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073559191 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082174147 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073763938 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078660195 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070257756 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069698785 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066876586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077749846 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070630203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064337987 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089164895 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079628998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081359206 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106586702 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076898645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068204033 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09392581 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131920076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066411638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0691825 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070669113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079764253 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06821663 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097419946 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082372294 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066587062 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085794198 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068142223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068135985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085669927 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068593859 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068580762 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07858162 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072790306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087644041 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072090411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087790813 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066624475 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07824595 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06810686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068401544 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065320913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100816016 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074278394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117082197 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068034799 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064486836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079200382 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078283735 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073596625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066418735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086055344 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078793545 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070589998 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077812541 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069342299 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069994902 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103316697 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065500361 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064619366 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064697942 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068921022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070206856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06734831 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079696461 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066571577 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070879211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0820288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067016289 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067624034 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069332387 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068086982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066340206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077430557 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071126944 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068775161 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079767033 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068103353 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070454789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082330791 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076189148 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066586079 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068070465 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069692191 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069341439 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072263384 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070996965 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069348664 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072243096 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075007907 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075035687 seconds)
  done (took 11.104187292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22973112 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215685876 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067924388 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.21275244 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075427322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146444473 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214927782 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.215932262 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067489364 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068031041 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066268905 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.161281718 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156030627 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.167749947 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.14852546 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069588058 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093729813 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168476896 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.220553226 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.215063315 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093115087 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075078982 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069756132 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068795806 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068607691 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076525957 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082830156 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076062457 seconds)
  done (took 5.527932311 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075694685 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110131926 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070076498 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0903245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082955603 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066366454 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068791348 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067677317 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083693114 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072708243 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066568598 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071258323 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070010248 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067298 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067676379 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073118347 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07326698 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073981756 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070101721 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070946384 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079697282 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154756154 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07093093 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066780312 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069805935 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066649419 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073241266 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075153633 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066429171 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.072289969 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063654664 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070864774 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081307461 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067534625 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066600744 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067624641 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06688709 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066868132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067120764 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064759686 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064734318 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072891992 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065653528 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072054882 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081539346 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070259346 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068249944 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069299099 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069260128 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063753108 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070478519 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070394111 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069832861 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075824958 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070686928 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069264304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068623112 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09804846 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073105135 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066618685 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066987228 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065361965 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068666833 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075179469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083836028 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068799995 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065394908 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067064019 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077517951 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081760245 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06655043 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072503063 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064006103 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067001371 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069251447 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070044147 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068827748 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065171554 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067119087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067192202 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067980745 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066809267 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06733543 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069895476 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064698853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065347085 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067928598 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068663964 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072421675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065862535 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069695608 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068787089 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066323943 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070299788 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073514314 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070664385 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088147745 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075825653 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067992443 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065339523 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082609549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069208709 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066578072 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070998792 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072301466 seconds)
  done (took 9.49166813 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097754447 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067655384 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086470561 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097989423 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076303386 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071106393 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080359549 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066799155 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087952279 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065208499 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075104531 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06447443 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080127057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075842919 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06793282 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07683933 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068757306 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087521536 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081352829 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064908486 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075520122 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07898067 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079039521 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084821884 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084479119 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085328812 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078722082 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068693349 seconds)
  done (took 4.118566793 seconds)
done (took 42.362212866 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.983914636 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.236443478 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.967983157 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.735683235 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.083374144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.017516659 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.071111533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.979107949 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.775256177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.028295742 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.707305482 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.756650025 seconds)
done (took 70.299322382 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.971789237 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.099205292 seconds)
    (2/2) benchmarking "String"...
    done (took 2.182588552 seconds)
  done (took 6.17790583 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.393706015 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.950804052 seconds)
    (3/3) benchmarking "different"...
    done (took 1.989738679 seconds)
  done (took 8.217307132 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.190079073 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.567745752 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.229790436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.950417032 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.958804468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.439532872 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.12753181 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.591522811 seconds)
  done (took 33.758897162 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.958910156 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.315718892 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.362460283 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.427523848 seconds)
  done (took 22.034703644 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.394541972 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.367096459 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.367353367 seconds)
    (4/4) benchmarking "different"...
    done (took 2.650584448 seconds)
  done (took 11.756590093 seconds)
done (took 94.145013454 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.952121649 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.074464506 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.960033583 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.127418377 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.017718892 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.039087265 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.964656353 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.969491276 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.959147168 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.960743623 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.91476057 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.956123168 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.968662535 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.994994526 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.952594059 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.984057428 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.082606268 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.975773214 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.989011532 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.459547786 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.29577318 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.966303763 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.965201249 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.014092982 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.110391914 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.035756108 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.444969948 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.955795372 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.558652274 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.95584607 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.094656174 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.957166996 seconds)
  done (took 209.542288373 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.953155809 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.842010314 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 5.109777349 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 7.200780904 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.401548695 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.386713576 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.897454554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.426295066 seconds)
    (9/36) benchmarking "syr!"...
    done (took 7.055657807 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 7.076932544 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 4.07498995 seconds)
    (12/36) benchmarking "her!"...
    done (took 7.043200375 seconds)
    (13/36) benchmarking "trsv"...
    done (took 4.183972616 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.600494238 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.076897587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.090710273 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.917896018 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.793311169 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.991488266 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.859986654 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.95502206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.426234863 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.375367381 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.804317272 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.97996922 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.015245681 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.965120208 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.987776604 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.442651493 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.79074506 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.979060546 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.968397627 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.41726163 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.18801246 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.954854294 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.957790562 seconds)
  done (took 186.087143177 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.188452596 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.963132149 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.997206384 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.067934136 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.937931881 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.756360417 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.963704319 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.958033074 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.953016204 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.961316117 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.957560079 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.024700628 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.957607321 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.038615078 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.984560448 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.954466154 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.96510049 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.028988765 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.963666429 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.956421879 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.953738903 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.060859344 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.300359235 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.06376379 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.958548244 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.977744046 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.064185568 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.965255729 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.954924831 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.953514718 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.065720097 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.958863188 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.086116249 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.068028807 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.973146269 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.014303182 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.972170152 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146872975 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.961300934 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.954854808 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.959506922 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.01156657 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.95971026 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 6.019581949 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.059756694 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.96381002 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.975128779 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.518592208 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.545394189 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.963202673 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.958241434 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.955915371 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.960506773 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.959313819 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.242026189 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.964163765 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.990090202 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.366616088 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.96344097 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.955959077 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.9559082 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.955475108 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.956074024 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.963111452 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.001761032 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.536273631 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.240610218 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.330485817 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.693012083 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.958312669 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.955653269 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.954349072 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.626944476 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.024219345 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.957027823 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.955633529 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.131488176 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.98129895 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.956649625 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.801571169 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.801471218 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.961173028 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.064669481 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.960378074 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.95638894 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.998353488 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.277823333 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.161376584 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.975581061 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.031378452 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.961381642 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.956007686 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.983094612 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.035166566 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.962456643 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.972583916 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.45158656 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.961064781 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.957477574 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.399479771 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.321937345 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.960477588 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.049045862 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.360168656 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.6867258 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.96778894 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.957230658 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.974702124 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.958924275 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.970641821 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.981365164 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.961972981 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.957546928 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.961591295 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.957312431 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.957304563 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.961407984 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.975879703 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.959079278 seconds)
  done (took 427.705670978 seconds)
done (took 827.537473834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.593147525 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.714506655 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.556585762 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.613206637 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.566819667 seconds)
  done (took 14.934485125 seconds)
done (took 16.821097542 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.331387726 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 3.317801451 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 7.053591753 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.544935053 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.159124422 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.124095652 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.156027709 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.243618929 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.177376688 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.114065951 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.18059094 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.131242664 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.230545696 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.207982564 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.229516576 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.243895107 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.155516282 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 3.673057353 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.201362913 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.130622454 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.14786094 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.162761332 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.115394933 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.187998535 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.219360649 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.154802644 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.376803514 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.198890817 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.163975818 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.214513281 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.225777134 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.235884261 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.166148875 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.202179118 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.224468364 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.226438831 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.193900107 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.226180529 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.13297254 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.169210765 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.186075605 seconds)
  done (took 99.629994762 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.35395236 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.137990941 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.246647816 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.25499647 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.691031573 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.242615669 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.342375421 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.131062446 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.135604874 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.259968562 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.276065714 seconds)
  done (took 27.99544489 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.10144719 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.136529498 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.289132228 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.274600484 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.495635244 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.257052089 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.308799623 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.128032705 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.137547089 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.298065807 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.267676638 seconds)
  done (took 27.60952486 seconds)
done (took 157.124825046 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.513793004 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.020464288 seconds)
  done (took 6.428405435 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.979058423 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.962635416 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.966337757 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.987361767 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.966610674 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.967696885 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 2.13863425 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.986792884 seconds)
  done (took 17.849371018 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.964287607 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.964630552 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.964714707 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.964694738 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.96432632 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.965005916 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.964224028 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.963892431 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.965093834 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.964679478 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.965158972 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.964343828 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.965835355 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.964834735 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.965002975 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.964904273 seconds)
  done (took 33.330948916 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.964777752 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.966054396 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.965230813 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.965372272 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.965290561 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.965511885 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.965954635 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.974063762 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.96546271 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.965289659 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.965524503 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.965814663 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.965603269 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.965613632 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.96561407 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.965745517 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.968082129 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.966046651 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.966199193 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.966286017 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.96588543 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.965865654 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.966643867 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.969683283 seconds)
  done (took 49.088245675 seconds)
done (took 108.607582408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.574308761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.96200734 seconds)
  done (took 9.433992719 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.970800317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.966694257 seconds)
  done (took 5.932489714 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.965975935 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.965985316 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.965832831 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.966752837 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.966179349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.966377698 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.965789617 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.966240327 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.966703909 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.966559772 seconds)
  done (took 21.559309096 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.966473275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.96607831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.966607974 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.9676122 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.967740628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.967318919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.967337023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.967154254 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.9673558 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.967334789 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.966595338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.156313839 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.967107876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.193358594 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.967396345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.967312278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.96769985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.967352661 seconds)
  done (took 37.722277646 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.967336134 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.967929233 seconds)
  done (took 5.833322417 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.968109996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.967860079 seconds)
    (3/7) benchmarking "month"...
    done (took 1.968226465 seconds)
    (4/7) benchmarking "year"...
    done (took 1.967725801 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.970768284 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.968516921 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.974372084 seconds)
  done (took 15.68375718 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.429717489 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.128664071 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.180691729 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.457412849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.572816795 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.921141789 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.576627716 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.922014074 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.771683701 seconds)
  done (took 24.860147835 seconds)
done (took 122.917727008 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.597772778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.999960943 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.616718068 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.079746633 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.064120832 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.2931405 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.978218144 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.506427487 seconds)
done (took 45.054998583 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.997138808 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.96935032 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.010744042 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.010508466 seconds)
  done (took 22.891339065 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.975253387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.681866911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.002899307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.016049872 seconds)
  done (took 23.665561202 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.478973371 seconds)
    (2/2) benchmarking "read"...
    done (took 2.38232662 seconds)
  done (took 6.775773937 seconds)
done (took 62.227706601 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.969069547 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.970286871 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.969508813 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.969376264 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.9698349 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.970260615 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.969397638 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.969628473 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.97036791 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.969768843 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.970160402 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.970067101 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.970662315 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.970527076 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.970827507 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.970327802 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.970632985 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.970475852 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.970179134 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.970420045 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.970818356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.970315524 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.970678094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.970248635 seconds)
  done (took 49.185171829 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 2.039140785 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 2.026662896 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 2.03892914 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 2.031388037 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 2.059520965 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 2.033504785 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 2.031898754 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 2.013208952 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.039257224 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 2.021604573 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.008546282 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 2.057839731 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 2.012701541 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 2.056572116 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.01516601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 2.056923807 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 2.041138753 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.010043141 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.008963673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.060111428 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 2.033002795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.01033017 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 2.057529396 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.009288659 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.051994371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.010283142 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 2.019798703 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 2.030471866 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.009698144 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 2.052209713 seconds)
  done (took 62.850112502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.004755463 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.972733629 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.972560301 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 2.056436668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.972987299 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.97254436 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.972999009 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.972551132 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.972944746 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.972525483 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.97261383 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.973127098 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.972867732 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.972953791 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.97268839 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.973074434 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 2.002953214 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.152707784 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.972907549 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.973604719 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 2.01791579 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.973376866 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.973267904 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.973396326 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.973936049 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.973327092 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.974105977 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.97337258 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.973450568 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.973977206 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.973145641 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 2.020486764 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 2.006369147 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.9742002 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.098976711 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 2.0340374 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.973915836 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 3.526338533 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 4.068367236 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.00802663 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.974097854 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.974281925 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.974643383 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.974598475 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.033996099 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.974722231 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.974395277 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.97478527 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.975754976 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.974805329 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.974729591 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.974810857 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.989992244 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.975424646 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.974948078 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.975345241 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.974870325 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.975732293 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.975323099 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.975107063 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.975003309 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 2.049503149 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.975260444 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.976522042 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.353522704 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.976470308 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 2.041123935 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.975664922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.975748741 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.184460761 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.975926777 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.19388295 seconds)
  done (took 149.377588787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.975763878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.976482221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.05387504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.053019537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.976503065 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.976340785 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.976483878 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.976635443 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.635180183 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.976071795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.976873685 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.97675174 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.640888532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.976727788 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.976516821 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.054022913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.977185919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.976607569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.976977417 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.978506704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.97692703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.977260861 seconds)
  done (took 46.948832606 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.018768214 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.992048675 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 2.013646848 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.992468303 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.992967468 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.99317333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.018987017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.993346782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.024855074 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.019196967 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.02428885 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.019605294 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.993652145 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.023420175 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.020177349 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.061587017 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.019666929 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.058013975 seconds)
  done (took 38.187955651 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.154494132 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.143630053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 2.055613569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.023125516 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.230953777 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.20344729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.082785653 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.151336365 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 2.020539519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.144428987 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.150791518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.017687786 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.204737837 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.020753458 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.018589843 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.231315839 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 2.057068713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.021031994 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.087172489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.083618751 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.156537911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.088337546 seconds)
  done (took 48.257864302 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.015159767 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.022529 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.053456647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.053540958 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.979344987 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.979963737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 2.036203312 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 2.021381386 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.995115273 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 2.016164918 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.01547144 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.979779556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.065751912 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.034305021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 2.065070172 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.016063119 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.022221426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.033972985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.0208604 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.980439985 seconds)
  done (took 42.317838697 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.980093083 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.980069285 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.98003527 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.981191256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.980790694 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.980112072 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.98007807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.979865382 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.980311322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.217923575 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.979881263 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.981387592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.980539179 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.981378406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.980589232 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.980344836 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.980085923 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.980658048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.981111491 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.981858327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.219346734 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.980938577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.981531918 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.980708362 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.981837323 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.981023784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.981337316 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.980878847 seconds)
  done (took 57.847746414 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.044639145 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.019586008 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 2.020274221 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.099594439 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.099695554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 2.02073585 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.099840839 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.100285286 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.018343137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.018905171 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 2.067165843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 2.01968533 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.020441613 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 2.028242802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.021281472 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.068120538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.01839622 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.100543206 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.05723568 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.021279141 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.067746252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.028690077 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 2.068137139 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.021454068 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.019918236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.068208996 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.057840264 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.143594523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.041790857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.02155999 seconds)
  done (took 63.416194766 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.004218558 seconds)
    (2/2) benchmarking "in"...
    done (took 2.007251693 seconds)
  done (took 5.925002724 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.984224688 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.079086321 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.983637296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.178083632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.148564095 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.158729222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.145209949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.074283815 seconds)
  done (took 18.666319489 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.984128458 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 5.308910092 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.134838949 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.985083166 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.983852933 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.532551924 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.930683119 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.871738566 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.753642786 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.863152524 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 3.163176871 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 3.529147524 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 4.042134589 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 3.317449224 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.096550407 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.83860498 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 4.215711142 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.565045385 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 4.039584635 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.097778736 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.736971536 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.067396538 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.985314449 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.985828929 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.985957399 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.919660415 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 5.002216962 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 3.389353084 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.147418003 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.098341 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.770924087 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 2.048950551 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.984977112 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.244325306 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.091102677 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.987391532 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 4.147638841 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.082302517 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.986846092 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.986860394 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.811020614 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.682938306 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 3.224542986 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 4.199489437 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.063076604 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.987483417 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.987607351 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.986817444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 3.24504382 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.636274656 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 4.052273024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.9856202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.123532772 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.988278814 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.572103806 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.12481249 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.987615506 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.922095455 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 6.740516193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 4.214317259 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 3.354364844 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 5.230100694 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 4.101335201 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.10511404 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.988011732 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.209607571 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.889377391 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.834923167 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.719417176 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.091337442 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.559058489 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.997379756 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.98906158 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.98891257 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.964403568 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.365712444 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 2.018863099 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.98918569 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.989723463 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.988295858 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.251929964 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.095626041 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.83045033 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.124993101 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.195732885 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 5.556706777 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.106131766 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.98999087 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 4.651799887 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.861271002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 3.170104099 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 5.720329183 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 3.182921813 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.125537036 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 4.008141987 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 3.230267985 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.02296495 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.989428568 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.83204047 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 4.489273812 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.139505907 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.991138194 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.362482013 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 4.108718617 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.025192013 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.990307311 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 3.712881 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.106792113 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 4.107353207 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.020904997 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.990768375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.991295584 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.60501564 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 3.176780598 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.024657623 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.494731465 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 4.055157268 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.44138264 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 5.390060051 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 3.170042715 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 4.354982642 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 6.045547574 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.248611707 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.893209837 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.026978289 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 4.373133842 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.995437206 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 4.674611411 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 4.277154345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.107800273 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.874819209 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.028408778 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.992967428 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 5.131243172 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.052007717 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.991801785 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.992867721 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.992216018 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.992992517 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.992214444 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 3.107427889 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 4.369895316 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.684485457 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.12987969 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 3.22849524 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.111896198 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.879156827 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 4.185572225 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.670428861 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.129731698 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.994462039 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.620512352 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 5.40662003 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.697423227 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.113736325 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.994728909 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.993580483 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.84097234 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.974130628 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.082324466 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.994924048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.637592127 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 3.185857543 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.02722315 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.994485556 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 3.460656393 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.131705634 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.995061003 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 4.109836694 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.780822352 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.754229394 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.137952479 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 3.299046779 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.110234404 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.994849082 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.995267092 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.994843831 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.783965299 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.654496166 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 7.262385815 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.609927275 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.908311429 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.070191838 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 4.150221086 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.079867556 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 4.281754841 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 3.212641916 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.133863285 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.995405398 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.996387789 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.996140785 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 3.50724451 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.979288761 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 6.013155023 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.977698659 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 3.029578702 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 4.069788547 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 3.176598701 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.859041071 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.005346782 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.741879983 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.98020036 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.090613144 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.99716183 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.996553851 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.140903612 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 3.165140171 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.135568452 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 4.43126993 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.146753027 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.997676082 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 3.664948411 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.116815346 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 4.67375657 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.09622925 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.835647175 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 4.102963239 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.115613865 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 4.129085445 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.684431896 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.102235893 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.997677618 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.75329614 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.118254803 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.999177147 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 4.060082128 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 4.551264086 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.935238296 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.73650136 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.535386771 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 4.093384741 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 3.552815046 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 3.264920719 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.138241463 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.851009997 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.09138181 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 3.256386947 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 4.150034688 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 5.450460183 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.191400638 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.778096262 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.008040584 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.638703438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.138944148 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.006667542 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.114184368 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 4.455638124 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.108074346 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.000746615 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 4.17539438 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.08588522 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 3.678209241 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.119393783 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 3.117068088 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 5.341822439 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.910135622 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.0923535 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.266728418 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 4.140721716 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.948628877 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.94661274 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 3.329428903 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.931186516 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 3.016857599 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 3.182123784 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.825603358 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.186413583 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 4.336281462 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.136270795 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.002600995 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.001128137 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 5.217291055 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.079648565 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.001344483 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.350612846 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.970074786 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 3.063458977 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 3.183973671 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.035312711 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.001013508 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.229108142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.166324107 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 5.297683113 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.471838183 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 3.574102762 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.82461364 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.120401894 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.711558659 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.108442879 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.718199295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 3.192537961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.036827579 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 3.696313631 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.121851991 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 4.286665235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.139820354 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 3.109134251 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.55777974 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.309511493 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 3.274881238 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 4.177994057 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.117876442 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.79324485 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 3.5279934 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 3.244564596 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 5.438691552 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.02227076 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 3.563725158 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 7.206998711 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 3.580467812 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 4.088067665 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.765048809 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 5.180226231 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.048756319 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.004620271 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.003990696 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 3.56813286 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 4.06498738 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.040322697 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.786991837 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.584247406 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 4.060485299 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.753651149 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 3.193813606 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.038938567 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.004564171 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.004478528 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.942992099 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 5.234651886 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 5.368728414 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.122693944 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.005485603 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.005499053 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.974556609 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 5.358813156 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.804137864 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.898693933 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.973471332 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.141607372 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.005345118 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.005244175 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.005393306 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.005185802 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.006265773 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.006533275 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.406174394 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.162759354 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.630269489 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.195608202 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.041304819 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 4.21281883 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.058666123 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.006549154 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 5.221906911 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.072221287 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 3.114594795 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.072565318 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.00636512 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 3.400487864 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.145122634 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 3.007043765 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 5.389480248 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 4.289689167 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 3.224459463 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 5.576317363 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.027331064 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 3.421807282 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.340574657 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.875681213 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.042873881 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.944746842 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 3.189709027 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.847955751 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 3.003812548 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.561249336 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.614833275 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 4.089473363 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 4.316932183 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.908106106 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 3.413741127 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 6.282125616 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.063894338 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.008745624 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.00872327 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.08712293 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 3.229376235 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.050619854 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 5.308703955 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 3.181427824 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 3.012546269 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 5.407435044 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.096247964 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 5.26523134 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.02234019 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.024667612 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.0092266 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.009944316 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 4.46313722 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.922428829 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.079952288 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.009426921 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.944438992 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 5.016375577 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.907255848 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.663236219 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 6.019314659 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.144040976 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.010308679 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 3.204790914 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.057273325 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.914892409 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.018349036 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.79139826 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 3.326820522 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.052786044 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 5.223372851 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.411674091 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 5.849548418 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.398619017 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.139872058 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.01191341 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 4.389740365 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.991200218 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.150614785 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.911413741 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 4.337452889 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.577154499 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 5.563554856 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 6.397045293 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.118288223 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.93856944 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.664979375 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 4.09362752 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.047443966 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.853636516 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.151582905 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 5.319074116 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.953982348 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 3.260209175 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.151415187 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.679002838 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 4.822916991 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.149891645 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 3.607398198 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.149933454 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.013248247 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.677779805 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 3.088776832 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 5.299042863 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.126020779 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.013892848 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.028300742 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 3.710671708 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 3.588712153 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 5.252840164 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.078368146 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.014139429 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 5.71634047 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.891049641 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 3.20582438 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.048179514 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.01382173 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 5.494565953 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.033963517 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.014369208 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 3.417732838 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 3.618888519 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.151447283 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.532850174 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 5.260519744 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.154540394 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 4.275389377 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 5.400388248 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 3.190580842 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.072899297 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.014190815 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.014780808 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.01565243 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.435424293 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.16661441 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.014820638 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 3.602562835 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.153025274 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 3.806300908 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.921397145 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.265716173 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.072256208 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 3.425267925 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.152869036 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.530977583 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 5.023836078 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 3.192510333 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 3.328579125 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 4.169790688 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.195686876 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 4.749501885 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.111342757 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.016144023 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.966901868 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 5.372966095 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 4.34976321 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.410023545 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 5.333331687 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.092226922 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.699414015 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.118219132 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 5.7066499 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.177533842 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.018062013 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 3.517517384 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 6.280266406 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 4.453797131 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.159213467 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 4.500411123 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.123570257 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 3.360549491 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 5.377421895 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.105971593 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.016783383 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.016636293 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.034295639 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 3.067349667 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 4.670630281 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 6.030136881 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 4.483297484 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.140420417 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.871164058 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 6.670326487 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.727693435 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.365776796 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.312693988 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 5.478275479 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.034381776 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.983344688 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 5.390681712 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.081911807 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 3.175085245 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.109924448 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 4.82456947 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.069841091 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.019385306 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.441833284 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.17109064 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.01972652 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.019116967 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.950601698 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 5.912735648 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.113539826 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 4.213771164 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.10495666 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.020448992 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 3.610852166 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 3.27922731 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.051277534 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.020060775 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.019901884 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.89081193 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.118895772 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.019546205 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 4.360814485 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.16340067 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 4.339059428 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.862170939 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 3.547245311 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.108054167 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.020087512 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.019784847 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 3.760204152 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 5.503389502 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.196402386 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.391268142 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 4.156933107 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 3.583218042 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 4.101438627 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.54525194 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 3.53361696 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.024004946 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.134223191 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.020888123 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 3.069335254 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.945151174 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 4.07064644 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.783447196 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 6.589930163 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.103309772 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 4.835392813 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.995442692 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.06984727 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 5.195625133 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.070105129 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.022500036 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.022240176 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.022066246 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 3.526007579 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 4.109498616 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.05779776 seconds)
  done (took 1976.443240282 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.291416286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.02262808 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.02231256 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.022565498 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.02240133 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.022812758 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.022743919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.02238152 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.023035277 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.023149972 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.022671786 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.023455317 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.02253338 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.295322891 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.022738369 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.022772666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.023466574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.023097297 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.023203109 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.023232388 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.023149195 seconds)
  done (took 44.973036285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.022930432 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.023198878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.02305169 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.023165742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.023131387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.023753727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.024446862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.02395242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.023057113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.02347335 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.023875791 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.023837393 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.024211741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.026515892 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.023518414 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.024121907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.024081223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.024184004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.024208141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.024384468 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.024375438 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.024150753 seconds)
  done (took 46.477906288 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.024055489 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.024188093 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.779210135 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.137576168 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.025301078 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.02451999 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.024387682 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 3.214233763 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 3.035939561 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.942252172 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.534262657 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 4.164520673 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.062105629 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 3.200262847 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.117354505 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.024744185 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.146609525 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.024715618 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.025368227 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.025623934 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.024821135 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 4.254743329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.151525023 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.026632363 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.870267557 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.164863693 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.026424997 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.026724307 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.026059733 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 3.024695476 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 3.198742544 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.061675492 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.892580529 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.794612713 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 3.329672087 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.944595351 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 3.213379115 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.061428223 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.026753057 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.027139821 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 3.257026603 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 3.897213589 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.063373232 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.02696855 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 4.3206724 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.133493446 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.027792185 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 3.408964416 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 4.165076247 seconds)
  done (took 134.959682191 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.06593412 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.14635917 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.077710548 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.027233029 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.138558217 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.02732855 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.084031382 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.027905649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.027850031 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.027855252 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.154981339 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.170051206 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.027852997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.027616942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.098866024 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.027620957 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.027910487 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.029495132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.029215052 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.028510265 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.027399719 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.07802257 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.135075235 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.167878732 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.02773188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.028330079 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.028376606 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.02790354 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.162847841 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.028248887 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.028753558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.028596864 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.14931543 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.103842662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.028747497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.028748088 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.146515621 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.028546132 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.029692198 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.029599099 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.029257849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.029700147 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.082694862 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.153753197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.029279304 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.126740757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.029935068 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.02909139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.161263869 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.029446232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.029640201 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.178525395 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.029913995 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.029686911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.030301037 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.142496519 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.029966662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.029805749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.029902829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.158739016 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.030065311 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.030262562 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.171721108 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.030836624 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.030483418 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.177320428 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.13265513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.031095427 seconds)
  done (took 142.573939788 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.030281484 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.165947706 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.203890094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.20494882 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.165651215 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.162165608 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.169028371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.16549133 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.165376419 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.169152343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.166271822 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.114818268 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.136935135 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.114869335 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.169036421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.154039479 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.154341875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.152620788 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.168848423 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.16934891 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.155081991 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.205220301 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.166292533 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.20645861 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.385868297 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.137503464 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.173132477 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.169810461 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.23359605 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.186207193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.394190396 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.17976293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.224694869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.238896506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.401288781 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.223819273 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.070790465 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.200653554 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.281029229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.419654562 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.40143182 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.476613337 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.423271833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.399359876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.425425657 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.422788353 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.337326629 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.391065928 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.122148044 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.17171918 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.175756413 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.217593909 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.166980091 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.163312645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.208442122 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.126218781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.206529958 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.208702765 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.172002068 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.206512688 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.208634285 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.128239621 seconds)
  done (took 139.48093207 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.035343567 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.033403651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.133188524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.08435315 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.066526955 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.150176245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.098850365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.09790116 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.102316674 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.088215441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.072279339 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.156270662 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 3.436185329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.104941918 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.204738956 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 3.43934275 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.157900858 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.156225802 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.074783917 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.15295682 seconds)
  done (took 46.809075863 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.075072594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.080195414 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.10336543 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.199592462 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.075112195 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.215460597 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.094972456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.069623327 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.062121444 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.073482292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.066594254 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.071069195 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.069275078 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.217027017 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.070504157 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.193999723 seconds)
  done (took 35.745061532 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.057950444 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.057020558 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.061050397 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.064033166 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.059411775 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.054585741 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.063577604 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.073368677 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.060302713 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.519106181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.056634205 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.061561261 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.063519979 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.058632477 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.091981157 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.066869423 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.057237821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.057801513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.063246479 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.065078132 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.623917492 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.065586435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.102276071 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.070826564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.103513779 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.608998833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.155983542 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.160074922 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.042238892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.121863915 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.129763609 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.564102505 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.095548509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.152106494 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.172849556 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.134714495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.128834395 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.090158276 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.102498596 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.110609318 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.092235978 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.094673556 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.091937956 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.100075422 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.123442668 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.077670692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.087102139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.559733561 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.092676862 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.081630921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.056883099 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.076585457 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.042106362 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.534040917 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.092380793 seconds)
  done (took 119.660200847 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.114574627 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.137337662 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.069360954 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.066730481 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.137831463 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.119470488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.116983267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.111985753 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.100570709 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.058631792 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.136951846 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.071820559 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.096624275 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.127273924 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.137866552 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.122650167 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.074865492 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.125793366 seconds)
  done (took 39.932360515 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.065973178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.073710145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.073668 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.067575057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.066641108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.101226556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.138261429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.136182641 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.107151139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.110965191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.185353619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.278618185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.244606129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.048862445 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.098811011 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.072175421 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.07921368 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.089075929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.084932381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.08684165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.073980514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.07111729 seconds)
  done (took 48.352636322 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.735690816 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.69781721 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.8845521 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 3.332578546 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.332172427 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.832148357 seconds)
  done (took 18.837309167 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.199287014 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.105294585 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.166374426 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.108261864 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.177929323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.171018605 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.16017212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.22089686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.21324186 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.418902965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.233427496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.236269045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.228967832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.268968541 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.213877198 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.213639847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.220138622 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.228433288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.185815383 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.224191962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.249482307 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.207879856 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.221652611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.219132985 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.235445427 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.258259518 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.182716493 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.447951354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.138687326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.10935101 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.102248468 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.136513874 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.107036517 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.333665598 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.090508641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.104287584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.128516442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.124590556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.10262077 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.166819669 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.083450229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.104610927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.103208232 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.134946743 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.110559282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.13107992 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.130733937 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.141012863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.134446669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.338386986 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.110850546 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.165309024 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.108867319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.111819925 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.108109994 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.331503192 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.339108495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.165636244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.104604069 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.341712617 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.169101653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.105879822 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.165608767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.344064435 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.108560335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.169025716 seconds)
  done (took 146.239178715 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.167499285 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.081319519 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.131883819 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.346694154 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.167566722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.126931239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.128406485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.131825232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.132791945 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.106047921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.133828699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.133848126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.167849361 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.173919199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.135110669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.126989943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.12997695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.165214898 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.106999534 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.336718773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.131005871 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.178537842 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.179887403 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.173884024 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.392862898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.126409713 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.133760613 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.128378172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.127590545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.127524107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.136188006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.133131427 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.170707045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.082953829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.166327229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.136318218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.128787034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.136181248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.136772271 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.134037244 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.176349868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.141388674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.128733214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.12885022 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.337718907 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.134378602 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.134880561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.107501336 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.134438543 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.10820931 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.337645927 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.336871344 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.350706871 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.170904674 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.137430171 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.134998171 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.131986035 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.134553523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.137642715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.130586284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.170289583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.129021836 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.341788843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.128763148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.135136539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.170902054 seconds)
  done (took 144.778102683 seconds)
done (took 3670.142542062 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.092428317 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.129186041 seconds)
  done (took 16.195901657 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 2.054876576 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 2.055458087 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 2.201493739 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 2.055571586 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 7.075063581 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 7.15054557 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 7.099012935 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 2.059252386 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 2.055527402 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 2.140670744 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 2.055661537 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 2.186954988 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 2.149615674 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 2.056570342 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 7.064630531 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 2.060351312 seconds)
  done (took 55.548846006 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 7.060045637 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.582938745 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 4.146894602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.786510018 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 7.080884464 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.933718534 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.990063731 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 6.904109423 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.311078596 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.495053889 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.303127364 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.905908243 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.747390626 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 7.272826359 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.707198508 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.53658839 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.614917512 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.680412021 seconds)
  done (took 78.034264457 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 7.075598892 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 2.159729311 seconds)
  done (took 11.220766724 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.059406428 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.059600996 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.067127345 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.082444691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.081222863 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.0677495 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.091848298 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.084202594 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.08122422 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.054344548 seconds)
  done (took 72.722159812 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 7.055754678 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 4.35689829 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.457396312 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 4.182770154 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 4.936419391 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.528703575 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.192909771 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.413089116 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.127288712 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.052424558 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 7.233628248 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.424500719 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 4.016959341 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 4.124956011 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.608038355 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 3.945360883 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 4.050011824 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.456695243 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.391286464 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 4.462042918 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 3.727990624 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 6.938121844 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.420290631 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.816577667 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.061872034 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 4.639836316 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 3.555608259 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.231638449 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.12524642 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 4.002986378 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 7.168299331 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.25569956 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 6.906794946 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.185618968 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 5.49333125 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 3.720718261 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.747972646 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.30657812 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 3.567084719 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.454182719 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.531305637 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 4.950945763 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 7.156800354 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 4.875945433 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.243545764 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 4.272239939 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.929904363 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.310355206 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.137226534 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.20976691 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.666029913 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.230582107 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.227259987 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.197282493 seconds)
  done (took 213.274150283 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.052360742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.552266217 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.218798841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.054053098 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398422406 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266139545 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.635344391 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.467542982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.055722929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.256445471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.215114942 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.17654762 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.056837049 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.056376094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.058593645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.055167822 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224590955 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.472078453 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.062361306 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.0547886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.250565946 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299842027 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.174565408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.057744659 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.230044307 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.29573491 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.454181624 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.176471073 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.461557279 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.054859648 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.4577976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.061055079 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.055184292 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.054994349 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.41553717 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.364891584 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.483293631 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.056120424 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.661701778 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.05448295 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.705533435 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259873822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.371361275 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.189418287 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.295787107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.268254167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.726401632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.055452477 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.78676702 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.220811965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.266437418 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.263080882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332396603 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.063006193 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.518936329 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.055874891 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.055628553 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.314440755 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.217990969 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.175745715 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.059640888 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.056293414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.056969462 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288015619 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.059629022 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.168293606 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.058896677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.058090524 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.170519098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.177195295 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.21040143 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.280278959 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307924305 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.282554716 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 5.022067114 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.261239757 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.450325386 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318090559 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.060614388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.056797814 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.443090953 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.513819673 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205036378 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.293363313 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364542047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.350007953 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.562807453 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.057336145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268753405 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.200497782 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.274922177 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311419554 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.428507319 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.911797194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.057303426 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.057275763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.263923695 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.177902123 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.06155389 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.588622918 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.314414817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.650866079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245413012 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.503291345 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.166100383 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.061749192 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.661214195 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.057997796 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.271113422 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.364005028 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.069378166 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.060582823 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.20298601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.774549746 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.057694219 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.143110243 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.452391993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.066882117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.215146922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.061088876 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310516905 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916495963 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295093448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.062128381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.329411725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.245440376 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.314013738 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.063885725 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307404733 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300209017 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418762159 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.279699177 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.565005211 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.058973294 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.332638385 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.062599673 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.059755466 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.236209034 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.75650691 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222872222 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.063861017 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309439531 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.22478098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458918011 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.061497663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.300793472 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315445846 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.462320145 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.063735295 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.191502512 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.064659938 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.10634022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.228156863 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.063720384 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.061639633 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 6.054822136 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.060011461 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.233288342 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.291965291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.786195066 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.439217736 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430483636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.06052667 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.48470172 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.257843115 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.538344505 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.616163772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.219831901 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.065291458 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.061110855 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.061235815 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.293875879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.2386691 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.064279942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.063396882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.814534285 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.322289267 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.06244806 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.241883126 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.323671522 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.233676202 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271050709 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.067662607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.445236362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.061982655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.337557976 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.592817659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.044480735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.061471366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.064490307 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.061243247 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.064112407 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266794461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318965097 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.722488361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.203066365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.330215689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.278270107 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.371785419 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.539379605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.077383608 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.308729903 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.066276848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.458233396 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.069916207 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 3.293897354 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337933392 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.067374737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.266079857 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40832429 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.172758641 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.497038644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.067384212 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.064900174 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.063657052 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.228409625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.502423865 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.065856647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.194416337 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.425062614 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.18406958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.258089504 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.170949221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.014753541 seconds)
  done (took 940.640662774 seconds)
done (took 1389.606595374 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.063500268 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.064905428 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 7.065450631 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.064858366 seconds)
  done (took 30.24943945 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 3.036185979 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 3.111216791 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.231214884 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.082543142 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 3.436221315 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.379528981 seconds)
  done (took 18.274950742 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.063087732 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.065539542 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.066253996 seconds)
  done (took 23.186388245 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 2.929259367 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 2.480759267 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 2.365241013 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 2.247283505 seconds)
  done (took 12.021984184 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.104199912 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.084510311 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.064675377 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.093366356 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.068776057 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.064013552 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.117891822 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.083989574 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.08295653 seconds)
  done (took 20.768276427 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.621836328 seconds)
done (took 113.110262455 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 2.365436349 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 2.377806182 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 7.070612675 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 2.339401788 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 2.195792852 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 2.393841707 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 2.226456961 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 2.082692633 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 2.413657855 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 2.504731743 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 2.51756161 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 3.230807948 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 3.537445522 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 2.504992185 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 2.358373398 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 2.082630898 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 2.074021736 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 2.134469681 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 3.869162822 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 2.24706955 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.613764473 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 2.194123015 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.716084935 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 2.089950751 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 3.010461563 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 2.217759606 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 2.317790913 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 8.388622514 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.184956632 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 2.080259784 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 2.154547255 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 2.558445967 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 3.328156059 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 2.419667443 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 2.203759975 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.959218297 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 2.484194845 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 7.072881879 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 2.327014625 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 2.484107375 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 2.359398146 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 2.191312768 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 7.068566452 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 2.365250376 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 2.470351105 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 2.083402905 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 3.050178601 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 2.234052655 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 3.754188601 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 2.224506198 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.541809838 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 2.070709821 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 2.73916587 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 2.142363973 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 2.198132158 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 7.223077633 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.988665174 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 3.56180056 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 2.222384021 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.380552854 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 2.08576855 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 7.066415408 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 3.05097372 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 2.08697926 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 9.086322503 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 2.400656909 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 2.510980742 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 2.203432146 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.480280615 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 2.085049728 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 2.079266242 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 2.097071631 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 2.760670177 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 2.213413742 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 7.069831583 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 7.182605682 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 2.393133368 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 3.218316826 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 7.245345864 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.077607431 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 4.846780432 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 7.074209357 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 2.340282668 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 2.427425448 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.225269612 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 3.460669367 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 2.51996389 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 2.515830796 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 2.515432586 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 8.359713193 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.169712837 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 9.277925417 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 8.681754099 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 7.07988599 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.210699463 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 8.793662311 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 4.012341695 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 2.581457534 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 2.205812269 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 2.60965746 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 2.091413908 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 2.081528116 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 3.555213698 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 2.389138155 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.90557546 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 2.102753351 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 2.1984898 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 7.072192274 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 2.325224384 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 8.23665362 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.206975614 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 2.613737707 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 7.081151503 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 2.12862534 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 2.62342263 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 7.074363101 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 2.391905488 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.498965356 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 3.121203048 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 7.084166371 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 2.323888886 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 2.0750323 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 2.190192038 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 3.619081717 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 2.435422808 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 2.283488858 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 7.074431212 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 4.207044989 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 7.080550655 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 2.270716099 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 7.084949916 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 2.628845536 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 2.578775682 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 2.09392402 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 2.330349644 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 2.196333933 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 7.071901834 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 2.404119817 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 2.125408301 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 2.291406628 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 2.412388204 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.37507576 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 2.195498871 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 7.073600738 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 2.426902791 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 7.080976021 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 2.325208784 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 2.416076021 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 2.229014684 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.36207149 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 2.206116768 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 2.089382746 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 3.039928962 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 2.49003445 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 2.738909453 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 2.624659152 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 2.342396621 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 2.208599094 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 2.581287917 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 2.316788001 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.923690847 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 2.184414771 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 2.124549739 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 7.082112508 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.086093822 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 2.145384575 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 7.074412439 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 7.079421366 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 2.32874792 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 3.398621511 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 2.621769629 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.880628289 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.683561692 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 2.399157974 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 2.227202902 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 3.003805948 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 2.627808616 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 7.079278275 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 2.36647926 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 2.652572389 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 3.242460193 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 2.108255281 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 7.077941204 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 7.097545352 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.762421954 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 2.108265126 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 2.398271203 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 3.749945884 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 3.541885849 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 2.44083112 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 3.374099202 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 2.113068398 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 2.432235908 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 2.380440473 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 2.389440758 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 2.290369216 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 2.511581576 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 2.221019291 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 3.440480968 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 3.164926262 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 2.404914527 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 7.084078263 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.983353503 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 3.417348788 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 2.574002349 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 2.438705091 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 2.310400623 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 2.246136891 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 2.384523242 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 7.084021762 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.082171165 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 9.415536409 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 2.366877768 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 2.101897923 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.075659841 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 9.412820345 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.795176678 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.997956196 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 2.189616732 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 3.514860934 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 2.231761991 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 3.276467312 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 3.578920297 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 2.092440785 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 2.381848385 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 2.236777894 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 3.265811966 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 2.327077224 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 2.110596654 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 2.212809493 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 2.289537949 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 2.24527476 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 2.340482962 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.876926291 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.509784464 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.076232041 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 4.730933497 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 7.110938966 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 3.218551639 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 2.100846176 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 2.088477481 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 2.329177597 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 2.255107293 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 2.403830171 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 3.201206476 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 2.245198241 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 7.079581722 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 2.227624854 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 2.497882963 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.8538917 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 3.636078907 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 3.041003919 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 2.099542937 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 7.078052428 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 2.503225407 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 2.482599826 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 2.145572094 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 2.207218564 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 2.630141255 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 2.101597535 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 2.252580061 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 7.089589509 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 7.086932288 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.958107712 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 2.211277781 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 2.322984394 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 2.622204591 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 7.08402008 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 4.147876576 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 3.145551757 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 2.522205813 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 2.594828252 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 2.120493599 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 2.208642922 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.082437323 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 6.581064392 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 2.464850471 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 2.105375251 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 2.262422868 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 2.452257084 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 2.196218715 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 2.20778239 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 7.087508168 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 2.11012245 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 3.743966516 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 3.418153715 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 2.576978377 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 2.106180542 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 2.54206461 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.089916618 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 3.989694955 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 2.106577586 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 2.214837351 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 2.481975 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 2.241813185 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 2.439907006 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 7.092209368 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 2.196507404 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 2.340226965 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 2.105171804 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 7.081956658 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 2.343371179 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.085897534 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 9.288051825 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 4.331948673 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 3.216603117 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 3.097872242 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 2.326779292 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 7.095800731 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 4.146031561 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 2.259188079 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 2.197408691 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 2.655202916 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 2.570354121 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 7.089545121 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.244840215 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 7.082264634 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 2.417617692 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 2.099764484 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 2.093570946 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 2.240883686 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 2.166044608 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 7.083026642 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 4.066269177 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 2.315666373 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 2.569034423 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 3.206790057 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 3.003644741 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.09348762 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.886696882 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 2.234884024 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 2.485198208 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 7.091595089 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 2.096057494 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 2.226511576 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 5.731569587 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 3.312564869 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 2.115040979 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 2.324446361 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 7.084800274 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 2.653774755 seconds)
  done (took 1208.527460449 seconds)
done (took 1210.659462647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.270328104 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 3.454400345 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.671705946 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.999158276 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.886697516 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.724795112 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.642550292 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.321282522 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.160270002 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.642755464 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 3.072529872 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.994533427 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.177896949 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.200686574 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.161635837 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.187977438 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 3.294627423 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.322330747 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.200634819 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.890702612 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.618734858 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.896459356 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.50147348 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.379046634 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 3.456122453 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.18788008 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.284783633 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.535040461 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.535383802 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 3.284065703 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 3.308545855 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.489926732 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.966885101 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 3.329096999 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.162563977 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.166583066 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.96457635 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.179156915 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.274527696 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.16738614 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 3.457291026 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.20587023 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.800374648 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.940521822 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.863697443 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.497936553 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.92536324 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.187301207 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.199465563 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.502422006 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.32594258 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.276544842 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.538198175 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 3.306285055 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.934333138 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.930393001 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.558053813 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.957443319 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.803253728 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.537846469 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.706629521 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.217981375 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.555465214 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.407696231 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.245999918 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.415924682 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.498582293 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.28387493 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.490427967 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.699158824 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.336240883 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.310829068 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 3.205215662 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 3.268150239 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.226053515 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.646597983 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.806434965 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.779462271 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.897192634 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.192008944 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.981120249 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 3.037427459 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 3.039885634 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.16414708 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.273501642 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.861410981 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.902754951 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.981023412 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.427382034 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.774914615 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 3.36892381 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.952906882 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.820341116 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.576769226 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.559513687 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.88417745 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.968300742 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.315213241 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 3.102487933 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.568627511 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.967988366 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.332490434 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 3.148617584 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.222723785 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.274570069 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.347004936 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.323936309 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.547196777 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.358089643 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 3.2881181 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 3.506420087 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.268473987 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.388476699 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.214803584 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.204007509 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.915313704 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.429377509 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.988809523 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.3152866 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.794191618 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 3.391314817 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.197500257 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 3.499510439 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.423407179 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.302322472 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.211965102 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.218221343 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 3.008877289 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.218801482 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.214043478 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 3.300607545 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.686505348 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.524956374 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 3.079214965 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.34678502 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.800433018 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.378746584 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.340530081 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.187298395 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 3.042709549 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.218898269 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 3.031233796 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.443154471 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 3.507577304 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.38219354 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.426170993 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.343232516 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 3.445484609 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.28167988 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.207976375 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.317344763 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 3.228606121 seconds)
done (took 403.531296573 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.444611635 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347115573 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.373560313 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.380681039 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.441815092 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.460694906 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.152484971 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.583927788 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.214786759 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.50826339 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.346197844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 4.003104991 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352067607 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.313342357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.447745134 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.37315894 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.213025554 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.362351426 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.557859895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.446264054 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.856940422 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.333922309 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.240945843 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.5505235 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.091297963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.850024671 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.479128689 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.234478746 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.353934189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.885517692 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.893238877 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.386358158 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.449962841 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.91123791 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 4.551414718 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 3.88689552 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.441110201 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.917833635 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.434788492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.441984883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.367459509 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.958053714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.882552502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.883999668 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.260350734 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.466109575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.160944532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 6.03622422 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.092989826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.838673124 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.352097823 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.893902227 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.975520739 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.422833226 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.291578251 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 5.855664846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.572752205 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.610565468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.445291813 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.399766544 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.439881705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.504771953 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.507376057 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.278938863 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.919769644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.41441281 seconds)
  done (took 214.366711116 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.522244502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.387950544 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.528944616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 3.495659469 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.656334453 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.512051644 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 3.622858209 seconds)
  done (took 21.74603594 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 3.155024704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.140078937 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.383129362 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.332972483 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.148237744 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.273276671 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.227708802 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.908872918 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.361730314 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.185254411 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.456363814 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.356700992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 3.806713439 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.903955935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.228408928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.481746676 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 3.110019064 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.210243785 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.205342606 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.400877329 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.894581499 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.865353061 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.411597759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.228787554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.146959492 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.186324198 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.137312469 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 3.112876018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.181153825 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.121901607 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.150413939 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.254041272 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.13856419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.869585453 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.165370575 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.464870526 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.147333365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.190585747 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.28285753 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.099196153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.122428623 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.146885411 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.275503075 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.15030397 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.122202972 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.328525847 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.128317675 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.15941062 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.1361255 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.142924413 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.414053884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.142660358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.165188402 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 3.809374788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.348469657 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.863768727 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.210610992 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.138126351 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.143279802 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.196416306 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.144650647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.399310481 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.386102349 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.126271619 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.38600327 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.425899857 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.143710573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.124370434 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.123102081 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.386627206 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.141130275 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.334693206 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.14587954 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.188619825 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.205648185 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.279357386 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.331368099 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.926944688 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.91396444 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 3.813273855 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 3.109682521 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.127576086 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 3.440514599 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 3.074893393 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 3.817492674 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.127443788 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.193665028 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.791180233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 3.049168251 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.147676448 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.455396795 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.130486021 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.207281308 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.192863352 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.173182331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.207332394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.364704482 seconds)
  done (took 249.204824939 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 3.542366121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 4.746385216 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.338342535 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 3.383201022 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 3.51572481 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.675206825 seconds)
  done (took 23.227197603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 3.498405705 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 3.012178019 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.195080687 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.157516936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.199102738 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.138565846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.139952628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 3.368493396 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 3.452175303 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.178986967 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.141507176 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.164658012 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.142702522 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.306972161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.138927714 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.147695473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.138891304 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.168430456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.150388084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.209822054 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452708038 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.199281923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.209771297 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 3.073542717 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 3.341352816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.188536548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 3.170467132 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.154538104 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.15365191 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 3.544402969 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.341457893 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.214950094 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 3.062840584 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 4.688131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.984057252 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 3.101437412 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.435689971 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.199283956 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.20759683 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.141218894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.166410327 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.21103662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.163083659 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.174695258 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 3.528712718 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 4.143603946 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 3.418974847 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.460657201 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.142727031 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.167290283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.167569294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.170078702 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.141441964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.167252523 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 4.953698611 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.582248307 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 3.264279846 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.178240902 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.201319926 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 3.084303943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 3.368700713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.174973077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.5256653 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 3.23606671 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 3.884223406 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.167959446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 3.087969498 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.423648132 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.244669787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.161831181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.168462959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.165959682 seconds)
  done (took 193.132286753 seconds)
done (took 703.690863925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.105640319 seconds)
  done (took 9.135345814 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.237554523 seconds)
  done (took 9.389945227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.52941418 seconds)
  done (took 14.571650269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.112772258 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.137876821 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.131718061 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.120522792 seconds)
  done (took 30.545767723 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.216805788 seconds)
  done (took 9.248751938 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.125822382 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.107487508 seconds)
  done (took 16.344917 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.160097011 seconds)
  done (took 9.199716366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.501797463 seconds)
  done (took 9.550945921 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.113962643 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.116693802 seconds)
  done (took 16.295461838 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.104295586 seconds)
  done (took 9.133678285 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.531892979 seconds)
  done (took 10.640396989 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.113424779 seconds)
  done (took 9.17291083 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.112752048 seconds)
  done (took 9.143209459 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.838205075 seconds)
  done (took 9.867515795 seconds)
done (took 174.266153224 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.118374167 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.105392589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.105105611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.105325118 seconds)
  done (took 30.463360494 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.427075384 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.426544166 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.40407635 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.477504078 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.371926764 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.371660405 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.426361433 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.42624312 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.371432285 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.524898909 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.427314935 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.577466845 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.479042817 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.404978031 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.404629845 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.504450762 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.496158801 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.427622825 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.371549648 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.405378862 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.578567263 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.577651886 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.863004904 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.849887712 seconds)
  done (took 61.62830893 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.312526983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.471856227 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.275492138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.436171448 seconds)
  done (took 11.526464017 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.137276684 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.480364871 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.462658714 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.421650388 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.463689403 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.274575965 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.462985846 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.315453152 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.285318989 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.285526786 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.698726205 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.257352585 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.2706685 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.522946404 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.275814937 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.108925907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.107704902 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.285888465 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.480870853 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.306614543 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.35823859 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.463785679 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.463576886 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.463754423 seconds)
  done (took 58.687722741 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.868031662 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 3.038521348 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 3.467040395 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 3.013655101 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.817452937 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.898779624 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 3.389478082 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.611871393 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.374225225 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 3.350252797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.849071338 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.793148108 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.250520819 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.99871394 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.922670279 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.285842408 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.285600393 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.95103388 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.749918151 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 3.407532983 seconds)
  done (took 59.356779576 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.108813146 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 7.10860307 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.31148648 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.276306885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.108600297 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.111172598 seconds)
  done (took 35.059055098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 4.204238911 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.254197673 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.439513284 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.407904972 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.272874081 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.250207035 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.737508464 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.324004722 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.910429314 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.890082409 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 3.759031344 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.574839082 seconds)
  done (took 35.063408621 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.120785586 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.112705665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.113049394 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.235332342 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.961864081 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.962386144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.424951969 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.110179356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 3.231160081 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.297486698 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.964872872 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.279480482 seconds)
  done (took 52.873152541 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.270087165 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.239259277 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.429487973 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.841204523 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.602714306 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.179340765 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.503338211 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.620178205 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.176050628 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.200824024 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.588896097 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.144191825 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.617411085 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 5.063884366 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.111975218 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.379504221 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.923256495 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.037502112 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.533604153 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.184021162 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.064944378 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.252084475 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.114780275 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.641787775 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.421811464 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.115196775 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.260860588 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.349193847 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.112600261 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.2730978 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.113111296 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.66370807 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.238386679 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.409505134 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.623526453 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.200284551 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.179089379 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.173528218 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.68435571 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.400052912 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.247451867 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.266717838 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.637534009 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 3.219656686 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.362068757 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.885079492 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.123836049 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684095816 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.068026493 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.344225416 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.965929119 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.724342207 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.43065578 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.031157652 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.248788539 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.381015227 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.270589939 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.15978924 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.391888113 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.195647581 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.270410648 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.192844223 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.261342313 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.065741556 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.612797271 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.416852514 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 4.441877748 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.40575444 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.411290417 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.382658985 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.43947513 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.258775946 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.845262067 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.240371545 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.663926513 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.005272781 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.450647884 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.11677148 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.837239831 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.623867895 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.069306026 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.216101973 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.614465158 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.071578687 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.115597995 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.271332568 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.964115543 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.066853203 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.199304498 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.191496706 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.42347736 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.240687881 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255279608 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.373929885 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.80640484 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.071318026 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.830361695 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.401974705 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.068323244 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.667181014 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.115946315 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.164017579 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.117556753 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.76199066 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.49972335 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.15905013 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.822300467 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.634701725 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.38856578 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.682728419 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.264666266 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.116294162 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.439960679 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.440578447 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.116400354 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.806348113 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.18553402 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.233050434 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.424212397 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.116453448 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.069167399 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.449450905 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.244025433 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.117195806 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.419520799 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.119594728 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 3.254949441 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.116564069 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.799388626 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.150095764 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.351325081 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.618090524 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 3.318433607 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.192709985 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.060734566 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 3.250958424 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.597458824 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.202207532 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.470222352 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.539503532 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.707102601 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.664636522 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.081548392 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.94076758 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.564927547 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.383150387 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.451447558 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 4.23602996 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.270821082 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.201888384 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.117976873 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264469659 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.128632587 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.64331833 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.118133134 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.640454471 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.728595463 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.412857423 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.118430906 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.074066955 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.175192633 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.280635639 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.763402039 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.154857259 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.269193767 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.361960216 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.245777401 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.121568292 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.0706561 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.466748266 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.314428729 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.615440701 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.345373289 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.765363823 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.46147438 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.593090654 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.267237465 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.449617086 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.767922963 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.324343091 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.441580807 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.657139847 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.112299096 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.120877726 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.211108606 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.512703569 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.333012888 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.884844414 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.176467463 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.654838637 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.150364965 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.574719688 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 5.072124921 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.261051576 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.56977779 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.12181979 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.663701431 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.208049716 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.436243639 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.390938381 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.146003612 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.449638063 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.194876872 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.487261926 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.499819299 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.425694077 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.075051791 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.622117859 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 3.607100436 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 4.598553431 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.246787254 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.483223442 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.325096554 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.136427186 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.123184097 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.462573885 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.120914834 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.72903222 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.398058306 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.818083153 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.627148959 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.249862632 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.640835387 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.135797723 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.269386424 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.263677103 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.177004512 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.225637759 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.641043728 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.378215099 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.445313493 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.122555799 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.122462404 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.389613333 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.423031409 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.388233915 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.600686738 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.725462675 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.783209535 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.220536875 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.632994073 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.28275547 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.148502036 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.771633236 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 4.391624299 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.041020938 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.243264209 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.810305526 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.258284521 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 7.261317128 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.375835095 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.125172075 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.567954182 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.711350378 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.126035283 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.136475052 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.230339741 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.125039431 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.256943725 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.87817585 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.33623515 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.29125639 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.398405495 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.304478081 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.244375096 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.502322203 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.61213044 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.815928778 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.075945153 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.265229313 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.226856185 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.392650799 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.12456569 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.36965381 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.678824645 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.767967895 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.858779152 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.648955793 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.353697882 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.255403606 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.565129216 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.361092382 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.373079271 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 3.048739819 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.74974926 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.085190035 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.25607955 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 5.077676188 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.182549323 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.419734109 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.499394479 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.572981212 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.161722549 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.635690138 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.475394816 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.18458824 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.245522551 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.461199942 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.125900296 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.405242444 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.126576726 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.256051468 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.483609968 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.134115855 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.636725186 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.29776637 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.443275557 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.275829908 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.780795 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.153056376 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.241592593 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.587242657 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.303520259 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256486499 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.460449178 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.939045563 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.153882537 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.198133485 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.693282385 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.698628781 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.570831319 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.732212311 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.693066005 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.452556847 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.832395861 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.128186571 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.275181683 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.27579209 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.838587844 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.292547866 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.504628425 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.128931442 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.277174268 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.429861672 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.220804078 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.664106762 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.08309478 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.702870435 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.195873949 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.608764677 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.679095463 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.870356133 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.614525616 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.222380471 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.655975548 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.105701352 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 3.272040593 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.49362282 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.793234208 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949772431 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.946984714 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.912530611 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.283217679 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.524152763 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.244188184 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.788131623 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.282233619 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.365955096 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.276361762 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256778505 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.070937044 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.658102939 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.878378349 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.393204377 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.283657407 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.248373783 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.29883468 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.35369216 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.650968491 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.43260735 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.834288259 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.573983608 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.332395656 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.081328352 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.129579632 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.808844071 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.288975857 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.214071344 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.398430186 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.538313503 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.178292171 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.167779825 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.271867755 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.674124557 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.759867636 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.836957147 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.449150065 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.628025007 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.703593473 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.132508434 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.838281552 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.279850474 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.473191196 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.515421487 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.043089591 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.508990943 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.399467371 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 3.271511104 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.085083208 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.254932323 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.143204292 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.203349472 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.702635507 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.407653231 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.220129754 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.873924709 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.716377348 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.199679689 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.15690716 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.350747349 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.411280924 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.330605268 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.13447883 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.660876228 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.509517382 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.262153739 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.089720637 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.883408957 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.085503652 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.281805964 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.208913798 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 3.302648106 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.94335638 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.240805192 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 3.742600678 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.655237091 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.286949938 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.314156185 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.085493969 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.91252587 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.11092459 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.793091354 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.86464085 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.373636399 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 3.644090168 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.254287354 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.117915248 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.452496773 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.260290281 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.43315858 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.390844495 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.584599654 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.541399633 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.481671754 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.417318493 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.591852727 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.226708179 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.371856244 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.086789109 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.135694773 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.20138826 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.495835927 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.500955028 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.135599291 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.673818008 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.374238923 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.289876785 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.281943179 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.204639229 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.738239594 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.337834853 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.295938734 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.267923259 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 3.383167929 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.475805693 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.136651972 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.341194318 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.197280027 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.092050435 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.284178642 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.377092189 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.519087716 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.440564604 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.72664327 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.292542855 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.603190705 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.933860795 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.641549569 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.1381317 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 5.227728615 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.446355304 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.136702532 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.588820481 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.804163131 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.256537792 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.817460522 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.135881225 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.217213998 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.281885471 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 3.627935322 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.153294077 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.732812568 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.500831727 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.13811332 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.58451395 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.210429269 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.286484589 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.903944651 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.616364424 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.138431123 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.915622553 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.109313816 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.615091656 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.737797098 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.142074062 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.270079121 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.833025811 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.091396293 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.177671603 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.198128715 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.645210608 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.151686787 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.650672803 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.284509136 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.269368593 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.141810479 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.269797615 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.145443315 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.2866095 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.319636898 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.374908026 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.408249216 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.258435345 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.139973444 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.668186583 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.802555219 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.313227411 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.324562291 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.206509563 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.483995823 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.726546009 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.20995326 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.674139692 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.267656142 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 3.324140259 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.558581394 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.388971764 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.170696609 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.288543091 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.141028669 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.471079589 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.278977464 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.681847292 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.382493607 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.269326568 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.266360444 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.141099511 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.66607685 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.584170252 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.005316159 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.140506099 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.439519514 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.140544391 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.919527923 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.726683347 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.31414974 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.287020988 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.329126789 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.647785772 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 4.43657965 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.231360385 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.141167566 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.345146142 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 3.645537536 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.093399525 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.201378992 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.994310702 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281646057 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.468528203 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.092428902 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.261398964 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.130873247 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.095613656 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.619951489 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.141267861 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.41796227 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.093184647 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.690502426 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.096361087 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.244368937 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.271778028 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.493070614 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.142738634 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.833234628 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.305178192 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.140533746 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.141010404 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.473476136 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.216693317 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.386584757 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.587713817 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.379503157 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.435904232 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.934614738 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.202236843 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.105381761 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.441353196 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.954367384 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.692594232 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.258204162 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.608243871 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.22379595 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.115674921 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.668767266 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.380096469 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.859251215 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279884394 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.624927474 seconds)
  done (took 2549.730602747 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.204417507 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.201201301 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.17938598 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.169433453 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.345056485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.337634585 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.196799791 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.183765434 seconds)
  done (took 59.884931888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.144050092 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.867985406 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 6.814175367 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.28946817 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.153463979 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 6.334905969 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.489086563 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 6.698027258 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.316038323 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 6.152729055 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.188844196 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 7.151253534 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.376021338 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.176443692 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.823942472 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.607568231 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.170164938 seconds)
  done (took 109.853677666 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.181002648 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.854672042 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.156055381 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.387009767 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.176730209 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.360662193 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.151628047 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.153962306 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.18184352 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.43171162 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.162371775 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.172847113 seconds)
  done (took 90.450348063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.173923798 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.173999124 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.17333384 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.176141709 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.174851881 seconds)
  done (took 12.941576227 seconds)
done (took 3169.667408897 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.395561528 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.61831035 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.689967253 seconds)
  done (took 7.377885989 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.216553035 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.278263166 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.338278475 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.284612026 seconds)
  done (took 11.213440886 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.421282672 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.638019438 seconds)
  done (took 7.129149774 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.58917953 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.163997839 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.685065687 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.151413002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.14875728 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.150844664 seconds)
  done (took 23.537666472 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.171774899 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.168373536 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.171042852 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.162790943 seconds)
  done (took 10.75321871 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.145256366 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.13511825 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.151579315 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 3.161257199 seconds)
  done (took 23.663072602 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.437801601 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.38800625 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.888005328 seconds)
  done (took 9.789382209 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.956095394 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.523957663 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.94083713 seconds)
  done (took 10.492125438 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.099859741 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.073629628 seconds)
  done (took 8.244171262 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.306190178 seconds)
  done (took 4.377272122 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.623239989 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.627788754 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.978211465 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.994477348 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.139433322 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.459750327 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.511527799 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.54810122 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.808176997 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.657040609 seconds)
  done (took 29.419893662 seconds)
done (took 162.896683547 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.987992471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.553463703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.318955019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.82233803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.248571169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.318646357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.231742823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.60984953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.719851682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.714922571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.829114997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.248074157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.220417866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.547538981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.220321313 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.497454125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.559360356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.964654864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.716404314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.525387093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.236579341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.402218658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.523037512 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.407480891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.56557785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.275371511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.237378977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.503452608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.997939414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.24167912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.278293965 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.812027997 seconds)
  done (took 184.410967375 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.153269307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.156516305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.15825082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.155238595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.863578531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.157867535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.158942126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.156020009 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.952062836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.969457057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.156842981 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.855604616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.158420704 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.155880261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.158483582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.155794846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.0640003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.156192641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.157367735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.155471534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.15768452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.725019035 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.156699207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.728975772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.062357084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.156658348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.157266552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.157610534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.157223558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.157262078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.158245359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.167537486 seconds)
  done (took 221.08582309 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.20735266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.333447606 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.443558332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.437224507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.207174542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.233377577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.199173726 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.249900609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.198214529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.201521202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.232336894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.213392738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.195509986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.188517865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.199126097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.179219212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187559785 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.18229448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.187929395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.212380546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.190748869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.205667431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.265163784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.161080941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.160624614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.157628891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.159168035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.159005648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.158934427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.159669696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.159901643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.159753794 seconds)
  done (took 232.899072867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.457168664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.219077658 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 3.118826904 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.532470113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 3.11050289 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.178539311 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.512311052 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.455396216 seconds)
  done (took 24.673944684 seconds)
done (took 665.156296068 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.849453251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.046506256 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.333182546 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.37889986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.788411592 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.444987698 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.37100782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.64583734 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.978728139 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.628890576 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.656538194 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.367500903 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.000585943 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.400126083 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.346128861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.636301991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.59394609 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.885452578 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.360349486 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.00193782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.427506169 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.171034281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.661041689 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.025053028 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.652337361 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.203165265 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.289650414 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.595838038 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.368492583 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.459596208 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.226328941 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.562075873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.40901818 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.410686501 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.635785157 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.620243098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.521919948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 3.734499868 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.330794839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.943662687 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.99764927 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.826033687 seconds)
  done (took 120.866644181 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.185244571 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.199459955 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.34662934 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.279054649 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.831189772 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.285142812 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.370780106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.374477903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.261223886 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.388081936 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.402627667 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.853660796 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.391633312 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.811098689 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.397536067 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.447024377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.255943164 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.780483409 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.397289413 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.387557246 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.215743378 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.33808775 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.215475537 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.367132801 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.208569777 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.232244046 seconds)
  done (took 64.329534117 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.248977883 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.376061275 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.506022596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.550758199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.407836341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 3.232542748 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.585914349 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.349645624 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 4.197219169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 3.656390612 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.29120393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.341497639 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.355143809 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.524747999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 5.715196512 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.31791056 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.344429509 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.316193977 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.38851893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.406364472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 3.411674168 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.268462226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.587664673 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 4.388438883 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.847979004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.29750308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 3.605284312 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.846049862 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 5.674512075 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.320911068 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.323929361 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.578035855 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.579895444 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.513588792 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.352882502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.221717919 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.211882505 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.340803594 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 3.305246792 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.318584895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.582283025 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.220785127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.613631147 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.768781096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.147100742 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.402009906 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.718214909 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.354012876 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.332207767 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 4.747110517 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.542440587 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 5.138017974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.338510255 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.401947928 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.322676732 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 3.597813638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.376523086 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.514619829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 3.378005507 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 3.823801113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.26716867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.584076873 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.393945732 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.155362503 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.49791701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.415445382 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 4.384060086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.36585089 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.616353609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 5.468454652 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.915276957 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.276118348 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.224263858 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.292741291 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.387376665 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.757794704 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 5.200127469 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.429691335 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.606247334 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.583677982 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 3.495139009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.860891021 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 3.238056285 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.376547928 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.321346019 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.212746188 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.288213641 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.559295598 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.571623099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.672768232 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.771048562 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.538527188 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 3.620718436 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.592740084 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.458538549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.612665941 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.201252503 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.216554133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.500427389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.795155057 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.287407118 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 4.491089955 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.863094176 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.705487242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 3.553922697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 3.209403975 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.577886923 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.211937635 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.625675674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.192374822 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 4.420068711 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 4.465306544 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 3.501957569 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 3.555404931 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.195541483 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.738790998 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.370744957 seconds)
  done (took 354.206748303 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.171310236 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.169566212 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.210821022 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.168559897 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.166381884 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.744637797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.228279775 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.166409942 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.747497113 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.228786274 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.166554899 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.166478746 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.169055928 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.166866276 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 4.715928459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 4.698791848 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.972486397 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.168321803 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.166150378 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.171403921 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.879125995 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.175669931 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.168075919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.171670919 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.169817225 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.168064553 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.178878295 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.193909593 seconds)
  done (took 182.770045085 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.219138359 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.696380824 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.24104214 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.304556466 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.546640089 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.24463705 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.517267967 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.310844765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.289758064 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.229103471 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.220217561 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.44563006 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.509255438 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.702334958 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.3306735 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.777409142 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.831033598 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.374078906 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.230090356 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.22365499 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.379578463 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.456282659 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.346381534 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.500693542 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.413530183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.518958168 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.578038502 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.247988806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.354772914 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 3.015691806 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.262934664 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 3.209271247 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.348813417 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.222431022 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.478802271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.605896003 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.909584571 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.878436171 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.433151384 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.185900395 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.188793674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.514489752 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.544925696 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.273685438 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.223772452 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.631360409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.21665195 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.379710315 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.417639912 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.186455866 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.31435609 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.337089251 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.780617679 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 5.016774198 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.408764799 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.372293017 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.825531288 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.593895135 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.200738427 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.596804081 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.205287089 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 3.022868037 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.355587984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.290183867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.237393171 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 3.076844504 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.319024446 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.643541456 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.603435194 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.235379667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.656510137 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.422470886 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.201756271 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.369680355 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.395799148 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.841592061 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.913602722 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.356576468 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.334322002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.315408884 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.387467894 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.193980018 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.538006952 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.293429863 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.202320362 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.582465877 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.651767604 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.202422663 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.229958146 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.350872018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.414830305 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.419001618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.531940276 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.302883774 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.838008341 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.436613864 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.586816442 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.241570372 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.33856078 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.21000282 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 4.387738105 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.443417909 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.2096735 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.538751871 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.779808938 seconds)
  done (took 264.821924814 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.986056813 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.28851427 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.471974829 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.800885507 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.590241811 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.14027011 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.494350749 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.307211471 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.493385597 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.435448804 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.453036985 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.316654855 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 4.245032266 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.997580586 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.283004028 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.406291713 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.293355825 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.831259699 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.574248684 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 5.107773947 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.65376112 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 3.031102681 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.560251366 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.600942762 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.720934107 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.747275572 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.87798335 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.359672483 seconds)
  done (took 81.178992714 seconds)
done (took 1070.249128692 seconds)
SAVING RESULT...
DONE!
