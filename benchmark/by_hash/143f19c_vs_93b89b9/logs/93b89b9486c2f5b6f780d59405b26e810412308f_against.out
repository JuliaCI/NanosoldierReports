cset: moving following pidspec: 3072520
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.131346145 seconds)
loading group "shootout"... done (took 1.138771834 seconds)
loading group "string"... done (took 0.666613332 seconds)
loading group "linalg"... done (took 8.748828867 seconds)
loading group "parallel"... done (took 0.226808856 seconds)
loading group "find"... done (took 3.551216358 seconds)
loading group "tuple"... done (took 2.203894771 seconds)
loading group "union"... done (took 13.249830005 seconds)
loading group "dates"... done (took 1.766751934 seconds)
loading group "micro"... done (took 0.211389523 seconds)
loading group "simd"... done (took 6.433945489 seconds)
loading group "io"... done (took 1.405378042 seconds)
loading group "random"... done (took 12.305900959 seconds)
loading group "problem"... done (took 1.765140661 seconds)
loading group "array"... done (took 34.59173864 seconds)
loading group "misc"... done (took 2.08823474 seconds)
loading group "scalar"... done (took 69.807901729 seconds)
loading group "sort"... done (took 5.664844404 seconds)
loading group "sparse"... done (took 20.667592137 seconds)
loading group "collection"... done (took 26.390475569 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.47305393 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123188097 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.171577978 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128984526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242191374 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14080605 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139220286 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.120454397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.082302321 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148978329 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144016794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.444666754 seconds)
done (took 5.882344418 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.316970453 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.254450839 seconds)
    (2/2) benchmarking "String"...
    done (took 0.173579982 seconds)
  done (took 1.662784343 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.095685882 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.062963305 seconds)
    (3/3) benchmarking "different"...
    done (took 0.070449441 seconds)
  done (took 1.481722329 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.069731465 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147914131 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069737834 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070360067 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073381639 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070973579 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071090612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071246877 seconds)
  done (took 1.823797372 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075744742 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070991874 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069049642 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070889622 seconds)
  done (took 1.524876216 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.069736086 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.131455688 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.067900574 seconds)
    (4/4) benchmarking "different"...
    done (took 0.067713898 seconds)
  done (took 1.575544132 seconds)
done (took 9.704986795 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.184485203 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.810993375 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897824777 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.153269008 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.330502323 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.355269106 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.131866945 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.21434671 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120644587 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.080761089 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152653321 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.087381617 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.513425442 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.506100253 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.078309909 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.198127102 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643255646 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088164458 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.120241013 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.260799632 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.085312787 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.089484833 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095138792 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.07723122 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.183305127 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.181074193 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652566834 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.102017611 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.174767926 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099199788 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.076580624 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080742358 seconds)
  done (took 11.095623601 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.120128746 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118412514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072534782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.108359747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099313181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073019833 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08078363 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072615121 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092645044 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138703089 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095452628 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128954553 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071476413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073075819 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104239838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.169930293 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086586229 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086871456 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072321352 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086543524 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.099948443 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084081675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084317456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083610867 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122059596 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.142496497 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097638298 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115452818 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072028055 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093680383 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.102071673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.114516899 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074270696 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071627791 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118976063 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093130784 seconds)
  done (took 4.80750825 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09184985 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107684706 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.112758602 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103491546 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.113098374 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.099221433 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.152774931 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.129135048 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.107163544 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075446637 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.18681131 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.72571222 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.141101684 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.186883942 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.076044645 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.155137776 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.378795749 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.945188221 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076778529 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.073680755 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.104217571 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075512463 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.147460058 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071624594 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.187259257 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.805482285 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.075728447 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075187633 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.102480696 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.117863976 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069121175 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14904983 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.099918494 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073805887 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.602113432 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070359001 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069827157 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.092789711 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.10901997 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.071186629 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.071811658 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08356463 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.070034877 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.126926379 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.085167451 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.573526983 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.074008862 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.659162948 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.347532055 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.078783065 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.076911299 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.108580202 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070631286 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.074500646 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.69406031 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.155758659 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.072371448 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.305148705 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073773921 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.073679272 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.075417536 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.108069673 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.072297029 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073384766 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.078013663 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.090062484 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.167023408 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.158883851 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.091709731 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.070231674 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07147117 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.069954195 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.453047552 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.079851453 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074377871 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.069821873 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076094079 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.072076719 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.071617956 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.249878392 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.101222042 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.095719461 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.074629591 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071671417 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070488489 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.590195918 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.028472865 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.073312546 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.073525351 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.529799014 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.069058985 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.071138974 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074245655 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.096886371 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.072822027 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068254109 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.106879957 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.072870203 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.09901831 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.602194796 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.07299066 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.068624457 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.5906086 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.075137405 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.105925161 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.132651799 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.073861734 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.112736123 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.073157101 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070220538 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.078996425 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069970028 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.074628172 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070993171 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.071820424 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.070710506 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074211226 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.073695031 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.072610866 seconds)
  done (took 24.797839858 seconds)
done (took 43.028589668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.423405352 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.085051409 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.085347843 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.084244814 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.084197284 seconds)
  done (took 2.068386894 seconds)
done (took 3.469342962 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.276124904 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.099015986 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.068628179 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.222062963 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.096201376 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.189605619 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.237454766 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.18032727 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.098153064 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.09684435 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.098337134 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.239795544 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.250252108 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.098043144 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.174886303 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.254764211 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.102196274 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.071511259 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.096344006 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.097510707 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.099566202 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070904606 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.096998137 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.098596717 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.171840851 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.096622478 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.069100206 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.175453623 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.098568327 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.176604969 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.099503406 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.098135022 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.099081773 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.173676801 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.099418972 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.173207521 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.070166624 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.098813803 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.099091609 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.102391607 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.101059241 seconds)
  done (took 6.74902539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.094808603 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.087776307 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.091064269 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.066541135 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.078521107 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.087601717 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.066594814 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.087487985 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.105044129 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.087744272 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.087432717 seconds)
  done (took 2.33556949 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.087963054 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.091308054 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092207866 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06790881 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.080092727 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.089077264 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.067996212 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.090752142 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093233338 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.091674653 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.092749589 seconds)
  done (took 2.272420833 seconds)
done (took 12.663242899 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.201642754 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.096922282 seconds)
  done (took 1.642386041 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.583682488 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.207461591 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.10550555 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.228201057 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.101957305 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.130834309 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.358666594 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.127217697 seconds)
  done (took 7.210748307 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.133966106 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.10630991 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.074823873 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.072158201 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.072821098 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.074000974 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.079213956 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.074233634 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.072554938 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.07503016 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.07468471 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.072671385 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.073306345 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.074963313 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.073073222 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.073001783 seconds)
  done (took 2.720516022 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.076180262 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.07521255 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.076763211 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.066145423 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.077659858 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.077508366 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.079965261 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.080706527 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.079414855 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.078598967 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.074888861 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.077791739 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.076463709 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.075136537 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.077711437 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.0666111 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.079166302 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.078766627 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.080189293 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.078998429 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.077425704 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.075691095 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.080300438 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.077208576 seconds)
  done (took 3.188218263 seconds)
done (took 16.125947146 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196177263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079652227 seconds)
  done (took 1.606693633 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100617548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100931442 seconds)
  done (took 1.538025085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07810466 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066162162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083939791 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075714061 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065939594 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06534131 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082336032 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065850905 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065392863 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065732069 seconds)
  done (took 2.05372683 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068576896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073056752 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070770263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068390791 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071180886 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066715927 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069130185 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067063928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073031544 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065738512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069722328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.088916863 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069434883 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089171953 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069415019 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070001145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071842377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069958273 seconds)
  done (took 2.639751308 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065680825 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065541977 seconds)
  done (took 1.486374879 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068803201 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065667223 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068366487 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067949088 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06560297 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065799723 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067556309 seconds)
  done (took 1.809958809 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469439987 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.207915998 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.463220691 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075235768 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.090478565 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289955546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06988769 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075063877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075352972 seconds)
  done (took 3.158909303 seconds)
done (took 15.63639803 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091083681 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1953238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.122214191 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451111784 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086883424 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074225142 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.103589356 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.228346465 seconds)
done (took 2.708501542 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.330602726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.439238605 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.324249251 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.075548568 seconds)
  done (took 3.190094136 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.449052011 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.181977498 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083948028 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073872429 seconds)
  done (took 2.165192555 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073072856 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080456115 seconds)
  done (took 1.534677357 seconds)
done (took 8.591013471 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079871709 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066232812 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.073645604 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068391853 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071355712 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068184728 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.068179258 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069344398 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068381807 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070175564 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069424908 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068949051 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06871669 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069074447 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.068285928 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068948205 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.066987952 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068904297 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068936923 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069220674 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.067436954 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070156356 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068934801 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069795105 seconds)
  done (took 3.038267861 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087864657 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072435465 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073847653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073230068 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073004 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0724221 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072836704 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071415482 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072850323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071471247 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073236234 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074258583 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072241477 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073373263 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071268121 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07307505 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072830118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071600027 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071435044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072939292 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072928882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071961205 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073501002 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07342989 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0740216 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073754935 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072261757 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072306606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073877875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073719455 seconds)
  done (took 3.569747343 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074217435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065655562 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06552351 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076317544 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065026447 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.065372565 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065727253 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065130525 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065618012 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.066492485 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065880315 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.065556245 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066565199 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.067305896 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066339228 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066482631 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071212522 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088092167 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065864106 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065752224 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070733381 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.06656115 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066970606 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067270194 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.067477053 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067627094 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066312144 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06650222 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.066008044 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.066912832 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.066446783 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072547795 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074155266 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.066546566 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07733265 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071560559 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.066408535 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073751067 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.067519806 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067326361 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067600812 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067023343 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.066096376 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066232016 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077763105 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.0666221 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06761665 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.066795217 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066464873 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.066288898 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067869944 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.069217938 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073215786 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.067968906 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.066558661 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068632136 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06758695 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070301436 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.067989173 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066694653 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066553526 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071021866 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.068304313 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067657672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09125679 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.068563696 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078019139 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066571055 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067106769 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071171534 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.067323009 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086958592 seconds)
  done (took 6.351770973 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082850995 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081078001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088382929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.078946452 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070593148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06741263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070903136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067411221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078020779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071346238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067521356 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070883377 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079487861 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074894575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06928972 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07888315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072489746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070980358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068604564 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072643788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069798986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071953502 seconds)
  done (took 3.027949634 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.166394559 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074050561 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.122862183 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078957001 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076935974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078817954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075007437 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074811999 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074770921 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075464678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075324263 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074816851 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077245457 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075539231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075564594 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075298232 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074989166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075798199 seconds)
  done (took 2.880512465 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087128937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074044536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104822336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074025359 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073834091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073731573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080496784 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0807196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075812728 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.074826007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078900495 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074222613 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074313594 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074479413 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074280906 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074301673 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074360074 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074553045 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078886106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078990202 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.079208907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079612861 seconds)
  done (took 3.099963936 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088491101 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072804447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091886331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07616946 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068507333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068648351 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088615649 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.074096772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075693545 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073561631 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073893076 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068420349 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.077227075 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075309067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.079514034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076466299 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074803876 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074700664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073815524 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068516161 seconds)
  done (took 2.900860415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114163456 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0727655 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072217846 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077276606 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072105118 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072385125 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077872915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07223653 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072200116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099377482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072401432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072454142 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079354195 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07696989 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073539561 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078543881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077958539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078232542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073441439 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074344393 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100115213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073211925 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079028065 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073290365 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07382227 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073430025 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073623866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077418453 seconds)
  done (took 3.574953204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073756217 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072365614 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.072965596 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072751569 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07267637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07291888 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072427375 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07265684 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072789752 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072971268 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086701295 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066658843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066638359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06659078 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066719567 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066944012 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066648912 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068368837 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06925949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069345457 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06920431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06866144 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067637367 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067270192 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067825168 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068164962 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068495622 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068538899 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067316346 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067078475 seconds)
  done (took 3.488960151 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076900546 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074496546 seconds)
  done (took 1.550729581 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064610776 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080509564 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06221451 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075880348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071770561 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066818593 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072031597 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071855427 seconds)
  done (took 1.965501507 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.097148309 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.123231811 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.064756556 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064762654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094892437 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13532191 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.106728949 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078551636 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.081609981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07082742 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.066558131 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.107658431 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.06398252 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079093216 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065337335 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079940048 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075213816 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086079357 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.081470128 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063682548 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078775406 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065973562 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064518286 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065861101 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065733429 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07275391 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082239609 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080724423 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075160691 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062911106 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.08527787 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063915561 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064912772 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074432959 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095907522 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.063680309 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10337633 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.064151567 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.068758138 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06476818 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077861351 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086493156 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080292547 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.084603741 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066496815 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066794895 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063497939 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.065586602 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068075137 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073911518 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064273727 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074583344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064620704 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.065869294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075802992 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064534578 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.071015709 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076625481 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079760188 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076798364 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079431112 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082051079 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.077256326 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.076262525 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067308274 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087363557 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.066799302 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08201026 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.082725494 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.066230196 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07942797 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065060458 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063698637 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064799755 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105278827 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068066101 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.066417675 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.066050162 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066356247 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.068607814 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076737399 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.070489412 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074053849 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069198948 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082380105 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076364591 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.066521217 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076642401 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.086944763 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071427102 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069239158 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.084798602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.070111537 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065201662 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08550504 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076882319 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.067492802 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066627907 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070128042 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080979383 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066996192 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065265629 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076837787 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.067911961 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.250924965 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.067997809 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073164439 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.063770067 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074893744 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.069023588 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.064905702 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062077122 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068250663 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.063860843 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061838128 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073555945 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.063302925 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078568542 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070822069 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.079146254 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079535992 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.0750212 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080340932 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.063218389 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062083114 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.083175596 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075344256 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.066126276 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084239209 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063059604 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075795046 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063947392 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065646988 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.073651217 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062249428 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064725992 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06270207 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.068655328 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.064323189 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064510474 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069560878 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072557489 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076344882 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.064315578 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073287817 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063710481 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080315843 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074925976 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069016526 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067265721 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.065768447 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078805588 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072676685 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074703222 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063667432 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.064766211 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064122791 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075680248 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074716285 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065725168 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072513392 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069117591 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.064607558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064380284 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.065098005 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068379312 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067446308 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066027944 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075390104 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075903495 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.079721036 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071335086 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074379769 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066200742 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063456918 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065694463 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063497598 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069316044 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074296207 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081104026 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077032759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087089083 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.065161151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076390505 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066322272 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082474631 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078767841 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.065300907 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.068828775 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063023692 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066156347 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076202174 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07730846 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07962055 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.080565754 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069713056 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069524867 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064125959 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080718101 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.064615294 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07375815 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.07551434 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072871477 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.067478795 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068323992 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076468808 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071085398 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066241401 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.083656358 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074370903 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065828832 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.081758981 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.065851648 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.077595689 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067082243 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070971241 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072380657 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068416125 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.233682317 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082408143 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063593952 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064642882 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080499173 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.065161202 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064527958 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072428243 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.079701225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06848982 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071826449 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074630719 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074283652 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068641938 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07599416 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065784112 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.074848461 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.066184882 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075735793 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062915748 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082249765 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061855139 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.079378181 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064407089 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.076503568 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064787968 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073981087 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063975181 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.081758831 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.065099346 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.065184407 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077418934 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062368448 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073461281 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063992474 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071369487 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072688376 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.073851647 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064979231 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073545764 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064687876 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073242688 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068542683 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072110156 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.073529306 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071018159 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065184778 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074127374 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075963461 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072966236 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065248238 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.065236923 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064273188 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074218908 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065577653 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065421366 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074406551 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07084432 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072478565 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066901744 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.066772142 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.065637197 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073267094 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074523488 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083531354 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073706793 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072381126 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074063429 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063508976 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080723512 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.063987476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072231804 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062776476 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071021017 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07404368 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.064119367 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.084613439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065330674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072806457 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07747241 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07373384 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068829668 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085159939 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.068159555 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073882292 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073285638 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070813267 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072863761 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066827461 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073579253 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074676766 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075668041 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065105643 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072531754 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074138015 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065634701 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.073235509 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065915481 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074914644 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067852796 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065411949 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071032552 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078364805 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070957183 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071123457 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065600979 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064134493 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065770637 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074279655 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070906175 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075082582 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.082369893 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064956138 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.070125118 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065578155 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070538713 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.244139249 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074495637 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072865369 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06909688 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062528408 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064629317 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.064745504 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.063472522 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.066274008 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062131615 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062684498 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07589254 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.065975969 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069414458 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063697573 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064316537 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076044594 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.067455519 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063712466 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07069931 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.063095442 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069332424 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062380521 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066942642 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070482363 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063625309 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068974408 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.076066299 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.082291276 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071264297 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074969602 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064647626 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071898744 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079757811 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.07169425 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064553009 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07358272 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062507956 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.083220865 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073553128 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07428991 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07592163 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066189759 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083224546 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069346393 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074807825 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.081023058 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065382391 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.07169802 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063578663 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.081029678 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069498713 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063434965 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072886305 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073639276 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07246097 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.079291463 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.065792976 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073687718 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070764668 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06980952 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.06706149 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.066867072 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076243638 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083538482 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.066145646 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070013678 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073079336 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073701353 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069352127 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077313382 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073230894 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065405506 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065903451 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068591995 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06495117 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077243066 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064545801 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069432689 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069495283 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063629225 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071802282 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082221785 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074564004 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074804285 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06364423 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06329809 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.083496267 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068843491 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.068887694 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075187668 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077255845 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079081144 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074934756 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082637754 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064918317 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072350653 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079220795 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.066180668 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.064197231 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068785279 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067107497 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075558184 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07631771 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074144562 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067592542 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073281839 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080536804 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.067011191 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071015151 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.072268525 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.066248846 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.077519733 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075319088 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.075896287 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068023231 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.221822285 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067935061 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073423385 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072191518 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073570985 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064342004 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.070271109 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.077926552 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071808889 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065959042 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062666001 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065984366 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074341366 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.070559946 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064086295 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07002366 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068693449 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070786798 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073284193 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068368356 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062544358 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081525314 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073748368 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.074734833 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.065971934 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.065179613 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063834322 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062541845 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075239616 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062557506 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.33652599 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068627278 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064509897 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.082014502 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072279334 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080250312 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064145067 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068645451 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062515522 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076708406 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068415019 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.063426382 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074877473 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062342332 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.080302229 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.076738534 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.070434741 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063389357 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070037113 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072935652 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080353519 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074459382 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073993809 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06830745 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075993286 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.066791407 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.076885828 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063409879 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062608296 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075049677 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073928587 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077376307 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06366027 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.075404575 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.065886052 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073296145 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073039313 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065537047 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066118645 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067255273 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076045191 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070179293 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074836964 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069640419 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082578666 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.065020069 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076182776 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074159749 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.076087583 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079347633 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077918318 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074754813 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065836507 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073322952 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074104824 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06697024 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071687148 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.069764904 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.089534157 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067511356 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066485065 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.080206002 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.072467506 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.066259701 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072656603 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070488933 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.078032223 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.067136541 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.076752958 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.071575824 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.066610655 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071133468 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071295272 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064569669 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066944468 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067807237 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07902782 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073293265 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067881048 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088816013 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.069568948 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.077592601 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081363169 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.231914552 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.065430103 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0627844 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064872411 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.078081121 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080727381 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067530715 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072942236 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064796262 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07361848 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062373798 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072932413 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072120151 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073916421 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063761824 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064333737 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080172739 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080064984 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068588465 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.080510387 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073206632 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064393965 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086091489 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073303386 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064282174 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.075109262 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066566173 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063783322 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064035548 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.066119475 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077147475 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063347787 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06524779 seconds)
  done (took 45.278810037 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106486022 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063987637 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062673515 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064522088 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070799552 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064523499 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063634629 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06457083 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064751283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065976198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063545395 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063225912 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068768837 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079177228 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071613135 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06838399 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064555242 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064476867 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063432704 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064617709 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069917892 seconds)
  done (took 2.922151842 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069419122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069700976 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068253732 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068365414 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066924031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063802079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068272577 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066462098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070359061 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064874441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069561245 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066227909 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066615042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066443621 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065865091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066480464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06911818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071885622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064842208 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068948955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068175296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069180241 seconds)
  done (took 2.997567808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065604915 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064279265 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074606689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062674654 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.062521183 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065967402 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.062485741 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.068601118 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.068572652 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.070422079 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073828822 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.06386886 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.06282553 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.069758354 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.062834183 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.064205751 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110290351 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.064350236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064847567 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.06411495 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.066848511 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073819733 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063018479 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063656348 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06892334 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06670184 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.063364193 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06611899 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.064088436 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068701448 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064666662 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063098765 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073787029 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073122264 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068683248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068603346 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.066200083 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065651221 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064354776 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063358138 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072962782 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.064945929 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.063495369 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064737455 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073642241 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.063399288 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.062981782 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073557894 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06294351 seconds)
  done (took 4.79631547 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075836292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.124142499 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069255648 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106970063 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075961571 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069132926 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070279823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114599338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066490472 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06539197 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077253574 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0785316 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066317364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067214991 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072308825 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067336095 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067957768 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06583096 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068847998 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066126147 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068719192 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070918769 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076235367 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078577751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067695648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065740214 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066049973 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068549779 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078327373 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070494642 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068103006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068008848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076857519 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072014061 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0657427 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067286996 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077792687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066542485 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066145806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064769461 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06589658 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067585125 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071091402 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077896323 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067678596 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072984897 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067124143 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064704895 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077881721 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067242098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070931962 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079284933 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068716869 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067324123 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067864298 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07705383 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0664585 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065219867 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066614987 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076840201 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064924857 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067486329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077624839 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065970787 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069660223 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078029118 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071586458 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067405469 seconds)
  done (took 6.532447332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075063302 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101814956 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078100616 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079320996 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07530232 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074762069 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073991902 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073906415 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07368514 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076750227 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074079665 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137458828 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070791151 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075415939 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074139841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074550615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074807189 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074819293 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074506134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074471491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074483408 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079309383 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07562061 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080683252 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080104562 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072205135 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075624257 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075474528 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079684635 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074391973 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079101493 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074460949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074601942 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082581472 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079314959 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074309867 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064955533 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074620524 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074733834 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074733639 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071102876 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079739598 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074613047 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071199477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074803107 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075393337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081711462 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081320449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077676741 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077577149 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074920092 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081168836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075954909 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075919744 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079785456 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082772999 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080033708 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081006405 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076358915 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08098937 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080460002 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082828077 seconds)
  done (took 6.345682692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078766315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068721453 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082343311 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06265186 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062616134 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07500918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064991516 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064525517 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069271478 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069389264 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070784425 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073594844 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076394438 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07227362 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07469389 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076794492 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073806452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073400874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06984512 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073633852 seconds)
  done (took 2.95352012 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.065733239 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067869832 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064138336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080894678 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065101287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072890008 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065160117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064141941 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064395208 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063868019 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068449001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068415998 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063853299 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071972419 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067379959 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071668531 seconds)
  done (took 2.580550129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066915675 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070764505 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.096912139 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064234118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066091686 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063573217 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064583273 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063463916 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065819914 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07826675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064734418 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066915221 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065870379 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064749536 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064640709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067063321 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066597153 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065666818 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065360951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098261437 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073325676 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065249546 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066964182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0654876 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066553203 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073287624 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066342532 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06675762 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064713741 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066986666 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06665296 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075981326 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066606279 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065352525 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063738198 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064543366 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064836966 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068530077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068715817 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066087772 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064790834 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066854978 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066234375 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066568577 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068242681 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068993328 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066550723 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075744887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065345269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067345669 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065469724 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068911166 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067918027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078781282 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069598325 seconds)
  done (took 5.259924277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082347656 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068477204 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063047814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063873137 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069698741 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07033287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069211827 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069170946 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069570439 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063004643 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069482957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06857857 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069461796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068917814 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070839998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070427315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064086257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069915645 seconds)
  done (took 2.761104613 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073952003 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068164453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068594607 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065145152 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0667931 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070988883 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064424809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065185724 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064784341 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065211367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065231917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065059636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066382813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065903374 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068822967 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065607706 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064568282 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066118757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065103127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063080823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069281029 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063856051 seconds)
  done (took 2.975514131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.121670642 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088024664 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.165933938 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.085726826 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09695833 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07690399 seconds)
  done (took 2.140194762 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099119509 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103755726 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068752864 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068683753 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074119307 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072722014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073017209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072908166 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075703196 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078963294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072852286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076236454 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077197365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07680394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073361218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073758258 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072286823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072633969 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069383319 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08014089 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0722923 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077365987 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073429511 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073011367 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073925042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077089588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075249146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077983137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072419614 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07684998 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074964073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073447048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078230102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080176113 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071729269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077910975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074688979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082234129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075442371 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078422157 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070305067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076067186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077048091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078179703 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078475792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075020748 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076984609 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075156509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074866883 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086590474 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075464193 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078965895 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076250362 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078137505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079046874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086803012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081315473 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078529499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075934555 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081633974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080396501 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075681012 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079509137 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079861834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076957243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080915788 seconds)
  done (took 6.593017788 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111054024 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070225448 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071674077 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077151512 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076346718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071791107 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072092283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072102494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071813021 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06995538 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110504599 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073483576 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07898196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07893107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074240065 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072399813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072429624 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077522596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070102521 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083894481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0723727 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077309582 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077523529 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077392162 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080383462 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07581681 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072903889 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072559623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072428823 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072525422 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075482691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072650006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077704496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071241653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078456649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073051705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073236723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077748398 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074194384 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074895627 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077827336 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080802915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07274248 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072673949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078831474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072749808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072722518 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070072276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072612561 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070123665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078897099 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082012158 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078871844 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077803864 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07305143 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073093441 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072914251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072853584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073001881 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074537312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077820352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072848893 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084544676 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07298257 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073086883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102392903 seconds)
  done (took 6.595093571 seconds)
done (took 137.580650394 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.256007988 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.221906462 seconds)
  done (took 1.986779516 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.108096407 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.107452293 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.12965759 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.076563643 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.136059065 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.23057451 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.179726691 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.077148765 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.076967513 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.079279588 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.076178584 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.077716064 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.077864791 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.075289644 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.141203684 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.07623941 seconds)
  done (took 3.248941912 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.125790275 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.220859314 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.111898469 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073206502 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.159685589 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.081394833 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.076594504 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080337922 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080820172 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.074318142 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123878616 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.088577043 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.079106626 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.080379644 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.076391773 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078910798 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079814875 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081147061 seconds)
  done (took 3.307855834 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.141499787 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.085699194 seconds)
  done (took 1.754630936 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165584902 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.111488334 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152247315 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.364813306 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.144076786 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146940181 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150692266 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145229894 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118075237 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14302946 seconds)
  done (took 3.170579671 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112994135 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110131016 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.341681671 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10730822 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.086142192 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083290646 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080992721 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085079788 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078980947 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081594179 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130868369 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08062745 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.076729174 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.130638815 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105119571 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114195408 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074936715 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082380117 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.085308949 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.076647707 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081320042 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084923724 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.184852082 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082331631 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105553504 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.078790331 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080570452 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077646392 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077729706 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081649789 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082348088 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10541329 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082530412 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088099002 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.080219725 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.10137578 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.075311631 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104350351 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078081435 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.075944167 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078579189 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082476037 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075911124 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.081601114 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078875125 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081119014 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084374266 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074800578 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079247723 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078587862 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.076590746 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.08003731 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079791034 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.080982248 seconds)
  done (took 6.585505538 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.127757548 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116499992 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073035607 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.123932441 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116170686 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075154593 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.132869702 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111150071 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.128915418 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074418368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075102376 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074651213 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08268006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086620768 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.127547233 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.119748898 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075386236 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073692412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119138703 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.119469212 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072424506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131557574 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12248215 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.119285361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073674564 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073784216 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072166349 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072914201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08118217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080814773 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072781769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083386371 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084554805 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080166713 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072297706 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073892736 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072213523 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080893784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085598348 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082407154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079314791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071764702 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072036172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072613014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073209643 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071735283 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084090454 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081139084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082592499 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074746205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074369214 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07358629 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074535002 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08003189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079189425 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081695511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084881727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074812123 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07352761 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074286344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084274373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081606587 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081100064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073862122 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082524178 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074288333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084856289 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087444253 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073537039 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074740366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073063477 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072918684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07322327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079619126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079669278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075857964 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075610809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074181584 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082213755 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080022396 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073340442 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084758099 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074869007 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076739597 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076466576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076944994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.086844983 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08345159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074943043 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075418602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074901696 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074692702 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074085693 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236971231 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080626301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081156162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082574212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074193692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083180826 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080334806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072579572 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078574336 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07191606 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072470691 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072091101 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078278239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078016803 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079763497 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071913754 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072073436 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082009629 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082088185 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0737275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080990418 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081585776 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07941438 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071873591 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083087116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073527684 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081376456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072149227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082012956 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073281666 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081315804 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07415669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071697715 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072600493 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082280408 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072696362 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072849332 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075296873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074240867 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081073475 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085413786 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076449201 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082678739 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080928613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074069789 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083712867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073649881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083656859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07431494 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073246001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073271131 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087034639 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075295579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07537879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073369194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083591919 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074744071 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083794038 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082345597 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073855614 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083564846 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084206381 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082281049 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085039783 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074065474 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07405259 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075311554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074426838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085053959 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086162376 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075981396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073876397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081060245 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08402197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072903205 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079985914 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079980151 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082171119 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07508454 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075174547 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084995528 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085194197 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080543119 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082954941 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082315603 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074188511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081397678 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086555186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075030444 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088610733 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074434552 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085634291 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08617315 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083259655 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.241301106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08290984 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081146787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081006293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084339234 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072980609 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07224156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07842604 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071940123 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07572625 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080358213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074216 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074027372 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084583498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07240007 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081113624 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071368412 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078979521 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071353569 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072457852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083392502 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072155135 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072363914 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079258375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071961645 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078480256 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08103964 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078296555 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071710115 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072084677 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081711151 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081567213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071936389 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07175895 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072386012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080801512 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080182147 seconds)
  done (took 19.944350159 seconds)
done (took 41.539453972 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.204371965 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.122211507 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.217580612 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.14320784 seconds)
  done (took 2.238022834 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.105310862 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.068409294 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.111058142 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.120759234 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.068508943 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.107239886 seconds)
  done (took 2.152806018 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.262743496 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.189361402 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.193392798 seconds)
  done (took 2.218066732 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.185277442 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.328839627 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.594066712 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.181344688 seconds)
  done (took 2.852574426 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.151144301 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136603632 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.082016541 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15286888 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.087649084 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.064984187 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150203038 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.072663083 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.102477558 seconds)
  done (took 2.630493068 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146828649 seconds)
done (took 13.79818113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.327965359 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.115773668 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.085528767 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.077430862 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.200916153 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.166494472 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.260544904 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.079200358 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.261280906 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.355381072 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.221818036 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.098054233 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.129728454 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.093240909 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.298106176 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.081120785 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.078379827 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.073582231 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.198713179 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.182086216 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.214657512 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.078217539 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.145792983 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.080100211 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.157867433 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.130625499 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.238012641 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.343798638 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.311789167 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.08035478 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.183224199 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.098027794 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.173288394 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.201856211 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.167687221 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.104255778 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.069952488 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.283455793 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.158525923 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.343741648 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.210867725 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.077935115 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.198634796 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.074653781 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.136422275 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.116816816 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.083377906 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.076230111 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.094410725 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.076183752 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.091450712 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.076356636 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.211339454 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.073179844 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.148072015 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.174717322 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.22639744 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.218340434 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.078053065 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089998255 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.079996944 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.224276995 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.095782387 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.075477827 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.084591254 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.07307957 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.338529251 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.090769438 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.073652485 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.082105261 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.079986818 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.162362058 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.120801664 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.115628228 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.081148495 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.173315982 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.1509307 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.096683336 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.10314469 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.078525676 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.069025191 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.224019858 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.075900851 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.090474625 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.075939938 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.107217297 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.070748541 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.091318957 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.205010968 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.200251742 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.12849447 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.069729656 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.281160161 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.069817559 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.098447352 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.135277981 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.069775681 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.219285933 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.069282156 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.069419555 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.07777768 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.07681803 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.070737833 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.203386341 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.156452128 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.076815629 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.075668577 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.069434791 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.074774126 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.071297032 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.069120684 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.069236889 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.150872995 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.090563434 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.069793162 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.159595928 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.181914821 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080408798 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.088013755 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.131458353 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.072068444 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.078108528 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.076724156 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.179997537 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.077881009 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.190718638 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.07207999 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.09291465 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.173090433 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.150736271 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.16058844 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.071161962 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.214737338 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.081239058 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.071414446 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.077999706 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.10258883 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.082600923 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.086605441 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.079028605 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.216179546 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.082117881 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.077338921 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.175968626 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.073673385 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.168474018 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.151157617 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.189757685 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.076022796 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083403491 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.218404976 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.099530008 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.101987008 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.095946843 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.078709317 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.072713551 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.073677187 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.08977126 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.072143163 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.255483475 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.088269165 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.078748269 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.072455829 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.22115509 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.08189642 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.07565896 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.241922259 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.0834477 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.141907329 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.091726873 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.072773745 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.161884028 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.071410492 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.09242854 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.214733494 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.070135166 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.149302502 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.072417075 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.071762289 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.078483567 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.07228117 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.077865608 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.082439471 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.070855679 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.08306171 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.076728199 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.069039298 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.159872815 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.073497742 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.238201734 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.155661113 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.159872012 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.069573967 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.088351173 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.069556748 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.189074253 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.070323907 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.119941953 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.168448348 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.085705895 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.090802139 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.071615868 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.152284181 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.086532232 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.070616819 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.154947514 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.187582066 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.141448377 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.077409547 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.218196153 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.079069525 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.069490362 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.077276912 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.077986379 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.070181444 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.151749978 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.074734978 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.070108451 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.070082367 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.071841383 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.069540851 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.095648668 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.069933475 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.076824013 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.069403383 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.072071062 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.072969643 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.070981537 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.078848499 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.151518982 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.185217548 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.076606138 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.091773694 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083316298 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.082381742 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.197563287 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.076617193 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.198034418 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.070172011 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.078956503 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.09199862 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.071162195 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.076704044 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.069761801 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.090119324 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.074926179 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.072989483 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.082992988 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.07151866 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.070278803 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.070975708 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.071178085 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.078176966 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.074407442 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.070603106 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.070389549 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.069950163 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.075336481 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.077637052 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.082409423 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.09252663 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.231691449 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.251974694 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.079706568 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.071694223 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.070680637 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.071671475 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.071763335 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.070068543 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.071739634 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.07023228 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.069696936 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.098018483 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.074689729 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.069464271 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.092628762 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.070976858 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.079929379 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.18188754 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.086414053 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.075702016 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.071114992 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.237310682 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.154877496 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.091244942 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.08962047 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.069036659 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.078564079 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.071431682 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.070508408 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.069293674 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.095876966 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.074403606 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.06889415 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.069352695 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.069590594 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.195757667 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.076840811 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.069186508 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.076247507 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.071291603 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.07107704 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.09744005 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.069348909 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.069239439 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.087928288 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.081460543 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.149953708 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.080913007 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.072022482 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.202172157 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.070160675 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.070330444 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.069794194 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.164708285 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.082755844 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.073474653 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.073053752 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.078496776 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.079132016 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.260526706 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.077785658 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.072787538 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.076960065 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.069521403 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.069688598 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.094853594 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.100389095 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.072716108 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.07416561 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.071593748 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.069538825 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.145573198 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.07833483 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.075608637 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.159453995 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.073161792 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.078424746 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.070716675 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.226814081 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.075583558 seconds)
  done (took 40.263339995 seconds)
done (took 41.859993718 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132466747 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084088248 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081898911 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078511582 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083535273 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083993925 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083733985 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080028683 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082490518 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081145059 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111645858 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068594949 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076881903 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08450622 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078134127 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085434315 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082054687 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084701202 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07099816 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.086411171 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.096325735 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.083001448 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078578944 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084810191 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070840552 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080503081 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129221307 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091321614 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074751252 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079581262 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077299119 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.086034952 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077065442 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076575818 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079399251 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.082461443 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.079792076 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075673626 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125113471 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074431066 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069710078 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082285156 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076484024 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077135416 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077939212 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0816603 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074640882 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.083328986 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06863545 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080889306 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125252122 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074503319 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074122293 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078052463 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074608917 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078876184 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073770705 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081121386 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07438183 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081203656 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078880209 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077250515 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070143472 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079571543 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081965276 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078217241 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068271552 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074406116 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068868781 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068956431 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.068524423 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078423589 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076378551 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074639735 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068614048 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069465998 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068550014 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081905667 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078029548 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080145354 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07086275 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075176224 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075481599 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071448961 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076482745 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082540625 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.068889173 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069923552 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068356818 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.084837242 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07633278 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069500303 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081752734 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075000385 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075012463 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069443819 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068589477 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074771863 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077773715 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.069264263 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068700249 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.077322486 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077426143 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080567234 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.070005135 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076204046 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076727383 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071418038 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082033856 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.080071395 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082298563 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085894266 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081021634 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.083158343 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.072911368 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071308748 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.242452069 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.069539571 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074396264 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076787836 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074212052 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076998057 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069332422 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067761195 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073968464 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074687543 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068774561 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.068990513 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068885868 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077644607 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07621277 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.066984357 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.068438201 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077569152 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077541045 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067589373 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067503391 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077591333 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.068998757 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075923966 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0752947 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079327896 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.06845751 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.068878581 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.067402864 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068012246 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067532073 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074002881 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073814995 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.068796665 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077444848 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076214857 seconds)
done (took 13.709158837 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070988106 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.113416801 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.120493083 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114904112 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083209817 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070458612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073277847 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089483666 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072617692 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095556034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09610333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092097444 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134178359 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067754868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069562597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070286616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067648402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082236886 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.118949347 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094653915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113458461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069313465 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083573618 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090686779 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08333458 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089710538 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072757648 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072053053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074119864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088804687 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097095126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069572687 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071160373 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08936733 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086533539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079051881 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07078614 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.077012699 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070521698 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069560031 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071719487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.089266061 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077099908 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077315551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07082024 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070686161 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069740733 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.07783157 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085881916 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078197088 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084735619 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.088495572 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072427326 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.070200816 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068216825 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079364381 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.071058937 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072963437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071846808 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070036267 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070754902 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073199112 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077339512 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082258052 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074824245 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.077982874 seconds)
  done (took 7.067460928 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090484834 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101628677 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086930702 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090590893 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071195917 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.07132624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070398161 seconds)
  done (took 2.343125124 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072638421 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111302245 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119839661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.118117294 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.127724823 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116439078 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071093279 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104280234 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069397073 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111410132 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.126737006 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.122529421 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074310976 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082995328 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070731055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.120166285 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070981637 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078188777 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117949728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12248646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074763773 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101971021 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.084821836 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071419953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.119484912 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112458872 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.072713027 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071059897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072839153 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070250516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07011853 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094627758 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113298494 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.085980114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070879697 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.069497739 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109192615 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07107088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10861552 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077701002 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108756402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072158513 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072719781 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070298157 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071359725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.113964316 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071239353 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069973399 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069959779 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11391371 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071988479 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113666976 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072979641 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07591459 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.079494104 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078392114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078602792 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070917325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115945651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.081626791 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072248908 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123498923 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.12348853 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.110906012 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123821208 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.080162395 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.114806762 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.112348593 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071717246 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.070683648 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071554351 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124866161 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.074889224 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.074286819 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.076407363 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.079108591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.117688556 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.131688922 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.133249168 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088079892 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.240301533 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070473194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076458252 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127075063 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076670024 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070664386 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070678935 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069175367 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07489357 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071596474 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074930616 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069349211 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.080256306 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.072533596 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071844816 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117347646 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069794939 seconds)
  done (took 10.611511232 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072992572 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074071323 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072516849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072463183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072707339 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072146965 seconds)
  done (took 2.170622348 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096287802 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071219887 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082861004 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070860588 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.093208783 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.114307382 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.115324759 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072408622 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087265768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082843858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.115509168 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.116868693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116359634 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0735128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.115407221 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073648127 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.116692213 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075051717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082535172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072795824 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08546941 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072493925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07277162 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.12248329 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075132496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073675189 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072500001 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082885915 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08387973 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074141475 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072691879 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074108329 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.081248631 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073042444 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.115559243 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.080903206 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071559848 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076185489 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073172386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075256835 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.118234118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073069485 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075656612 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076262394 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072849207 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080840887 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075990138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075426396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.115087753 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077554681 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076934337 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076287213 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075034205 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076754344 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.080412321 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072380634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075903214 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.115285635 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073986698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.082779943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073878314 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075373946 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073166665 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073735676 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07720142 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07648125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.080914453 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073060801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073012308 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071796908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076499779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071723539 seconds)
  done (took 7.714653822 seconds)
done (took 31.600092553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.55213025 seconds)
  done (took 2.25776435 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.981761248 seconds)
  done (took 2.734667775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.306108164 seconds)
  done (took 12.0396809 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.410687081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490531704 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81603186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14793834 seconds)
  done (took 3.645068817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.890388661 seconds)
  done (took 2.679366125 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248051828 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.240294495 seconds)
  done (took 2.26201876 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.47042756 seconds)
  done (took 2.210146586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.394556756 seconds)
  done (took 3.159535563 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242956284 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168155406 seconds)
  done (took 2.16225175 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.681131016 seconds)
  done (took 2.416410486 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.712679173 seconds)
  done (took 6.467428934 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271087149 seconds)
  done (took 2.065967349 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.248225895 seconds)
  done (took 1.981702185 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.898353594 seconds)
  done (took 4.631425934 seconds)
done (took 52.471307762 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091830708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091509877 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093859621 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086851686 seconds)
  done (took 2.097871256 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.080153856 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.075572828 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.077794514 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.077250698 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07466141 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076408642 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.076764107 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073227599 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074752146 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.073896278 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071958701 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.075198822 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.077858733 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.074713558 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07632633 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.077429287 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.073756537 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.07408963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075772784 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.073143469 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.077282214 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.075380061 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.073834642 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074936678 seconds)
  done (took 3.56784447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08366162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075303307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078689257 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074249619 seconds)
  done (took 2.053820653 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.082408774 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080969324 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.09199112 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.094628567 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080208492 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.081883753 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.088449036 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.09074958 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097557889 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.093498869 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.073129948 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.073309682 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.070768726 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.091195746 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.086947864 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066239354 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067821374 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.084179381 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.083426748 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.084642319 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074574687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.070468753 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0834956 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.084151497 seconds)
  done (took 3.735779265 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087808914 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.069027554 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085330335 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095006748 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096505208 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06841775 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083235702 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097496191 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13660205 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069474803 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075324155 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068873638 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109667048 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068830611 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085646812 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117132708 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.119208285 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072784255 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103253075 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068772417 seconds)
  done (took 3.574672647 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081852102 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074895522 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07570995 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070905142 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081252354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076219919 seconds)
  done (took 2.224880856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07236277 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.071182603 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070355099 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.075700769 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.071596692 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.072573231 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.072096534 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070839098 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070837738 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.070855566 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070750823 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.071034391 seconds)
  done (took 2.619484437 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.224039303 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075746823 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073771491 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069115755 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070825214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069986116 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08466015 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07297862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087784433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069959779 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070159753 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072226718 seconds)
  done (took 2.80325881 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.110354661 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115494878 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.149134721 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122772885 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120531524 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100384476 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.169813012 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.0976029 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.173603101 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.143624832 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123702341 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098334169 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093537796 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.075452546 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106081651 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124852173 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14432288 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076862644 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118747515 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.218882827 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138439458 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14214573 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.155289431 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12329706 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097163045 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.15299841 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102204985 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107505337 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128898586 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135036597 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1262958 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.103436725 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.075762059 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074970046 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157684947 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.112501749 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.127319301 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.099686853 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.113891055 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.094837629 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114517696 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.074147688 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.089038855 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.119453065 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091936573 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143668795 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.100665046 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123534139 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087748711 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.31958772 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132266643 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.143697438 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.093031334 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111222158 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142712582 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116101859 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139147587 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110805535 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086143216 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.125286518 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.109978391 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104129057 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111888503 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083611461 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.182842076 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093126173 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116228395 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115760875 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099742927 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100152297 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111775846 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.143162324 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.134819387 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134911877 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147282206 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09806696 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126625667 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10709063 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.135705859 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1098831 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.077234756 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.131571819 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.139279971 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105723451 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106913796 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.139118117 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100064746 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082203592 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109384516 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.127011362 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086983523 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121344975 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086790375 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.118568604 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.149228988 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106580309 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120854748 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.306898803 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083495834 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158289861 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114576333 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07903444 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124252854 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118113927 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.163030997 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098502709 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.080057778 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104124606 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106429325 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.157363087 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11103839 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083419336 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114475578 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145877695 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098441134 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.218471782 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099560892 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14518582 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114697133 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091736236 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079107899 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.095420838 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119687944 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114851239 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119043551 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100985519 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.090564591 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092075716 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120723703 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098818867 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085649944 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.121044969 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.114103985 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082266857 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094007644 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.081393791 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149653342 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.083137652 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145052906 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132936545 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.082986158 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116457813 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103719477 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114353229 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.104465035 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126595704 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149711624 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.200665564 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.097281756 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102757735 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119249928 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.336377493 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.131595847 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096768662 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.080908131 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10470194 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116288839 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.102042572 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.127972337 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.097794898 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111402436 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.107071019 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14593008 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.150440824 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102611356 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105209962 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111223011 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.126259342 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078615425 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.162050125 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108689974 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126646235 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092887028 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1472326 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.120352814 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09607763 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093131118 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106072587 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111384867 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114864713 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.155140266 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.10349787 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.077154205 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098259002 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.151588535 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082161888 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11602919 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.099708757 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.100169593 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.127637454 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101603623 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08724128 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.072955274 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135272367 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.167755305 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.074503244 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120097296 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.118133058 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112831348 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133544048 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.075254647 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129548946 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.15007404 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.30643841 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146307205 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.174340203 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124507962 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.126024118 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118882984 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110185577 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082987679 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.130589289 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.140176702 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100966689 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096974779 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140231582 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.123681442 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141878609 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122318317 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125012897 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111500089 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113005607 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107193154 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.110190135 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1521927 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128569842 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.131853621 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.089208981 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115454996 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.125347438 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143557738 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087594765 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.150848466 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093448184 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127669357 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087094305 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134389841 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.084006652 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.182218425 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086535042 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110545493 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.076493981 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.081536058 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.154858999 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.121870851 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117579848 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109575827 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151345223 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.149184543 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.087969092 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.118459092 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.126289546 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113289392 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.30430021 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114754726 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.097788092 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100922414 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.116390312 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092057311 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086428753 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119971523 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09784678 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129539502 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087919359 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080314318 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146027948 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111646068 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09956947 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079960912 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11129095 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.128115101 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09727683 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091300257 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119998967 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109456292 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148884133 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.096863198 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.102471904 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.130092394 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084728386 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.097369323 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.073635816 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.091016543 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.081083577 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135472142 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080697892 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123137622 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.073129745 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.138371932 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092867046 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.098340927 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108504254 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115779047 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134950334 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100549936 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.148239003 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09641904 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.130093429 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115054703 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100915328 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093192398 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110416847 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107848832 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.131212727 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.106570659 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133953429 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156027557 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113450235 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.15840679 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.278409976 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129295083 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112768302 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.131360845 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116277486 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.172209377 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146933031 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11765295 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115309308 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079435915 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103430547 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109840304 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.116923192 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.182012508 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132772898 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.077893248 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109737976 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099207474 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113492777 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108482387 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08616031 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152920453 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107983895 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.093637645 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119405847 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097865625 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111093693 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081186729 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106191354 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110933518 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.101242033 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103518283 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.123159849 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.137875117 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120125124 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.156016044 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.107984129 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.098029581 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.126236681 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118086072 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117226108 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092026317 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092313041 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.146664251 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128425388 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.13576667 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.107654306 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116759553 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.121225987 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109605553 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138704587 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.295494045 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132095023 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084239167 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080630748 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.072074314 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.076037522 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.12787622 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111699449 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11562759 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102556871 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.075973024 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107478678 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107508645 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075530487 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091741896 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097654756 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102338807 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096218875 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110871235 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.118135968 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.105956328 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.109401458 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102290652 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.151323618 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105410935 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09222913 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.151912645 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.157097443 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09373769 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100220046 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.078405718 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084655394 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120134906 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15896442 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.159941687 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083742832 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.092606697 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.091553485 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091657003 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.076166024 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.094516886 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.094589934 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111705324 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104068414 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.120403038 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11192392 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080827501 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109385507 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106142167 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099344541 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.114790684 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.130773947 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.135935082 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153483329 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.124755445 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116992812 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08288417 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.0889251 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.258775849 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084449522 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107237047 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084753202 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082395189 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.150237459 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.098050073 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109419195 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112570132 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092075689 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079399079 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.141555252 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.075865134 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.142255545 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.076341538 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088157842 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.088259209 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083167917 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097162257 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141461293 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11319674 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116035837 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113452625 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109277929 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.165429081 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.164813952 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085924424 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.149184335 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080924407 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082845706 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083085267 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118125623 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095130575 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120879503 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149031741 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096120607 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107489411 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0838688 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.154415109 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.106854898 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.111164941 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091525451 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.084521923 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.151594965 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084686168 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086915472 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095517172 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119002061 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.077579585 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109464147 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.089307537 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085173779 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.173773428 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.715680004 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099170108 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082688488 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.1049264 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.333746897 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138306079 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100968161 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112759351 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.124949152 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106688515 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.099568728 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112386267 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.195470078 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077861768 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098103664 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.109461466 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103970441 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106613776 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.103996689 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.09410113 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.098962307 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.092571403 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0831935 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11165493 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092187775 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101058691 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113593126 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.088503966 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092470261 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.136147924 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108572103 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087694031 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094529237 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.111711433 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092924013 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110358893 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.074891411 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.118952517 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094706524 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12855627 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.105557059 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116647945 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.134632111 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102233854 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144955972 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113806984 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129615636 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093481974 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083610841 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134247171 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096209657 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083196886 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.155381974 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105189083 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.113283057 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111141658 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.104237416 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12320756 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127922241 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.302231178 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105586135 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085610804 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105842738 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107113673 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092777078 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084140515 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078429041 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.080729183 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111738957 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090928248 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.091793007 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.118345455 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094108386 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108891167 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10804913 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12723513 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092798703 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.106466948 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115723358 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095779159 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115557552 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.107680064 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.134382938 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.179907402 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129784272 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.135827803 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140745185 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083606414 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082618787 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.074673262 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.121772077 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.085265363 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.09646915 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085284638 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.144391851 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.087614424 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118947352 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.252550038 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085259795 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100470591 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102270075 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.073984512 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08880137 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113839524 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09240692 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085291017 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126296363 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.087391744 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.136177535 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118561977 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106311542 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.102652636 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086922329 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123258015 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.113098845 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.140777523 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10217726 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08346965 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137864383 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.114462609 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.154009849 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.080217888 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089565053 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.145796195 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116582817 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150339002 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090802441 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170139746 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.158032134 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111973165 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.153149647 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079702459 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.655073237 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100770165 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.142583445 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096902392 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126716255 seconds)
  done (took 73.386209409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.200035561 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.191067871 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.132487882 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.142888002 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.298325016 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.305075719 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.15739583 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.128502474 seconds)
  done (took 3.623887215 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.074079155 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.088728016 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.086409309 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.256051317 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.104211622 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.074315092 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.079184351 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.088105369 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078177621 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.071237669 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.110338382 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.071607136 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.075224458 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.562848965 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.070361044 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.076488638 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.075056182 seconds)
  done (took 3.975988842 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36248486 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.676645336 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.375995364 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.808330812 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.174368223 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.733933851 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07911034 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090619391 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.956992047 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.437030141 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165053157 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095439145 seconds)
  done (took 21.878044591 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.081767464 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.126112089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.125781248 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.079109201 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.078739107 seconds)
  done (took 2.421279214 seconds)
done (took 129.72816181 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.0890072 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.191744357 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.072875307 seconds)
  done (took 2.226498657 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.124887228 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.124944962 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.123528311 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.126289729 seconds)
  done (took 2.442333325 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079244628 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080672874 seconds)
  done (took 2.083862017 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.237235909 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.221299365 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.095729911 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088681639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08499756 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086270777 seconds)
  done (took 2.220795655 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077825155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077255941 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077107353 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077539041 seconds)
  done (took 2.28468212 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.177095224 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071096657 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.073372543 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075562218 seconds)
  done (took 2.335824128 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.091514803 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.093317119 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.121996258 seconds)
  done (took 2.231298704 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089992725 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.090994389 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08395671 seconds)
  done (took 2.192477046 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11584242 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.103660941 seconds)
  done (took 2.161098011 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084306033 seconds)
  done (took 2.011097885 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098520551 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103251537 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188718141 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.155186407 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.191478469 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.176072464 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.080548579 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08145315 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078913299 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.077031732 seconds)
  done (took 3.153570206 seconds)
done (took 27.909758033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089052237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.199015747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.322412446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092635832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.659394712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.318217468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.741356699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096611014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105970941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071798339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089862983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.636959161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.739324437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.149988242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.724057258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.143596324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.567402555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075981082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072408886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072475612 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.72278846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073260424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074009961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074534905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.565154791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.337574759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075450954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.142825751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073933631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077343768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.319668446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073894393 seconds)
  done (took 14.497244427 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079978642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136071547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078785523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090983759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075926745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074287145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076016427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073219299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118101626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07262341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090901002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073366449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077362091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073707838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0958204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073266148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075069968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074150366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074045869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073434531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092817881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072100157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072940852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073228886 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07458176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088408507 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07536735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07344839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073755899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077382639 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07794836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073838713 seconds)
  done (took 4.51860042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150334899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139191065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079200223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116294954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124345799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07435932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.163941337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096907826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121500733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072651843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090931913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072365137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110010859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073878156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09445325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072527943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075167069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074454387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073623662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074367087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095286922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074107516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075335983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074978027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073438424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089004584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073878598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072722878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074488547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077982177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078881849 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075055863 seconds)
  done (took 4.831860943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075336379 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078196469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084211795 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085631655 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070946589 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074854311 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0768422 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072288681 seconds)
  done (took 2.609451036 seconds)
done (took 28.391975064 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084327674 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071518056 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074292062 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091703242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077422926 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.115203203 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069426097 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080536083 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077361964 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076468143 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076897432 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071273435 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073661209 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068168506 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075670645 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069420061 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.1171322 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073606999 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.115780577 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117041329 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0717334 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075249118 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078349169 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.117318339 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.117934439 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116377001 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078605766 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075546234 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069668127 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072800766 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192293127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.195709318 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.079985681 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.122909876 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070128359 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07015682 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074664343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072662239 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.120126093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080365735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07378488 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080752941 seconds)
  done (took 5.701453918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.198419817 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.20444179 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.196611246 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084778627 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09685677 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084421515 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.20472567 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.083460394 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081623233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.201886921 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075684609 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080233907 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082887761 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073561957 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081902971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07735148 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08284494 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076177831 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.082175823 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081664969 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.201317925 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073418037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084460097 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081376356 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075393328 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082430932 seconds)
  done (took 4.807970892 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079286349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094787332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097547489 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157671009 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116395351 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087808594 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087861474 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098464569 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106811176 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073627463 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096640786 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099965003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103295741 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080761574 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.113849584 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090637783 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084536684 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073562711 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078831874 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108888014 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.097158638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091093219 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105560666 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146158896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071050814 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08150063 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079662377 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088769841 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.080462606 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085884077 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075840865 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075189229 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072604005 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084363603 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077304607 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070956265 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097055144 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086682787 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.087556336 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.113016276 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082570608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073631605 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101269494 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.141440122 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072783679 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075552909 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077089547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085488051 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073453457 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104152977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.089133652 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071736814 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091541583 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073709545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074889862 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094147554 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074994544 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074284517 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084433234 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07957994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095081803 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078746734 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094936596 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071837258 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084209641 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073859865 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07363055 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070704882 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.108223628 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080005448 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127745832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075213478 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071182611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.087619666 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.085421083 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079233391 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071754349 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092499303 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086249708 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077343367 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085035488 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075359711 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07689165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111409699 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071396148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069954851 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070052827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074276457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075532645 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072833095 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086231901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071556556 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075910075 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08810145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072345789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072852476 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074594841 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073178931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072180969 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085131568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07761005 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07456435 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085791516 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073494363 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075747672 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087979679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082151086 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072386104 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073464163 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074910957 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074433545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.0787048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078807934 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077071085 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079091739 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.081960727 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080695209 seconds)
  done (took 11.928413264 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.219310605 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.206623064 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07417131 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.19916293 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081082369 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.132287987 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.202719355 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.201848585 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072873273 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073551431 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071782487 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.145471033 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140076557 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.153083285 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.13157354 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075685288 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10144153 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.151239084 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.205211493 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.202177287 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09938072 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080888689 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075648544 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074533215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074251775 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082284162 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088838924 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081666767 seconds)
  done (took 5.509358432 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079098568 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.117907721 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076158 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097212086 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089593773 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071794523 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074532401 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073531813 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090382035 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078068636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073340778 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078090886 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076831302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073656737 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073244508 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07853901 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079255582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.079874769 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075814762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076762147 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.088747256 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.164562934 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.079108085 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074561986 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077735347 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.074190003 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080079522 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081309422 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072409914 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078309962 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070513491 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078567072 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089466148 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075035978 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072699684 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073824042 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072783783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072713947 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073546621 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070377358 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070161708 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079125926 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072552842 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079694853 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.089741308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076660778 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073836013 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075276439 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075218576 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069506655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078235576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076209449 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075489393 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082076962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077714389 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076343992 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077127332 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104300869 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078590685 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072030622 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072314776 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07062482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074007062 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080708034 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089804347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07432585 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070659894 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072480874 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083404661 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087495058 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07202089 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078163102 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069279882 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072470692 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074843497 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075706614 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074145491 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072034098 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073766538 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074006364 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074474753 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072646989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072447689 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07535739 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070237133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070810699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073527664 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074072635 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077930492 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071128297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075118654 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074412226 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071766223 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077722487 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082158272 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078530745 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.095556988 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081475341 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074411688 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07271822 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.091250182 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076477958 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073259238 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077791211 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080137617 seconds)
  done (took 10.244575095 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.106114434 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074767468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.0946018 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.108798985 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084666763 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078226069 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.088027396 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07481126 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.097945104 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072615051 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0831107 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071699797 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08852089 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08448426 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075920675 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084556181 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075695257 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.096531767 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088744479 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07176139 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083604128 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085229045 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08596898 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.093559409 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.091176088 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.092163915 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.085352933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.074720578 seconds)
  done (took 4.458179378 seconds)
done (took 44.622667771 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 7.088672925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.285411939 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 7.060285147 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.598922857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.124052359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.105851716 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.273430143 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 7.097787116 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.625503646 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.104422357 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.786877504 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.686581348 seconds)
done (took 70.877238034 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.138277586 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.214300206 seconds)
    (2/2) benchmarking "String"...
    done (took 2.295514791 seconds)
  done (took 6.494631709 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.461373267 seconds)
    (2/3) benchmarking "different length"...
    done (took 2.031340848 seconds)
    (3/3) benchmarking "different"...
    done (took 2.076131619 seconds)
  done (took 8.523813027 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.360872603 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.628223869 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.297327183 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 7.014957959 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 7.030375911 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.538752346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.194601475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.651943914 seconds)
  done (took 34.316420382 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 7.023487579 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.388345889 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.440540375 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.49975743 seconds)
  done (took 22.396664754 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.46141669 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.44694433 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.443406092 seconds)
    (4/4) benchmarking "different"...
    done (took 2.738278644 seconds)
  done (took 12.129773252 seconds)
done (took 96.476249883 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 7.021454594 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.399077798 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.069984087 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.183267311 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.135636869 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.119514251 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 7.072094075 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 7.070730101 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 7.023307162 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 7.02012453 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 7.041733092 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 7.025664434 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.051019346 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 7.053115224 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 7.020065098 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 7.084815323 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.382332494 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 7.015586288 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.073058016 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.853760248 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.377336841 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 7.018056281 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 7.024504056 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.057424538 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.519506709 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.053252845 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.526835941 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 7.022422331 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.646619032 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 7.01559181 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.0069938 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.98656485 seconds)
  done (took 212.947980291 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.970343268 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.707693513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.77331633 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.956321056 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.253932749 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.258044726 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.750200075 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.283113006 seconds)
    (9/36) benchmarking "syr!"...
    done (took 7.021815469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 7.018439815 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.959034427 seconds)
    (12/36) benchmarking "her!"...
    done (took 7.00284277 seconds)
    (13/36) benchmarking "trsv"...
    done (took 4.008048604 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.537299635 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.02462562 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.017652375 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.837502851 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.759195894 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.027952831 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.856155502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.931084943 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.320395649 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.282060865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.694479077 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.890278356 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.925737353 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.050172616 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.908024939 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.363355025 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.686054022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.871742088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.884673251 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.36420595 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.103225267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.873940591 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.879425672 seconds)
  done (took 182.959389671 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.103011256 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.897957568 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.915643886 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.982196752 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.840784383 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.742232707 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.07347123 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.945461415 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.898873731 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.876069093 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.872434031 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.939069841 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.873590656 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.261352779 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.282153343 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.231968948 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 2.007729279 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.677005447 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.007446085 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.939993049 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.882619055 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.976603238 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.244755159 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.980153275 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.874697864 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.885854958 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.980125731 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.888514474 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.933046255 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.896719187 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.982923096 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.009741916 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.348465494 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.179904007 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.16643987 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.263822085 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 2.073160471 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208164192 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.910244549 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.880166385 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.872467848 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.919277719 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.875169117 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.94387532 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.97881101 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.878669883 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.890283051 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.448324024 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.439128091 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.879616576 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.872931634 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.871401468 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.875457273 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.873650973 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.048743472 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.879815742 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.906248613 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.329204999 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.98372881 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 2.251539866 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.237983577 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 2.170745686 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.255600991 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.175311088 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.135634525 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.588928673 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.431156745 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.228380611 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.611255993 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.876882217 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.873297633 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.872068992 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.681630092 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.13000911 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.037710439 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.928590742 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.064794563 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87718203 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.873421637 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.869843091 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.888294925 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.878841909 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.980746484 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.877202571 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.872850977 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.214283334 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.22772722 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.933078547 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.893649348 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.936245117 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.878834259 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.873351045 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.879798274 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.889953864 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.906463887 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.89087492 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.256795869 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.958906811 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.991659669 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.241672131 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.262138831 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.878026546 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.961826945 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.298196768 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.797100038 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.883886146 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.874841048 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.892523656 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.876450778 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.887578441 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.894497126 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.876400534 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876100555 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.879506247 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.875014946 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.874840065 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.876213536 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.894341337 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.876970181 seconds)
  done (took 425.616094963 seconds)
done (took 825.745170889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.476134326 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.582030113 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.434447107 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.494223329 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.447800921 seconds)
  done (took 14.2463067 seconds)
done (took 16.058644169 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.172470713 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.888601868 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.966729303 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.257340648 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.077390405 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.043624486 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.075045931 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.164587714 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.098710843 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.03327002 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.097618705 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.049152005 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.165291997 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.130039023 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.140605209 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.168152556 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.077112736 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 3.594555976 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.120063605 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.050736826 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.078554966 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.044819876 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.035138276 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.109376504 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.136541469 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.074462539 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.293215709 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.112282478 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.085210689 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.12882784 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.142053226 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.154108626 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.083483914 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.126451084 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.156314119 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.142022295 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.073673858 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.142014252 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.060792301 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.086477789 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.102527834 seconds)
  done (took 95.550779715 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 3.129827654 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.052596397 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.173339397 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.168322964 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.693324484 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.192016296 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.256963838 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.043991823 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.056727591 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.178400584 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.198671709 seconds)
  done (took 26.985454261 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.96964911 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.053382607 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.17088747 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.190512231 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.410266232 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.193996709 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.225062166 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.044303668 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.046469898 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.186286387 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.185834358 seconds)
  done (took 26.507910366 seconds)
done (took 150.858120041 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.43180468 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.938079431 seconds)
  done (took 6.182141878 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.901291877 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.881343079 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.882133795 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.886778441 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.882579481 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.885936594 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 2.059326403 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.887241553 seconds)
  done (took 17.079250852 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.88197411 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.881462608 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.881811868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.880657729 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.881582953 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.88100987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.881425171 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.881251781 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.881645952 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.881497024 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.882699577 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.882349636 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.882491071 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.88232072 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.881987954 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.881713294 seconds)
  done (took 31.921485351 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.88127157 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.882396164 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.881596787 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.882090977 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.881731094 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.881514556 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.882505061 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.890835328 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.882334766 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.882747139 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.881961387 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.883405749 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.883106734 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.883605746 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.882832847 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.882111028 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.884511667 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.88318585 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.882691678 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.8829624 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.882348325 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.883403816 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.88331135 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.886059523 seconds)
  done (took 47.008811007 seconds)
done (took 104.024042508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.468419463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.86331037 seconds)
  done (took 9.14702798 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.887215187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.883507704 seconds)
  done (took 5.683543669 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.883689152 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.883957158 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.882683308 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.883297784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.883902545 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.884025627 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.883155167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.883701017 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.883904603 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.883975763 seconds)
  done (took 20.651764628 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.883528114 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.883871382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.884598642 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.884540694 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.883858414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.883884882 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.883885282 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.883303755 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.884095879 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.884473312 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.884963827 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.07398702 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.884772183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.110681242 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.885413709 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.885089995 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.884783453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.884724542 seconds)
  done (took 36.150622687 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.884292111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.8846681 seconds)
  done (took 5.585517909 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.884667088 seconds)
    (2/7) benchmarking "second"...
    done (took 1.884566644 seconds)
    (3/7) benchmarking "month"...
    done (took 1.885023928 seconds)
    (4/7) benchmarking "year"...
    done (took 1.88532625 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.885415618 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.885176222 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.887093294 seconds)
  done (took 15.013643671 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.343343088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.055895753 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.103759365 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.355038155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.499201233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.790764909 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.494135741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.789522715 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.685477199 seconds)
  done (took 23.934425996 seconds)
done (took 117.981923782 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.589008298 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.928205609 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.555892953 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.990797164 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.972207507 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.223132004 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.902526785 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.470760051 seconds)
done (took 44.474549427 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.993599134 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.883597738 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.924246904 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.925195909 seconds)
  done (took 22.552128908 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.893758753 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.549332263 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.916601109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.910864166 seconds)
  done (took 23.172766278 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.393655846 seconds)
    (2/2) benchmarking "read"...
    done (took 2.422159798 seconds)
  done (took 6.647471204 seconds)
done (took 61.186904619 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.887430988 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.887465866 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.887471585 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.887762809 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.887011617 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.886612824 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.887121821 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.88743199 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.887096353 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.887230894 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.887518629 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887503057 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88743547 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88718912 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.88750935 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887564231 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.888124761 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.888078612 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887691399 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88787843 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.887908419 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887695988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.887931794 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.888236513 seconds)
  done (took 47.120284239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.96242312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.945808721 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.965322916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.959401216 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.976901974 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.959669262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.95935568 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.927350539 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.959426271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.936177535 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.925191777 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.974559535 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.928090021 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.974389532 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927839537 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.974578714 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.981253659 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942536058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.929575413 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.979151159 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.96040746 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.927870089 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.975250856 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.92941411 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.005816229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.963165646 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.941444408 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.946129256 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.922838392 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.970047413 seconds)
  done (took 60.452794151 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.924630516 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.890532981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.890130255 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.975830754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.890493864 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.889455226 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.890137814 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.889729056 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.890312135 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.890298824 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.890446317 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.890244117 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.890890187 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.89016456 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.890379957 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.890950917 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.920494357 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.065613844 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.890972485 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.891029254 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.937469212 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.890923272 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.891247704 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.890501288 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.89040232 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.891306788 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.890666918 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.890350857 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.891089267 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.891020001 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.890978141 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.943555747 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.924465142 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.891594315 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.0039145 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.949394718 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.892033247 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 3.435683158 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.984361454 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.927632846 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.891858737 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.89179023 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.891894473 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.891898669 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.959047658 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.892622579 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.891483383 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.892254503 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.892716971 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.892456001 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.89221468 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.892029287 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.907792014 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.892434696 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.892563831 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.892815302 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.892692018 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.893004131 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.892986861 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.892596639 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.893072402 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.966844643 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.893534046 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.893007265 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.267652452 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.893040588 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.961419334 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.893135847 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.892126747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.107588405 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.892851765 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.102938462 seconds)
  done (took 143.341426092 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.892713404 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.893720847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.97318303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.970149269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893362677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.893415672 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8934091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893857738 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.566336681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.893545031 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893693981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.893423883 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.560405008 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893563473 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.893620465 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.973795269 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.893533726 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.894265128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.894509071 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.894133368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894046719 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894360448 seconds)
  done (took 45.06266394 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.930081944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.909642621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.933485428 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.90986965 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.909175546 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.910352326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.930175818 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.909554192 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.936616478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.936108433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.94059829 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.930770305 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.909956341 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.936406173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.936946418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.98378361 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.936442922 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.986754128 seconds)
  done (took 36.602862895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.071625296 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.060950384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.976379374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.936628595 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.146571853 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.118651776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.998503229 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.064961686 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.937442786 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.061424502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.067099035 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.937717638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.118814457 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.937721814 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.937108881 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.147463402 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.976474875 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.938085967 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.004616059 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.999306337 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.072124356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.004899126 seconds)
  done (took 46.342499741 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.931936756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.946734417 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.964085266 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.965306231 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.897200435 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896351986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.952226546 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.938209386 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.911317183 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.936195386 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.932662593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.896876828 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.981331416 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.951181348 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.981353167 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.932975714 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.948181844 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.951862788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.938397208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.896468718 seconds)
  done (took 40.579087203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.898484721 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898466198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.898390418 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897973015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898324954 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.89842089 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.898359628 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.898312184 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89858092 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.136893024 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.898852117 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.898488459 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898745824 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.898599386 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.898542398 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899510926 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89855387 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89872082 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.897986021 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898681413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.137251427 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.899069551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899039702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.899168178 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.899199595 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.899796925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89904113 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.899235423 seconds)
  done (took 55.46984881 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.956770313 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.937736236 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.943067161 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.016609964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.016541379 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.935124392 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.016650279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.017200822 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.936910251 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.934974308 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.984402265 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.937285546 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.936664832 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.934908198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.937221362 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.984953585 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.946765868 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.016617859 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.974561979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.941809673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.98429761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.935493804 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.985194417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.942333887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.937969363 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.985312167 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.974707379 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.0599956 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.960599535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.938788206 seconds)
  done (took 60.842850089 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.920531767 seconds)
    (2/2) benchmarking "in"...
    done (took 1.923700704 seconds)
  done (took 5.675142767 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.899263153 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.003899169 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.900364092 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.094468009 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.063862255 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.074720877 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.060972504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.990197375 seconds)
  done (took 17.919071022 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.900446495 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 5.348947715 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.096354239 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.901816137 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.901309287 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.469235412 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.835987085 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.82115066 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.713058842 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.87870979 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 3.209504875 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 3.579659673 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.968273856 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 3.241279827 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.014888264 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.730085338 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 4.138385344 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.457087919 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.943695516 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.017364424 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.640655443 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.988504144 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.902063619 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.903359295 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.902518735 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.8511528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.941350663 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 3.311966657 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.050532571 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.018218725 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.694510886 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.968337188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.903804617 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.18587741 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.011829094 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.903551621 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 4.06642691 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.001948533 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.904547121 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.903206738 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.700199694 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 5.590222565 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 3.155938949 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 4.122933238 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.982885754 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.903923201 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.903828969 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.905948097 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 3.150243094 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 3.688772258 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.97082062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.901846637 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.038750757 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.904604556 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 5.470297307 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.043727465 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.912141371 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.880709163 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 6.674377532 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 4.128181512 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 3.319513388 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 5.156311403 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 4.066256683 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.043812328 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.924425758 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.187296846 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.827056113 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.70804174 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.618086853 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.053578293 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.57132479 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.954137275 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.905547823 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.905172705 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.890023325 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.284167619 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.939412047 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.931380086 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.957907193 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.910088586 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.161117184 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.014721124 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.797654761 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.056954406 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.173363871 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 6.024405386 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.485237021 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 2.369870198 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 4.822783133 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.941131584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 3.252476052 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 5.785080296 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 3.235810848 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.182058091 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 4.079818884 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 3.299559302 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.089263177 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 2.058307922 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.939310551 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 4.558667061 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.25659714 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 2.126865755 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.442386749 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 4.203417058 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.114264564 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 2.054663224 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 3.764778287 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.202367778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 4.183205996 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.09296458 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 2.07695921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.063011144 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.727405293 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 3.284006525 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.10997585 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.584205209 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 4.15507624 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.536040244 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 5.457953626 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 3.244673741 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 4.428055183 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 6.062862337 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.345327113 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.996086687 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.14197078 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 4.447193192 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 4.137325463 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 4.76665797 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 4.380280236 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.171102966 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.948162499 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.103008382 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 2.054731417 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 5.225390972 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.143109281 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 2.082750215 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 2.086524045 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 2.066762557 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 2.066813252 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 2.087809463 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 3.248632684 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 4.459654024 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.755556181 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.213492536 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 3.300327793 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.181312503 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.945704383 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 4.258621613 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 3.761738883 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.221340485 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.075466973 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.69986914 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 5.510683348 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 3.778172463 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.19224951 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.07883711 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.066306222 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.887418169 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.064848922 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.149279137 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.070852867 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.733803702 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 3.293502316 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.123691566 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.069397309 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 3.53484884 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.248528961 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.072506575 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 4.209681581 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.872735918 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.816298917 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.243205636 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 3.381921633 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.184479189 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.086935958 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.083228144 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.094397044 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.859123254 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 3.743903162 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 7.37452267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 3.716544699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.971163577 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.158297997 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 4.239880777 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.144874881 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 4.390666515 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 3.309576842 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.203873663 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.081860888 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.064987232 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 2.072002426 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 3.608780489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 5.099522743 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 6.078529077 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 5.090593063 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 3.133793893 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 4.17399668 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 3.289337333 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.964603932 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.075483266 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.790519436 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 5.031773854 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.17010462 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.076022152 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.0808224 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 3.226771117 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 3.272083466 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.199973182 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 4.534313515 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.23038511 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.09407431 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 3.779103218 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.196663031 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 4.775612208 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.157946414 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.907393465 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 4.165975368 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.202549277 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 4.198606037 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 5.767286851 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.186956609 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.08822448 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 5.828067584 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.195908317 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.110066456 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 4.16466786 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 4.634313349 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 3.023146507 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.8138079 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.608582059 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 4.164073832 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 3.638100039 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 3.324905382 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.230235296 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.906488706 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.158621928 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 3.398654661 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 4.241021671 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 5.706856194 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.080131027 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.860385311 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.079249389 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.710885854 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.214798818 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.096641668 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.210390072 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 4.573853812 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.174833703 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.094228229 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 4.272838921 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.177745254 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 3.768887355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.193039337 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 3.192877855 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 5.398356197 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.983390391 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.173939186 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.386903337 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 4.235078579 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 4.039236194 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 4.025104428 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 3.441898895 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 5.006819614 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 3.111626819 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 3.28790365 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.911149483 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.296596264 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 4.422913377 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.229367228 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.082728249 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.090367197 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 5.245706318 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.149985793 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.10221972 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 4.416340922 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 4.047145816 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 3.174036907 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 3.278855038 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.120315757 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.093942212 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.346661645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.217183783 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 5.39283703 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.5554816 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 3.646729519 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.899621884 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.201305965 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.77286497 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.194253752 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.822498739 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 3.299705791 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.139309904 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 3.793143647 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.189947129 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 4.402622009 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.218975766 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 3.189554718 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.816018779 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.195816207 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 3.410265003 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 4.226350971 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.206997223 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.872619893 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 3.633121273 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 3.355705526 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 5.515027824 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.111878163 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 3.654371665 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 7.237815847 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 3.648312986 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 4.184710776 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.862776047 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 5.292415094 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.118763196 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.100662535 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.105514801 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 3.674388361 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 4.16412868 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.131251436 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.867152345 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.674764024 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 4.125220277 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.838959646 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 3.30702116 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.137901594 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.092301346 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.086011588 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 3.04307573 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 5.312043974 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 5.454653004 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.228174581 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.097829279 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.093178211 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 3.042271339 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 5.440671124 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.877903674 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 4.140403041 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 4.052608772 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.229504189 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.096165607 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.095662163 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.094961334 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.108801629 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.093948365 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.086677544 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.521302601 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.237946711 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.720938866 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 3.293295408 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.136330335 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 4.300734637 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.129268918 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.119869036 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 5.297326619 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.152821592 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 3.193605165 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.154716498 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.08972199 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 3.508381075 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.218057405 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 3.115299274 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 5.510795492 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 4.360656566 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 3.314769672 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 5.648788795 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.116163364 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 3.539930048 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.418711968 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.978909059 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.127013218 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 3.027197964 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 3.291447358 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.950838598 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 3.108068036 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.68835438 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 3.724197398 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 4.200500074 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 4.423673876 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.985642162 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 3.512715606 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 6.357696231 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.147213611 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.095731968 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.08686617 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.16982212 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 3.323728364 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.130198215 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 5.377417396 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 3.274212092 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 3.131487484 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 5.508634127 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.176107836 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 5.359633583 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.093969175 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.102731197 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.089058725 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.105735172 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 4.551211717 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.991208654 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.167426496 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.074242093 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 3.03574373 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 5.147788832 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.988258534 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.755608628 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 6.123173898 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.220801755 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.086123754 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 3.273844458 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.152329065 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.977207581 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.102337822 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.886902424 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 3.422392335 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.140462161 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 5.327362041 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 3.506901201 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 5.943670246 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.47829165 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.194304243 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.090078642 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 4.482960065 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 3.088693739 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.24438531 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 4.001926414 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 4.40749223 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.696039432 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 5.664938934 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 6.497221359 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.197774413 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 3.016603307 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.778629278 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 4.201256278 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.149249061 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.936345366 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.236050551 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 5.424251461 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 5.054397633 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 3.331832029 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.23253342 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.773705203 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 4.953883268 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.226836966 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 3.68545644 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.24239297 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.112379769 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.769696297 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 3.165443007 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 5.429376208 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.19760516 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.098731743 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.124871044 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 3.775764355 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 3.678329154 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 5.292503478 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.14908916 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.103740619 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 5.953616192 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.840023854 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 3.292305758 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.124634589 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.107584003 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 5.612863578 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.117407285 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.092054154 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 3.519609929 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 3.698621258 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.235622113 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 3.636816882 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 5.32501819 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.224504615 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 4.380295577 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 5.47469399 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 3.289953105 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.144806878 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.098591142 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.105095878 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.091864357 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.528699022 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.261608889 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.12555476 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 3.697400769 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.226208809 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 3.900429006 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 4.001876106 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.361912012 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.174571932 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 3.507387396 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.243962836 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 3.61965839 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 5.125260439 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 3.302890446 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 3.440798674 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 4.275219594 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.233758377 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 4.831816488 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.208732943 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.114416548 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 4.054536559 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 5.432017528 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 4.447778171 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.511454476 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 5.407745823 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.195780122 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.797716516 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.190592689 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 5.779856411 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.306834841 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.112712714 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 3.625509521 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 6.381005986 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 4.554335649 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.234290986 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 4.581604288 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.214341978 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 3.476592251 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 5.484857643 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.184980884 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.099863971 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.111555449 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.132146744 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 3.144261932 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 4.792396272 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 6.126886729 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 4.568558027 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.233501614 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.983171964 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 6.774526789 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.83627398 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.456452301 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 6.431886911 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 5.589048065 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.119616734 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 3.048459069 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 5.481105576 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.162410285 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 3.270610079 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.188567458 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 4.917880913 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.152747711 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.1099012 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.539568173 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.259694992 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.104708144 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.098093382 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 3.052952568 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 6.034034918 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.197105592 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 4.30527124 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.187726338 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.107771184 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 3.694740563 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 3.374989941 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.134063475 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.108728348 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.104076352 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.98267455 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.19736166 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.109898359 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 4.501257771 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.241967955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 4.407863832 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.959705136 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 3.635267857 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.210186474 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.123925764 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.105264005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 3.849505977 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 5.597636005 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.307426374 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.499677665 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 4.255909956 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 3.691792274 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 4.191084145 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.597777034 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 3.618140303 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.112109379 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.222901445 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.106852339 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 3.192388057 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 6.024367481 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 4.14585095 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.888365745 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 6.701714052 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.164250103 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 4.920657656 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 4.083489428 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.156783425 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 5.310805242 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.15579555 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.112629673 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.102605193 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.116444164 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 3.613436779 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 4.205899951 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.160385897 seconds)
  done (took 2016.928936229 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.374250964 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.112872898 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.099616789 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.096424418 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.106790742 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.109803871 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.107789779 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.108592005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.105021976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.10431382 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.105039834 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.118940508 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.12280228 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.385085124 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.119838392 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.087621907 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.10183164 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.117120587 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.115935556 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.129904838 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.095414272 seconds)
  done (took 46.869093642 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.10577752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.110220247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.116268899 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.105290668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.11629329 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.106227269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.118136628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.095946115 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.087987691 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.110523672 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.1299121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.099274835 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.119580323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.103245593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.109291913 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.1136707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.125222431 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.109986301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.105933256 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.105907056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.114935722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.109931932 seconds)
  done (took 48.456476614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.108196076 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.106878679 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.835944688 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.221343775 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.12733264 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.095083483 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.121347142 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 3.310626389 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 3.132369888 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 3.033714581 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.663808949 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 4.252280919 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.132591426 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 3.287206192 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.203403131 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.107783711 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.224222032 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.111253971 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.126174797 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.105212251 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.108736634 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 4.34732875 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.246635294 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.108527003 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.947606356 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.235050514 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.114864043 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.112623498 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.113154564 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 3.123472832 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 3.311458922 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.155666623 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.983287568 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.865236236 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 3.420578247 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 3.047684668 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 3.325153307 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.153042511 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.107320126 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.101551997 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 3.344661895 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 4.00084908 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.135361081 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.098220556 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 4.41400421 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.213413558 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.108320403 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 3.504560761 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 4.233828915 seconds)
  done (took 139.333245808 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.143526666 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.234456799 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.152968371 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.102470686 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.226772487 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.109608556 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.157520168 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.097247063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.101095913 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.090377443 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.2344639 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.259237781 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.083060602 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.103037475 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.19024843 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.11169046 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.094420157 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.088956643 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.112609344 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.10649747 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.095757241 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.150562075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.230485664 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.247263586 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.107089764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.100290138 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.074352285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.070864107 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.221028139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.09354414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.083217952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.079105917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.214258913 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.209222368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.061547193 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.079640978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.214404644 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.074805308 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.069971923 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.085886291 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.057001648 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.068147088 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.128442774 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.214418252 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.060673831 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.182515726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.06778707 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.068753706 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.194572438 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.070635777 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.075655911 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.205722718 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.060451384 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.068333464 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.047278926 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.150665516 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.025303602 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.014850929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.033567929 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.154370635 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.004667533 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.025336823 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.147055181 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.005594945 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.005102568 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.171909544 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.107018083 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.000539275 seconds)
  done (took 145.802486232 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.984314699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.120520212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.153819608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.160357106 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.123157574 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.086076001 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.113642965 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.198911898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.19565934 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.203031034 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.202560395 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.178244969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.194728354 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.196495605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.239885521 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.217323863 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.218966818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.224508474 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.242657727 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.240194656 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.220385455 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.273947776 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.233563634 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.274747323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.454510982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.169159488 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.205369826 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.218834468 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.263134002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.217210547 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.444710592 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.196267499 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.202723882 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.243187926 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.422975476 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.206450778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.054624121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.218142156 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.229383933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.231889832 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.204067556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.27991186 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.231108793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.203224606 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.220616782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.233652497 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.200458969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.367559765 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.107834644 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.106976221 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.115931576 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.127491546 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.083668531 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.068318028 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.125991359 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.077099377 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.18724356 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.130578091 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.161199237 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.276350751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.277813768 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.145640712 seconds)
  done (took 138.34760317 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.963272614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.950163552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.031681888 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.950647634 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.950308449 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.031660363 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.950471707 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.987578975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.008669038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.952751884 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.992458994 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.33927124 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 3.665757914 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.240701712 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.29426704 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 3.516712363 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.398135888 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.376249719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.292699173 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.330065984 seconds)
  done (took 47.11373049 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.102599925 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.027695945 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.9511634 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.109072092 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.990681714 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.083020363 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.951425463 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.950576181 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.950765464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.950073962 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.950741813 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.950276639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.9508243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.108481748 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.956253343 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.149786818 seconds)
  done (took 34.165306794 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.952289131 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.955583544 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.011220327 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.134250377 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.309560849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.188726873 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.337388537 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.274231374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.256969444 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.538963291 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.057482904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.957603578 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.952510262 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.991990035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.95140899 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.952172135 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.951954433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.952111413 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.952996292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.952734613 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.522683333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.952403154 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.951591294 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.952417232 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.952558167 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.522593907 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.953634449 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.018237365 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.985419914 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.073573741 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.358967926 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.807795481 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.321683919 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.316560321 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.283035903 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.191702339 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.090228267 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.068534379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.968661813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.987989197 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.958799386 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.953465225 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.953244571 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.95349158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.953526716 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.953624866 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.952594415 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.414469743 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.953291892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.952373051 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.9536854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.954148427 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.953900746 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.430133831 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.953836235 seconds)
  done (took 117.060114971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.995289204 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.025459575 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.013669036 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.965821593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.00888892 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.997732387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.060062266 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.084015659 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.183772702 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.065295902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.034670877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.969386227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.993719833 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.008137712 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.019607714 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.991922962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.955517836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.023570337 seconds)
  done (took 38.279990019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.95434928 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.954938647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.955374672 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.95472658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.955086155 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.954514697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.954862683 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.955108812 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.955377796 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.954967495 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.955542821 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.954805268 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.955430968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.955561542 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.954687418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.95497629 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.954896085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.955027598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.955522852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.955125918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.956160908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.955122751 seconds)
  done (took 44.896689919 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.572052926 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.556165404 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.714614766 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 3.120366583 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.196837821 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.763156767 seconds)
  done (took 17.80756034 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.04262663 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.0184707 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.997647323 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.003490127 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.020710821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.033397039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.033152292 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.040231414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.018597594 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.256511032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.039660239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.022488391 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.016006206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.086523654 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.019491372 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.022330527 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.04532884 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.039291202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.00176453 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.03445183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.046765289 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023495134 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.047435673 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.034712107 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.045269681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.086307135 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.016862235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.258251699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.03510668 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.02327613 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.017154104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.049235895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.022595275 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.24907105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.007818155 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.019876149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.041964853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.034622791 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.017383629 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.082405344 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.999322468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.020613597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.021242806 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.04724203 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.026043122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.047250197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.044275892 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.051715578 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.048939902 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.254932263 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.026618296 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.081667593 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.024280673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.026759289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.023940924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.247726126 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.25555526 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.081748177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.02161884 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.258430246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.084933732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.020857937 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.082037909 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.260456363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.024216285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.084445002 seconds)
  done (took 138.005908016 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.083418945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.004908923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.050637885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.26219096 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.083223416 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.046040351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.045534814 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.050973319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.051201375 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.022048866 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.050510618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.051169153 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.08310715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.089530877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.052071113 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.043131689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.045843948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.081721835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.023347905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.250959648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.044508373 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.084379631 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.08481426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.084676152 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.250976217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.028859276 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.055434105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.043465136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.043621386 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.044129972 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.055734691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.05256763 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.08544735 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.007755844 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.082854968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.052323379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.048250995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.055991299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.044460664 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.025795393 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.089747947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.04479787 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.044117013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.045403455 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.253491729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.052956169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.052800534 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.024238031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.046427794 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.023536291 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.253089492 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.252055648 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.264477887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.085795458 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.053299717 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053931619 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.04859488 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.054062883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.053467551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.029807563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.085855166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.045333104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.253645404 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.044824244 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.054137787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.085940511 seconds)
  done (took 139.033527863 seconds)
done (took 3673.330182895 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.087258623 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.144741266 seconds)
  done (took 16.122920337 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.966910472 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.967696081 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 2.11490562 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.967892333 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.967266035 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 7.022525646 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.970097275 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.971321834 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.967939281 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 2.054178646 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.968231511 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 2.099877863 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 2.063632789 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.968842092 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.972966821 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.972079015 seconds)
  done (took 53.920924423 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.972663634 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 3.501060723 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 4.017617003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.713777918 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.994964924 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.972094648 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 3.090252099 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 6.583235044 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.224761428 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.404257354 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.214623642 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.794092724 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.739380983 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 7.00647107 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.614384055 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.43479791 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.484961012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.560925334 seconds)
  done (took 76.217691445 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.977452397 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 2.070478935 seconds)
  done (took 10.952013259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.993550757 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.990298424 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.988171246 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.998401532 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.974523169 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.980455863 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.986833845 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.010259728 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.98335092 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.007421239 seconds)
  done (took 71.823708688 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.971861145 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 4.279575211 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.330431554 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 4.106457548 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 4.841196741 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.444132671 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.135520885 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.325627355 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.043045743 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.966926871 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 7.083865575 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.297218371 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.949640888 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 4.026498013 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.512169724 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 3.876965133 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 3.985163946 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.363695079 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.277919733 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 4.388475086 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 3.573383621 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 6.821590919 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.338176422 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.726245512 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.975135926 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 4.586248101 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 3.3727454 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.141415501 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.040497713 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.906941626 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 7.245573822 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.999481138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 6.788363133 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.099600168 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 5.361398096 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 3.640523547 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.675453123 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.184718457 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 3.470599215 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.375985987 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.380568466 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 4.814050859 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 7.072319964 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 4.783170638 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.160008635 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 4.200216954 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.838474565 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.210675947 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.065717734 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.134869886 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.577840758 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.142256314 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.149967126 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.131150876 seconds)
  done (took 208.097405025 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.968125234 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.428724242 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.135912205 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.970347022 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320781011 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.182334913 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.542719211 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.382416001 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.973585112 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.173245918 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132736247 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.09387855 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.972677414 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.971101556 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.973416116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.969495223 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142677067 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.38872941 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.978132327 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.969797424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.164123187 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.215009085 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.091830005 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.974249895 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.141646785 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.200552413 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.367304281 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.092216594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.394904141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.970101091 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.374029216 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.977073917 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.97064414 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.971766001 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329419839 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.297986277 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.370235606 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.973159658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.60963245 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.971456623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.570593342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171613932 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.301845878 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.107213197 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.212148257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18404943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642587692 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.970195084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.701008851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.137291002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.183112823 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.179636107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.247812633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.979508473 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.431239742 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.972081224 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.970762652 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.22976958 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.132262053 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.090670254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.974176776 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.972126706 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.972583514 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.206330944 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.974359041 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.078622491 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.974649504 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.974358348 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.082078322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.092440548 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.128645445 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.196156274 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.223256083 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.281431814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.929947224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17815666 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.365766703 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233677597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.976726994 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.972542446 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.387894539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.446626529 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122101979 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.213208871 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281145607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.265444274 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.478903982 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.972673946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.18465203 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.117212951 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.189801076 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.222380827 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.343547585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.816943428 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.973585716 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.979888563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.271991521 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117685731 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.978449234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.554060296 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.24805549 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.575852763 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.211944085 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.493491929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084286786 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.978597632 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.637475894 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.044378697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.192414661 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302878512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.048741336 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.121051419 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394818535 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.965686772 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.224229377 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.427730712 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.627461235 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.239673496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414802609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.298923297 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.52788063 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.072830313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.525635949 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.087157403 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.552788459 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.424738686 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.472243876 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.127277604 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292780325 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.217515762 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.336291594 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.202555481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.783815452 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.976332032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.276981441 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.038085257 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.407774376 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.532578463 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.256686471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.462568474 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.306614132 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370544933 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.285434068 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435044147 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.006720799 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.211778319 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231881677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.375834084 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.977795793 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.106345208 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.036452094 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.946860782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.207590593 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.207046856 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.979481315 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.983841006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.976516662 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.130852091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.208985881 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.700491287 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.356985796 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.372046977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.97590339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.398483489 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17204988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.426967187 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.566911929 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.56312401 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.406330134 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.245011664 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.356666589 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.55437835 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.507785147 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.304569504 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.11717084 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.795113288 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.449621271 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.977875969 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.157526052 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.587141816 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.339582131 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187400929 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.981831784 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.360086959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.979232845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.22742926 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.513695013 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257753383 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.979270526 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.97908557 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.978642523 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.980284097 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.183968748 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.234038043 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.626499335 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.11779482 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.246430994 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196979809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.287842946 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.456508244 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.991996824 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.227322796 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.982150509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.37286363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.985509084 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 3.213753109 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236448245 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.983682706 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.185575454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323474092 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.04051322 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.396309632 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.982632155 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.980718336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.980402104 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.212059023 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.585611924 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.394794684 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.584709806 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.771118164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.516857125 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.590329426 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.669235958 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.342777821 seconds)
  done (took 936.907925515 seconds)
done (took 1375.934520469 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.388711393 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.388263719 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 7.39059255 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.392130447 seconds)
  done (took 31.875223991 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 3.371726219 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 3.457590594 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.567251339 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.39772638 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 3.780348934 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.434134715 seconds)
  done (took 20.327292303 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 7.39449257 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 7.392894431 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 7.39361799 seconds)
  done (took 24.499072311 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 2.693892394 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 2.844113663 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 2.554133964 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 2.501838705 seconds)
  done (took 12.914513122 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.350608889 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.335185399 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.319897788 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.344992592 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.31857614 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.319071838 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.369073852 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.346014782 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.315281652 seconds)
  done (took 23.186401345 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.837962656 seconds)
done (took 121.96037496 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 2.594607688 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 2.614942601 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 7.312610058 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 2.588248273 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 2.456685301 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 2.677440106 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 2.431100198 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 2.335632068 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 2.617498603 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 2.729678924 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 2.823355461 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 3.457461902 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 3.858589546 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 2.715280873 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 2.532607244 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 2.331299832 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 2.329849659 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 2.364760709 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 4.119328207 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 2.489441069 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.740409392 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 2.441623533 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 7.311269383 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 2.337528214 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 3.181166773 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 2.460266671 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 2.611955586 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.320586714 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 4.90490286 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 2.33005284 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 2.416824829 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 2.802847789 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 3.527184717 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 2.665876203 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 2.402326884 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 3.216130653 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 2.749265202 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 7.328299906 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 2.587930839 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 2.703752908 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 2.60657425 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 2.445040154 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 7.463058233 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 2.471346913 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 2.695040639 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 2.335237916 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 3.339290059 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 2.480481651 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 3.980662673 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 2.467065957 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.7454751 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 2.321779076 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 2.964160094 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 2.383870608 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 2.406927305 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 7.390062173 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 3.24593734 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 3.766029462 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 2.46254095 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.652031548 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 2.29586633 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 7.231457524 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 3.12156191 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 2.160970833 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.225306371 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 4.56062909 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 2.602838602 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 2.221001989 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.555849469 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 2.168541184 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 2.145357945 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 2.152437048 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 2.87848317 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 2.284933166 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 7.060402065 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 7.113130468 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 2.271956232 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 3.169787369 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 7.071954235 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.99289072 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 4.673423392 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 7.152660065 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 2.12007874 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 2.295447776 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 2.14184174 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 3.39136313 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 2.489280335 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 2.375189513 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 2.444308801 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.995999815 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 8.614309377 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 9.112246309 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 8.588022904 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 7.145969071 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.99332214 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 8.717848864 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.597504719 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 2.456480946 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 2.122067088 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 2.529165902 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 2.00778081 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 2.002836921 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 3.507812958 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 2.303000238 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 2.790961626 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 2.018086038 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 2.154790021 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.988242993 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 2.249844793 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 8.305929357 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.0859266 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 2.509387305 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.998559415 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 2.044734021 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 2.495924722 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.991255884 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 2.332360827 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.409606237 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 3.113695155 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 7.001034088 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 2.2532301 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.992086868 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 2.109909772 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 3.552502995 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 2.370569466 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 2.211754624 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.991246535 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.647025668 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.99852667 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 2.192589962 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 7.000630387 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 2.535316138 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 2.496965549 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 2.010689852 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 2.257833656 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 2.116418337 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.989657117 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 2.333820847 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 2.041622952 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 2.210937626 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 2.339452631 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.313982691 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 2.146892665 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.989619446 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 2.336244004 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.99867428 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 2.237363137 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 2.338467733 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 2.156477506 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.30194722 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 2.079545033 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 2.00905859 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.912219958 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 2.420021428 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 2.650645762 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 2.530946849 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 2.249096079 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 2.143832593 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 2.50936534 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 2.233593746 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.825534889 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 2.149242547 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 2.044269542 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.999855521 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 2.004185575 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 2.051679636 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.991974215 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.997647154 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 2.258372226 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 3.295280209 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 2.487434863 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.826719329 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 7.005163199 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 2.279703963 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 2.145843926 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.834570295 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 2.536504356 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.996213962 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 2.260116511 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 2.434862889 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 3.249991147 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 2.020125641 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.995428675 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 7.02393729 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 2.731119825 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 2.024729669 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 2.266815309 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 3.65466445 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 3.459046253 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 2.437268904 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 3.28412714 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 2.031709235 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 2.311615994 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 2.201819203 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 2.304509023 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 2.218045903 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 2.428588581 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 2.138164954 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 3.349276374 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 3.077559209 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 2.321136412 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 7.002491887 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.46108388 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 3.319872833 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 2.437596891 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 2.35279143 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 2.241583722 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 2.164336938 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 2.309144558 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 7.002573571 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.070930567 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.919255783 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 2.304733426 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 2.021387051 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.066204278 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 8.901646445 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.56458794 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.940603022 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 2.109202561 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 3.450060698 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 2.160986413 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 3.16548575 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 3.459961436 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 2.010193176 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 2.322366507 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 2.154593443 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 3.162917077 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 2.258780072 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 2.028017516 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 2.130398637 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 2.223053991 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 2.163462288 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 2.232225488 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.928141831 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.424719738 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.087793577 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 4.139406988 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 7.031523071 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.939761881 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 2.019348101 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 2.006845404 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 2.258707214 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 2.170421637 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 2.322092866 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 3.185948239 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 2.163704171 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.996999813 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 2.149078606 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 2.409376753 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.769515356 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 3.550424749 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.965645643 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 2.016248437 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.995182296 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 2.405966048 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 2.374971471 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 2.065363299 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 2.129239297 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 2.536500143 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 2.018806028 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 2.157706722 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 7.007880184 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 7.005100446 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.898518401 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 2.11795051 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 2.237399811 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 2.475694842 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 7.002473025 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.654444846 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 3.120408837 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 2.437531858 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 2.481017382 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 2.040861257 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 2.126364506 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.00131465 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 6.431238388 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 2.379261496 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 2.02485896 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 2.196788512 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 2.36851988 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 2.112622528 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 2.134739621 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 7.001874573 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 2.029326084 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 3.635030899 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 3.351105808 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 2.483537393 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 2.025694057 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 2.406001542 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.006244344 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 3.739229451 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 2.01733566 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 2.08755953 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 2.339251489 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 2.168095813 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 2.418889948 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 7.009269821 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 2.125138143 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 2.26846892 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 2.021218332 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 7.132844201 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 2.134448743 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.092459172 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.897787299 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 4.060436473 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 3.126158057 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 3.007397292 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 2.241674311 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 7.17590753 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.739220433 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 2.176966721 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 2.122902793 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 2.61783671 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 2.481991289 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 7.007603967 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.224547115 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.998950602 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 2.334500994 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 2.017077718 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 2.009303552 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 2.15871404 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 2.082708419 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 7.017429447 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.818771946 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 2.248013124 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 2.50813324 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 3.111074879 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.917330043 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.011142312 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.610655218 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 2.154189001 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 2.311664941 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 7.00932103 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 2.01465237 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 2.146304329 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 5.641426734 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 3.181504643 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 2.035184273 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 2.208816933 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 7.001713726 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 2.551848716 seconds)
  done (took 1199.069087171 seconds)
done (took 1201.445932374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.192695137 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 3.378166679 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.589507953 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.865861141 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.807677641 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.648706664 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.570431542 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.24528659 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.083911891 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.564450182 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.946249912 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.807971344 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.101013386 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.123088956 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.095528542 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.131527427 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 3.245598854 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.245960896 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.124508425 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.807682724 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.560115732 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.811424508 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.440756818 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.334275504 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 3.403299017 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.127229412 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.296438315 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.480408333 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.501844523 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 3.048121333 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 3.229237908 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.436009639 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.89463961 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 3.291377023 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.149849545 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.090768145 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.87874503 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.104673717 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.196858809 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.090470108 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 3.380444101 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.134997102 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.723475656 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.864645351 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.786862983 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.42790883 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.849450327 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.111734165 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.133267301 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.44158865 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.288034527 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.198119586 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.479079853 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 3.010113379 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.961415591 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.924621827 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.50436367 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.820352084 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.739170205 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.419773202 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.621346524 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.115231163 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.426878013 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.291278144 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.134189034 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.296012726 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.49354673 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.248586234 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.447228827 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.676376517 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.260852379 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.237137151 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 3.167674377 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 3.350528613 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.375758994 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.966857483 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.791941942 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.856596021 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.832645085 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.156146341 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.896507322 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.959129753 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.963913035 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.087321776 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.195903636 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.784623494 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.827616047 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.897412888 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.136006843 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.416267802 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.962985153 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.589853698 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.480542417 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.212168841 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.196125617 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.701485898 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.856791641 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.19784457 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.990192605 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.415056505 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.84024092 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.211411777 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 3.045950863 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.099812907 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.113861096 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.200246196 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.209494299 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.434698129 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.235390208 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 3.175319498 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 3.380941942 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.150434228 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.235800718 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.127521225 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.087649528 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.789672006 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.288408074 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.865933098 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.196487459 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.673088517 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 3.306727397 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.101330384 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 3.385687387 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.306650107 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.197209116 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.107556635 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.114814028 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.891825633 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.114975015 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.117091179 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 3.202569267 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.465563342 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.425446582 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.955880795 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.237504684 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.689404924 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.24916314 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.237046548 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.087618836 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.932428975 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.107420884 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.974343138 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.310137798 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 3.387038162 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.25096629 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.307810242 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.138518361 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 3.307472729 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.19824974 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.129902314 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.237348867 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 3.143942164 seconds)
done (took 388.584893922 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.358598362 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.382011671 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.284579571 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.291932694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.374133655 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.375382067 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.073908828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.439482263 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.119866201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.42014807 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.251203334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.155389395 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.438794085 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.208285665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.362294227 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.249350776 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.117382186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.265628871 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.455280806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.359762324 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.029935901 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.252159215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.159987327 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.423859015 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.00967133 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.017221943 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.360293629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.136908259 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.270535044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.018968743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.039512439 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.27205612 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.360204983 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.144126877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.434128578 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 3.006293425 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.375310237 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.097991401 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.351022191 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.34559433 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.289899486 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 4.811086852 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.021197961 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.04247292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.167148462 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.368080749 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.077464159 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.268099693 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.011017317 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.008277614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.267404646 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.075977233 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.167219149 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.337432139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.215872571 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.139661027 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.482267083 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.50371949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.361046643 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.324943403 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.357073883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.426905547 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.422971455 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.19686138 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.037547457 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.291540384 seconds)
  done (took 186.700401517 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.435184187 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.304179596 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.446589392 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 3.381415156 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.564912955 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.408663511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 3.521148203 seconds)
  done (took 21.000592182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 3.080746362 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.056879039 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.299529997 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.249731274 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.063995768 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.184806955 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.144919825 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.037045236 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.277656825 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.101309052 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.372656586 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.249811238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.986074731 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.020115881 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.145378533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.330778759 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 3.028775197 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.128324071 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.120970963 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.317057415 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.040788063 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.019089437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.328876578 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.148595432 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.064900422 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.10264807 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.054789792 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 3.027398715 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.099504097 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.039636215 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.069842183 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.170534809 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.058890051 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.006615677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.081363656 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.378294148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.066987228 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.109883876 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.20049533 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.01655125 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.040197704 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.063911623 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.193359889 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.101053121 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.044235332 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.246821669 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.04588595 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.071412967 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.04389496 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.056919899 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.330408263 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.065930585 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.122022326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 3.019549211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.267271287 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.020382327 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.129598978 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.05227349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.059165552 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.115133961 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.060438797 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.315294653 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.303081756 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.0468999 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.301536225 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.35120781 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.059886708 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.04114248 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.040817023 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.265149968 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.054768557 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.275974137 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.06442728 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.107293822 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.109277626 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.196097666 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.248368139 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.847910151 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.817673636 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.978958456 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 3.026339264 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.047685878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 3.369072637 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.995765733 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.980895904 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.047629897 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.112735683 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.736918279 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.966368006 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.062090904 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.373448968 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.047987819 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.121998015 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.11243247 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.088578564 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.125078686 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.283045325 seconds)
  done (took 233.470343594 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 3.340260434 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 4.643254662 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.261933144 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 3.268004062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 3.392818674 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 3.482541941 seconds)
  done (took 22.330849782 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 3.416372634 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.92391209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.114960545 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.077632644 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.117491033 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.060257495 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.058727728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 3.260814373 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 3.277016511 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.104817353 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.060085757 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.079491892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.068309557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.204096722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.057954098 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.061857417 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.057391097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.083901184 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.068368812 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.127676644 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.218036282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.116979668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.127156241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.987978015 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 3.184502062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.102442528 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 3.045171162 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.065453283 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.066812937 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 3.468173608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.258635537 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.062601652 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.954869002 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 4.524493858 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.886089073 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 3.027418415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.2700419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.115735964 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.117443688 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.059133735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.080511528 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.128490576 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.083099591 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.081441734 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 3.435445596 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 4.013813926 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 3.210985554 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.361852862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.059196104 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.086254101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.081538629 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.086302171 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.062967695 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.081023312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 4.827955342 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 3.470804025 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 3.108883312 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.0990011 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.119932782 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 3.008192977 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 3.207188528 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.095519499 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.437232781 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 3.078855456 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 3.051805234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.082218861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 3.012766654 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 3.264565933 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.16543696 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.081359492 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.082063569 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.084203437 seconds)
  done (took 185.108816275 seconds)
done (took 650.547823012 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.4213417 seconds)
  done (took 9.367396083 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.196680574 seconds)
  done (took 9.292515055 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.395323227 seconds)
  done (took 14.354412636 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.046530468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.053316505 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.03182149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.040135756 seconds)
  done (took 30.136870366 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.154464939 seconds)
  done (took 9.105326144 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.041476019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.022679944 seconds)
  done (took 16.096652491 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.122377412 seconds)
  done (took 9.080735312 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.281634189 seconds)
  done (took 9.248452046 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.040537716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.054242965 seconds)
  done (took 16.078344362 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.023479119 seconds)
  done (took 8.971234719 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.387456492 seconds)
  done (took 10.421880543 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.037966297 seconds)
  done (took 9.017809605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.061418391 seconds)
  done (took 9.011430257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.747477022 seconds)
  done (took 9.696197067 seconds)
done (took 171.826951453 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.037526866 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.023511213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.023892124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.023997844 seconds)
  done (took 30.056910746 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.347047851 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.345926949 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.322476036 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.39560939 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.290828246 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.290236735 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.344947513 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.344944666 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.290032402 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.400228924 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.345811895 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.496599446 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.398664342 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.323370946 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.32473121 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.424821247 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.407858046 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.346750354 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.290840636 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.323730204 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.497142988 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.497120202 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.779237965 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.769245914 seconds)
  done (took 59.550080033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.231434711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.386283248 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.190304587 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.343668821 seconds)
  done (took 11.101259691 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.054130427 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.397133833 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.379302652 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.338434549 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.378970818 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.191145903 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.379732165 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.231745571 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.20188134 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.202861061 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.625197636 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.174049444 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.187687964 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.439372002 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.191535076 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.025117793 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.02489374 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.202446104 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.39734917 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.22302442 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.27499572 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.380843335 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.380768943 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.380063728 seconds)
  done (took 56.613648108 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.788265784 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.953115999 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 3.38311263 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.930511733 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.726252141 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.814532551 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 3.303782636 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.523200223 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.290419127 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 3.267090146 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.750374189 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.712126347 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.168607966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.915361139 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.851115431 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.202693306 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.20180477 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.868567703 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.634669204 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 3.323883741 seconds)
  done (took 57.560952779 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.025324171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 7.025257229 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.353785296 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.190996436 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.025536294 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.02732167 seconds)
  done (took 34.600096382 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 4.087902869 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.167205898 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.35213642 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.32182765 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.187237465 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.16706763 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.643488653 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.238810786 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.820965729 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.793464163 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 3.65315206 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.486555489 seconds)
  done (took 33.877734927 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.048586321 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.027107389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.028592045 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.151525257 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.870515846 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.879486998 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.344137515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.026113461 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 3.139536436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.214998294 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.879892371 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.196457305 seconds)
  done (took 51.782914942 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.234381289 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.367809285 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.350169501 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.72993369 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.525891866 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.096266897 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.450190343 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.538546015 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.06530462 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.096562158 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.511927075 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.06259395 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.502993534 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.981182403 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.030538952 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.414850113 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.842409166 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.955771092 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.451380096 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.101590237 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.983683434 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.170635308 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.032506851 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.559236216 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349525656 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.052228557 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.267120832 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.354443431 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.106267505 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.457343839 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.314836812 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.900676691 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.619650567 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.487786488 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.638561351 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.197794028 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.12556288 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.154479841 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.583909203 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.322564295 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.169180206 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.268124605 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.073440578 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 3.331020118 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291036021 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.817107998 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.044902696 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.658246647 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.0433102 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.216236588 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.035264668 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.852379729 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.66000819 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.28020104 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.345736838 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.528955175 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.306359649 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.279325802 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.349116915 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.096271547 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.20931605 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.17780872 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.240333086 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.012062219 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.530787448 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.356468237 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 4.385614617 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.349342519 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.495837163 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.416574796 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.449524308 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.302638396 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.949064223 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.207870671 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.556235026 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.994071556 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.584716501 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.074208055 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.772284664 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.553312144 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.016999001 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.167272638 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.663392369 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.027290158 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.070879106 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.220060682 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.922648482 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.029335954 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.153639396 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.117669452 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.399779884 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.19796381 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198386807 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.330354525 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.761724894 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.038239934 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.896245213 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.546209733 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.227549066 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.831709742 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.325935544 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.3828582 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.327224821 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.773017874 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.561920312 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.29278277 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.986297417 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.948880236 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.514000199 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.68013596 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.32060814 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.049268025 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.563285494 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.62982944 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.181753801 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.862970306 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.316946204 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.406994876 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.598978466 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.160573341 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.064640668 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.491426695 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.398340145 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.170691198 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.46793737 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.097754608 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 3.334818557 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.092554588 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.882712834 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.656348774 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.331100141 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.603165221 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 3.389898225 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.196915477 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.039967063 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 3.224279232 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.55295224 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.161476836 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.453753933 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.529079367 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.67021308 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.574229769 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.054894503 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.952063585 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.523633193 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.334207515 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.458529467 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 4.212173296 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.22183351 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.142485396 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.069921238 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190039844 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.059082629 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.585430741 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.039882861 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.653963153 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.924441409 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.3352969 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.039338753 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.997742788 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.092673911 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.253640264 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.6252752 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.078276903 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.197637333 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.296324495 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.383238717 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.044052345 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.99490327 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.395140664 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.258758922 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.546883356 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.257654219 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.616751771 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.37136274 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.539066954 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.217350308 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.366720933 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.691452591 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.600836507 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.369871338 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.570714284 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.038478183 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.044892549 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.096679826 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.42833013 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.255753504 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.800559744 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.091525645 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.077318266 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.076070163 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.030641353 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.995482965 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.177795074 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.5048183 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.047458406 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.586716339 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.135383324 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.419174604 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.336149567 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.066012281 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.369343477 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.110142449 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.415671751 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.425403257 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.353743842 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.993704766 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.030805836 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 3.5501224 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 4.511650158 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.168244072 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.403594177 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.244772605 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.057909346 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.044875934 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.38537832 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.046063359 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.655407871 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.343350174 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.831572609 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.567706784 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.168739362 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.563659788 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.055050009 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.183104588 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.185548918 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.081361672 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.156735328 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.560047147 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.298332816 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.366338705 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.043426807 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.085336644 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.310354268 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.343013336 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.303694355 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.538286273 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.6457935 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.701652572 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.141352495 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.800467825 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.202801537 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.068577873 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.681278868 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 4.296915258 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.961625004 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213510718 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.728331616 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.161658414 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 7.191514065 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.334351551 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.044064669 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.510380244 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.599074771 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.044620128 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.058522251 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.148768814 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.044521255 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.394553623 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.930407789 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 3.257060312 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.21052831 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.311578617 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.269152117 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.214047094 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.427258124 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.53706396 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.381166329 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.996217617 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.192357983 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.13825161 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.426570248 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.04465088 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.315129759 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.694820452 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.667850619 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.742489543 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.568017232 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.257356363 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.645789684 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.490111934 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.281178201 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.392970285 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.967799666 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.668635609 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.004720446 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.175596977 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.996618682 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.807486585 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343132607 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.400759675 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.525581848 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.080258911 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.554544317 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.509218203 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.090801785 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.133576874 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.30741633 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.046524024 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.331715167 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.046475664 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.169994668 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.479360735 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.053408778 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.522803833 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.223912892 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.362806049 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.200395133 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.687827551 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.073797964 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 3.161967528 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.470087697 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.223100671 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.175975454 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.380343214 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.85026178 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.074576952 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.121789644 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.61830766 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.618263023 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.524170218 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.623686302 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.623271971 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.391848518 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.712969382 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.048266725 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.216623982 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.196710043 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.75007039 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.213620835 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.429787029 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.049823659 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.241927641 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.353152579 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.142026057 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.58220825 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.000891238 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.622788711 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.101315121 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.528099452 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.583572772 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.770899519 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.527687288 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.170026586 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.569048052 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.026813073 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 3.199986205 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.393155292 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.710889116 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.856556576 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.868440181 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.832458466 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.175968379 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.44688059 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.118044206 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.783885583 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.207506404 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.287018405 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217901725 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.1776385 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.9887404 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.57566779 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.800094252 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.315559005 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.205405609 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.220122841 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.158017122 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.274232826 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.562059647 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.352540367 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.715927104 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.526329839 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.271105254 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.002208219 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.05034508 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.30511358 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.200488678 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.134752036 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.410675556 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.465721128 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.100694653 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.092425423 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.185906635 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.561215325 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.754387926 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.743399512 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.373005714 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.56494017 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.628800353 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.051720967 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.716753023 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.221812461 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.39504132 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.440162821 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.965717891 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.424014256 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.433217715 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 3.194904239 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.003972424 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.226291958 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.058317031 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.124659483 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.720325831 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.336491386 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.102762589 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.874263479 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.637432869 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.095703966 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.078989559 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.270081635 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.330560049 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.249648566 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.053183494 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.577932306 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.440179667 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.218654516 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.005665126 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.803571233 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.004593976 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.221548135 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.134317196 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 3.230501612 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.869511455 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.113843939 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 3.671442257 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.569668876 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.219434397 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.245428263 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.005601063 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.811665929 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.031644713 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.68516056 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.748290317 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.293200501 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 3.544338985 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.22314272 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.037554998 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.370369181 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.17558697 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.357997484 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.215895719 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.525522365 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.461272665 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.403686666 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338834745 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.487823134 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.147592939 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290534828 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.005987384 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.054095939 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.125062114 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.416973252 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.419218656 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.054116195 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.578324064 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293962796 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.180452224 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.195067053 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.128199246 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.670678564 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.255613446 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.165826832 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.189605498 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 3.27242575 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.395033334 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.055051513 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.314633592 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.085343333 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.011775957 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.226057091 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.296969344 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.413950613 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.360606285 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.941415828 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.201664278 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.759324722 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.857526448 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.529200757 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.057177096 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.837233253 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.424995088 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.057132426 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.54101794 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.704734143 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.226628021 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.312117937 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.985169542 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.148445826 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.220732919 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 3.554163385 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.072491883 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.654386872 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.512649051 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.057975234 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.503113215 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.13036438 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.207648278 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.819358439 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.53593383 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.056809092 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.109341003 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.010271877 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.528914379 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.312550351 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.064325678 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.19248944 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.729511363 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.011073994 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.085290267 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.125563635 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.534650463 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.066104654 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.575148699 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.189618781 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.190460042 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.060978255 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.192398081 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.066815307 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.226537146 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.649766951 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.295183205 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.31999162 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.227920915 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.065005998 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.585701357 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.729597447 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.217816271 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.247750844 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.115259337 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.412062819 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.704244967 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.116312466 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.564987927 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.399528713 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 3.229746954 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.477974529 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309125059 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.090121122 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.252646914 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.059481688 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.396426902 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.191899762 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.599747845 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.313359805 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.26694798 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.293284636 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.098760596 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.626478151 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.544048209 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.944848353 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.102800124 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.362655213 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.060838537 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.871375509 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.673628919 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.235317253 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.183501655 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.255337907 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.695437487 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 4.418316613 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.163708114 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.066670309 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.268330345 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 3.627448662 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.040737963 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.106361667 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.912195752 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.212352628 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.385694782 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.011308163 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.231228681 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.049249114 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.01578903 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.539768702 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.120000255 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.643638725 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.255421774 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.591882699 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.016261932 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.14262041 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.191603935 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.526189026 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.13617691 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.753143596 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.226015241 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.060702523 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.061176986 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.39621377 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.139983961 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.305961082 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.507283929 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.281361573 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.357664194 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.924696469 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.105925658 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.025273193 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.360377331 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.878601672 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.612250103 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.146589254 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.5399912 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.120191502 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.03624623 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.589838496 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.299911119 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.784248715 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202611177 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.530127699 seconds)
  done (took 2521.043306764 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.103836831 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.119275768 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.129598884 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.137374503 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.204759084 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.210091411 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.12646994 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.078652334 seconds)
  done (took 59.0970344 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.062231443 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.030696797 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 6.516458056 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.219199591 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.065569988 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 6.237937037 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.377078791 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 6.602154066 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.238006123 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 6.061468218 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.130333189 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 7.272844978 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.093845069 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.065016883 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.738810803 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.526156619 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.090130252 seconds)
  done (took 108.327352638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.10397607 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.764579127 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.072134744 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.29904825 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.089939381 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.277804276 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.069095578 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.070740672 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.08988862 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.732006822 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.076861299 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.087990193 seconds)
  done (took 89.752250405 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.094139932 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.094386635 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.093247837 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.095623251 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.094618369 seconds)
  done (took 12.4628576 seconds)
done (took 3127.901349355 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.397347213 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.536784879 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.606526983 seconds)
  done (took 7.132309638 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.133765387 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.188318503 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.256726064 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.20761693 seconds)
  done (took 10.800895443 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.350979901 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.559753435 seconds)
  done (took 6.899856215 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.508841759 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.077817825 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.612111435 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.06895676 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.068700106 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.072954059 seconds)
  done (took 23.216824538 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.091429586 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.087954231 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.090054814 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.08175809 seconds)
  done (took 10.350127356 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.063864807 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.02272267 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.067058891 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 3.011491784 seconds)
  done (took 23.155211383 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.352843471 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.325968276 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.808399539 seconds)
  done (took 9.481861772 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.877235862 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.441992141 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.859213473 seconds)
  done (took 10.168427853 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.012061901 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.986017198 seconds)
  done (took 7.987845963 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.220129352 seconds)
  done (took 4.244029979 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.54163333 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.566772252 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.942167305 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.921639299 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.060219049 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.378335476 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.425950576 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.465360015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.73357518 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.575722772 seconds)
  done (took 28.602629265 seconds)
done (took 158.626118558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.900425051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.457017811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.239386431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.230812273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.165055399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.236602362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.133645893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.00237816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.63350206 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.629632209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.744158896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.164975312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.124155054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.450480065 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.128413529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.420309173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.475438261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.877541139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.662330556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.473970985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.144588691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.317415922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.436816952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.322993132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.48105818 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.19566296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.148727169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.426118011 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.91013157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.15327262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.204134769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.730206281 seconds)
  done (took 182.613067946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.070439495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.072725768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.072949604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.072728581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.921939576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.073499609 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.076843897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.071922712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.904193914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.85512783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.073539138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.885172948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.076310286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.072082565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.074241598 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.073089962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.991569529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.073464723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.074590551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.071475594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.07183306 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.668500045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.073972013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.687736389 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.979167137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.073421546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.072543038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.074364223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.073631979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.072688967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.073917789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.073465309 seconds)
  done (took 218.658151139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.070516614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.07348391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.076063719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.074714209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.07361788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.077259743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.074602738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.073496529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.07276738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.074640903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.07516773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.074980892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.07656885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.07458285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.076309418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.074772333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.076023761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.074832295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.079686005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.071094195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.074967352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.075087786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.074228716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.074686777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.075672739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.077734389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.075325538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.076528095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.076157456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.077679735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.078720678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.07604039 seconds)
  done (took 228.415771874 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.373326707 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.135812012 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 3.050762458 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.449921831 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 3.045485349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.094447244 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.429385454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.371114066 seconds)
  done (took 23.957653784 seconds)
done (took 655.65294851 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.925877853 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.9525236 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.242443994 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.292903743 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.68760618 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.37216987 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.28494701 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.561003825 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.889736653 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.540050393 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.574446086 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.299111892 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.914992398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.313975977 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.258937928 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.550881551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.479168905 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.775799914 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.281011887 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.9087319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.34236864 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.084357275 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.578896071 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.940267141 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.564875206 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.120401677 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.196635904 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.476115193 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.282847245 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.384437545 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.286234432 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.490665083 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.3257212 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.328041619 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.549940388 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.535544781 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.475989837 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 3.644977271 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.245011131 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.853145701 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89915192 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.736871312 seconds)
  done (took 117.445778917 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.101387511 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.11722994 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.264887553 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.195160712 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.717529251 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.202620474 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.289687872 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.293644375 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.183958009 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.306596417 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.321357381 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.784842486 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.312346126 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.731435679 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.317787593 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.367564852 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.171612891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.697562051 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.318009557 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.305140426 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.132888429 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.257095172 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.134237148 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.287725242 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.126874641 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.158776378 seconds)
  done (took 62.120195044 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.163146035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.267269815 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.434458155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.469464102 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.319267611 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 3.148495488 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.500275622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.26597641 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 4.11697811 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 4.029689802 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.248122168 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.26157409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.280074846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.66330024 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 5.758163611 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.242073796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.262001558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.235523903 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.277514166 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.359982648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 3.288881232 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.186195545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.838914489 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 4.327637507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.77353333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.269344131 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 3.546065211 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.708752653 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 5.654861523 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.248704037 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.400307408 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.514405757 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.507824058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.444415533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.29769661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.140675856 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.130708975 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.27071112 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 3.214155275 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.236501137 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.503789934 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.172019029 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.555201097 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.676695048 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.09790913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.332537224 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.568271307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.278556132 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.250960046 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 4.685518746 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.474560909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 5.093765187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.250812539 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.30949389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.238547362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 3.506164983 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.305345772 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.399251393 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 3.301967546 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 3.731984678 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.1846203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.501975199 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.283527267 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.102378698 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.402227765 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.331118088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 4.29709105 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.327833847 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.555770334 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 5.425719869 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.828489255 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.196133712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.143436017 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.215077988 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.278284561 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.604518843 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 5.149635107 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.322114841 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.533121968 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.511187539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 3.421769365 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.720666967 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 3.131655609 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 3.312083989 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.248654638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.130233054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.201597992 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.461439207 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.495499397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.581863964 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.674735481 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.414100329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 3.497521298 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.517849698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.40952776 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.495895854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.117626022 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.132750691 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.430377017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.694248018 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.199212421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 4.417921728 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.777213491 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.645600075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 3.46978955 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 3.123849257 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.514276455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.125501878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.538733669 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.108773029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 4.319784247 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 4.402586577 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 3.491565949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 3.475016106 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.112322594 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.643752082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.299358493 seconds)
  done (took 345.990066873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.118990565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.150619863 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.133949497 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.120272395 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.139091365 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.669025757 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.148040001 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.084575804 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.667918291 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.148813894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.08400135 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.132469737 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.143315523 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.137589393 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 4.63841857 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 4.678271616 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 4.094194158 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.410302538 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.398114857 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.376699422 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.802224286 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.09413781 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.085967949 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.089520624 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.378339976 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.450631727 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.114798398 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.111864729 seconds)
  done (took 182.625318832 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.135983031 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.620833037 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.162296614 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.22921864 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.463519476 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.162534823 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.432050701 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.228461147 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.207713414 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.147331591 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.137061186 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.393015714 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.484607963 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.652536416 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.25263621 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.772167682 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 3.176732976 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.66778429 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.570147049 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.526921342 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.714731201 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.764191871 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.678738446 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.81796587 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.612172045 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.656439615 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.915992668 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.547376174 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.656876411 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 3.379162604 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.587618538 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 3.470719229 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.643026636 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.54306374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.790676858 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.910476724 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 3.204472476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 3.186827205 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.582078555 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.255094492 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.257563075 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.584423367 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.611702814 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.336556385 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.293141076 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.648249454 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.197889485 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.296532507 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.348093306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.103443776 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.231751809 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.253412368 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.715829116 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 4.94445826 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.336019858 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.339671773 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.783780854 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.53178927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.367927116 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.754795564 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.380150567 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 3.240431263 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.602891119 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.532707182 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.421361621 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 3.030590657 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.246971675 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.558366606 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.518397239 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.152738298 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.575162978 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.353345435 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.118701275 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.284541138 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.292162089 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.758585906 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.829115392 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.280630953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.262485308 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.231255252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.303460613 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.110366021 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.446176281 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.205520901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.120164917 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.500458049 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.570575251 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.119500827 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.14635191 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.267611774 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.315495124 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.337344719 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.448122452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.213175468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.763571339 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.349148481 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.502324513 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.159452545 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.255516084 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.127721589 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 4.258401356 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.359502061 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.126772779 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.455854983 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.681204334 seconds)
  done (took 268.108328376 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.892535393 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.20098353 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.392055994 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.711278508 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.514277141 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.054897217 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.413183629 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.217707252 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.410496473 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.348417529 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.372543378 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.231409832 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 4.162326342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.908089586 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.19466731 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.325018848 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.206371919 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.737070551 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.519053543 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 4.973455745 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 3.607486295 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.935313277 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.477016835 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.511586489 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.63902495 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.663454966 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.795777921 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.272375056 seconds)
  done (took 78.714262787 seconds)
done (took 1057.000848008 seconds)
SAVING RESULT...
DONE!
