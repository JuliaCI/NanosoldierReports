cset: moving following pidspec: 2899068
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.234788953 seconds)
loading group "string"... done (took 0.282432219 seconds)
loading group "linalg"... done (took 3.65210298 seconds)
loading group "parallel"... done (took 0.025883422 seconds)
loading group "find"... done (took 1.347461383 seconds)
loading group "tuple"... done (took 0.973649055 seconds)
loading group "dates"... done (took 0.247930776 seconds)
loading group "micro"... done (took 0.063335777 seconds)
loading group "io"... done (took 1.35050393 seconds)
loading group "frontend"... done (took 0.012023509 seconds)
loading group "scalar"... done (took 4.837753925 seconds)
loading group "sparse"... done (took 3.353923536 seconds)
loading group "alloc"... done (took 0.015185447 seconds)
loading group "broadcast"... done (took 0.365873673 seconds)
loading group "union"... done (took 3.684315249 seconds)
loading group "simd"... done (took 2.840155543 seconds)
loading group "random"... done (took 3.105081541 seconds)
loading group "inference"... done (took 2.083029046 seconds)
loading group "problem"... done (took 1.217330121 seconds)
loading group "array"... done (took 4.704241118 seconds)
loading group "misc"... done (took 0.889575431 seconds)
loading group "sort"... done (took 0.356427995 seconds)
loading group "collection"... done (took 6.30486549 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.389242548 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.172054588 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112200878 seconds)
  done (took 0.946146469 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.129782047 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020909986 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020538449 seconds)
  done (took 0.827798775 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021044522 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081503738 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02239548 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022932478 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022631031 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022215174 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022250735 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022248406 seconds)
  done (took 0.871658021 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031297761 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019538677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020386942 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019872335 seconds)
  done (took 0.744651266 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.025833335 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.074617078 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019269827 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019224099 seconds)
  done (took 0.794299146 seconds)
done (took 5.3684454 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374891237 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.126037624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.032834047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.155299822 seconds)
  done (took 1.370084303 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020171525 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025229429 seconds)
  done (took 0.704715823 seconds)
done (took 2.72777628 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.378422943 seconds)
  done (took 4.026085456 seconds)
done (took 4.678851927 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169086317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020396461 seconds)
  done (took 0.84441098 seconds)
done (took 1.549340334 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.686844063 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.797152662 seconds)
    (2/2) benchmarking "String"...
    done (took 0.868672683 seconds)
  done (took 2.358556494 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.96340674 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.693449859 seconds)
    (3/3) benchmarking "different"...
    done (took 0.711801973 seconds)
  done (took 3.025487185 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.967396018 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.197026767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.944808033 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.654750754 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.665327007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.166257848 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.314482853 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.007947297 seconds)
  done (took 22.605968694 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.909948622 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.926312686 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.881623759 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.927500991 seconds)
  done (took 8.345316605 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.965265808 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.925635732 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.926166374 seconds)
    (4/4) benchmarking "different"...
    done (took 0.747794688 seconds)
  done (took 4.281081101 seconds)
done (took 48.998128795 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.653994004 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.754169442 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.687711696 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.345517183 seconds)
  done (took 16.094266443 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.88786771 seconds)
    (2/2) benchmarking "read"...
    done (took 1.011485784 seconds)
  done (took 2.566815474 seconds)
done (took 19.317775205 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.870717347 seconds)
  done (took 7.526613601 seconds)
done (took 8.181853573 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.904238114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.161189219 seconds)
  done (took 4.719948441 seconds)
done (took 5.379204195 seconds)
SAVING RESULT...
DONE!
