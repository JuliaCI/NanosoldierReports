cset: moving following pidspec: 2897394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.191258346 seconds)
loading group "string"... done (took 0.264737398 seconds)
loading group "linalg"... done (took 3.551549407 seconds)
loading group "parallel"... done (took 0.025935453 seconds)
loading group "find"... done (took 1.317641797 seconds)
loading group "tuple"... done (took 0.925425813 seconds)
loading group "dates"... done (took 0.245983017 seconds)
loading group "micro"... done (took 0.061903483 seconds)
loading group "io"... done (took 1.36348298 seconds)
loading group "frontend"... done (took 0.011764923 seconds)
loading group "scalar"... done (took 4.787526274 seconds)
loading group "sparse"... done (took 3.295868977 seconds)
loading group "alloc"... done (took 0.015050537 seconds)
loading group "broadcast"... done (took 0.365895272 seconds)
loading group "union"... done (took 3.540896565 seconds)
loading group "simd"... done (took 2.794860013 seconds)
loading group "random"... done (took 3.083623169 seconds)
loading group "inference"... done (took 2.0496051 seconds)
loading group "problem"... done (took 1.046264102 seconds)
loading group "array"... done (took 4.635266538 seconds)
loading group "misc"... done (took 0.855798974 seconds)
loading group "sort"... done (took 0.3515072 seconds)
loading group "collection"... done (took 6.012551378 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.368168934 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.170605681 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112016687 seconds)
  done (took 0.923924216 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.129142947 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020324988 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020419272 seconds)
  done (took 0.804404244 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020932941 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082183463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022035982 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022804091 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022653516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022019792 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021812847 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.02192159 seconds)
  done (took 0.851462187 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031138214 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019381331 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020372342 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019901237 seconds)
  done (took 0.724256122 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.020135112 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.038414441 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.018974254 seconds)
    (4/4) benchmarking "different"...
    done (took 0.018968406 seconds)
  done (took 0.728776788 seconds)
done (took 5.178315025 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380272161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128030503 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033819829 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14644373 seconds)
  done (took 1.348105237 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021891483 seconds)
    (2/2) benchmarking "read"...
    done (took 0.024919078 seconds)
  done (took 0.689159999 seconds)
done (took 2.669625408 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.323793846 seconds)
  done (took 3.953672823 seconds)
done (took 4.589457458 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15700344 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.019945836 seconds)
  done (took 0.812844968 seconds)
done (took 1.497350282 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.759591317 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.778766402 seconds)
    (2/2) benchmarking "String"...
    done (took 0.84833644 seconds)
  done (took 2.307665016 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.9436256 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.675630792 seconds)
    (3/3) benchmarking "different"...
    done (took 0.694569815 seconds)
  done (took 2.950061471 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.683887886 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.181394768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.926256989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.637104872 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.646634236 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.151239798 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.302320312 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.980924152 seconds)
  done (took 22.46384759 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.941804197 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.872502423 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.885992912 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.922987877 seconds)
  done (took 8.304089496 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.948794313 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.789383919 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.810160886 seconds)
    (4/4) benchmarking "different"...
    done (took 0.732133344 seconds)
  done (took 3.962318602 seconds)
done (took 48.140860183 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.63542864 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.728762878 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.667691718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.358431394 seconds)
  done (took 16.0251612 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.854205635 seconds)
    (2/2) benchmarking "read"...
    done (took 1.012528604 seconds)
  done (took 2.516450261 seconds)
done (took 19.177708124 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.820485264 seconds)
  done (took 7.455299998 seconds)
done (took 8.091146481 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.768811391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.030910778 seconds)
  done (took 4.434804335 seconds)
done (took 5.117726646 seconds)
SAVING RESULT...
DONE!
