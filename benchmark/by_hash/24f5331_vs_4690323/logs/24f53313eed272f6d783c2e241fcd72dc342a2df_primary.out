cset: moving following pidspec: 2744430
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237460349 seconds)
loading group "string"... done (took 0.275184538 seconds)
loading group "linalg"... done (took 3.612373249 seconds)
loading group "parallel"... done (took 0.026116074 seconds)
loading group "find"... done (took 1.341607158 seconds)
loading group "tuple"... done (took 0.967778935 seconds)
loading group "dates"... done (took 0.245582785 seconds)
loading group "micro"... done (took 0.060804901 seconds)
loading group "io"... done (took 1.347229995 seconds)
loading group "frontend"... done (took 0.011591577 seconds)
loading group "scalar"... done (took 4.786440897 seconds)
loading group "sparse"... done (took 3.355463944 seconds)
loading group "alloc"... done (took 0.01507041 seconds)
loading group "broadcast"... done (took 0.363463674 seconds)
loading group "union"... done (took 3.645475137 seconds)
loading group "simd"... done (took 2.829647506 seconds)
loading group "random"... done (took 3.099889879 seconds)
loading group "inference"... done (took 2.076868037 seconds)
loading group "problem"... done (took 1.218863649 seconds)
loading group "array"... done (took 4.645109196 seconds)
loading group "misc"... done (took 0.872049899 seconds)
loading group "sort"... done (took 0.352381681 seconds)
loading group "collection"... done (took 6.26548605 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.391935628 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.171220217 seconds)
    (2/2) benchmarking "String"...
    done (took 0.112721437 seconds)
  done (took 0.934297309 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.130786162 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020695415 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020564382 seconds)
  done (took 0.81734688 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021170824 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081084228 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022173685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022853986 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022818154 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022166314 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022094576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022025556 seconds)
  done (took 0.862060248 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.032100737 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019674148 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020438202 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.019684217 seconds)
  done (took 0.737039706 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.025531299 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.074113491 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019214653 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019114069 seconds)
  done (took 0.78113352 seconds)
done (took 5.314023597 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37191891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12673226 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033161803 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.154553313 seconds)
  done (took 1.35800075 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.019941571 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025043328 seconds)
  done (took 0.696342382 seconds)
done (took 2.70033163 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.372312533 seconds)
  done (took 4.015386228 seconds)
done (took 4.664633461 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16907121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020102242 seconds)
  done (took 0.836212519 seconds)
done (took 1.535021766 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.783814688 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.795212694 seconds)
    (2/2) benchmarking "String"...
    done (took 0.864860538 seconds)
  done (took 2.329431384 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.957731773 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.689527815 seconds)
    (3/3) benchmarking "different"...
    done (took 0.70876519 seconds)
  done (took 3.005183 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.75537313 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.16655047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.941557806 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.651922398 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.661770479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.146797362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.301802188 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.004625042 seconds)
  done (took 22.528884699 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.918057727 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.916741164 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.878103379 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.925408032 seconds)
  done (took 8.333437448 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.960537193 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.923289124 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.922447744 seconds)
    (4/4) benchmarking "different"...
    done (took 0.744355372 seconds)
  done (took 4.260381899 seconds)
done (took 48.718347113 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.524194777 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.733101062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.680838605 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.343854937 seconds)
  done (took 15.93315382 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.878924011 seconds)
    (2/2) benchmarking "read"...
    done (took 1.008309125 seconds)
  done (took 2.5498754 seconds)
done (took 19.132420099 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.871336826 seconds)
  done (took 7.51978875 seconds)
done (took 8.169785957 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.788269657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.049548871 seconds)
  done (took 4.486525846 seconds)
done (took 5.1411342 seconds)
SAVING RESULT...
DONE!
