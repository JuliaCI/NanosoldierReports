cset: moving following pidspec: 2746026
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304377297 seconds)
loading group "string"... done (took 0.282594957 seconds)
loading group "linalg"... done (took 4.166267175 seconds)
loading group "parallel"... done (took 0.025965481 seconds)
loading group "find"... done (took 1.579408229 seconds)
loading group "tuple"... done (took 1.010929275 seconds)
loading group "dates"... done (took 0.24923792 seconds)
loading group "micro"... done (took 0.062773549 seconds)
loading group "io"... done (took 1.384125035 seconds)
loading group "frontend"... done (took 0.012035874 seconds)
loading group "scalar"... done (took 5.015512562 seconds)
loading group "sparse"... done (took 3.488260554 seconds)
loading group "alloc"... done (took 0.015459682 seconds)
loading group "broadcast"... done (took 0.374346019 seconds)
loading group "union"... done (took 3.856029729 seconds)
loading group "simd"... done (took 2.963224475 seconds)
loading group "random"... done (took 3.224717144 seconds)
loading group "inference"... done (took 2.078517471 seconds)
loading group "problem"... done (took 1.418775418 seconds)
loading group "array"... done (took 4.94083879 seconds)
loading group "misc"... done (took 0.911958825 seconds)
loading group "sort"... done (took 0.360336043 seconds)
loading group "collection"... done (took 6.754234129 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.398180972 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178450246 seconds)
    (2/2) benchmarking "String"...
    done (took 0.121034257 seconds)
  done (took 0.973110896 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.138680327 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020721322 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020754666 seconds)
  done (took 0.84841031 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.02126729 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081611669 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022529895 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023259411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022916914 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022253985 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022326031 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022121748 seconds)
  done (took 0.886898451 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031992359 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019617083 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020597053 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020017663 seconds)
  done (took 0.759556124 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026370195 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.083279166 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019651118 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019516922 seconds)
  done (took 0.816792334 seconds)
done (took 5.494672735 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382592068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.134219183 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033168658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.165385228 seconds)
  done (took 1.411885652 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020100991 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025570039 seconds)
  done (took 0.722311828 seconds)
done (took 2.806106377 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.67194261 seconds)
  done (took 4.337417289 seconds)
done (took 5.007947808 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162942476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02113405 seconds)
  done (took 0.856660726 seconds)
done (took 1.58489764 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.731820084 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.821540754 seconds)
    (2/2) benchmarking "String"...
    done (took 0.891162402 seconds)
  done (took 2.429066379 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.981917666 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.713347202 seconds)
    (3/3) benchmarking "different"...
    done (took 0.732303765 seconds)
  done (took 3.105313775 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.692878105 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.221218915 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.962187813 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.677197394 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.685833496 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.184944739 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.332830838 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.027023831 seconds)
  done (took 22.768651976 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.937914572 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.932620248 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.898017497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.942636816 seconds)
  done (took 8.432135016 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.985193272 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.944967122 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.945298139 seconds)
    (4/4) benchmarking "different"...
    done (took 0.76849816 seconds)
  done (took 4.379176274 seconds)
done (took 49.284346823 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.673555513 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.752006194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.707940799 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.331223544 seconds)
  done (took 16.140159788 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.910178396 seconds)
    (2/2) benchmarking "read"...
    done (took 1.032902602 seconds)
  done (took 2.632343758 seconds)
done (took 19.449675753 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.926302872 seconds)
  done (took 7.601952875 seconds)
done (took 8.279347413 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.823486931 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.063562943 seconds)
  done (took 4.562070495 seconds)
done (took 5.242910467 seconds)
SAVING RESULT...
DONE!
