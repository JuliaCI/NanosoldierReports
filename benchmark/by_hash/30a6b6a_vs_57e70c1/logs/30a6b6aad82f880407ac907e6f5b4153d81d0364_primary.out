cset: moving following pidspec: 3997003
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.117681989 seconds)
loading group "string"... done (took 0.260174091 seconds)
loading group "linalg"... done (took 4.680197337 seconds)
loading group "parallel"... done (took 0.022443322 seconds)
loading group "find"... done (took 1.497066752 seconds)
loading group "tuple"... done (took 0.904877814 seconds)
loading group "dates"... done (took 0.252740296 seconds)
loading group "micro"... done (took 0.060839093 seconds)
loading group "io"... done (took 1.342585739 seconds)
loading group "frontend"... done (took 0.012737252 seconds)
loading group "scalar"... done (took 5.066755456 seconds)
loading group "sparse"... done (took 5.642021351 seconds)
loading group "alloc"... done (took 0.016477323 seconds)
loading group "broadcast"... done (took 0.390635406 seconds)
loading group "union"... done (took 3.648535604 seconds)
loading group "simd"... done (took 3.016170909 seconds)
loading group "random"... done (took 2.884328165 seconds)
loading group "inference"... done (took 1.585093114 seconds)
loading group "problem"... done (took 1.107811588 seconds)
loading group "array"... done (took 4.629862717 seconds)
loading group "misc"... done (took 0.929556449 seconds)
loading group "sort"... done (took 0.369321215 seconds)
loading group "collection"... done (took 6.08168101 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/1) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 5.334074193 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.069466312 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.212098427 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.049611991 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 0.542420496 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 1.088507325 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.031916028 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.290752426 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.123210817 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.033560633 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.034858748 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.15344975 seconds)
  done (took 8.615711745 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 4.448963432 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.119812681 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.300030686 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.140645697 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.437237936 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.14827609 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.050374419 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.841261088 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.198540446 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.05593921 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.057357063 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.425961992 seconds)
  done (took 8.93473834 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 0.410595741 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 0.112633152 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 0.323510383 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 0.136750502 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 1.425026959 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 0.057436445 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 0.047764203 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 0.837931352 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 0.183598853 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 0.048396533 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 0.050114397 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 0.413321981 seconds)
  done (took 4.762373591 seconds)
done (took 23.026704195 seconds)
RUNNING BENCHMARKS...
(1/1) benchmarking "inference"...
  (1/3) benchmarking "abstract interpretation"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 30.796741593 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.362875553 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 30.924249054 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.201087042 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.445057128 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 32.098426415 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 30.836266843 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.899253518 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.386293705 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 30.878304489 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.891759647 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.086959181 seconds)
  done (took 374.466848378 seconds)
  (2/3) benchmarking "optimization"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 30.801735738 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 30.971559365 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.025077555 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.057931951 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 32.298423826 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 30.968089435 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.235612788 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 30.674391472 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.123814589 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 30.831583932 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 30.987266639 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 31.481402475 seconds)
  done (took 374.122972863 seconds)
  (3/3) benchmarking "allinference"...
    (1/12) benchmarking "Base.init_stdio(::Ptr{Cvoid})"...
    done (took 31.375149779 seconds)
    (2/12) benchmarking "many_global_refs"...
    done (took 31.187370756 seconds)
    (3/12) benchmarking "many_local_vars"...
    done (took 31.311053909 seconds)
    (4/12) benchmarking "many_method_matches"...
    done (took 31.098237926 seconds)
    (5/12) benchmarking "REPL.REPLCompletions.completions"...
    done (took 31.49268162 seconds)
    (6/12) benchmarking "many_const_calls"...
    done (took 30.859473955 seconds)
    (7/12) benchmarking "many_invoke_calls"...
    done (took 31.227072355 seconds)
    (8/12) benchmarking "many_opaque_closures"...
    done (took 31.498866394 seconds)
    (9/12) benchmarking "broadcasting"...
    done (took 31.319531628 seconds)
    (10/12) benchmarking "rand(Float64)"...
    done (took 30.979114458 seconds)
    (11/12) benchmarking "sin(42)"...
    done (took 31.139381125 seconds)
    (12/12) benchmarking "println(::QuoteNode)"...
    done (took 30.94644923 seconds)
  done (took 375.104132875 seconds)
done (took 1124.436644289 seconds)
SAVING RESULT...
DONE!
