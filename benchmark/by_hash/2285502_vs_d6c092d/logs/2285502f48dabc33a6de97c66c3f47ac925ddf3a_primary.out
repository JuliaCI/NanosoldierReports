cset: moving following pidspec: 40509
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.756538199 seconds)
loading group "shootout"... done (took 0.791978526 seconds)
loading group "string"... done (took 0.227178321 seconds)
loading group "linalg"... done (took 3.075023546 seconds)
loading group "parallel"... done (took 0.021203103 seconds)
loading group "find"... done (took 1.176421873 seconds)
loading group "tuple"... done (took 0.700357231 seconds)
loading group "union"... done (took 2.840881656 seconds)
loading group "dates"... done (took 0.153769117 seconds)
loading group "micro"... done (took 0.056493847 seconds)
loading group "simd"... done (took 0.364906712 seconds)
loading group "io"... done (took 1.387251415 seconds)
loading group "random"... done (took 2.315534492 seconds)
loading group "problem"... done (took 1.129760051 seconds)
loading group "array"... done (took 4.550245579 seconds)
loading group "misc"... done (took 0.911182115 seconds)
loading group "scalar"... done (took 3.448415793 seconds)
loading group "sort"... done (took 0.303152053 seconds)
loading group "sparse"... done (took 3.384028288 seconds)
loading group "collection"... done (took 5.970284375 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53581392 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.071679194 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.225972433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.075914034 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.27905608 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.078703835 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.081925854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.069295566 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960118605 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.159627295 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.195238608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.382822605 seconds)
done (took 4.846364418 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.264345012 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032469575 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12336137 seconds)
  done (took 0.761366557 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.136595689 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.016058121 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021739623 seconds)
  done (took 0.773067761 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.01974668 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.093372346 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.020717957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021299738 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021237376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.020654164 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.020486713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020421735 seconds)
  done (took 0.817476 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.026357685 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022161775 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020162135 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.021586878 seconds)
  done (took 0.688209535 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02185073 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.081242743 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019313095 seconds)
    (4/4) benchmarking "different"...
    done (took 0.01920443 seconds)
  done (took 0.735960973 seconds)
done (took 4.67316713 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.194601713 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.771282082 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.926878135 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.17030703 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.337180895 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.301016999 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.075816089 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240609813 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.146171351 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.030865737 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.178381203 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.039650042 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.519362637 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.429358513 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.027582253 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.14365899 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.575370032 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038895284 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070321758 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.222833218 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.039460417 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.038635042 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043395773 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.025841345 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.143091455 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134064943 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.588901516 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066250031 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025522264 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13443331 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.028088031 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030400152 seconds)
  done (took 9.374468948 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145717033 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139916213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.022935324 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.055661281 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.046404357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024064191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.026667215 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022308671 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.039384955 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.084419739 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.042078228 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150276447 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.020515712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.023553491 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138463443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.110875935 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037153101 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036432561 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.021628952 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.032960231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.04583422 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034109173 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.029630205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.029270461 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067389014 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089527784 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.04083383 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.066526645 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.021886433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.031800841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.050645405 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.060005474 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022066432 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.020840819 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.062375327 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.039612451 seconds)
  done (took 2.563140447 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.569747711 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.049634695 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.13713568 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.127667831 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063113894 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050045188 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.178068915 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076130843 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.052835638 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023162843 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.204689181 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.605347869 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.163693164 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.964707857 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.027825936 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.179243097 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.848227133 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.936114009 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.022842677 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023130566 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.134080694 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025580397 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.170411949 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.021002823 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.11923896 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.791508153 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025014216 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.023524744 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.051270319 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.139846027 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020235271 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.09238887 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.048412175 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.02442087 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.52228111 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021260404 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019185869 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041310667 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.049502781 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021387283 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.022577118 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033203779 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.020634311 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073562755 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.034984068 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.46629744 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02447366 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.638926973 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.818833806 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030167718 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027071566 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.056516845 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019190599 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.022856533 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.5654421 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.110510167 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022072436 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241632621 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025084928 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023862564 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.023929761 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.051185708 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.022840851 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023978044 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.025955976 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041104749 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.15359481 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032047278 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042655846 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021014966 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022170172 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.020625639 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.380946663 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.028749055 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024589386 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.02012777 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026407208 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022239778 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021765853 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.0671587 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.049206593 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.044500614 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025561948 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.022752398 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.021855408 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.53970628 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.040909144 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024614531 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.023615432 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.456113544 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.019743945 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.021590753 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.02324923 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043286582 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022206328 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.01903731 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057384189 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023814924 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.125577787 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.526159357 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023174071 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019211825 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426962139 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.023640071 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.053719615 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.074928712 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02168279 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.059318441 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022075754 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.019304 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025482193 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.019273651 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.023555908 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.020447511 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.02130408 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020356416 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.02200634 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023222801 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.021952556 seconds)
  done (took 19.323849045 seconds)
done (took 33.429744745 seconds)
(4/20) benchmarking "parallel"...
done (took 0.734939863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.212573127 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.041999445 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.018786007 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.164074733 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.043090759 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.135248556 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.175789485 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.126941717 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.04484487 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.044562236 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045036977 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.183921396 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.194191031 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.045977407 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.119391134 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.195896129 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046217534 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019478119 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046052654 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.046277874 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.046034171 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019296095 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.045389265 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.046046648 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.119713071 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.046300818 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.01914517 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.121750395 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.047493281 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.122663275 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047089942 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.046034355 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047236313 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.122839699 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.048819584 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.122951228 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019507346 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.048572227 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.048554118 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.049644863 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.04929559 seconds)
  done (took 3.942792577 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.043447916 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.037047454 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039460143 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017283728 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02704197 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037016318 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01720323 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.036628588 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040688764 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037001304 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.036958094 seconds)
  done (took 1.114774023 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.038106428 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038071249 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039310154 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017213787 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028752323 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037750413 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017145932 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037372567 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040079374 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037706091 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.037743336 seconds)
  done (took 1.055999828 seconds)
done (took 6.778911434 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.152010052 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.120984796 seconds)
  done (took 0.949454064 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.554818045 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.217669249 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.130522542 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.256208684 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.123644911 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.155944746 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.235930464 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.16109059 seconds)
  done (took 6.567167629 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.073330879 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.139995028 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023276694 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.021883227 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022094836 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.022150571 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.022615521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.022454561 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.021722993 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.023081787 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.022684478 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.021946286 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.022653786 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.022698466 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022026927 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022279914 seconds)
  done (took 1.355214716 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028082674 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.024830556 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.02591008 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017590455 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.02674062 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025410789 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026538167 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027538097 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026068112 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.025799874 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.023716303 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.026591002 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.025471609 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024227643 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.026606256 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017632186 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.026762353 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026254109 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028051451 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027031888 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026109201 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.023687823 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027789812 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025345341 seconds)
  done (took 1.311811439 seconds)
done (took 10.87121536 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136611557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.028711054 seconds)
  done (took 0.853229982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12726152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125390149 seconds)
  done (took 0.950268098 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029370991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016509803 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.032746231 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024665157 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.01657697 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016481075 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031878059 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016670097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016532717 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0165754 seconds)
  done (took 0.919271943 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.01987833 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.02363344 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021595887 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019710444 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021326708 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017494159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019692975 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017860935 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023402147 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016890198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020579199 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037081796 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020011846 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.037456306 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.020039455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020565886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.022065709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019793522 seconds)
  done (took 1.099080065 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018300904 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017400577 seconds)
  done (took 0.737680366 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.021268332 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017472753 seconds)
    (3/7) benchmarking "month"...
    done (took 0.019241673 seconds)
    (4/7) benchmarking "year"...
    done (took 0.019023625 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.017031593 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01644439 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016954881 seconds)
  done (took 0.822455714 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387042127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.086407452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311582267 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.023503881 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036976256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.226418939 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.018774519 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023218836 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0231722 seconds)
  done (took 1.834925874 seconds)
done (took 7.917998368 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.039707279 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.135493408 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145427289 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.428172993 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.035086197 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.021626341 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.050964227 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.228522412 seconds)
done (took 1.796720518 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.487337211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.245850453 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.191878204 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.02313162 seconds)
  done (took 2.166109714 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.307482341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138793196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029543644 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.021776 seconds)
  done (took 1.216573903 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021417341 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026505872 seconds)
  done (took 0.763005731 seconds)
done (took 5.348524689 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030813291 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017413326 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023636773 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018777653 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018533359 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017985571 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017999749 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018753604 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.017003645 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.019042647 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01896323 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018987504 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018772161 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018715274 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.018175592 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019009101 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.017108771 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018710944 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018703994 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018714549 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.017029861 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019022764 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.01820676 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018683556 seconds)
  done (took 1.160443039 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.035332147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.020054274 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.020730437 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.020525148 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.02104857 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.02059429 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.020575755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.019680461 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.020570926 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.019451737 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021123026 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.021194807 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.019537834 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.02131009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019678601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.02135568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.020866041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.019998953 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019642279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.021385087 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.020796098 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.019952401 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.021246659 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.020740128 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.021136398 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021133547 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.019612822 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.019959426 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.020781398 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.021143624 seconds)
  done (took 1.345639275 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022183629 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015596802 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015922488 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.024545026 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015487614 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015668479 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016084735 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015245642 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015594545 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016422795 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015961563 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015399293 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016214588 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015301699 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015357618 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015944902 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.019301799 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.034893449 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015774568 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.01552735 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.018952233 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015742382 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015527137 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015527436 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.016003462 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015598325 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015379184 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015950224 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015539266 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.016205269 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015558389 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.018850508 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.020428261 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.01599178 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.024561446 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.019413569 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016065387 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020937398 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.01639803 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015401643 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015374411 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015338254 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015493864 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015491858 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.024685405 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.01574622 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016637333 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.01599707 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015720536 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015341796 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015507277 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.017011467 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.019955005 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016839235 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015447951 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016759539 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015496403 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016202882 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015650412 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015492273 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015490209 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.018346887 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016945219 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016326155 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.03573223 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016986482 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.024974622 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015714095 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.016170418 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.018523826 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016209402 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.03391148 seconds)
  done (took 1.988171665 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028433222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.026160315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033207174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.023999464 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019012827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016397211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019430669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01645662 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024413066 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.020051069 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016553634 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019727624 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024634209 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020097564 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017632325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024378265 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020134565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019278248 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016558283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020082433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017619918 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019664362 seconds)
  done (took 1.184556348 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103301953 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020617881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.063212581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.023676437 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.022482843 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.023969539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020509483 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020504923 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020644775 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021129112 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021120276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020700641 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.022582516 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021171151 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021143353 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020920444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020610438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.02091398 seconds)
  done (took 1.225366778 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033070101 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.02038378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047102622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020066012 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.020195748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019837695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023458417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023585255 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.019934547 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020343818 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.023942841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020006058 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.019987178 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020325633 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020019718 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020369507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020001146 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020350038 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.023913044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023844807 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023863829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.023849796 seconds)
  done (took 1.226182072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03434593 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019491327 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.035698038 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.020901335 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.016020884 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015964382 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.020961105 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.019553081 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.020743569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.019048505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.019578135 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015984036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.021697841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.019793552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.021971989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019766985 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019398446 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0197973 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019337543 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.016126315 seconds)
  done (took 1.13346909 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130845873 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018172172 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.01792131 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022296307 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017783785 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0178391 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022274006 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017966785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017941137 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.040721728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.018008041 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.018025029 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022521351 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020786172 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017939513 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022464692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022407359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022424956 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018034187 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018052929 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.040680952 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018191162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022948497 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018247142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.018225105 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.018190214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018186004 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02113074 seconds)
  done (took 1.41801818 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036872282 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.018490447 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.016241932 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.020095167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.020034202 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.030957395 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.020036596 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019928641 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.018344272 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.016300311 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.018498672 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.018423711 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.018407408 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.027281042 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.018306499 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.018389349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.027352814 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.020203289 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.031259918 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.031232655 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.018523425 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.027244868 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.018522091 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.016256618 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.031249943 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.018431356 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020495021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021353445 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018736451 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.016452416 seconds)
  done (took 1.375440697 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029759298 seconds)
    (2/2) benchmarking "in"...
    done (took 0.02629121 seconds)
  done (took 0.776004318 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.019221133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032530497 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015483831 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.027293837 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.022849464 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.018369479 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.022975109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022798695 seconds)
  done (took 0.895296151 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.125472675 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.147442621 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017445641 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017613899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.122644923 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082765297 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132605542 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028062007 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.029830353 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019042919 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017507205 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.133121214 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.017024483 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.02935181 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018558385 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.025798251 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023205951 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034342919 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029076955 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.016218932 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.028606516 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017836476 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.017025085 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.018055113 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.01824603 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.02285974 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.031848059 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028482856 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024262361 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.01549206 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.034744477 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016402493 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.017105952 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024380348 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.125716489 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.01663932 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053064495 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016544429 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.021026097 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.016225726 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027129991 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036103341 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.02941473 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033058487 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.018048362 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018425549 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.016327712 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.018092693 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019211431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024311975 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016552005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.022649956 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.016151185 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017912983 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.025721697 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016571602 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.021299161 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024449747 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.028777111 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.025727162 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.027458167 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.030616141 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024020109 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.025255176 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.017149736 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035160444 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.01810199 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028521008 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030129384 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017744485 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028364922 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016366739 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015579274 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016502299 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049510249 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017870428 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017356146 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016579845 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016719326 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017891785 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024803702 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021409617 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022584736 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019654068 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031300125 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024367647 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016344193 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023966798 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033679142 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019317624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016551474 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032330066 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019248659 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016369769 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.03337774 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.025804841 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.018145899 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.017236838 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019193178 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.02876275 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017880737 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015666246 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023715253 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018083409 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.126795596 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021952084 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023886557 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016782638 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026169537 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.023669984 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018579657 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.01602513 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020452089 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017760412 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015981016 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025240462 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016931823 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030922968 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.02266115 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.030379224 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.030841889 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026386185 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.031965071 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016764273 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015947035 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034540246 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025103352 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018236875 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034291159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016789215 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026203827 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016935719 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018466341 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025014869 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.016222539 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018684445 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017100137 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023515938 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.01845345 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018677091 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.021786539 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024246976 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028280657 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018081975 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.024463319 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017225962 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032157042 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.02556995 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.02081092 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020742088 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017971981 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028258318 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.022857666 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025123032 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016962411 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.018064222 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.017137063 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027064929 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025531731 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018976639 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.027171229 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.020884252 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.018041957 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.017165283 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.018162782 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.019751162 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020776441 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017680333 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023606886 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.024681306 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.03042492 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.025192943 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.024961715 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016533464 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016962498 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018989195 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016987807 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.020738975 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025318239 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031792871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028120505 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.037928725 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017342256 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.025669403 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.01894096 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033421291 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.02948766 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018237395 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022405879 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016324844 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.01913594 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.025436975 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.027686306 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.030587655 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031288497 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021012074 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.020868759 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.017146797 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031402639 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017677855 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024446545 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.02531144 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.02396894 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.017114926 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.01920123 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025148764 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.020900504 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018307358 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032035262 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.025641776 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.017177937 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030633663 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017579333 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.026904828 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.017165686 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.019822395 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021530293 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.019329024 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.025746725 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031701952 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.016362787 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017637585 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032048316 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.019246821 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019134664 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024011226 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.03147889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.020997715 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0239324 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026920484 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026732911 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.167627973 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.025655041 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017188953 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024261082 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019042491 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.026577483 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016178461 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.032994574 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015453537 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030208613 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016777487 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.025818745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016514592 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.024139624 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016817205 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.031803145 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.017423957 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016888911 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.026291995 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015358575 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.023970815 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015967129 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.020417133 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.021847434 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.023934708 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.017563979 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024136056 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017496628 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.023789785 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.019883117 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.023430876 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.023780243 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.019736538 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015803011 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.022976846 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025309516 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.022770561 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017287796 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017338859 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016367372 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.023925479 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017332086 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016839945 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.022780961 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.019841847 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.020920894 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.01728926 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017320377 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017324482 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023019884 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.023920985 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.032399621 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023155365 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.021952622 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.023652488 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015781438 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030004151 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015784971 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.02202608 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.01520369 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022161209 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.023640768 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016108354 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033350489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017331383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.022360403 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026268312 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023066551 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.018833482 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.032198015 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018786286 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.022894084 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.022439217 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.019659677 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.021736118 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017379317 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.022978225 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.023979522 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.024985387 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016610203 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.02206514 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023504285 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017370762 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023766668 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017257752 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023007723 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017690084 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015534964 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.019912904 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026093799 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020247917 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.02046022 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016571133 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015485793 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016510267 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023639127 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020122319 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.023575043 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030420619 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.015463969 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017000736 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016084553 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019132674 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033275423 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024660277 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023000304 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020241121 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015773776 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017747019 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017916986 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016440558 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.019354422 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015830978 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.01633373 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025788026 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.018023291 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020018225 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016687895 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017607082 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025042646 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020829451 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016813494 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022355001 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016246972 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020748653 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015871645 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.018069308 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020190139 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016179046 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019324968 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025473256 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031768915 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022312325 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.02404853 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017368457 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023172273 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03080125 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.025082648 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017327574 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024544088 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.016085787 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.03413326 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024567439 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023796423 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024954423 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017380157 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032270712 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020392677 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025778405 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031295564 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017985898 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.02587005 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.01688486 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03169555 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.020570572 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01678492 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024394213 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023457669 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022022702 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027602232 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017770327 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024386613 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022408808 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.019680197 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.01871487 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018672689 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.024504078 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032156053 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017809104 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.023057386 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023788068 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024007168 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.020659141 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028141795 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.023839762 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017967293 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.01869489 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.019662776 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017710355 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.027949147 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017246169 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.020560763 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.020550203 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016822141 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.022806136 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032391739 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025105453 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025455659 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.01706144 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016416016 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034359911 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.019873469 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020778991 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024017545 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025756436 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028423974 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025261749 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033192561 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.01757345 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022154729 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028341724 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.018052011 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016961245 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.019878136 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018970036 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025127171 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025842415 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023265775 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.019157126 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02312595 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029575316 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.01869199 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.020905269 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023889249 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.018039443 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.02652041 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024081183 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024419821 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018837454 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.017018818 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019506191 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.024712503 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023308095 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.024962613 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.018102937 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026541641 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030298513 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.023924891 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020820795 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.017035455 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020721583 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.024937378 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.024126727 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.017080309 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.020991215 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.019795146 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026826749 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025437241 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.020842844 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.017016887 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033430453 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.024638902 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025088316 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018937449 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.01920837 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017573467 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.017151968 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.02745637 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.017185422 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.019082441 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021125719 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.01923625 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.034463781 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024137889 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032132804 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018241954 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020800734 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.01709623 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025676434 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.020913882 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.017151577 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.026596496 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016777075 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032016399 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028290898 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.025417381 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.017111147 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021445187 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025158817 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031524468 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025778087 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024981766 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.02107528 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02575338 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.16619857 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.025944783 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016104115 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015426128 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.0247513 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.02338636 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.026802903 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.01595078 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.024717812 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.017619387 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.022991527 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.023255247 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017395538 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017421413 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017359512 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024129421 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.019887411 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.023849364 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.019971647 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.031528698 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.01671451 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.02554925 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.023649075 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.025280911 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.028541076 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026443629 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.023144474 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016345791 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022156044 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023014655 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016790747 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.020192449 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.01861854 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036174687 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017323249 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017301463 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.02840141 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.022606065 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015949068 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022434748 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.019769393 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.02442172 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016657722 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.024807561 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020464118 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.016599263 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.019712909 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.019789728 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015243979 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.015788111 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016085226 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024141147 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.019587955 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016056612 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033223082 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017051658 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.023399655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02523399 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.021623616 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017139276 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015228938 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016663067 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.02784575 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029872563 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.018805852 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02311225 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017376409 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.023681491 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015248559 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.02327282 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.022490378 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023057498 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015806713 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016090532 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.029416738 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.029846472 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.019745659 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.030938114 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.023525774 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017261738 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.036057279 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.023597878 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016729526 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.025290258 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017762179 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015547399 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015359548 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017406979 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026278164 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016146167 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018287643 seconds)
  done (took 15.08280418 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.059241406 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017104637 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015823882 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015790187 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022667159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016951905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015772493 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016899905 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016928266 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017979889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01588748 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.01593136 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021335468 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029566549 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023681736 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019583847 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015989277 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017153334 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015949384 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017214898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021928894 seconds)
  done (took 1.201793984 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.02046596 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020328668 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0195753 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019768025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019025889 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016069264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.01940564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016038006 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019641185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016389439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019968131 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016207735 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.01656838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016522134 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016478735 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017578876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020001557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019296224 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.01617898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019638212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017622024 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01962603 seconds)
  done (took 1.159066665 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018841542 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016696846 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023266772 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015495473 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015430082 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.018146204 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015391989 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019041597 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019030384 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019013106 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023127496 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016167409 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015378282 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020393377 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015313155 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.016129967 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.059121645 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016397581 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016388903 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015706912 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017963777 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023498031 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015723091 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015866611 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.01908842 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018388903 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.0156551 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017975515 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.016193059 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019113462 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016400194 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015511549 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023283657 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.022555541 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019128303 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019177424 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016884267 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016365216 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015664904 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015670406 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.022692228 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016864983 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015946538 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016790985 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023293509 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015874681 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015624057 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023398861 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.01570034 seconds)
  done (took 1.677507342 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028994733 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.0660959 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.020611536 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050714192 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.026140546 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.021057802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.020422914 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053499201 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016936409 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017334016 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027206096 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.027405421 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018463686 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019606289 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.021667417 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018324464 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.019043114 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017751376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020682052 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018074287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020826431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.021843084 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.026782305 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.027257533 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019467891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017973995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018218551 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019745974 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.026960698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021392801 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019931326 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.020460397 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027280308 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.022281284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018192174 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.01835411 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.027852003 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018821164 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018570276 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.017167292 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.018319819 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019763343 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.021894319 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028024395 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018691994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.02243217 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018826413 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016892163 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.027607963 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018625293 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.022375756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.028614197 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019835641 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.019072358 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.020210871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.027741534 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018978037 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017676918 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.019002669 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.027420735 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.017230117 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019647081 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028137072 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.018352279 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021814328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.028392299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.022599779 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019787684 seconds)
  done (took 2.447328704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0256547 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.050191784 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028257879 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028155046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.023785443 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.023873333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024072729 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024150424 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.023968752 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.026801125 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02419143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164307504 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.021374813 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026009697 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.024404168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.024372204 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.024302566 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.024346712 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.024541981 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.024446756 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.02451973 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.029123543 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.024571607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.029206423 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029009052 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.021281515 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.02439323 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.024433239 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029335974 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.024517339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028854787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.024551176 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.024571785 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.029335105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029006644 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.024442101 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016550387 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024420884 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.024547457 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.02452578 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.021243885 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.029375584 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.024649277 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.021481143 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.02487799 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.024733369 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.029768557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0294519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026677459 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.027774065 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.024892106 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.029777458 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.024725503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.024936816 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030016283 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033106036 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02988319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030044356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025186218 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.029998913 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030116847 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.033464979 seconds)
  done (took 2.551010899 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.031098147 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021638375 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.033139572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.01562144 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015620524 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023167502 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015550171 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015553857 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021513079 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021503801 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023023808 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023583706 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025328133 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023069943 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023575854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025364666 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023585671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023589184 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021594825 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023577772 seconds)
  done (took 1.226911141 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019699302 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021258549 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016492794 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.030598392 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016438867 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022365605 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016438422 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016372526 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016428558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016377286 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020892825 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020988561 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016564557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023147874 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020082041 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022646194 seconds)
  done (took 1.078772826 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020960341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024747739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126136615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.017008115 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018816055 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016278786 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.017079833 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.016140174 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018428257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.02885178 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.017237701 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019273939 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017304384 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015924579 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016485493 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.019185839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018407795 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.017299122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.017205632 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127131633 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.024164758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.01776848 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019317906 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017884887 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.01907655 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024189516 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018747091 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.019150494 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017302631 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019550836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.019140901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.026804916 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.019116205 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017843116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.016053831 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016913526 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017378634 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.01946391 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.01942089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017362617 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0162498 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.019128823 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017468424 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017746793 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018637182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019515591 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018604267 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026180604 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.017293715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.019156691 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017391282 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018600137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017897397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027263396 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.019458628 seconds)
  done (took 2.028751118 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.033783076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020042238 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015645275 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015535365 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.01961633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.02022042 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.019784981 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019761364 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020210064 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015543341 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020196808 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019281023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020273596 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019974162 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020425542 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020034017 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015634164 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020155373 seconds)
  done (took 1.127353145 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024960305 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021350568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021540183 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017469405 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017429774 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021361293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015967403 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.017049673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017048165 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017526951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017629827 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.017207166 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017234378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.017247655 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021174909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017731581 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.017259943 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01620642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017637659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015997546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021697375 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016153445 seconds)
  done (took 1.167921229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.186912694 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.145773885 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.03808997 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.0334935 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025478001 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.050274422 seconds)
  done (took 1.24390759 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.050977909 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.052706199 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.019748378 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019661119 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023665306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022046853 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022026365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022137209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025041565 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028083805 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022447741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025645744 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02542306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027095475 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023872217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024015397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022477616 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022541753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019927067 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029698621 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022596703 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026000422 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022871801 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022648666 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022786676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027539809 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025899617 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028568273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022686289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026047626 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024360154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022809647 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026223902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028518311 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020133449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025884369 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022884421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030445397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024488257 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027636662 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020003685 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024380949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025959007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025634236 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026419877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023192772 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.025971176 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023043359 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023116357 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034419084 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024801957 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027833452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02473091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026551437 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026310948 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03448493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029042558 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028078678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02487492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028994621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02816618 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025016589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028207152 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029522087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025016294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028448758 seconds)
  done (took 2.491614411 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059157378 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020147687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022292723 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027477862 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026451362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022091457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022338547 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022411585 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02252056 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020141805 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058746413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022619338 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027045168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027057172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02264036 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022462231 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022524869 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02699111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020273403 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.033295657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022761661 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027443038 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027478897 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027436116 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028539793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02448854 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022877182 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022859868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022751922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022734351 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02572517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022931024 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02752352 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020383113 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027515951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022956456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022790479 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025729172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02284532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024503616 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027601609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030471368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13928473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023767318 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02929918 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023115251 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02312026 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020572426 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02305518 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020579858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028937432 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02888684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028798464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028034293 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023153271 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023194044 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023009967 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023066926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023129675 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024749116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027849197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023014574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.034824275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023244897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023301076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028394309 seconds)
  done (took 2.597497734 seconds)
done (took 51.520036985 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207851807 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172045679 seconds)
  done (took 1.133204957 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.1361354 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.133269775 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.157508125 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.022933469 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.08046199 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.159568976 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.124080799 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.025543483 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023205349 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.024762764 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.022889356 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.024382394 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.024570201 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.022751671 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.08115635 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.025439622 seconds)
  done (took 1.863183887 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.053731038 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.234099248 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.051901644 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.021901697 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.077260569 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.027658559 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.02333436 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.027562631 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.027697411 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.021985471 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.051099687 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.034330994 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.0266254 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.027627172 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023200599 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026709133 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027606016 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.027660158 seconds)
  done (took 1.584542622 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.077375525 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032457003 seconds)
  done (took 0.882349257 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.124021793 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063405464 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.103375772 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.293766742 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.094732793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.098251453 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.102066535 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.100849104 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068628602 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.094999159 seconds)
  done (took 1.911420305 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.058727866 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056236007 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.263879814 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054209634 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.033715906 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028808949 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.028999741 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.03028938 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029355208 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.028472592 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072234395 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027075799 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.02363418 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.069339401 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049574307 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059207189 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.022887412 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029423413 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.031717875 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.022820632 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027534874 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030535792 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132082601 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030062824 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.051709909 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027188227 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028849248 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028543401 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028410237 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030053391 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030607178 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054071857 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029860909 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.036413116 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028165521 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.049745529 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.023735612 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.050573422 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.026569551 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.023712447 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027087885 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.030552831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.024285007 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029948862 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.029794027 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.02957205 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030868635 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.024532653 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.029677565 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.026710356 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.023876122 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028184529 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.027985414 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02903365 seconds)
  done (took 2.965218065 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.071466294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.057035035 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023501688 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.064590283 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.055260924 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023527466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075228919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.051027394 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072909263 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023151177 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022872077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.022747523 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030318781 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035181692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.066879965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.06001662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024806544 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023387554 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.059575623 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.059928843 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.022459787 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077033737 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06434817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.058604948 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022130874 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023677688 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022373911 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.022984102 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031180784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030697502 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.022730713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033528849 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034929029 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030267648 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022133265 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022429807 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022368859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031184164 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032680247 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03253944 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029484466 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022061248 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022430798 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.022906519 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023434635 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.021903426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032407937 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030531937 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032303373 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02273764 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.022900172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022310371 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023153145 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030043072 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028999176 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030443284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033546168 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022793633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022715636 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024211743 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034447947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032079143 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030998292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023818176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032449537 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022749727 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0334999 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036458367 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.02267807 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023188501 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.022845934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022896526 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023180926 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029661695 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029708882 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023218421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023041085 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022555014 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031632873 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029759056 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022624297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031801938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022245453 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022831663 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023269241 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023761764 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.032927257 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031149688 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023289444 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022931047 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.022901467 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.022819351 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.022124885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.032727809 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031836925 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032084739 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034221625 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023792087 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035032242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032562812 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02388825 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.03141552 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023353639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023770142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0237026 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031273734 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030913193 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033595452 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023316361 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023017821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032193401 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034876187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023228624 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030850847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.03410111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031580154 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.022718895 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034874378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023289056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034419441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023561718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034282653 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023767242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032063499 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023575592 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022837567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023456016 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.03570475 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02408124 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023507079 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023826022 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023396074 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032140037 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036437397 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024144979 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032383824 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032383835 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023968087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034592707 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023679763 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034647144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023667724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023875913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022769649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036559049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023395765 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023757994 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023506305 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034604283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023472579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035045661 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031407257 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02299433 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035486752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034282174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031878796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035346454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024379612 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023734514 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.02343205 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023682402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.034739416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036394108 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024445482 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023681251 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031155494 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035104625 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023040493 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031563573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031406524 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.031803089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023731398 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023642672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035638577 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036767195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.031945049 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.035006982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032959955 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023488815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031495345 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.03510374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023605193 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038599102 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023453317 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.035670287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.035454645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031007356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.035075678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.036438176 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.034616917 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.034127587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.036308308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023060167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.02335344 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.031986598 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023385797 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0235888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.031712817 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024090806 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.024388167 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.038786305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023779256 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.035424625 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.023105999 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.032725041 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022919477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024074518 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037491285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023547138 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024082667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032272777 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023670495 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.03168428 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034975247 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.031604285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023541462 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024037756 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.036066504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.035518299 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023806866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023413097 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024032475 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.035006538 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.034322562 seconds)
  done (took 7.591897085 seconds)
done (took 18.711803749 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.151779698 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.072243725 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.142339319 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.084062257 seconds)
  done (took 1.221589908 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056838259 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019170315 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.142756401 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.154095771 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019224419 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.136918211 seconds)
  done (took 1.320677236 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.211448093 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.136925971 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.141483132 seconds)
  done (took 1.284747201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.134285456 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.269185339 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.521053993 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.125326477 seconds)
  done (took 1.851174671 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.172681501 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.164428437 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031884571 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180811554 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039118845 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016681091 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.102162373 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.021879176 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.053330666 seconds)
  done (took 1.636795037 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.092362936 seconds)
done (took 8.321246521 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.165080736 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.137757453 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.032651644 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.026909663 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.119901517 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.13036026 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.123501601 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.028752327 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.113867787 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.277634029 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.146111062 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048398687 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.156274677 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.040985915 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.242507256 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030513035 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.028278142 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024002645 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.149280636 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.112938469 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.229164724 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.027528727 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.093464459 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.02936318 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.105681825 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.07818012 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.152220453 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.287766853 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.273529099 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.029855169 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.115406397 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.040227971 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.118151391 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.119542562 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.133749843 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048387862 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.019450112 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.238878701 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.092949237 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.289706342 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.149804329 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.026225258 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.138892933 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.024166489 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.018763482 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.142744948 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.032673869 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.025492905 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043725646 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.025896999 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.038854563 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.026321246 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.130486839 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023060163 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.09194449 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.139478373 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.153599795 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.096821499 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.024984731 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.037077891 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.028802236 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.151741416 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.035783415 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.024969911 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031578081 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.019400897 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.13701993 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039080974 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.019828296 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.029420649 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.027572126 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.087586293 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.155513284 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.064171651 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031320667 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.104790109 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.094617996 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047813803 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047792407 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029128586 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019007653 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.165932852 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.024698006 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.0379161 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026073296 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052781905 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.01934389 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.033413007 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.155677489 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.147839231 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.082885469 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020392042 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.222821253 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.021549473 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.197819074 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.020284409 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019245451 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.147344939 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.018830462 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019030681 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.028367059 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.027254503 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.020715524 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.147987986 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.103603488 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.026337201 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.02555129 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.01925004 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.02466345 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.019947623 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.019271079 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019153334 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.092105315 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.025689752 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.018411485 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.104837556 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.112562094 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.028382945 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.03681982 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.079025406 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.021897741 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.028060938 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.025778469 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.115977401 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026533341 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.120312962 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.020154607 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.040124126 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.104947592 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.091936903 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.103510395 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.018788013 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.14521093 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.028790847 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.018387359 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.025720757 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046479643 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.028206437 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.025545842 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.026819243 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.145497421 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.027988617 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.024341789 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.105314829 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018177759 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.096861829 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.092224997 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.114802909 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.023860351 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.027893528 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091182617 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.041998963 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048470309 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.039740188 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023091821 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.018991462 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.018703913 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.025488019 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018043486 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.018955963 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033278587 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.025475769 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.018702146 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.226505305 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.028755704 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023211957 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.252680327 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031313767 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.080213053 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.041220665 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.01948031 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.105907471 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021170617 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039619653 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.082779549 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.019600021 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.094081829 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.019711822 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019339604 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.026505087 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.020915452 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.028051264 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.032698692 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.019837128 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033572161 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.026823118 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019369939 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.105462978 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021116096 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.153157369 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.103380357 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.083054324 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.019548897 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.037961384 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019123036 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.122140891 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.019466796 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.067944816 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.117090747 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035896969 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039560806 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.020412896 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.092365596 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.03461362 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.019087438 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.098509583 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.116650683 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.0804722 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026459356 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.231518514 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.02832316 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.019859276 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025673127 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.027438137 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020009351 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.094500475 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.023748149 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.018717457 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019008003 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.02096071 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018351528 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045480099 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.018518593 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.026413918 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.019084866 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.021726325 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.020992952 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.01836008 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.026637786 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.094843534 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.117375285 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.02534509 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039260271 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.031405074 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.029091181 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066596695 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.026592091 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.138586298 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.018815532 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.028627595 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041296853 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.018994292 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024192673 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.019466781 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038734803 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.022635525 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.020801607 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.027748138 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.019654581 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.019794762 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.019433148 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.019724178 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.027648248 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021076201 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.0190622 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019018048 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.019491388 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.023957399 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.024646427 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.029982023 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039575545 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.445548504 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021762552 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.021837588 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.019791848 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.019706759 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020019593 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.02128676 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019537497 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021609022 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.019889452 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019325624 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.04844746 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024656757 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020418607 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.042577882 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.019676662 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029010777 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.116919229 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036559885 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.024674932 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.018930676 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.263096277 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.084861552 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.043245083 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.041298796 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.184595497 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031021111 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.019793233 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.019790994 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.018534801 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046214121 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.023875982 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.019627035 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.018443976 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.018771751 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.06595191 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.02682631 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.01869689 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.026889616 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.018734684 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019127837 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046220634 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.019972731 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.018916192 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037964526 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.031744499 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.076575627 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.030373676 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.021786195 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.069147292 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.018187815 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.018841107 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019231209 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.097473577 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.03077702 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.019993427 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.018818455 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026083536 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.027391785 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.070791018 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.0248479 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.021600174 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.026528887 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.018012596 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019239545 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.044659719 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.046823773 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.01983094 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.022365094 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.0186181 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.01911796 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.092429916 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.026338239 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.02322332 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.087131583 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.020705602 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.026176037 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.018088926 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.439339256 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.023408545 seconds)
  done (took 21.055838206 seconds)
done (took 21.865026441 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162380567 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033419741 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.027286757 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.023282723 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.03115476 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031492249 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.032473304 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.028374307 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.027260268 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.025941063 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140051681 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.018769858 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.026397605 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034067565 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.023428736 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.034953328 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031307037 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.03426587 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.019525182 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.034583691 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.029601418 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.026519314 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.023560381 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.033906276 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.019459941 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.023288927 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.154629417 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038733876 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.022674331 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.028654845 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.026714794 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.032549973 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.026787777 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.02634126 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.028535367 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.024324373 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.026634904 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.021468094 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.155604519 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.0252846 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.019621047 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.032042901 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.026268914 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.022785013 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.023632967 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030681207 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.024466384 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.038408048 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019048343 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.027176041 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155084022 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.023621954 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.022761309 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.023512753 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.024389663 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.028503383 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.022556153 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030881351 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024155025 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.031129561 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.027133444 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.022904249 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.018957014 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.027553754 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026389702 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.026626444 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018045346 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02369459 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019054377 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019011085 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.018398371 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027592121 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.025880901 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024043642 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.018441182 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.018980587 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.018549551 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.031222355 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026061674 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.027861368 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019423112 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.024504802 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024113632 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.019584168 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.023819898 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030595264 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.018618611 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.019465591 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.018519449 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.025811335 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.021479596 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.018999155 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030608261 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.023626 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.023329711 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019063506 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.018579828 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02343518 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.022920318 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.018991454 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018121765 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.023562541 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024167289 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.027795146 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019427601 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.023441129 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.023290489 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018183458 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027685541 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026283598 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.025434678 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.02638414 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.027634038 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.026348679 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.019496239 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018116732 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.02338574 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019356451 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.023783137 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.021550045 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024353797 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.022886054 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019509772 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.018495227 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.023493734 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.020813991 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019413248 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.01946097 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.01936545 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.027823722 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026289058 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018166836 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.018986149 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028031708 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.027801901 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.018738417 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.018566335 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.027913753 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.019628684 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.020959018 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024467532 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027966499 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.01894513 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019453963 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.018488044 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.018876679 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.01866245 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.024436746 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.023702811 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.019631587 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.027833174 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.02639067 seconds)
done (took 5.271595058 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.034009064 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.062880044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.174996363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138511183 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.032092858 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020282577 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024167191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.039766002 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.022821484 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.04485896 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.044416269 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.041017029 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.162248703 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.018293939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.01929358 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.020232708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.017837128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.031534649 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143833985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.043098958 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062003993 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019196404 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036087101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039577518 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.032647193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.038216144 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.020747585 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020339453 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.022302168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.036848664 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.045400952 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019201465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020561271 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039276725 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.035904099 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028635153 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020223223 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.026602754 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.020322702 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.019397201 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.021433003 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038304516 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.026653616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.026818021 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.020698087 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.019999297 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.019989337 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02765126 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.034016838 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026006487 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.03234331 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036738883 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.021542213 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.019894115 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018217161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.02724226 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.019869824 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019972895 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020270455 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019138507 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020253676 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022388135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.025523563 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.030319389 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023645118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027254439 seconds)
  done (took 3.253681996 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.038323796 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.04839307 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033395416 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.033898418 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.018993027 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.019612299 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.019650407 seconds)
  done (took 1.114070156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.059361301 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13601186 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.142888867 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143626598 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.155264788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.14176587 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.031754557 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.049620061 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019075557 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155939432 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.152274715 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147302073 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.023703492 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032147497 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.051692353 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.150195605 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.032050572 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.02678427 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141797191 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147977374 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02474339 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.050695673 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.03115292 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.020850854 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.145579478 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138639375 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.023498771 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.020809527 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022720408 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.02009207 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.019951128 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.040862985 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138576015 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.034821654 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021035598 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019087129 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136351311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021320947 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139095689 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.027737506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139449553 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.022590012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.022668378 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.020310738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.02143774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.142659702 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.021360724 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020201459 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.01976451 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141269459 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.019576358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.139613028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.023071127 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025599137 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.026878462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026804494 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027135552 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.020654221 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143266252 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030258972 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021975561 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.150860114 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149905076 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140086057 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.150764951 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.028675319 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140800233 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139472296 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020197521 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.027533498 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.020722416 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151105191 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024071699 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.022427357 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.025691081 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.027351219 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.157373388 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.157883152 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.158693883 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.034919946 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023249863 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.020755085 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.15605321 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.159197204 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.026403802 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020618162 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021593738 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037860932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.041054872 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.022712905 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.025072261 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.020713686 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031041979 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.022650981 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023208446 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152891823 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020985594 seconds)
  done (took 7.556927076 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.027740374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.020933617 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.020353371 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.020702523 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.020851681 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.020764137 seconds)
  done (took 1.12644328 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.047879876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021136014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.033145581 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.020894932 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.042923094 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.140089288 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140334774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022236903 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.036741772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.032652445 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14058132 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144830004 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143417312 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.021952002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141220891 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.032574003 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142437909 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025833587 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032000423 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022308103 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.034311754 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.021895218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022073444 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.151091215 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.023047266 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032183006 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.029824231 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032163451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.031670232 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022138526 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.021761433 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.022613931 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.027471687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.02208879 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143700637 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.027831899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.021258842 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.024868167 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023015725 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.022655569 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147124317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022430444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.02581922 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.024951739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022241053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.027726155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.02500609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.024922328 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144767609 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.025280166 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.024907867 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.021709027 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.02281249 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.024897071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.027765798 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022248847 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.024885491 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.145463618 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.02224332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.027928291 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021450323 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.022881844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022321527 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.022953185 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026386564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.025037933 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.027869073 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022399849 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022394782 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021388706 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.02504585 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021448663 seconds)
  done (took 4.193796051 seconds)
done (took 18.150598377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.502825288 seconds)
  done (took 1.411127075 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.987634476 seconds)
  done (took 1.925333235 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051734372 seconds)
  done (took 0.988480736 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.277907349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.381737852 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.655592545 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.078714396 seconds)
  done (took 2.315105653 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.828315603 seconds)
  done (took 1.771360354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.180734315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.147648689 seconds)
  done (took 1.305357394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.482031666 seconds)
  done (took 1.420896041 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.298649886 seconds)
  done (took 2.240937271 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.186440032 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.126481277 seconds)
  done (took 1.254297892 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.590282493 seconds)
  done (took 1.532242779 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.512274561 seconds)
  done (took 5.450878271 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.171468139 seconds)
  done (took 1.171263705 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.190627977 seconds)
  done (took 1.133831096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.66349475 seconds)
  done (took 1.602392118 seconds)
done (took 26.471212572 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.038790964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.034409534 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.034374681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.030122494 seconds)
  done (took 1.065084961 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030124753 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024274038 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026587858 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.026900795 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.023666257 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.025426293 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.026719787 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.023037976 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.023513984 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023290614 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.021919056 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.023298593 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.025921022 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023010393 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.025496712 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.026799716 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.023367449 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024049596 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.02475493 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.022996254 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026022327 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023405071 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.022962717 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.024319462 seconds)
  done (took 1.5336333 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.032633326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.02442815 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027913063 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.023726995 seconds)
  done (took 1.054200645 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032145991 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.029894926 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038422661 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.042022262 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.02952363 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030154994 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036644159 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036870055 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043403205 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039334892 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.020791909 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.020515311 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.01974586 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.037649509 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036106637 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016540619 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017933494 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030491346 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029499668 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032121554 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.022838665 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.018564596 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029684512 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030185319 seconds)
  done (took 1.66275816 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.036864136 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.018647072 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.034811498 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043577372 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.043974566 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.018446082 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032179835 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.044503868 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.081176564 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.018410106 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.02442923 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.018401336 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.056397759 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.018496402 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.033610481 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.06354894 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.066283862 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.022570451 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.04393337 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.018574133 seconds)
  done (took 1.688975912 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.027286261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.02302662 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.021270039 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.018554386 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.028475074 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.025219914 seconds)
  done (took 1.09471806 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.023429438 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021427455 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.020352482 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025431815 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.02112143 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021100885 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020310382 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019890264 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019087103 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.019821666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.019772614 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020255379 seconds)
  done (took 1.197524739 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.154298443 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.025927321 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.023635941 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019072738 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.020969748 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.019925584 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.03396804 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022192078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.037187494 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.019920824 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020133337 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022308897 seconds)
  done (took 1.3659958 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059606066 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064578626 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096497814 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068023923 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068069919 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049130617 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.195460043 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.031894033 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.112233585 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087284732 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070020369 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045005947 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034946184 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.022853588 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054814906 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071755397 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091048665 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.025417841 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067683396 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.240008357 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088115621 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.091598436 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103623949 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071550508 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047256615 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103664696 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050158127 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.057957301 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077171231 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08190367 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072978475 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.051774863 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.021280798 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.023843779 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105609534 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.062559759 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075843554 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.0464755 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055474313 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041895129 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063903303 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.023080349 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.035791445 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.065937259 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040029358 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089664841 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.04746588 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07062276 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034364512 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088683102 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081964908 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.17404457 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04071356 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060116972 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100871494 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071919331 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097342446 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064231803 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03815199 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.21752979 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.058638563 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052183011 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060740026 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032441536 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120582843 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041141769 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.065202773 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062331512 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.048886939 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.048234531 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058833905 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079308744 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078745407 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.07894614 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083460434 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043981118 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071679504 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.053211902 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.075777953 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055919063 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.025916361 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076234917 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081000983 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.053460948 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054146338 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083580391 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.044850345 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028767885 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.055414768 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.064828093 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033888276 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.069067729 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034895303 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.065890241 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089409158 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052600325 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065639126 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072546047 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032075324 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114192513 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.062031001 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025789142 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070810647 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064593046 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103189553 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052474081 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029667425 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053851524 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05937458 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.109921686 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066996932 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035460855 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067802376 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102612838 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049946944 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.257814377 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.052596721 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096570192 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071759159 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040912124 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029356989 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.045486606 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.219838524 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059343957 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063996926 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041271568 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.036270833 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.038470175 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062016272 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043740272 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.032817532 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.066552946 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.055467757 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.027882258 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041146487 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.028948171 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092027328 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.031355573 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087427058 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077774746 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.02820171 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056820772 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047639199 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056581946 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.050265783 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069275401 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091145138 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.132856902 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043366772 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.047543047 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059084102 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094206694 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081242129 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041956803 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.030979144 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053638821 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062712069 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052751018 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080318522 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.048464553 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0621312 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058111376 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094948429 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102673937 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053542878 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054995445 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064234191 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.076927721 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028032783 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110794167 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059834136 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074070235 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.035643909 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096176609 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.066024931 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045331157 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041116685 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05406552 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.060181497 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061405993 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101269802 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.049639548 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026751523 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052388118 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099276187 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032271069 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069068055 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.046720407 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.048579588 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076749534 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.053862163 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038049286 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022074082 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.240529748 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101066436 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.023129052 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.06571672 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.059699029 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055054787 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.07356742 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.022160067 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069411493 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084601995 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068035049 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09509888 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138241411 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068807001 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.068778938 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.066902463 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.058348939 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032667904 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.074069107 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083239276 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048652879 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044080726 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.087000387 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.069661223 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.087592252 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.073952146 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068178805 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.060100867 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060745332 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060166031 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.060750596 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099403483 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077234012 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.072232965 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037223471 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061731341 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.072728797 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093177787 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034572199 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100072651 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.040242426 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07581811 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.03196286 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079573094 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.029724538 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.11977419 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034449926 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.055189084 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023646874 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.028881346 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097741638 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.070438549 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067017564 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060170338 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.09670119 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088409811 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.0317288 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065202401 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073646243 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059337886 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.225236464 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060547906 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042254132 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048215858 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.059930724 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038007587 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.03351488 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069477768 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047680821 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07685397 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.036933122 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0242644 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086021935 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056803606 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.047842323 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.028544023 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058323594 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.076883431 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04555503 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03815526 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066568793 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055265521 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089880262 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.042856027 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.050833547 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067769619 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03342411 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.045054073 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.02195305 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.037554752 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.02892245 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077125561 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.028873952 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.068654567 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.022155978 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081832455 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042180408 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.046247085 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05673011 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065453318 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082392562 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.048497069 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088832861 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044615698 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.075758165 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061762638 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049940944 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041328697 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056621766 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.054474892 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07822086 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.048695523 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07798284 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101376031 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057433424 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095247836 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044084304 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077966007 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059364259 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080433874 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.068397975 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149014224 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097796399 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069801678 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066915072 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028949229 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053214573 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064606231 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068808326 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.283716169 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077186864 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.022281917 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05750776 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046749566 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060687143 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056150473 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034506752 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091024916 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055629987 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.040295233 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.063978005 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.043585082 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052347123 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.027864992 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05408136 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.052437182 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.04720303 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045564712 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06648153 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071788727 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06402221 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086237337 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.054386942 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.044680291 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.06735657 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062839627 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061309878 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033288503 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033716238 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081904913 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.071842109 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.070708947 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.049592453 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062580209 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064974822 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054687074 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080395179 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062519928 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.080606578 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033441385 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030323387 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.021336666 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.022224252 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070933432 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062815042 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062552697 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052830897 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.023063678 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058726414 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058532409 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025195124 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041977068 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050113154 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.052909276 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.047532861 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063184967 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.066464036 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.049197579 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058256213 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052329348 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09677075 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.051466544 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045560958 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101852996 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104634597 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045601154 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051943847 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025690334 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033970626 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073280382 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103790199 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.255904825 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.031812893 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040166861 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.038230553 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039580884 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.024685659 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.041322123 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.041820505 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05596527 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050317326 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.057087618 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055206219 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.027960094 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05480162 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051059657 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.043262493 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.059347908 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071342188 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.077985866 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.089699153 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.065142772 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059605527 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028399236 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.032799253 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.02908817 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032517219 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.05375874 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.031011449 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028488401 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086515362 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.040321406 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058204626 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061318819 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.039937153 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02807285 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085632024 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.022334286 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086524615 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.021163325 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035430706 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.031815011 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02855626 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048807067 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095321738 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063944778 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067065212 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059305365 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059878106 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13829497 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112628898 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036753805 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095014934 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029175728 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029974816 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029969154 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065327306 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04505436 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068810455 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102510375 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044950504 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052991428 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032385292 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092951867 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.058935217 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058851755 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037295326 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032910147 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096675869 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034765686 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.039743384 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044721518 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.068216278 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.024086846 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.059331928 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038119368 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034975964 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.288447821 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.659179244 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.043452414 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.028088786 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047835856 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.089780901 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078425894 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048692232 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059436531 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.06788774 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052800008 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046463521 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060374525 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.143540018 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.023383864 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047408844 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.054774367 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.049782009 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053696522 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.047432545 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.039856171 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.045437366 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.03916182 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.032484573 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06017959 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040876492 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.048346969 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05874294 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.034622504 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.040546569 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080371349 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.055313581 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.035855531 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042191035 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.056870726 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041031452 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052295475 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.022606046 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06476121 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041877534 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073562226 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.05445788 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063396403 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072627152 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042463966 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094703831 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064107785 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078417005 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041410483 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.031319329 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08195776 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.045300983 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.027504375 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103977593 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.053609201 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.058293858 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059165364 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050148949 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068060086 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074694309 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065998726 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052794893 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028790054 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060327082 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.062658112 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044038413 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034703156 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029605947 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030447874 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064045353 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043889545 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.03555597 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071621453 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045270272 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.205383979 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.05244634 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075104669 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.035236753 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054326605 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.063487691 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.043974899 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062035492 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053464453 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077380493 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117159908 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075692165 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072404704 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082971797 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.030463888 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.028344441 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.021399541 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.313910087 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032238614 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.038222672 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031104362 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082964724 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.036347017 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062666348 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.19824869 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.033671548 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.047290673 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049043802 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.022311825 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.035202911 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059172928 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040003359 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032454803 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065352216 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.034160558 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074232813 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064115936 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053672809 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.04954952 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033927895 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066846654 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.056311512 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.084742296 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048859442 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.029232796 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.069314022 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058757491 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087408995 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.026922069 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034110976 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082553246 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05855858 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08867695 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034607733 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110129085 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090447644 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055130819 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088781254 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.024102063 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.036440008 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043349316 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.076815752 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040117354 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065375756 seconds)
  done (took 39.511034185 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.141922195 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.136864105 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.075856086 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088272615 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.244649718 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.250924366 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.105912332 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077377303 seconds)
  done (took 2.218685712 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024074988 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.036548675 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.03439422 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.275177448 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.053118232 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020238765 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.025108209 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035046254 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.020524364 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.019792152 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.053642595 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020106705 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.020623567 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.42225257 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.01940407 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025014129 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.020675363 seconds)
  done (took 2.199892959 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.299900965 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.585113843 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.233793854 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.496684727 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.100723945 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557428408 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.025260236 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.030796961 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.638450559 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.354168612 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094444824 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.176849198 seconds)
  done (took 17.656001004 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.027847303 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.152199086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.149998794 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.024324028 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.023829224 seconds)
  done (took 1.499984655 seconds)
done (took 74.761959634 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.032359326 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.120454576 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.019838568 seconds)
  done (took 1.232648839 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.152676196 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.148405775 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.148206278 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.149639156 seconds)
  done (took 1.658522822 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.029568 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029015879 seconds)
  done (took 1.124177849 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.194549179 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.243183435 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.042448564 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.038491967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.032303822 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.033939335 seconds)
  done (took 1.173242357 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026098989 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.023689315 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.023821516 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.02435447 seconds)
  done (took 1.156404656 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135312889 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.018882511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021491566 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023069679 seconds)
  done (took 1.25829482 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040157032 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.039260016 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.064926764 seconds)
  done (took 1.207928808 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.038079055 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.031652058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.031808912 seconds)
  done (took 1.165436806 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.05695302 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.047612153 seconds)
  done (took 1.165166371 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035300179 seconds)
  done (took 1.099127682 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.047560258 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.051203754 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.216781239 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.182773387 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.21904692 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.205087373 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.029693752 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030190905 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.025907137 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.024882224 seconds)
  done (took 2.091210438 seconds)
done (took 15.909193748 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.035528258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.138821809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.268724162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.036495539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.607956871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.266225096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.67766983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042055208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.05192507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02107647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.035085472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.585700926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.681329722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.099384419 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.664900942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.089745799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.760446027 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021692181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.020831637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021420466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.657831642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.020976283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021184153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.021724911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.758266937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.409492203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.021929025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.087918979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.020928939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.024850149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392161558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022048966 seconds)
  done (took 12.640324737 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.02557064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.07523668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026166998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.033427258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.022971806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023149859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.02492446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.021405238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.063655682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021142233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.03502875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02050771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.025343259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022077081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.037998919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.020786773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023174301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021843941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021123778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.02158747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.036824286 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.020696457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021467225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02144209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021411247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.035263611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022129304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.020971453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021452846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025084458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026185676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022553285 seconds)
  done (took 1.956039033 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076977044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076829646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026645236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.057664946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072463911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02367196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103166839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.042572578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065968676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021564265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.035229287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021108751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.057292771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022689767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.03908744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021307904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023767506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.021800823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02121433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021839143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.03741893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.020973641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021675465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.021782718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021922514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037753889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022326804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.02111888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021285947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025301581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027132071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022579932 seconds)
  done (took 2.228431834 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.024926509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025325326 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.030829791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034126747 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.019623646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022020002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0232178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.019607956 seconds)
  done (took 1.275874126 seconds)
done (took 19.181783064 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035002452 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.021590592 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024514508 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.033572715 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.027642707 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143312722 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.018574787 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.028258598 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.02485162 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025021693 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026290279 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019670808 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.023396542 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.018210514 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025251822 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.019404742 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146112144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.023909489 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.144065751 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.145119596 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022155341 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025119675 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.02816568 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144113795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.143971658 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144312082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.028714552 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.025512124 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.019913261 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.022584526 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.141994474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.143971011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.022453097 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140518471 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020015975 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020339931 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024258386 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021429086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149433335 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.028816959 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022126532 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.02857561 seconds)
  done (took 3.401642716 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1477192 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.151670221 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.145894306 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.030221256 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.02660492 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.029865926 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.152318267 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.027173725 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.027160511 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.151734791 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.022957055 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.025763301 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.028053166 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020296381 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.025578594 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.023476572 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.027320783 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021358826 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.025481135 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.025597412 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.152266253 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.020552285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.02799599 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.026932621 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.022685363 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.028723174 seconds)
  done (took 2.509238846 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030053275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.039380861 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.046038586 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076890994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.047544755 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.032606746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036019795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.038828315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.042478716 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.020741866 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.039723067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.046071864 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.045682704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.027606558 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.04467578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.036096259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033651883 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022341759 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027358067 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.051504798 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.039431135 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.035575479 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.046503332 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.037124583 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.019816724 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.029990634 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.027989566 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037053287 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028075302 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.032884797 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.024547291 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.023995246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.021777424 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031574015 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024642387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.018955492 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.041667238 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.03373745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.033476526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.044695995 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.030802601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022158856 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048131945 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.086650327 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020419077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.023348873 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.024876687 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.033255701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022037883 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.043614246 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.035686313 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020347013 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.036384235 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.021987891 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022061779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03581874 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022231342 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.022750801 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.032433407 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.026742752 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.037846636 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026134177 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.040703462 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020493635 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032060915 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.02201011 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022292086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019389323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.051790487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028111094 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.066640702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.021792129 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.018910709 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033074564 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032180382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028179449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020377019 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.039063083 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033485031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024382927 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.03154958 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.023585712 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.023812895 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.045408348 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.019726011 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.018926872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.018809075 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023191192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.023848866 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021309811 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033330825 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.02014149 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.023853257 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.034542145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020600128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.02124226 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023232176 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.021933692 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020115787 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03062995 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024254287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022418199 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033578258 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.021756005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.023834015 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.035875962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.029823131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020160327 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.021932222 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023116943 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.022427207 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025236298 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.023781417 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.022658516 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.025766737 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028187612 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.026766333 seconds)
  done (took 4.695486116 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240747447 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227923274 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.021645801 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.225010077 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030311629 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.158033052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227769731 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.230167277 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021513709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022187982 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.020480779 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.171594486 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16673322 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179042327 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.15987554 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.023481474 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.041100437 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.180627082 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.234451646 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.230209219 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.040101307 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.033604826 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.023775793 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.022655506 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.021987371 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.031010649 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039085609 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031037425 seconds)
  done (took 4.159705323 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.029715115 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.061151012 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.024576353 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.043350211 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038110166 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.021276881 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.022874977 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022313781 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.034783264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.026517076 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.020959989 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025038449 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.02450694 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023168959 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022020764 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.027612267 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.027458237 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.028480324 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.020524258 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.024450149 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.031507714 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045341554 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.025072814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021212115 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.024525141 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021142431 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026489503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.029714545 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.020881336 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.020834487 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018287767 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.025623316 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.035271993 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022438938 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.020938225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.021818384 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.02130108 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.021441325 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.021618697 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.019488592 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.01951996 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026437758 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.019983239 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026240484 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.028791121 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.023530005 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.022685753 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.023816241 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.02372611 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.018158832 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.024858728 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.024395126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.023698411 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.029132715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024814583 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.023973231 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.02266896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.035615392 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.025658782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.020639162 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.020422264 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.01964283 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.02330629 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.027837363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.03132577 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023311098 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.019728461 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.021529584 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.022875482 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.02884321 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.020550164 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.026619835 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018305184 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.021544033 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.023608054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024355533 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.022712517 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.019858916 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.02109328 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021635468 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02138676 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021244376 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.020566716 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.023908985 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.01938133 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.019819222 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.021891964 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.022895732 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.026712323 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.020256737 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.024153111 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.022978771 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020205376 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.023867045 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.026541805 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024055606 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040544909 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029093335 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022008216 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.01940046 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.035436194 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023165787 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.020645055 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023273607 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.025620057 seconds)
  done (took 3.731100232 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.050926417 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023362684 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.037269444 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.049298958 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.031287254 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.026772825 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.034967782 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.022585306 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.042412701 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0204573 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.029889944 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.019673557 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034019031 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.029699045 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023130569 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.030918586 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.023766362 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.038239183 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.035625343 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020095001 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030062246 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.033537378 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.033753599 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.03594151 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.034789475 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.036316052 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.033334982 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.023971375 seconds)
  done (took 1.992107247 seconds)
done (took 21.562587808 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.135834654 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.338446416 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.107970967 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.802541148 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.176715795 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.227953468 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.226973244 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.083540907 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.565156181 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188504602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.758067975 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.765580684 seconds)
done (took 59.539782771 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.225160188 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.251407351 seconds)
    (2/2) benchmarking "String"...
    done (took 1.344141739 seconds)
  done (took 3.709993683 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.557268445 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.117676731 seconds)
    (3/3) benchmarking "different"...
    done (took 1.148323012 seconds)
  done (took 4.929815392 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.47378595 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.760415627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.431705318 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.084738681 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.100249294 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.866178651 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.270799646 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.76496596 seconds)
  done (took 27.38885178 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.092439814 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.46036249 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.464838973 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.581173762 seconds)
  done (took 17.787469156 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.540680453 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.511894142 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.512355672 seconds)
    (4/4) benchmarking "different"...
    done (took 1.805122492 seconds)
  done (took 7.600506717 seconds)
done (took 71.29989482 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.084168627 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.249454917 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.125034104 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.276707755 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.178535623 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.226473342 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.100430281 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.12850078 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.149640575 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.121333751 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1100356 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.108959661 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.160182826 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.207154515 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.100230135 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.123949109 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.381485351 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.097512248 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.108568403 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.923811774 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.525820577 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.093121314 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.109520815 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.169894424 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.522258108 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.151252195 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.548557439 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.104638663 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.696130273 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.097073587 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.1030907 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.097655259 seconds)
  done (took 182.281450483 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.104016855 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.996384653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.898075319 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.104098451 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.496964031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.450716004 seconds)
    (7/36) benchmarking "scal!"...
    done (took 5.356501178 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.533153763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.128035914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.180167894 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.035330816 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.127379442 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.09168425 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.675413144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.172435344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.111002183 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.003460568 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.928675224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.14665912 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 4.091891044 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.106008843 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.571888289 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.58051699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964366972 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.138892954 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.15811647 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.109455225 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.191757808 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.62628214 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.002987974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.09421779 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.114831907 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.293143443 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.337254588 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.09102988 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.103691847 seconds)
  done (took 158.228737477 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.333073007 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.094041511 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.133260183 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.207973255 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.04665714 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.901563694 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.097896129 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.086727471 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.086035642 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.091807219 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.086862984 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.155532964 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.096983761 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.124032796 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.126126154 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.089787512 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.089255841 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.187740834 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.106205691 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.085631374 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.088067132 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.190637646 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.43619259 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.198193959 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.097185524 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.095608015 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.195474586 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.103261715 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.089070724 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.087746276 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.195435108 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.096139203 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.218992878 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.208620911 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.10287138 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.146437373 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.103498822 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.31433844 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.098990558 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085741994 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.091522929 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.137762162 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.096240719 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.157475828 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.201624227 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.102525539 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.11321635 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.840861699 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.663581013 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.099044956 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.088047102 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.085420937 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.092566702 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.100199256 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.463168295 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.102900986 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.123658424 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.63270824 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.104676988 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.085132967 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.084772005 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.08831123 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.087650891 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.091707876 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.121745587 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.729460547 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.40787886 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.449697788 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.829668301 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.097274582 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.085921037 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.091333305 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.791786195 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.16132893 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.0882119 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.086444042 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.263475306 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.10151624 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085877345 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.005090657 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.0058912 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.101105896 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.19492971 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.096757105 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.084934995 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.12203359 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.155599311 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.105587433 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.10606626 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.139996829 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.096311208 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.089195255 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.092435892 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.006728956 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.097737926 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.096384699 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.450183844 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.096922898 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.086456153 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.192026792 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454693273 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.096110743 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.166943251 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.493880219 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.038699556 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.098926755 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.085078827 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.103810234 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.086399663 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.100622294 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.099150735 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.087284717 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.085320629 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.092563539 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.087562148 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.085750201 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.085544102 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.104101111 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.089759375 seconds)
  done (took 324.270076609 seconds)
done (took 667.338864676 seconds)
(4/20) benchmarking "parallel"...
done (took 1.086300841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.360781935 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.170302391 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.237428822 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.354277443 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.315322865 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.285460723 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.311919752 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.404371261 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.34215459 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.278531754 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.336884274 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.286588469 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.413662542 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.367261971 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.397945291 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.375724131 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.311020563 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.764414255 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.32635484 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.28244008 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.324761051 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.273154384 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.26662576 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.338404041 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.41120971 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.286077143 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.485761949 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.34536556 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.318306876 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.359769118 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.376446189 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.394769255 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.323175094 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.408162104 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.36908314 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.416779923 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.291493518 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.3969037 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.309112011 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.318000687 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.336049348 seconds)
  done (took 63.3746349 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.442056502 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.279654457 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.41778921 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.396916158 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.849632625 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.392717182 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.485260428 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.296607572 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.281672924 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.39944794 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.412455172 seconds)
  done (took 17.786646339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.170421916 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.277646662 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.393981257 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.377385101 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.517605745 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.395772642 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.40823484 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.281755679 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.280498128 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.399021172 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.4207289 seconds)
  done (took 17.051107411 seconds)
done (took 99.302982673 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.668227179 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.173131232 seconds)
  done (took 3.941566186 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.119280758 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.10616036 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.099705807 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.103349092 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.099334911 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.098079021 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.151291003 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.113817339 seconds)
  done (took 9.991196002 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.098527014 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.097795349 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.09889617 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.098654623 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.104062964 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.098223042 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.097444282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.099331065 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.097790781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.097129148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.097333966 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.099423754 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.099819492 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.098148354 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.097269798 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.097677041 seconds)
  done (took 18.680216824 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.100142207 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.099021448 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.097418899 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.121913775 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.104843337 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.097147508 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.098647224 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.106291046 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.103168967 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.098899135 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.097916751 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.099565861 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.112468158 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.099281742 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.102172141 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.097468186 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.102025114 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.099627409 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.098477082 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.098167775 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.09788595 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.100942712 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.101386417 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.100903521 seconds)
  done (took 27.544175538 seconds)
done (took 61.267937947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.665179461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.090791888 seconds)
  done (took 6.855314892 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.104722837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.102374146 seconds)
  done (took 3.426097397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.110853988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.102130756 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.102947071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.10035632 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.104011779 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.10335705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.104133649 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.102469789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.101601939 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.104918229 seconds)
  done (took 12.136855197 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.101011339 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.101690602 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.103789048 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.102387052 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.101769534 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.101559471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.101975127 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.10319929 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.102236579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.101772513 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.100854845 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.294843817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.105772222 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.327998567 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.102222094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.103287521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.104279947 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.101141601 seconds)
  done (took 21.364068161 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.102768269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.102820065 seconds)
  done (took 3.306936583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.101555562 seconds)
    (2/7) benchmarking "second"...
    done (took 1.102987455 seconds)
    (3/7) benchmarking "month"...
    done (took 1.101449517 seconds)
    (4/7) benchmarking "year"...
    done (took 1.102639309 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.101201878 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.1010193 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.100409486 seconds)
  done (took 8.815195117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.569349867 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.261954031 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.318606209 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.594393928 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.768142379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.062986475 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.775707454 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.046133745 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.923266464 seconds)
  done (took 16.422691167 seconds)
done (took 73.412149921 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.721352217 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.098593257 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.763426257 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227981296 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.104307995 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.472173211 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.115360819 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.704875828 seconds)
done (took 37.322384442 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.395701861 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.086109707 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.134257643 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.136309827 seconds)
  done (took 19.464874715 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.091607463 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.680759927 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.136162371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.137643174 seconds)
  done (took 19.258653045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.605584492 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524088856 seconds)
  done (took 4.251781363 seconds)
done (took 50.46155308 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.103078505 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.103628943 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.101951387 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.104646291 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.103053873 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.103244087 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.098125102 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.101967486 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.104862792 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.103422728 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.101677008 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100973408 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.103600945 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.103767795 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.098132963 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.101483286 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.097772666 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.102883915 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.103528738 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.102315847 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.097722811 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.101866731 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.102575193 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.101888497 seconds)
  done (took 27.5514867 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.171444963 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.160026171 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.177280184 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.170557156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.198618913 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.171192157 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171938254 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.145234508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.179262679 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.151999379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136556433 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.192031106 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.142377238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194260872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141260809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.194462139 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.176748606 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137559062 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144132807 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199999102 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.170308626 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139001352 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.193389705 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138364997 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188933576 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.131804489 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.148848837 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.160645001 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.134906816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.191856923 seconds)
  done (took 36.056832736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.135138346 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.104450972 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.102072075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.188954248 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.103352441 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.103637667 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.102526637 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.101866235 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.102877882 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.102413512 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.103425787 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.102334714 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.101734317 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.10220383 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.105344647 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.102833771 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.131500535 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.278701035 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.105717501 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.104503376 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.149784264 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.101846708 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.104949023 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.105254927 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.1019534 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.102003154 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.101879944 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.103525721 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.103189311 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.103488734 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.102504888 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.144018373 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.136349125 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.101578763 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22118972 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159270861 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.103747554 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.613391787 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.09797271 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.107969661 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.102630246 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.101834823 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.118459089 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.102717051 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.159125975 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.101707957 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.105672171 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.106099548 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.103375667 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.10215473 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.101605749 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.107953834 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.118366547 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.102078062 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.103034744 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.103505993 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.104129516 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.101724174 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.102172081 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.101992804 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.104548599 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.173124358 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.102122585 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.101824226 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.47063476 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.103750558 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.16470394 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.102084704 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.102960053 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.313565301 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.101854312 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.307538311 seconds)
  done (took 85.654595054 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.103011645 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.101572421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176356644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175218027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.105001337 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.103727246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.104571662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102226542 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765949983 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.103388951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.101785051 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.101648266 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76780706 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.103222068 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.101805554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.175322079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.102589941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.103013054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.100669401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.101591312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100883567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.106256441 seconds)
  done (took 26.911144376 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136871288 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.113728814 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.134854051 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.116828471 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.113926342 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.159058171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.183616768 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145407092 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137189303 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.131989808 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144186049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136925624 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.115365074 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139359799 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141211867 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.174263598 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141252148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17267246 seconds)
  done (took 21.641059092 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.279155282 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.27306433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.179178691 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.143845989 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.361776516 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.336979351 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205801716 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.274361183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.140630286 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.270217128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.272764056 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139789404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.330948285 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145956563 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144123105 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.36674832 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.178745445 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146263993 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21183888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205204114 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279358991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211816999 seconds)
  done (took 28.200358067 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138575939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.15198496 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.177818564 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.178489001 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.101582814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.10193421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.159110462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.147445131 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.114722781 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.140085473 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.134359102 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.104952615 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.194021631 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.159295178 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.188937825 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.136897407 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.1615218 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.159739143 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141175326 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.112313699 seconds)
  done (took 24.013235104 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.10234219 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.101937465 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.128303201 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104642853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103439578 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.102335452 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101902111 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.10192447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.105191931 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356788536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.102367931 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.103245604 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105573626 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.104398816 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.102866216 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.102410877 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.102504159 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106591637 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.10261875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.102260296 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355206525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.1039104 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.10281311 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.109322885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.103288531 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.103299192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.104157831 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.102397065 seconds)
  done (took 32.531690477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147915038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.103441555 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.103010466 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.102077811 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.101842887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.164162204 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.104717746 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.101809889 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.102603568 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.101807877 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.102981279 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.105261465 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.102378334 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.146671372 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.10352354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.106095319 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.151273035 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.112175752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164048551 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.089593878 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.111249117 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.149317447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.10881423 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.102241785 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.087813306 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.110302546 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.103545925 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.102708534 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.103142714 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.101893579 seconds)
  done (took 52.500416533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 6.0957275 seconds)
    (2/2) benchmarking "in"...
    done (took 6.104060605 seconds)
  done (took 13.302146077 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.103911752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204989601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.102231931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295670542 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269820285 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.280440319 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.265815931 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198973632 seconds)
  done (took 10.829527008 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.103789417 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.497903277 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.12726932 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.102534493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.103337966 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.590049883 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.063895453 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.011982213 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.907207475 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.973870024 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.20240272 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.625313359 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.067854492 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.42507273 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.231053736 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.975790767 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.341186069 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.643544567 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.16542302 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239095241 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.826720925 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217701616 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.102899743 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.103239484 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.102599298 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.002764579 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.996319459 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.520879193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.24563253 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237681184 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.864391469 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.193645587 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.103045977 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.35476421 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232409376 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.103707083 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.262435882 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.219622147 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.105270716 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.106744864 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.836598567 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.82880637 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.393679391 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.334340768 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.197658982 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.103304213 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.103391702 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.104483405 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.357354858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.774682661 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.065809972 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.072085035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25414596 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.10327225 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.779061021 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.117912899 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.103906102 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.002928826 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.656320243 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.358762278 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.467454191 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.183075073 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.148607883 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.242258571 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.104915668 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.298049567 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.9144285 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.885360526 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.871020834 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.225158973 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.611863213 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.125227141 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.102369389 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.104110061 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.042213373 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.425343959 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.102632222 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.104722065 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.104848602 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.103753607 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.364802523 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.232416756 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.94177554 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.254467897 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.295372534 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.55294616 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.241499197 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.103809016 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.779203044 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.965488997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.201611169 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.742282509 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.318232999 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.254027745 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.086776584 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.380415864 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.144614326 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.102504516 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.948181379 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.736982306 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.120523109 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.104350903 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.44468055 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.126646166 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.107247887 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.103044633 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.801292216 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.242729805 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.216269993 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.151389871 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.104266234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.104410105 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.691390368 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.206227435 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.109091462 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.585746226 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.074412918 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.645110745 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.317570544 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.319166194 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.448462823 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.075071911 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.389649873 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.914063316 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.11112565 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.622920022 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.0079809 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.685897161 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.357197755 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242152655 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.938075259 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179263128 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.103277028 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.241217949 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.188923638 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.102867195 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.106161642 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.103405365 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.103148822 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.10299058 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.238477405 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.481217495 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.927421592 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.120860282 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.338565823 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23541425 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.929371779 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.321465733 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.808469946 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.254378738 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.103546546 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.798814603 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.352515304 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.837365442 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248524046 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.104461781 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.105139776 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.9651531 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.12810273 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.213140821 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.107987091 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.718583558 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.211042963 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.110076496 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.107755424 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.564090308 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252950674 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.103532547 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.197866535 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.897717861 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.949983045 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.120505836 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.407869485 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230712038 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.104971362 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.10418524 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.103273214 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.890465991 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.79230436 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.197187235 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.731964041 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.863859581 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.205615071 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.276113065 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.205924169 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.381057668 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.39141206 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.34067881 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.186091615 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.200940545 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.112105366 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.602957546 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.125143892 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.287210421 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.973786529 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.129241793 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.06410811 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.284001692 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.018755597 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.213699812 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.816701265 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.10400753 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.216736361 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.112619276 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.106321105 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.255572337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.384265503 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256894138 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.645229139 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.123809525 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.106188991 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.779946506 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.243757664 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.800686226 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.221551312 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.942324279 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.184692994 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241736626 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.242856685 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.845633697 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245568674 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.104898514 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.824743607 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.268270528 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.105247949 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.150264943 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.787682732 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.907617797 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.853848477 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.754678011 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.058817715 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.66425762 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.357804514 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257428326 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.971766847 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.220722669 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.411856853 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.148872062 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.588444882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.127262536 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.859764189 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.194026849 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.856560069 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.120971429 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.083855471 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.239665731 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.569815478 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.233417774 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.105287759 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.295372285 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.20986666 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.771140636 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.246080037 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.312171321 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.402465513 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.068572028 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.215771266 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.334271354 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.172884027 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.023332977 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.092529521 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.457540524 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.09550146 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.111102105 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.201700346 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.86530726 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.27931268 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.479460163 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.272599318 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.105223087 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.109983092 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.293474531 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.202647001 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.104913962 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.418497897 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.110874592 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.147366697 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.21590476 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.211766663 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.156077107 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.380427449 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.248876873 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.384021486 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.681308516 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.686608225 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.942688999 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.244373385 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.77525304 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.250743998 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793509556 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.20873645 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.11163281 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.796248438 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.245244772 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.395084642 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26229234 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.219952675 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.778947727 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.216445501 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.399930936 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.279740589 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.240992738 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.857881137 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.649065258 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.357673517 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.506314048 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258277421 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.644913994 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.174775411 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.675257811 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.132825811 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.808272448 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.162891403 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.170462376 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.105435616 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.105820784 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.638928094 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.093259201 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.116769065 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.890611616 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.822132322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.027801311 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.865248491 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.215169546 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.112943397 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.105918534 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.106861734 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.011475814 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.175402701 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.440192014 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.301246842 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.108931986 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.107384064 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.071752291 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.42076098 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.920096216 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.993294021 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.150514714 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253885319 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.106246184 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.106508233 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.10599552 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.105661309 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.106463874 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.104167122 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.627439278 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.126849735 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.704723134 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.21065349 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.11084864 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.308546705 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.177036071 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.107797878 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.276219133 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.198620168 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.221456463 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.181601016 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.107103958 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.50332938 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255088352 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.069594361 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.542338953 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.397856775 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.353201878 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.633275759 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.163223729 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.595286142 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.420765913 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.87599216 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.114190491 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.001287009 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.200340321 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.898306331 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.086156281 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.530175516 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.716974442 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.088799876 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.386871259 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.028157539 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.485044104 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.233903618 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182782487 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.107194879 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.122387246 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.284007085 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.361424816 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.158949508 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.337938212 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.319840231 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.097714869 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.537354071 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.212184887 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.311059577 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.140332425 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.122387634 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.105524425 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.111283029 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.621013203 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.992138344 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.204150896 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.1069336 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.999003873 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.952646086 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.042383948 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.868439489 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 4.993320863 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256050417 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.109795481 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.316931037 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.16332 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.87043709 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.13087614 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.885304549 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.446025662 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.159971426 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.274633477 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.665223069 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.803203728 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.50262721 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233194707 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.109507727 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.472842718 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.217470394 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.260338919 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.019865708 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.455922356 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.665821184 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.534400996 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.452244533 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.234778692 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.005480661 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.657590155 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.090862599 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.112146398 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.942813944 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.290753108 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.492591302 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.080155107 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.37096142 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257252549 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.768639879 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.808359254 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.256416591 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.700807985 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.256389672 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.105980928 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.873214661 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.017187725 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.392226403 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239248601 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.10857301 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.120645225 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.795541794 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.704130679 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.354423498 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296762958 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.110420809 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.867707004 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.815638923 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.210858175 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.111733483 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.108099854 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.616441451 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.166258115 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.10795124 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.500940824 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.718462909 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.257666458 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.598287869 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.216315598 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.257732444 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.384974455 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.445196723 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.469142274 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.175111314 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.108089056 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.109756277 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.105793227 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.68150333 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.121500956 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.109495919 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.749496644 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.257115455 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.855806851 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.037952984 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.369468268 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185492477 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.562059804 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256733332 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.595268817 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 3.967332915 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.201872408 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.353687779 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.156488575 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.220652132 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.86702493 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.252583764 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.108720727 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.021462036 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.425328577 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.460980865 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.534139395 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.454549918 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.202686864 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.820648328 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.228141776 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.906073817 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.15993993 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.107046205 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.596122622 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.211508813 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.560229067 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.32803216 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.568733695 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.23410665 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.412785424 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.33292958 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.205731966 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.108346723 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.193412655 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.102011802 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.141429991 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.655485658 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 4.998459392 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.67195363 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.254040279 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.986163623 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.623238754 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.034495029 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.293555336 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.395503951 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.490748923 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.14771501 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.080195697 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.462354108 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.2089604 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.280733877 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.208516931 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.888084582 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.186288869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.106289082 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.710514116 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.121470995 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.109916644 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.109771695 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.010763263 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.892007908 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.222031049 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.307157252 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.213511089 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.108580681 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.697180666 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.397725745 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.150320138 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.105702829 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.107227447 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.017595428 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.224387291 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.106867981 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.445744042 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.270904905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.411255813 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.966353241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.557478181 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.207481082 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.108243849 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.1077692 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.799502647 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.667559618 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.143802394 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.512857878 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.136086307 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.652941101 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.082257273 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.580574084 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.639970783 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.152259357 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242509224 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.109993769 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.159486698 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.103039374 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.038961835 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.850688035 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.547503709 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285586238 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.879026298 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.100941546 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175775172 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.267654129 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234694102 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.108854961 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.107126103 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.10682754 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.588935507 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.085133108 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.114507374 seconds)
  done (took 1436.493358317 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378398312 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.107045044 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.122801417 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.135390586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.105680179 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.108543359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106159915 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.107716131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.109177987 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.106353705 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.106714491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.106920232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.108051474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.387118672 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106628158 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.106674499 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.124371394 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.107416431 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.105616139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10851789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.10727194 seconds)
  done (took 24.970434837 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.106034038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.182231461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.152998044 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.177441347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191969022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214707477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.190737617 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259989191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231870943 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280911763 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274240121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124153408 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.107846077 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.106433392 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115700904 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.107770099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.111024684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.106273648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.114120142 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.106397785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108940569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.106667648 seconds)
  done (took 26.585884339 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.110870316 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250597567 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 3.010512365 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.243143018 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.112408116 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.111459127 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.108309509 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.312966068 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.130185485 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.006462178 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.605092946 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.145354145 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.112647399 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.285398123 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.210583006 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.108719973 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.228987424 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.108030142 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.108954984 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.158991318 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.273810781 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.3679499 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.255314382 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.108205441 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.943212649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.261726428 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.107688701 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.107613786 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.157402137 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.18362508 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.199626958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.114388286 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.955850921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.870727142 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.435466528 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.097095081 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.209611259 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.12308243 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.110684693 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.109277761 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.304374367 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.880287255 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.112730421 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.107731373 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.404749306 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.234590134 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.108947865 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.455435422 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.139903473 seconds)
  done (took 89.319817264 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.20776216 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.240246309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.164060508 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.10872458 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.23296735 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.107459295 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.164925688 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.109408425 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.107182581 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.108350511 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.244201433 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263760266 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.109127896 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.126213704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.247686027 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.109755315 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.108695041 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.107728614 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.110152647 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.108541197 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.110550052 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.245601569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.350290806 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.276232167 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.108987672 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.107049821 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.108216319 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.107875904 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262327693 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.107775576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.107296858 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.107478919 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.239405429 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284789996 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.221176275 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.109270424 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.235963009 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.110584609 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.10804754 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.108175197 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.109376698 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.108893786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.161570775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.237624858 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.111449697 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.21364876 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.234819694 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.153396784 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255457663 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.110524664 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.111361518 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274362431 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.108613893 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.109827927 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.108568637 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.226933969 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.120855779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272946862 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.209990265 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.440547835 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.155892704 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.108176884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264851247 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.108185184 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.107805446 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276109744 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.212099075 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.108277401 seconds)
  done (took 80.741862814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.1148549 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.243073163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370734166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308692019 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243351656 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.226898014 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245256158 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.240784428 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.240983195 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247808403 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243921674 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.20386022 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.211829226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258184799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303071677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224076197 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.226455705 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22366677 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248481335 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245957428 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.225402126 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284223484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243647476 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284908471 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.469475981 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248966569 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36631672 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.2468012 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284245707 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.243807696 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.469686478 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.253481957 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.2425675 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.2872297 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.466077223 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.248843633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204391693 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383160455 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.25267226 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243017528 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215003299 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289189771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243098044 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.211962165 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227098162 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.241263346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284696086 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.4641839 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26338457 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.344975082 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.243799653 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287370722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24009285 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227441024 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283207248 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.205610589 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282651384 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285035323 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248168999 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281928982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.303009454 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.345826086 seconds)
  done (took 79.948708904 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.108327362 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.109577525 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.197290001 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.108153154 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.107685434 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196046373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.109712538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.10898159 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.108494183 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.108888812 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.111576794 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273948358 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.622475265 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305923019 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253859324 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.463053507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200199824 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19730197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.109198588 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194798543 seconds)
  done (took 27.157022631 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.111001261 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.107468963 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.107620516 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262555706 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.110367191 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.240625131 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.108294052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10733815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110438428 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.10823213 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.108742504 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.107906506 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.111537028 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272924259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.108037659 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301946275 seconds)
  done (took 19.493605898 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.108869853 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.109464076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.107875669 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.107515649 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.109717049 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.108914189 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.108081135 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.108851197 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.107387673 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.567828154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.210128927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.114129518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.107853167 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.110881356 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.109508727 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.108461721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.107783574 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.109417377 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.108780662 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.109597102 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.682088213 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.118061469 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.222232032 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.151218561 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.109043347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.680901201 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.110895504 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.108266372 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.107684224 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.108196373 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.11181039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.57975433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.10913729 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.117114084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.230480183 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.12756799 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.108119521 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.109479486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.114762425 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.111233863 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.111237574 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.107980134 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.108219566 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.112199215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.107894525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.10828061 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.114165599 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.565521209 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.251103349 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.169304946 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.124599612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.173569185 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.147645845 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.582486502 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.108555511 seconds)
  done (took 65.891818343 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145222049 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.159475018 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.107849698 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.118475722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.17844897 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.146448826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.147440557 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.233795486 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187021828 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.110079182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171794049 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.11999644 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16266603 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.161993408 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.168273201 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149548864 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.110400269 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.185113749 seconds)
  done (took 21.873268951 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.107878484 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.108358079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.108756962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.108374161 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.10700999 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.107562551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.10864404 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.108712894 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.107831199 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.107144882 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.107473331 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.124125636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111034158 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.10759974 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.108103983 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.109109795 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.109494098 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108534752 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.113941344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.185727882 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.152794888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.190296281 seconds)
  done (took 25.742490756 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.224271076 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.153285914 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.117256093 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.155546857 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.269040432 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.25985262 seconds)
  done (took 8.372783838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342893259 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355476526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203716591 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163985066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177614799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188879597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186457429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195711908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179064265 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414860661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198054171 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188851655 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18401429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262213539 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.174411293 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.175061194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19541267 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309934059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324781678 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212610061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197715021 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180473675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195278095 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184853776 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195570444 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238595039 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180275478 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416993546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19383796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260124588 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36640315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223877158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18244685 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410315167 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.151293839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182953667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188398283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181633783 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.176866276 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238416772 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.150777553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17277875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342962805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215414117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179763221 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202322928 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197723894 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201971879 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199553121 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421239486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.17649931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232837011 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177535275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212634072 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275568503 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41716059 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418847752 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231587404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.172596526 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416907334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234103598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.172244129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232169278 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416176087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186109146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342762044 seconds)
  done (took 83.108825695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235736454 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142476369 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190058093 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417503655 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235992784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193064562 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197037627 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193691742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194676412 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160725898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230002457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336811229 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244830105 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236749137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195272585 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191764069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205149436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230540441 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166925874 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413520375 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198761843 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234467372 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234942908 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236445373 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414064474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179062094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197247396 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367439696 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213758067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195203283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213662888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201501879 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234992187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.144111496 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229344908 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190839086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196375202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211451569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320331507 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187607304 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234338235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191365312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196120377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189899121 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411863641 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198926704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196258487 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.159780881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197315621 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258283829 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441732951 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41242518 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41849399 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236498378 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193555275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198248186 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196369723 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19287249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189408656 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180078799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384234749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301560735 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419889531 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195833784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193498439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234209527 seconds)
  done (took 82.954330573 seconds)
done (took 2432.933770116 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.21306592 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.177266862 seconds)
  done (took 13.497533025 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.106535653 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.104861958 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.265623376 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.109404937 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.133287458 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.288842275 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.107199219 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.117277304 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.104876039 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.194463566 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.109359452 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.276248733 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.296930169 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.110618665 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.127487232 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.119805172 seconds)
  done (took 39.702031874 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.138028493 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.65062012 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.063344683 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.915747041 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.142150389 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.824109166 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.490720266 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.758525835 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.416910248 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.566989349 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.492252782 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.01342572 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.112114352 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.229671128 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.628250029 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.655618581 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.715606545 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.757545822 seconds)
  done (took 60.680998063 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.094255565 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.266096558 seconds)
  done (took 8.498803185 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.09489852 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.132361937 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.12519322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.128112465 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.149546137 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.108039006 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.211175745 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.138088383 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.15458646 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.140930915 seconds)
  done (took 62.512661689 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.112059276 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.611151412 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.419639872 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.567415342 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.828380017 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.605389492 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.363314767 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.654965346 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.209599215 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.094990514 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.431663494 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.603794532 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.969332953 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.396237776 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.769667235 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.344476925 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.866268704 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.678800495 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.447523977 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.518345595 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.3821226 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.235680901 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.564883228 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.063397631 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.203494747 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.752373197 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.422685726 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.238690904 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.221532444 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.315763596 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.504786549 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.12435606 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.37600693 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.114953604 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.201439562 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.793268831 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.841569594 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.307394658 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.586621608 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457484209 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.511334715 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.821566262 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.175660485 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.80046015 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.270772339 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.508106181 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.239574679 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423475487 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.266006675 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.25092473 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.706803467 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291784597 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.23845122 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.218758575 seconds)
  done (took 156.052091796 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.093838271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.577129327 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.274194705 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.097134444 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.433997078 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.346106874 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.961582973 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.690180077 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.12464044 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.476160983 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.272860806 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.235260368 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.098202415 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.107941431 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.107406419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.107513134 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.289721023 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.709706613 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.115510702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.122741308 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.317683187 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.345540034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.228140753 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.099721048 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.275597777 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.37470153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.513024217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.234709506 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.525234597 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.095042143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.601673536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.136031521 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.107065997 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.162594506 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.491722147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.477620191 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.530730478 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.107568216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.106397887 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.105067377 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.76073308 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.335719302 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.46038397 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.259335032 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.438788303 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.378502496 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.700992865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.097939989 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.855881192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.411384833 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.373066814 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.315513128 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.371519587 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.105000315 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.107688942 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.103931739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.103302153 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.384644212 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.265460599 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.21901558 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.097525834 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.104426954 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.106612137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.364856096 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.096889107 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.2247572 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.100227372 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.223500024 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.226091388 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.221507254 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.269449314 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.379201178 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.340949632 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.665632623 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.626095745 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.343897906 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.534062399 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.356110057 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.102399868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229519645 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591298006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.621531485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.258812237 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.357459119 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.408653087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.453365841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.782589158 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.172179137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.337827508 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.269683642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.334748793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.382523855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.461345224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.019581409 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.178973646 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.106432295 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.024269737 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.357545136 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.115647678 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673426581 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.402024929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.913176892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.353087675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.424323668 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.204471851 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.098413708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.704912984 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.107915485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.336584399 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.370641749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.114400936 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.107925114 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.264922226 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.975620447 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.103624789 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.807719606 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.579707337 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.109877517 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.269759739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.112031316 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.373213267 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.145157545 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.353603428 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.660943681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.393228109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.32319937 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.397728896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.101033233 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.560723079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.392772844 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.496240761 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.361645188 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.098355032 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.105831467 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.439254921 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.098198454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.10373541 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.303915568 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.118980242 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.297093431 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.098745843 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.381286113 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.259733873 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.470628752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.15281695 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.381215611 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.500499777 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.537305194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.150706511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.309644166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.1516679 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.207978632 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.303870667 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.097145949 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.106120235 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.800048643 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.108142495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.287426444 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.473867053 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824483284 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.4787535 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.46114739 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.096567077 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.521076694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362296209 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.78290054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.817780858 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.275276686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.099127598 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.105641706 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.123777067 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.362577833 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.315356728 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.096461141 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.104271124 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.953716193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.305201452 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.100830042 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.301432762 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.191996133 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.654160813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341028836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.098970667 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.476109553 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.100699602 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.314458935 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.672739125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.441427385 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.10598674 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.106462026 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.134052423 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.107700151 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.357041767 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.305366035 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.861172227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.289579452 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.417720267 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.414163595 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.410706258 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.556841731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.107916546 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.468936822 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.11019772 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.523853427 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.104206429 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.333021623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.382573834 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.100398089 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.351098086 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.530623968 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.399761837 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.506445931 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.09859191 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.105728177 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.108392744 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.277519025 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.504265986 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.097226863 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.822147448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.4789533 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.224724755 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.312588664 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.431570894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.138723057 seconds)
  done (took 737.397436149 seconds)
done (took 1079.434989275 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.096015712 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.10796842 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.109364769 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.182023492 seconds)
  done (took 25.604707308 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.246810245 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.213718494 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.289498625 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.117219854 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.464349763 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.170946103 seconds)
  done (took 11.748280183 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.095749269 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.283684216 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.106723726 seconds)
  done (took 19.595838862 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.493840606 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.660321336 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.263357114 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.195002251 seconds)
  done (took 6.738551251 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.126435219 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.129132385 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.114446781 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.132029078 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.110105526 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.110325947 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.138998069 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.145482288 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.261879124 seconds)
  done (took 11.38338238 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.04305712 seconds)
done (took 81.213523016 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.39867651 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.402370438 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.230922243 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.296964656 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.348448772 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.56939659 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.393788108 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.139294445 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.401780028 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.581911277 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.658408644 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.175811027 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.385191547 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.559916573 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.421689562 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.278218712 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.156181752 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.168467998 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.773287784 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.321426945 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.113021072 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.317808382 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.25234276 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.134327691 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.015416172 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.222640547 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.413346746 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.938923634 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.290555608 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.132928686 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.199204175 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.595121236 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.292950507 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.422681194 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.208591618 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.998514092 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.558921092 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.219473429 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.272832261 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.531360729 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.387613325 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.22818513 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.095997403 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.389540811 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.686713855 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.127651716 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.075569076 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.266644802 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.516943239 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.272656031 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.539183744 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.108173394 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.693278009 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.183671047 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.189035205 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.14137501 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.071556974 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.658729589 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.260817471 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.422538919 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.122649128 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.173199059 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.203008061 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.135556509 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.257850493 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.423777583 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.549911292 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.195626896 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.59760298 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.287906116 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.118466062 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.129888993 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.794963266 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.235596744 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.095536914 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.262091 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.429215929 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.297500792 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.104886413 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.29271274 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.448052262 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.11975525 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.248172117 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.408954931 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.270575769 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.474620091 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.717086505 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.560762451 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.660157844 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.994864857 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.673395321 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.004939325 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.210345401 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.109891535 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.603165399 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.224385567 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.416586042 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.664383234 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.240978366 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.699941141 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.134839267 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.115623919 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.429194985 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.47881379 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.987274953 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.140546123 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.219296263 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.096985022 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.411722205 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.902356424 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.208292092 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.7278758 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.19545783 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.319473343 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.591546379 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.107764432 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.520363122 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.636575782 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.172333449 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.104055852 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.418828587 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.130654348 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.265913424 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.742732474 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.497342423 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.30878251 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.101324759 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.369814718 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.10809578 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.361514613 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.128200835 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.671980356 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.622044122 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.143383909 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.415826181 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.309572235 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.167576741 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.43919942 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.311890416 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.240989715 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.436682911 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.471919102 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.262076197 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.195877655 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.456788803 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.10869319 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.450987565 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.55028634 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.386038779 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.607600432 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.286645371 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.123290192 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.024674436 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.546803647 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.714911112 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.714970543 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.346986658 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.336974351 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.608437313 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.43431855 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.050788934 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.293725907 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.324255519 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.108627576 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.148766165 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.174535884 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.097906714 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.213493678 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.417752323 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.347896539 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.762232283 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.855441649 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.716489721 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.428715793 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.259187329 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.055151079 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.679671594 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.112225493 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.40954278 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.638277177 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.230711855 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.142310741 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.100852054 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.178299863 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.844905213 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.146629275 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.411028309 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.596250111 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.388730503 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.534496649 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.382671229 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.143555168 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.501401158 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.367794529 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.548967824 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.350815982 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.650994802 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.227299331 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.418297688 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.215270768 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.428563588 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.109477057 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.203276218 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.320700821 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.605094982 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.434031527 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.331587305 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.279534881 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.582641372 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.251942071 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.310221293 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.308614188 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.537435127 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.134838483 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.306540886 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.207124644 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.545042823 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.123908269 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.342276165 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.367839057 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.230342131 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.238134619 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.565321401 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.121159695 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.437640625 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.294941507 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.381530157 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.331862969 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.144213199 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.235022923 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.284585135 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.245875025 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.335843205 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.960633439 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.485970463 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.736739768 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.237321894 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.09634727 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.645086513 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.1349608 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.118053816 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.382447722 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.305343497 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.419920224 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.31971354 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.275172216 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.104287998 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.137593422 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.531622142 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.013079962 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.657351572 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.249010056 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.13757511 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.132000255 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.613871349 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.566682389 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.289189155 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.243482347 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.677744416 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.161381411 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.347497262 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.11246418 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.110370391 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.868374772 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.374193176 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.388329969 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.765010322 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.11319137 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.423112446 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.142659017 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.525236315 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.681146698 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.159735707 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.229071744 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.402134685 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.023740815 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.503508512 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.133284884 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.296483186 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.434826732 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.228548689 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.250076755 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.0987251 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.142612021 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.580239925 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.363809744 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.61432189 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.136289635 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.469149311 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.146948551 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.343164334 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.128084245 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.189802699 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.461321775 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.234015981 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.513323157 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.113264316 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.278939396 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.386753797 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.130614802 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.095570454 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.324219155 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.676116615 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.51226231 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.415492727 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.263871963 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.067100836 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.503598819 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.110747135 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.757162373 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.270045864 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.189948483 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.697831635 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.617646823 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.229488248 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.315346402 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.104454261 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.517436214 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.136735942 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.124315786 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.260672013 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.191068612 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.095899342 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.817628888 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.309276651 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.620213376 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.207667072 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.977822326 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.20833962 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.34315791 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.222396962 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.416643592 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.112281415 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.124978762 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.246022883 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.744092291 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.352321698 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.139222608 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.370684952 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.11157903 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.728098858 seconds)
  done (took 874.071098639 seconds)
done (took 875.389673875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292402633 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.47826821 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.352856012 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 6.101916418 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.919082072 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.800611325 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.365442478 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.335544323 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.076645979 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.37050992 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.019818287 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.902423967 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.198253407 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.285681573 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.427627541 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.225286396 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.31604903 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.344097667 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.218552289 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.199978507 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.469063746 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 6.174416367 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 5.52844178 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.407071927 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.530263268 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.603012684 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32715315 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.455898425 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.453618456 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.290438185 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.350477183 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.349092331 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.945346144 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.370894182 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.2768792 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.190708304 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 6.095882444 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.395567321 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303314949 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.184100395 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.480838649 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.313863006 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.928879786 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 6.095067738 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 5.461900572 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.525526418 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.015262973 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.206512782 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.227057019 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.323883581 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297881128 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318756451 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.456014448 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 6.122991123 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.921404485 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.956556453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.465286955 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.988286001 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.831693883 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.320041523 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.487797723 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.392093734 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.404044552 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.487205858 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.236033707 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.40393341 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.516189534 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304022615 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.346664153 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.376133641 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347817576 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.327824139 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.216588496 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.283548904 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.242959098 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.367120839 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.971386076 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.346551014 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90249906 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.208654204 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.992816096 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.997564013 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.188835199 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.189581305 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292685571 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876408384 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 5.967549433 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.001130597 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.317297942 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.359123699 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 6.09948189 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.35298573 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.559054056 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306264057 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397877429 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.49054978 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.051179451 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439343943 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 6.129049243 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.36841367 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.893184518 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307457448 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.094128185 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.321213922 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.220425523 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303084449 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308911713 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 5.510875429 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.334800439 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.286159252 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 6.17185708 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.502434466 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32953064 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.882873494 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.181914509 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 5.451732676 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.832917641 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.99563269 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291690942 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.795715731 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.401059581 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.502795935 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 6.11770558 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404178787 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291726137 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38112361 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.204631665 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 6.096414185 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.319627808 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.211206262 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.28484868 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.557832129 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.311789281 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.069326645 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.329266407 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.78183958 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.403093859 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.387879606 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.078283142 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 6.096359466 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.201641875 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.249108836 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.491348652 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.580235516 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.352260085 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398940273 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.475552763 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.39610246 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291896201 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.883337139 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.332446339 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.209676265 seconds)
done (took 315.989790361 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.472188415 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.269303105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.378537411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.390569361 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.488802523 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462496015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.313318626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.583646642 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.221233984 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.52230524 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367121775 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.97193071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.251441836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.332445648 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455282475 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.483479158 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272906141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.365208545 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.547274198 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.4578694 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.886755265 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365836298 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.240824359 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.520633463 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.096817354 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.887608713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.464751732 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.295801798 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.473235076 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.863153891 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.891239612 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.372592433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458151479 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.84864838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.569090485 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.840706486 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.488535919 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.937149987 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.487294715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.472402537 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.369936764 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.967747532 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.955894898 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.942437727 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.382831792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.625245454 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.307945831 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.133286337 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.174861301 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 3.006882997 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.376090441 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.920439997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.975585674 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.448734997 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.338205077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.769350316 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.68467854 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.810271966 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470120892 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.414153833 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.474643896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.557908585 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.520297735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290066915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.896500454 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.390377356 seconds)
  done (took 149.434545852 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.631263896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40091044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.507787348 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.537761663 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.665664413 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.560139078 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.601347242 seconds)
  done (took 14.155356753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.265735827 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.158995436 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357047384 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360192011 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.157802442 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.28468897 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.242561693 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.890656958 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378717088 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.196777627 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.499113791 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.510449014 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.93988283 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.891685135 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.244437758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.408615999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.113522055 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.222031096 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.217058158 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426816903 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.953661812 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.87302238 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.349238825 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.242004262 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.166382528 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.197345868 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.152876091 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.193641644 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.204677653 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.141061236 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.161452406 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.271653401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.148351282 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.8588163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.179192293 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.480598772 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.158560233 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.203937194 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.444423945 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.273140888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.147499392 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.160586451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.296502009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.157441169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.140431222 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.343963057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.139866443 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.16119273 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.140713861 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.15008431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.347691849 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.150426699 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.177000581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.843015001 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.373992754 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.859463861 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.228247289 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.145202513 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.150031025 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.210621199 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.155390745 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.471313783 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.497681389 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.176476949 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.354707078 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.461816155 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.153102873 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.141008046 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.13484927 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.424216214 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.147847938 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371465565 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.154604293 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.208353043 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337695098 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.39569401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.344502851 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.939409994 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.918367293 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.809617563 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.128845474 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.141386647 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.615162291 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.092727267 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.811052806 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.140091013 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.203275703 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.738794432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.774587875 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.303870846 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.4712939 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.136706461 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.210024818 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.204968879 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.185939646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.215066731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376271276 seconds)
  done (took 154.456737857 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.327611391 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.859339506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.522839405 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.172230892 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.274559023 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.443871471 seconds)
  done (took 15.714348725 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.482143433 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.969982703 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.314402893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.280610755 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.207891344 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.151299632 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.14990544 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.317379089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.296039552 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.165951282 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.149860692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.179611701 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.241481956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.40633541 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.150657519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.158075016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.150660665 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.17444232 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.158410184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.2188433 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.456171576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.209265465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.219978067 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.14071203 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.210490357 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.163538237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.090892742 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.163332451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.163552387 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.457962595 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343831281 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.261187432 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.129013367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.614853127 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.034628958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.17055166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.439964061 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.308113453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31831641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.256869901 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.251666531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304118241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.256495546 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.302159024 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.745534341 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.075527302 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.405008652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.614675856 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248881519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.23093546 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.179597732 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.176813121 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.151098487 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.174097804 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.613758695 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.574206654 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.133085305 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.163155058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.305784469 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.088368474 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.228008378 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.155067082 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.518380125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.107240641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.841317763 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.184904771 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.131977391 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.289321626 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.225433175 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.171225302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.174484047 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.174773174 seconds)
  done (took 120.848917352 seconds)
done (took 455.836134492 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.110967307 seconds)
  done (took 7.222197499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.39959172 seconds)
  done (took 7.739404849 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.224573781 seconds)
  done (took 7.445869777 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.237313622 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.194539845 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.222809657 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.201838462 seconds)
  done (took 26.090839487 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.435756488 seconds)
  done (took 7.63964815 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.097051302 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.195460512 seconds)
  done (took 13.557555771 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.340358963 seconds)
  done (took 7.54985517 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.646215391 seconds)
  done (took 7.870344084 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.312082805 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.246529023 seconds)
  done (took 13.907756641 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.181410208 seconds)
  done (took 7.380353567 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.973666922 seconds)
  done (took 9.265514677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.309435961 seconds)
  done (took 7.663402689 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.120922268 seconds)
  done (took 7.245654278 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.198455791 seconds)
  done (took 7.318834141 seconds)
done (took 138.993754847 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.09796525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.107289801 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.107561485 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.219911923 seconds)
  done (took 25.645793653 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.434713722 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.435040828 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.413637225 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.485146097 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.907251916 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.514372868 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.528415666 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435041994 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.907596884 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.485828149 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.432450902 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.476384654 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.487498481 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.411081149 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.411534901 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.492716885 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.497562095 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.53423453 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.912123283 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.41286068 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.584291432 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.483774262 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.111096327 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.107284945 seconds)
  done (took 39.027721151 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.363936471 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.557278811 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.410953071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.800327846 seconds)
  done (took 7.245970243 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.338298704 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.645493299 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.663807215 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.778270953 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.685648604 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.40746333 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.586076838 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.429928176 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.345160372 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.334386617 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.816273489 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.340386453 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.340718553 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.549794856 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.379913981 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.115869757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.112540155 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.248726414 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.48415374 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.355529886 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361074041 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.465941559 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.46667646 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.50902851 seconds)
  done (took 36.073937371 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.871219981 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.033162488 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.467231466 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.118979902 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.867965362 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.018765847 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.44892857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.618053932 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376967983 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.352684504 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.850882037 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848059619 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.356611037 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.197029005 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.017373853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.398332242 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.369946251 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.038884692 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.951343404 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.480530409 seconds)
  done (took 39.814265121 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.097769342 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.107175893 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 4.976206857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.934046548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.177698774 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.17081798 seconds)
  done (took 32.585962593 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.143008221 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.262001646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.420557594 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.414458976 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.312340039 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.248303255 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.764185713 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.326794894 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.88742708 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.905087621 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.816596151 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.605976 seconds)
  done (took 22.234149374 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.097694472 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.143796031 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.110529199 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.346441929 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.235330522 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.137703165 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.026940573 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.103479931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.561665808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.37414771 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.388899107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.33105056 seconds)
  done (took 43.996643156 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.301794861 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.355354047 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.450698402 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.154994694 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.702134599 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.235588052 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.536685993 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.065295721 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.959012084 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.085421535 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.639276385 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.163237271 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.755786487 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.076183834 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.104273669 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.435151304 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.953357712 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.608297073 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.545606536 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.183198951 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.07274226 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.251746712 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.117300172 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.653619258 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498183818 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.160129826 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.335830454 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.429635711 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.235126531 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.365602546 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.100025719 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.64428443 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.609943994 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.731817523 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.825123719 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.204233152 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.264219032 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.045926182 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.215752364 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.602178762 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.449813629 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.479858653 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.431897782 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.123986172 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412446758 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.88448102 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.120226842 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.901628961 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.094201837 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.229216149 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.823035799 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.758781251 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.438366315 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.960686683 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.252169572 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.42654105 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.350801379 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.130586924 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.358308388 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.128781082 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.325822938 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.234771644 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.312317583 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.072609954 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.525041648 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.45934657 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.428975907 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.53979552 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.360357996 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.443538557 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.453897388 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.250477521 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.939614635 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.247040778 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.783028831 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.152372157 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.470411494 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.103182706 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.093833768 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.725542845 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.102558835 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.221283646 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.404059779 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.070575047 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.10227365 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.363165623 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.60728627 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.190514997 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.19942862 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.14856758 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.540436353 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369189113 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269848444 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.370085764 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.54840666 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.119522838 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.206189853 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.390977088 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.070311487 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.72757125 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.119749524 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.080626877 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.20758585 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080318378 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.498458076 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.154790621 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.883978549 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.887130356 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.41363956 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.756683472 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.344744953 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.940168978 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.595377234 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.432478861 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.10003897 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.4532345 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.127146217 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.163607984 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.553778315 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.107562762 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.199874275 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.569530199 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.373898866 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.298366091 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.331429788 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.104028189 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.334431692 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.098964976 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.997432425 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.851955114 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.429797014 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.814167745 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.305623561 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 6.205708419 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.076218529 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.32781833 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.620522764 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.33564754 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.418452411 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.540986092 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.338549763 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.552537704 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.831001285 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.107259022 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.69297447 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.371759119 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.462230534 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.785025961 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.28418013 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.194223124 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098505834 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408380675 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.210662858 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.07965392 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.212409106 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.433601978 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.420372208 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.402269097 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.098780753 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.270919203 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.108314546 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.283659684 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.867275387 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.155057068 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.369534964 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.362642498 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.358537519 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.101591534 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.078378694 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.478847753 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.387064316 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.63061656 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.748262112 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.780775287 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.439148996 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.585059115 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.325025821 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.452044061 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.117336081 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.891923291 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.453799406 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.123619613 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.128032901 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.106614929 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.181474394 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55410676 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.32838044 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.839865626 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.159765302 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.789039179 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.333305085 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.105031748 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.074202172 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.302183591 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.755027919 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.316656046 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.898749951 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.284663167 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.349969652 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.3852486 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 6.13798681 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.320654748 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.142960471 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.51229843 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.501934643 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.432554836 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079789765 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.783022452 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.841412855 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.609364331 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.248379258 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.464756152 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.140240508 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.166407848 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.105576236 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.455487422 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.684053065 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.931602489 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.458759027 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.872757042 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.153935898 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.331755342 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.156470663 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.123167713 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.086884851 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.304251119 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.149042228 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.055155697 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.813115978 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.368907612 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.430277654 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.098652215 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.112219766 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.505375998 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.415823779 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.569820262 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.62135773 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.352637751 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.801393826 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.340305587 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.891500559 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.274997469 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 6.136916314 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.848500012 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.440106447 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.21013063 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.487658633 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.017321682 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.501140333 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.227577205 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.386888779 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.102976302 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.59368006 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.726406231 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.107034736 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.122726733 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.252521378 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.270626641 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.407853201 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.310443637 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35482542 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.286447778 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.782225326 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.540977269 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.337334623 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.686822558 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.852415614 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.696904409 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.314114171 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.440362879 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.229554283 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.410440946 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.100837511 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.377855513 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.450416394 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.805617374 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.917875457 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.652846977 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.336639948 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.358898993 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.781266207 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.38164506 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.417086803 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.060648758 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826312828 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.085067332 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.249350917 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.071586412 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.921281963 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457962516 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.480613243 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.589887764 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.177163036 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.71756561 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.496934842 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.143306461 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.291068254 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.387689434 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.160275419 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.410634419 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.10021702 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.130139912 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.714172311 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.304201512 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.109566923 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.331097693 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433988609 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.338553994 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.69197706 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.148377981 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.421274909 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.535848814 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.284945433 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.241263089 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.429200105 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.971692963 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.290208922 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.298025774 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.874328388 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.961210127 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.585786308 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.127073867 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.712509094 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.806204609 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.608052854 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.107555004 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.336919575 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.333207459 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.103777113 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.351101856 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.589592008 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.145133397 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.310027363 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.446230486 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.398450547 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.103368994 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.085403874 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.75476369 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.427029399 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.617357332 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.093961229 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.94011039 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.575730606 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.147684116 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.668112462 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.149685175 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.401567933 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.571432385 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.831704618 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.184684648 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 6.235213176 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 6.109080557 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.261164151 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.540210202 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.311342298 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.982320988 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.343231641 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.336944437 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.3505808 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.26695631 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.067356522 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.836648811 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.796731596 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.681209052 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.393422894 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.327250993 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.234687628 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.278890664 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010975909 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.530987713 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.788271847 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.584160303 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.343100922 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.072407883 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.103597393 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.909908492 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.306749599 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.19961145 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.433317204 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.531600193 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.162409714 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.130465741 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.158590081 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.398328384 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.622514358 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.839990145 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.448426861 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.636746565 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.710118816 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.85954624 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.875131901 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.448354953 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.479340476 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.500166708 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013323511 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.486805654 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.41062376 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.33162768 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.151797024 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.286697993 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.118651234 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.212010576 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.572282265 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.478194133 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.192237176 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.043678796 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.816826868 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.239764836 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.344028208 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.972559782 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.331995472 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.297496561 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.100071786 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.841222535 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.506468521 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.388919536 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.150833954 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.165032293 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.073136065 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.335180121 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.100286535 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.546558027 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.398320812 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.180894549 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 4.190508706 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.645646252 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.183453739 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.442965292 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.07194756 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928992417 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.142674506 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.800613332 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.323280711 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.454073501 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 4.213469299 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.5929889 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.109692243 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.444739663 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.320770037 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.545665803 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.009559328 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.593298671 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.536268823 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.472511677 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403058911 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.624087985 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.25670805 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363328399 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.07153508 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.106977634 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.154010129 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.481880333 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.480294113 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100624803 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.245810584 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360029369 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.224700329 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.279965362 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.323940731 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.165943906 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.359856021 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.229979342 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.274915723 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.359649301 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.545466517 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.103203803 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.785765717 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.284308593 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.556339943 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.335267562 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.353543122 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.49147738 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.462678441 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.883640344 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.340493077 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.853976354 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.056617178 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.728824256 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.104510311 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.926750212 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.492122618 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.162818419 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.594930521 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.761779672 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.193928246 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.887232212 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.437744186 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.121956777 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.314803001 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 4.069134464 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.127508113 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.757501476 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.541204602 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.102157656 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.723384545 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.217264118 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.343144613 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.866280201 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.597541186 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.247093948 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.933691667 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.568330428 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.009237811 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.814103537 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.287140545 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.114370246 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.952772483 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.09028993 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.105507866 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.160029693 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.699063523 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.181907407 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.684658804 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.244402733 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.444202555 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.118804286 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.259547884 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.10881198 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.484880236 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.175159843 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.482749973 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.565085191 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.61306214 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.11098859 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.84720185 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.940640339 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.377528329 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.33175093 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.10300257 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.502129284 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.911669959 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.209527324 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.960267518 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.376343209 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.39200949 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631729104 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449051579 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 6.315608819 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.512789835 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.118156373 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463563008 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.648485867 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.668835227 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.442904073 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.926845224 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.690677599 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.292528633 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.397207001 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.691441015 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.109677964 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.305636126 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.621514838 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.141322696 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.938700447 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.737691129 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.302900013 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.24450391 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.100567978 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.77488722 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.419382008 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.239063467 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.110206265 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.488297813 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 4.066838342 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.079237141 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.930763603 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.023309261 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.47528809 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.468793921 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.071033841 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.282056248 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.125311552 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.089597511 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.066178902 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.135905211 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.413277441 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.073787311 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.789321679 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.376397316 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.210801669 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.274231456 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.511245234 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.101364906 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.096839343 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.371526801 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.114329153 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.203203556 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.461747314 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 6.16655796 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.300370389 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.576723042 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.346733396 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.560650736 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.509802022 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.931702995 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.120468996 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.421660136 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.941897809 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.668736112 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.189682518 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.604561304 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.931047997 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.122501022 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.271277654 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.355797525 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.007031917 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305229437 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.061267083 seconds)
  done (took 2073.014459409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.135300566 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.183096223 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.172888798 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.187297886 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.177072224 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.179277674 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.268173014 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.144660514 seconds)
  done (took 50.569575602 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.206891739 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.047571517 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.686953538 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.292689673 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.134072598 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.443673471 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.266896884 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.758453884 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.438714267 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.252521069 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.172212856 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.33741218 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.1135364 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.14492741 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.14971769 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.179463375 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.108227501 seconds)
  done (took 91.953219498 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.141965582 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.520371225 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.271604119 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.263387254 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.111070565 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.555345844 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.230267548 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.110470593 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.515864817 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.809070117 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.161745033 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.262219908 seconds)
  done (took 82.218023946 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.234269887 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.285469736 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.246253602 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.138247076 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.136277967 seconds)
  done (took 7.284981376 seconds)
done (took 2552.794738915 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.394427281 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.641878131 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.695402828 seconds)
  done (took 4.450332988 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.212904708 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.770150585 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.790320273 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.607676368 seconds)
  done (took 7.520113747 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.400256114 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.597455204 seconds)
  done (took 4.124558627 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.535343299 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.110257616 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.717425299 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.201352233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.112615653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.115143006 seconds)
  done (took 19.684823402 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 6.102001124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 4.88747021 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 6.272916975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 4.963068938 seconds)
  done (took 23.350143517 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.099901367 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122562759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.110896667 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.079584858 seconds)
  done (took 18.537936459 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.391430471 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.401298311 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 4.338964978 seconds)
  done (took 8.261573239 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.068112945 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.655949322 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.047099783 seconds)
  done (took 6.896202494 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.287506732 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.14932926 seconds)
  done (took 5.553715434 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.448278149 seconds)
  done (took 2.700285775 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.714293812 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.762227558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.16054573 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.084603293 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.124961338 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.456243833 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.438872397 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.380372187 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.801285313 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.629494354 seconds)
  done (took 18.806610201 seconds)
done (took 131.744289294 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.989712126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.584308155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.319372741 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.015647125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.208977371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.26883775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.157287549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.844425148 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.587818708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.609312646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.895105177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.205790512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.145617029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.49225471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.242968794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.552120214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.269162396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.004801304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.481445507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.298229345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.123925591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.566182456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.729497303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.621943036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.454205336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.271500341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.150249415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.479129962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.670898835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.160030793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.28104657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.638051129 seconds)
  done (took 152.436388988 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.249848286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.237032745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.306931767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.204221274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.837329064 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.119515909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.203826443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.185383521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.863769949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.819970327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.121367836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.936495835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.197334255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.204186815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.12040264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.111362618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.034617036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.120034824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.125917885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.187610718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.259321302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.70254679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.123378359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.792671403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.211298242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.203113414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.184433904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.192339562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.121217996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.119754452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.121299541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.113093606 seconds)
  done (took 188.610802286 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.10158342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.15531334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.119649247 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.171415689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.119148873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.121262125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.235031496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.111589213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.128687528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.127022039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.116478818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.117973087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.121767226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.23077493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.195174832 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.221610646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.118286274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.121154196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.119426561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.239071486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.120547064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.23815857 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.120287379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.121078531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.231399572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.121627048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.110551091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.119355817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.118358447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.119100615 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.121604702 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.214857317 seconds)
  done (took 197.885249453 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.410534848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.144549668 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.084177147 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.678904327 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.168521654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.260404919 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.817977852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.444663585 seconds)
  done (took 14.142315354 seconds)
done (took 554.195023222 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.777918139 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.026500218 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.291581516 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421984802 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.707299792 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.490199801 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.519700778 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.70734557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.848961545 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569441845 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.608886657 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338525106 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.945773844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.438281369 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.289221474 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.554732347 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.55230837 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.864117656 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.37520146 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.107057185 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.447276528 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.033093228 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.605180002 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.908194991 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.607610204 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.030687497 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.201663909 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.514752113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.428315082 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.314949494 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.185489262 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.475463649 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.33995389 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.336011191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567109826 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.559200352 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.431555455 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.534648509 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.391312696 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.896300606 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.001019681 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.707705209 seconds)
  done (took 76.067601226 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.142885476 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.153593737 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.305290165 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.223533907 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.827455518 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.266577966 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.436244205 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.354719028 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.239826344 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.342885269 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391699274 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.825547103 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.390280754 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.763328138 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.374043816 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414020002 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.229928521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.734468396 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.398207566 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.458666067 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.178909746 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.306379514 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.180315857 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.337285337 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.173307291 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.183381346 seconds)
  done (took 36.778728387 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.181583848 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.290277135 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.39617662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.573842323 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.50931049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.183273339 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.479534934 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.338290905 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.990400658 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.290523049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.22949969 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.256275313 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309421792 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.424389272 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.69074291 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.327064035 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.302571868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.461643129 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.397845081 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.378881723 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.30527102 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.270715935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.475510182 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.323422356 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.825466033 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.603287569 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.44575314 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.733221384 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.664334503 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.297178546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.263436523 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.456647376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.50806156 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.43910929 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.321184021 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.160034457 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.16685582 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.22325341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.16757814 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.318894698 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474642024 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.358610809 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.670516847 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.686271854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.204078694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41863736 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.593037235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.236921343 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.26191026 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.927663787 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452822914 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.232723528 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.301186946 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.416860153 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.250805618 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.574291851 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.342770795 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.409123224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.353567441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.910642047 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.258294996 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.528617701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.306277823 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.214120249 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.452432268 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426422843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.383458967 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.720080954 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.542084496 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.699753158 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.695420626 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.22808103 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.175488126 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.222485839 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.300520175 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.677403353 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.50167301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.397046813 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.524184248 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.488027682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.668775009 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.592792816 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.214633681 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.908397237 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.203440801 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.153328121 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.231371078 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.503657319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.454383486 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.622207328 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68713345 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.448161612 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.755936495 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.651671305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.773187562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.541746778 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.142577435 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.16175289 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.384381781 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.693473441 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.223723206 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.416793416 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.960948077 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.811593495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.38067076 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.384205842 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.553947796 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.211078316 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.606258186 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.134052693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.388772414 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.526321545 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.449742125 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.493430758 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.140664066 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.656283433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.248129321 seconds)
  done (took 231.299905177 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.101223962 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.122779167 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.115640572 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.264710763 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.114358249 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.740189733 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.183948485 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.176581204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.741250601 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.184150165 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.236346315 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.110658055 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.111933737 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.118885591 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.704684165 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.674255509 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.941778456 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.106891976 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.111203965 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.114706161 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.097432418 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.224397196 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.112982125 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.112561714 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.11840444 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.111836261 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.120000942 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.160533401 seconds)
  done (took 153.15685451 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.160301473 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.598073572 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.219035252 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.257003277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.208863102 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.178728155 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.681596853 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.30429808 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.237999235 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.178904606 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.168594653 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.41918282 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445872561 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.768818726 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.301226372 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.291610261 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.829187921 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309041479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.215511247 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.229526902 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.427839597 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.512479734 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.459744506 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.434441876 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.324152589 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.440708057 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.247417557 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.171601595 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.293478391 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.663718938 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.248556677 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.548114012 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.31967386 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.173913621 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.674117814 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.516794479 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.756580448 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.726996717 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.361535141 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.206286264 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.212487596 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.402988505 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.473870658 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.216729658 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.168695175 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.825699556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.18775624 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.571537134 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.209909378 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.131129473 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.324666882 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.295005395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.437855382 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.185697572 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.351569775 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.316534402 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.67713858 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.198501942 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.246082224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.470304813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.142800102 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.666475605 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.688611585 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.234301058 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.178613243 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.020798635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.254753197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.73532428 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.922781751 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.221963197 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.505053469 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.350983661 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.145903169 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.429459398 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.34273764 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.610504868 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.752967948 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.306937678 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.270443138 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.346046156 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.614304652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.255474847 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.873382607 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.362195734 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.147219076 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.671068387 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.558687974 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.142746822 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.162978238 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.280502051 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.32175873 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.36638478 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.50581829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.242045011 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074385722 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.432755319 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.50854113 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.187465634 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.292734508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.158632013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.536936362 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.350973925 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.148840955 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.478697268 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.562629012 seconds)
  done (took 157.913334452 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.86382791 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.214044611 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.380920649 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.692154004 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.503702878 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.623568157 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441003145 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.228447432 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.437125353 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.382583412 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.381102213 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.259148179 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.12194068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.913314663 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.209255082 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.389907042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.235834976 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.797200321 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.48601706 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.173578486 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.645384506 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.939084745 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.465754064 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.559164065 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.559451831 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.688983211 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.840806446 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.308582016 seconds)
  done (took 48.871248868 seconds)
done (took 705.188498455 seconds)
SAVING RESULT...
DONE!
