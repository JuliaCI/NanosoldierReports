cset: moving following pidspec: 707906
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.27493568 seconds)
loading group "string"... done (took 0.278329014 seconds)
loading group "linalg"... done (took 4.134683778 seconds)
loading group "parallel"... done (took 0.025607777 seconds)
loading group "find"... done (took 1.553448495 seconds)
loading group "tuple"... done (took 0.984197963 seconds)
loading group "dates"... done (took 0.247024188 seconds)
loading group "micro"... done (took 0.061877662 seconds)
loading group "io"... done (took 1.361116148 seconds)
loading group "frontend"... done (took 0.011786224 seconds)
loading group "scalar"... done (took 4.899959151 seconds)
loading group "sparse"... done (took 3.449696821 seconds)
loading group "alloc"... done (took 0.015529891 seconds)
loading group "broadcast"... done (took 0.365812459 seconds)
loading group "union"... done (took 3.71985544 seconds)
loading group "simd"... done (took 2.937318733 seconds)
loading group "random"... done (took 3.286116582 seconds)
loading group "inference"... done (took 2.064279701 seconds)
loading group "problem"... done (took 1.237775697 seconds)
loading group "array"... done (took 4.901806624 seconds)
loading group "misc"... done (took 0.893079969 seconds)
loading group "sort"... done (took 0.352312361 seconds)
loading group "collection"... done (took 6.421254779 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.392092468 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180361746 seconds)
    (2/2) benchmarking "String"...
    done (took 0.121876915 seconds)
  done (took 0.978415973 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.141869772 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020981942 seconds)
    (3/3) benchmarking "different"...
    done (took 0.02060957 seconds)
  done (took 0.85603819 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021133401 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.082519439 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022335062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022918176 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022980798 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022301656 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022189322 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022218521 seconds)
  done (took 0.890413351 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031313449 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019714806 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020730917 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020353071 seconds)
  done (took 0.76313363 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026249938 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.083449809 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019475388 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019245935 seconds)
  done (took 0.817310579 seconds)
done (took 5.509873328 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.384156129 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.136069369 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033088026 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166018616 seconds)
  done (took 1.417948305 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020217779 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025524334 seconds)
  done (took 0.725321026 seconds)
done (took 2.815706537 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.719511937 seconds)
  done (took 4.387628412 seconds)
done (took 5.060793032 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159580242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02011977 seconds)
  done (took 0.854977633 seconds)
done (took 1.545947614 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.749156365 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.824268422 seconds)
    (2/2) benchmarking "String"...
    done (took 0.900081739 seconds)
  done (took 2.415844951 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.98363091 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.715455658 seconds)
    (3/3) benchmarking "different"...
    done (took 0.733676063 seconds)
  done (took 3.109514273 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.706265425 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.222393922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.96448332 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.67695353 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.686422006 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.183663144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.318000444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.037328886 seconds)
  done (took 22.767238492 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.941019783 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.956517955 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.932259569 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.946683082 seconds)
  done (took 8.498098377 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.986513233 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.949653681 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.947992148 seconds)
    (4/4) benchmarking "different"...
    done (took 0.770908911 seconds)
  done (took 4.360799943 seconds)
done (took 49.350426459 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.675856387 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.728087603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.711448 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.30660073 seconds)
  done (took 16.097453026 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.911767541 seconds)
    (2/2) benchmarking "read"...
    done (took 1.033672 seconds)
  done (took 2.632797665 seconds)
done (took 19.407099081 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.900823851 seconds)
  done (took 7.576293991 seconds)
done (took 8.252656494 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.775900888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.023981096 seconds)
  done (took 4.475672568 seconds)
done (took 5.179679027 seconds)
SAVING RESULT...
DONE!
