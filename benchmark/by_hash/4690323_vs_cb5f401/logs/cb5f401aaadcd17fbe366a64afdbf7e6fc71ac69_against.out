cset: moving following pidspec: 709181
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.2061896 seconds)
loading group "string"... done (took 0.265395875 seconds)
loading group "linalg"... done (took 3.998807685 seconds)
loading group "parallel"... done (took 0.025810297 seconds)
loading group "find"... done (took 1.442674894 seconds)
loading group "tuple"... done (took 0.969929251 seconds)
loading group "dates"... done (took 0.248841785 seconds)
loading group "micro"... done (took 0.062829087 seconds)
loading group "io"... done (took 1.385672577 seconds)
loading group "frontend"... done (took 0.012352209 seconds)
loading group "scalar"... done (took 4.992986124 seconds)
loading group "sparse"... done (took 3.461972759 seconds)
loading group "alloc"... done (took 0.0152582 seconds)
loading group "broadcast"... done (took 0.377681858 seconds)
loading group "union"... done (took 3.771089734 seconds)
loading group "simd"... done (took 2.964431025 seconds)
loading group "random"... done (took 3.190920461 seconds)
loading group "inference"... done (took 2.040871285 seconds)
loading group "problem"... done (took 1.167744165 seconds)
loading group "array"... done (took 4.829426282 seconds)
loading group "misc"... done (took 0.906281337 seconds)
loading group "sort"... done (took 0.359614134 seconds)
loading group "collection"... done (took 6.502219861 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.388530205 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.186495405 seconds)
    (2/2) benchmarking "String"...
    done (took 0.13092431 seconds)
  done (took 0.991586758 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.14656365 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.022108673 seconds)
    (3/3) benchmarking "different"...
    done (took 0.021901018 seconds)
  done (took 0.860270522 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.022485347 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.084822162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.023684299 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.024362266 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024558878 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.023753849 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.023832859 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.023439427 seconds)
  done (took 0.899324942 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.033289178 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.021195715 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022102814 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.021190208 seconds)
  done (took 0.767663671 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.021704183 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.077887528 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020709414 seconds)
    (4/4) benchmarking "different"...
    done (took 0.02071599 seconds)
  done (took 0.809313315 seconds)
done (took 5.530871916 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408598452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144726922 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03477453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.162389543 seconds)
  done (took 1.452355455 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.023686194 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027149614 seconds)
  done (took 0.728416184 seconds)
done (took 2.850594742 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.544531846 seconds)
  done (took 4.212410436 seconds)
done (took 4.882514278 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165114059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.021401595 seconds)
  done (took 0.860468804 seconds)
done (took 1.586269301 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.751653292 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.820407041 seconds)
    (2/2) benchmarking "String"...
    done (took 0.888505009 seconds)
  done (took 2.40180887 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.982940934 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.717280012 seconds)
    (3/3) benchmarking "different"...
    done (took 0.733222031 seconds)
  done (took 3.108328094 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.66860603 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.174219928 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.963552325 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.677259065 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.686813335 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.187234684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.337732186 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.016131245 seconds)
  done (took 22.719755409 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.987916627 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.918453716 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.92383005 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.954393962 seconds)
  done (took 8.503540028 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.983932916 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.947973634 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.947792143 seconds)
    (4/4) benchmarking "different"...
    done (took 0.770549798 seconds)
  done (took 4.369116053 seconds)
done (took 49.265089129 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.485070702 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.769743808 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.704824639 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.353994349 seconds)
  done (took 15.987790594 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.896551298 seconds)
    (2/2) benchmarking "read"...
    done (took 1.033586854 seconds)
  done (took 2.619224551 seconds)
done (took 19.280915236 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.866026439 seconds)
  done (took 7.540218242 seconds)
done (took 8.214910011 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.816407377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.048293167 seconds)
  done (took 4.539160674 seconds)
done (took 5.259907601 seconds)
SAVING RESULT...
DONE!
