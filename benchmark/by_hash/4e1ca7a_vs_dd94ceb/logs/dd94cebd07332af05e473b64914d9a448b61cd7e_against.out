cset: moving following pidspec: 553070
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.452848505 seconds)
loading group "shootout"... done (took 0.989979105 seconds)
loading group "string"... done (took 0.255274899 seconds)
loading group "linalg"... done (took 3.521097508 seconds)
loading group "parallel"... done (took 0.024664705 seconds)
loading group "find"... done (took 1.315407201 seconds)
loading group "tuple"... done (took 0.813612102 seconds)
loading group "union"... done (took 3.423467472 seconds)
loading group "dates"... done (took 0.188623993 seconds)
loading group "micro"... done (took 0.064087281 seconds)
loading group "simd"... done (took 0.386610563 seconds)
loading group "io"... done (took 1.502172254 seconds)
loading group "random"... done (took 2.707043125 seconds)
loading group "problem"... done (took 1.262976207 seconds)
loading group "array"... done (took 5.119388643 seconds)
loading group "misc"... done (took 1.092219455 seconds)
loading group "scalar"... done (took 3.765252324 seconds)
loading group "sort"... done (took 0.336213275 seconds)
loading group "sparse"... done (took 3.85152074 seconds)
loading group "collection"... done (took 6.589497843 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.609720353 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.228163846 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140266318 seconds)
  done (took 1.010271828 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.152814887 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.018246812 seconds)
    (3/3) benchmarking "different"...
    done (took 0.026420911 seconds)
  done (took 0.834708979 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.02369252 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.104998672 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024310571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025633972 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.025472221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.025116435 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024779334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024932669 seconds)
  done (took 0.892376914 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031474314 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.026634056 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.024677653 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.026183031 seconds)
  done (took 0.746272706 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.024424828 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.092389846 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.023677357 seconds)
    (4/4) benchmarking "different"...
    done (took 0.023950543 seconds)
  done (took 0.793563665 seconds)
done (took 5.707846253 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.484422315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151133703 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034361113 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.164651397 seconds)
  done (took 1.51088704 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02291962 seconds)
    (2/2) benchmarking "read"...
    done (took 0.030977285 seconds)
  done (took 0.700385161 seconds)
done (took 2.849144238 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.02586147 seconds)
  done (took 5.65824165 seconds)
done (took 6.292170691 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156391314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.033915032 seconds)
  done (took 0.829539495 seconds)
done (took 1.547653249 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.735533722 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.821220622 seconds)
    (2/2) benchmarking "String"...
    done (took 0.907731579 seconds)
  done (took 2.412271109 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.095323446 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.655236652 seconds)
    (3/3) benchmarking "different"...
    done (took 0.69463451 seconds)
  done (took 3.087385742 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.02601272 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.582002789 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.926527764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.644322338 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.650766247 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.092499124 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.93998763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.490562251 seconds)
  done (took 23.974494442 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.644412701 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.017101756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.897627843 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.985694742 seconds)
  done (took 15.30165852 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.097958385 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.047730772 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.053583718 seconds)
    (4/4) benchmarking "different"...
    done (took 1.511364014 seconds)
  done (took 5.486969524 seconds)
done (took 58.75339018 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.648704507 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.254758138 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.691158404 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.774947802 seconds)
  done (took 17.013216784 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.162586416 seconds)
    (2/2) benchmarking "read"...
    done (took 1.181998096 seconds)
  done (took 3.00782578 seconds)
done (took 20.669060032 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.685235802 seconds)
  done (took 8.327026556 seconds)
done (took 8.971954725 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.534275842 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.840673325 seconds)
  done (took 6.020488413 seconds)
done (took 6.675226717 seconds)
SAVING RESULT...
DONE!
