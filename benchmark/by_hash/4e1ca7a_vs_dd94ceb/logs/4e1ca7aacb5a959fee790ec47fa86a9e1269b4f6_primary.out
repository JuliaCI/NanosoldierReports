cset: moving following pidspec: 552429
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.439060108 seconds)
loading group "shootout"... done (took 0.967774378 seconds)
loading group "string"... done (took 0.251958142 seconds)
loading group "linalg"... done (took 3.562768228 seconds)
loading group "parallel"... done (took 0.024923521 seconds)
loading group "find"... done (took 1.320920253 seconds)
loading group "tuple"... done (took 0.817028714 seconds)
loading group "union"... done (took 3.429982215 seconds)
loading group "dates"... done (took 0.18831878 seconds)
loading group "micro"... done (took 0.063937233 seconds)
loading group "simd"... done (took 0.385577479 seconds)
loading group "io"... done (took 1.507844831 seconds)
loading group "random"... done (took 2.722966678 seconds)
loading group "problem"... done (took 1.261802334 seconds)
loading group "array"... done (took 5.110945687 seconds)
loading group "misc"... done (took 1.084365079 seconds)
loading group "scalar"... done (took 3.757474659 seconds)
loading group "sort"... done (took 0.334884058 seconds)
loading group "sparse"... done (took 3.862702421 seconds)
loading group "collection"... done (took 6.609480089 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.609408622 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.228009599 seconds)
    (2/2) benchmarking "String"...
    done (took 0.139984997 seconds)
  done (took 1.007373079 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.152100174 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.018209508 seconds)
    (3/3) benchmarking "different"...
    done (took 0.026739109 seconds)
  done (took 0.832620121 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.0239708 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.105499175 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024547213 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025419059 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.025189116 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024675658 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024433802 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024381351 seconds)
  done (took 0.888710533 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.03158334 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.026845867 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02468592 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.026132535 seconds)
  done (took 0.743835473 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.024033426 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.091819499 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.023499271 seconds)
    (4/4) benchmarking "different"...
    done (took 0.023401849 seconds)
  done (took 0.795612758 seconds)
done (took 5.69590146 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.484646209 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.153470954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034691845 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.163315054 seconds)
  done (took 1.517459006 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.02338321 seconds)
    (2/2) benchmarking "read"...
    done (took 0.031365361 seconds)
  done (took 0.701777358 seconds)
done (took 2.854348759 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.957358998 seconds)
  done (took 5.59445706 seconds)
done (took 6.236932953 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156874976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.033971687 seconds)
  done (took 0.836180388 seconds)
done (took 1.547563294 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.845674096 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.826311417 seconds)
    (2/2) benchmarking "String"...
    done (took 0.91142153 seconds)
  done (took 2.430288325 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.102379491 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.653859325 seconds)
    (3/3) benchmarking "different"...
    done (took 0.689508215 seconds)
  done (took 3.089615375 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.046490306 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.649890042 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.91490001 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.647079376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.649993276 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.999959745 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.044193631 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.510455787 seconds)
  done (took 24.065331302 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.643909806 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.055041226 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.901575888 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.004290829 seconds)
  done (took 15.363278888 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.099620202 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.055566284 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.053722357 seconds)
    (4/4) benchmarking "different"...
    done (took 1.533078526 seconds)
  done (took 5.52294048 seconds)
done (took 59.096466043 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.647137362 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234193188 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.683800243 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.794488944 seconds)
  done (took 17.005623838 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.173520718 seconds)
    (2/2) benchmarking "read"...
    done (took 1.184275509 seconds)
  done (took 3.011025143 seconds)
done (took 20.67043395 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.394100209 seconds)
  done (took 8.037981018 seconds)
done (took 8.682323299 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.480126731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.835980588 seconds)
  done (took 5.956169769 seconds)
done (took 6.676269997 seconds)
SAVING RESULT...
DONE!
