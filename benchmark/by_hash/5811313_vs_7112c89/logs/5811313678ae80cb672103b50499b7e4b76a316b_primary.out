cset: moving following pidspec: 3700456
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.759335304 seconds)
loading group "shootout"... done (took 0.807438142 seconds)
loading group "string"... done (took 0.218787867 seconds)
loading group "linalg"... done (took 3.062875484 seconds)
loading group "parallel"... done (took 0.021305057 seconds)
loading group "find"... done (took 1.268456989 seconds)
loading group "tuple"... done (took 0.681119233 seconds)
loading group "union"... done (took 3.046618549 seconds)
loading group "dates"... done (took 0.152718922 seconds)
loading group "micro"... done (took 0.056149363 seconds)
loading group "simd"... done (took 0.359155197 seconds)
loading group "io"... done (took 1.381507641 seconds)
loading group "random"... done (took 2.357509194 seconds)
loading group "problem"... done (took 1.19157228 seconds)
loading group "array"... done (took 4.601976868 seconds)
loading group "misc"... done (took 0.962105237 seconds)
loading group "scalar"... done (took 3.425846673 seconds)
loading group "sort"... done (took 0.303619898 seconds)
loading group "sparse"... done (took 3.520577971 seconds)
loading group "collection"... done (took 5.966855294 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547362986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072965368 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.254376949 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.077076896 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278773349 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.082554202 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088311472 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.070232586 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.016936572 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161997415 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.213750013 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397306082 seconds)
done (took 5.154415324 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.314248962 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.03314697 seconds)
    (2/2) benchmarking "String"...
    done (took 0.123772858 seconds)
  done (took 0.757760359 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.137412945 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015367051 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022306597 seconds)
  done (took 0.771709128 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020346111 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.098278225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021420983 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021892452 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021762459 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021255041 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021106288 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.02106514 seconds)
  done (took 0.825228796 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028448267 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022842097 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020837213 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022276277 seconds)
  done (took 0.691909058 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022248372 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.082199801 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019894237 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019756589 seconds)
  done (took 0.73700194 seconds)
done (took 4.738118915 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.195300224 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.773413241 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.8177645 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.178339238 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.352428563 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.301636344 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.076237917 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.241980392 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148552541 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.030977717 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.178087322 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036387648 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.52711593 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.453770644 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.027220612 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.144593433 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.57868454 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039498008 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070478476 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.1974229 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.037601723 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039253781 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043826897 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.026477191 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.132221542 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134505783 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.586809362 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.066928512 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.025048819 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136900348 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.02692922 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.030732376 seconds)
  done (took 9.292916152 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148475935 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.142888106 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023472156 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.060115499 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.049767872 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024529815 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029937521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022740242 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042456046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088786229 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045664299 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156888559 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021234128 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024144424 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.139298095 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.117184037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037393418 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.03670275 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022063328 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.036102181 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049312449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034294817 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032830527 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032517054 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068613549 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.090809644 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0417408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063980731 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022232507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034777648 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.052225152 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.06436572 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022777033 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021103796 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065263168 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.04036531 seconds)
  done (took 2.632126637 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.991881619 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.050394195 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.137793385 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.128556832 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064291456 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.051117516 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.178695709 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077905875 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055772325 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.02379021 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.207447165 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.641402829 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.167418808 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.989451733 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028193114 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.179577184 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.889693021 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.934298822 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023407962 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023626122 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.133922662 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026103581 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.177556956 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024195504 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137048582 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.804348976 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025623921 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024123775 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.052681285 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.139848296 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.020664038 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.096173546 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.049813954 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.024954698 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.554119458 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.021695545 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.01962549 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042281124 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050145863 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022202912 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023497244 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.033863381 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021152401 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.07463685 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.035291871 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.510931613 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02533612 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.674208486 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.808834704 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.030563211 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027502868 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058006989 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.019732185 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023612898 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.590615401 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.115221548 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022932009 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.251770693 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025409546 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024273773 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.02447817 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.057577304 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023354106 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024517634 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026689781 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.04190969 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.96785212 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032565004 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043590888 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021423394 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022709982 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.02094596 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.389577408 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029406549 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025098477 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.02057393 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026881529 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022742585 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022221215 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.067601329 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.172958753 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.047206181 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.025639807 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.02282497 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.021859963 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.538269899 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.921947495 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.024733082 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.023957608 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.479778148 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020254734 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022124432 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.023826299 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.043723993 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.022610106 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.019418881 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058659657 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.024293806 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.124842541 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.536985499 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.023984249 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.019745229 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.446758897 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024420587 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.055451549 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076895206 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022346869 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.060578101 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022840504 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.019980866 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026347542 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075951914 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024733543 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.02115724 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021849859 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.020689328 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022666904 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023711072 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022450338 seconds)
  done (took 19.608930635 seconds)
done (took 33.125767865 seconds)
(4/20) benchmarking "parallel"...
done (took 0.743590671 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.211258 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049184795 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019321194 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.162317718 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.04390951 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.135165109 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.177187822 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.128279238 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.045893549 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.045314086 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.045229107 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.181334912 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.193102344 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.046846734 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.119788848 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.192506725 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.046750269 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019743266 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046122044 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.047186396 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.047258822 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019767089 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.046625175 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.047561294 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.120557165 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047168171 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019740645 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.121658967 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.048774067 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.125685906 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.049554972 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.048475745 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049195016 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.122035741 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.049532392 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.121935623 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.019957828 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.049250003 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.04945423 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.050166179 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.0492645 seconds)
  done (took 3.962034987 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.045501809 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.037266828 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.03984914 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017811387 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.027253262 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.037465239 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017815269 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.036963969 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.041156959 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.037397168 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.03737219 seconds)
  done (took 1.124215679 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.040030764 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038451187 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.039750156 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.017683037 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02909061 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038314289 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.017698387 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037646832 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.040613796 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.038233929 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038165249 seconds)
  done (took 1.058160007 seconds)
done (took 6.806543577 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.152336238 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.120429188 seconds)
  done (took 0.945081546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.557914033 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.219119192 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.129514647 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.253233137 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.122965481 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.154572724 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.254361094 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.298488362 seconds)
  done (took 6.717661048 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.074061409 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.140496679 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.023786743 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.022508076 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.022715679 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.02264397 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024250977 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023002504 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.02224163 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024740777 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024384959 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022433611 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023120848 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.024457317 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.022493064 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.022708348 seconds)
  done (took 1.289086485 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.028564161 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025210762 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.02648098 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.016851587 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027437324 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.025934182 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.02696308 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027548665 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026639211 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026355711 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024212716 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027221849 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026049305 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024734798 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027191743 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.016842584 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027287722 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026512201 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028517399 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027645617 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026790083 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024462292 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028567893 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02575346 seconds)
  done (took 1.318092131 seconds)
done (took 10.952944721 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139772804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.02933385 seconds)
  done (took 0.853757986 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.125728564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.12453929 seconds)
  done (took 0.944055902 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.028571534 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.015718595 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.031906074 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024145972 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.015956628 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015625747 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.030838343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.015907809 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.01570017 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.015836652 seconds)
  done (took 0.907725343 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.01904846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022805844 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020828998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.01892682 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020487597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.016734986 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019069159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017002355 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.022583598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016053116 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.019790902 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.037420645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019238128 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.03782437 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019235334 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0199007 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021252802 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019146608 seconds)
  done (took 1.085505442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017364151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.016561931 seconds)
  done (took 0.730765244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020378711 seconds)
    (2/7) benchmarking "second"...
    done (took 0.016794494 seconds)
    (3/7) benchmarking "month"...
    done (took 0.018415032 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018224307 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016248495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.015777905 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016245731 seconds)
  done (took 0.813578741 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38693819 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.086205477 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312082045 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.023986027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038048724 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.225967309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.019282864 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.023674955 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.02357908 seconds)
  done (took 1.834430984 seconds)
done (took 7.867534966 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040198014 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.141352212 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145850301 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451422986 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.033585325 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022124961 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.052576136 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.228514411 seconds)
done (took 1.824168469 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.502766902 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.261955479 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.256946176 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023613461 seconds)
  done (took 2.243840256 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311932618 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139930163 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029980982 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022467004 seconds)
  done (took 1.221333783 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021803907 seconds)
    (2/2) benchmarking "read"...
    done (took 0.02675858 seconds)
  done (took 0.759611267 seconds)
done (took 5.441834692 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029946291 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016614224 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.02291014 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018073992 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.017715623 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017189641 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017379244 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018238625 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016196594 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018187863 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018199746 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018185355 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017982068 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017901737 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017461135 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018175517 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.01625162 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017955085 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017892639 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01787574 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016196941 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018237844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017650665 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.01811913 seconds)
  done (took 1.137442186 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.035625521 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.020603315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.021307767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021116294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.021665032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021131803 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021146149 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.020292867 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021396964 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020163471 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.021683545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.021708209 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020143309 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.021887705 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020166344 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.021876816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.021544502 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020546777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020195936 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.021803502 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.021340662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020551805 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.021776956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.021734608 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.02204738 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.021837543 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.020331825 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.020614503 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.021628087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022006347 seconds)
  done (took 1.362332871 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.022678319 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.014904868 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015163631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025034358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014854725 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.014989576 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015391369 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014588365 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.014919411 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.015762535 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015203471 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.014650704 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015452438 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014649577 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014817216 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015376231 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.019876299 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035425826 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015084872 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014846174 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019407663 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015062903 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014825109 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014813488 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.01528846 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014804857 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014682244 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015161384 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015055632 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015406552 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.014804484 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.019297591 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.020825208 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.014856478 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025002632 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.019840838 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.014817097 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.021464407 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.015719102 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.01470128 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.014633411 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.014713932 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.014880664 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.01492947 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.02537272 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015218032 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.01616049 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015441435 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015113096 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014765495 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014977805 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016512159 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020581491 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016207466 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014806357 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016159663 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014829611 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015603243 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.014995194 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.01482855 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.014897718 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.018879042 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016324219 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015621111 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.036145681 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016321058 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025516199 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015021082 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015450157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019077409 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015588125 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.034293379 seconds)
  done (took 1.955993833 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.027650026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025477646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.033945476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024724447 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018377517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015787533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018974067 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015829719 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0250049 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019315559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015799098 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018957533 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02498048 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019347473 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01689215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024950244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019239975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018539862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015807952 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019388084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017054904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019223322 seconds)
  done (took 1.172215044 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100251519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021092969 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.062884293 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.024519885 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023197073 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.02437334 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020995137 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021029251 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02121679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021673357 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021654617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021111107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.023165805 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021596235 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021631362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021463317 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.02127174 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021768005 seconds)
  done (took 1.22809762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033522124 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021131125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.048052612 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020592043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.02067158 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.020301537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024148121 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02447845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020421105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020859641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024540142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.020540578 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020517228 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.020814609 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020564423 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.020859526 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020615591 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.020863253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.024428091 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.024358692 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024433421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024446573 seconds)
  done (took 1.234623511 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034788996 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.019886199 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.035970651 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.021328961 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015270954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015265117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0216044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.02015134 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.021440695 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.019813608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020312842 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015399718 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.022299352 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020257309 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.022420318 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020348578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019903925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020263089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019908576 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015377393 seconds)
  done (took 1.135538349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12959704 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.01738722 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017245256 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021563265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017145373 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017260672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02184061 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017262644 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.01715599 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041040838 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017367284 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017271533 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021760796 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020056355 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017292264 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021814843 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021743623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022075951 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017399727 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017538928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.04154659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017594016 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022215856 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017488068 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017404433 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017380467 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017450888 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020432103 seconds)
  done (took 1.396844867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037567293 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.01770725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015497818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.01944018 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019351179 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.031451961 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019398248 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019364571 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.017542421 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015529332 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017738789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.017716543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.017661532 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.027823945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.017571104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017686272 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.027813534 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019439112 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.031823706 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.031674991 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017755182 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.028071899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017955937 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015664216 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.032235186 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017993054 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019834732 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020699697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017998525 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015655653 seconds)
  done (took 1.362852771 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029429603 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026054385 seconds)
  done (took 0.772926509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018230989 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032956432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.014697053 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.027844325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.023458147 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.018908849 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023486947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023330461 seconds)
  done (took 0.892359076 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.124465542 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.148622334 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.016922325 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017046272 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.121869653 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083272406 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.133139406 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.02843935 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03045545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019623639 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016724351 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134733975 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016505001 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030202656 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018117107 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.02666088 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024025862 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034746971 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029845066 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015441011 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029456899 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017231833 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016376418 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.01725313 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017924513 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023517856 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032745057 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029139613 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024996687 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014793158 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035478329 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015625707 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.01622682 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024996196 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.12433409 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.015865151 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053490444 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015745324 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.02013282 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015378436 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027761348 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036683087 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.03013126 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.03407191 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017062299 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017471774 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015458277 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017176722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019674028 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024928617 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015713046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02308706 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015335124 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017122172 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026390727 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015752323 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020343207 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.02496523 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029387379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026259041 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.027950124 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031191137 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024503231 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024286721 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016228889 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035696414 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017321849 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029214988 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030750642 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.016875709 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029035249 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015580026 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014747818 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015671023 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049961042 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017089401 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.01652971 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015751793 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.015881489 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017039969 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025412262 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020605973 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023083893 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018793416 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031825251 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.02498272 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015552892 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023164739 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.034265813 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019849889 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015779257 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033286237 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019909897 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015589773 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034110192 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026180058 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017320171 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016549917 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.019844677 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030333081 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017705389 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015169195 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024891552 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018072662 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.128433121 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021435842 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024619506 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016013665 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026731625 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022954098 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017793611 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015211407 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021049489 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017046774 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015221571 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025827409 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016261116 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032002824 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023311095 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.03100171 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031561969 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.02707005 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032663416 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016061712 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015238508 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035594882 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025870828 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017581354 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035152846 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016034367 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026958867 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016262705 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017774994 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025712772 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015537298 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017947126 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016410287 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023180201 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.017943408 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018244798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022597335 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025057547 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029246368 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.01755431 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025305003 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016662588 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032885204 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026342488 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021335426 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.02011149 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.0172212 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028954809 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0234728 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025702875 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016224018 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017200049 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016361141 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027542571 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026151604 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.01821407 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026509682 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021359799 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017261892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016431093 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017440879 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020331279 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.02015039 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017025314 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024202125 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025357691 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031233704 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024520378 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025558663 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.01566958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016229629 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018160443 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016228861 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.02133327 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025891257 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03268264 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028772179 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0382542 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016723025 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026426416 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018219965 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034012617 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.029987829 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017429179 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021661978 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015463346 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018358809 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.02597635 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028339575 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031315412 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031837519 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021566749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021364351 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.01635647 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032079635 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016862856 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024996413 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026005553 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023474356 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016389409 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.01840862 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025815203 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021507665 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017562056 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032741407 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024899926 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016369061 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031108573 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016720247 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027556565 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016305481 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020335457 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022002079 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018637288 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026287479 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.17841756 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.01489053 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.015760709 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.031369503 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.016972606 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016855875 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.02376729 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.030827109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.02062557 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.023370184 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026143044 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026271308 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.020549377 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.025930507 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.016182313 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.024723115 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.018130808 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.02708386 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.015378384 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033513186 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.014613441 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.030653161 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.015833468 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.026261541 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.015572883 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.024614186 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.015967652 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.032365587 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.016601911 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.01597768 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.026868349 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.014537344 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.024542985 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015127236 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.020906424 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.022366252 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.024483811 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.016767566 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.024671721 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.016645417 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.024302177 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.020416207 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024036078 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.024448877 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.020317044 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015115182 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.023632373 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026104703 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.023424044 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.01656729 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.016499198 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.015566181 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.024550694 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.016557408 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016051862 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.023390612 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020440486 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021485971 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016480995 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016620609 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016480108 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.023625963 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.024589595 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03313988 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023791682 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022610544 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024272687 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015054685 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.030763875 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015098871 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.022677192 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.014419143 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021405234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024340673 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015309483 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034286878 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016541304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023084117 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02713093 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.023941344 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019603441 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033483844 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018532232 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023862326 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.02344687 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020511064 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022636847 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017016744 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.023912986 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024935309 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0261236 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016223439 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023044621 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024622 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017151442 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.024228754 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017026196 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0240943 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017202139 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.014941428 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020655201 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.027085103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020948699 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021172686 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015896849 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014832909 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015864416 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023123844 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020752838 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024381618 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031379881 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014898773 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016352939 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015521633 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019723022 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034203576 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025452385 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.02376694 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020872499 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0151145 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017018354 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017254518 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015769507 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.01881246 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015129659 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015525101 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026481369 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017304629 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.02067325 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01589418 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016778657 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025740118 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.020102083 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016038019 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022922476 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015451195 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021284249 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015095658 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017317977 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021106263 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015867906 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020227601 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026736394 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033257759 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023382143 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025141163 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017186993 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024252256 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032149068 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.025753468 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017149598 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025703959 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015703968 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035518458 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025707476 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024849016 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0261229 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017067855 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033633611 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.02107249 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026404159 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032082751 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017221884 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.025421352 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016152636 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032281438 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021053176 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016003908 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.025031765 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024013601 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022487358 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.028334761 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017035249 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.02495356 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.021704554 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020103995 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.01799285 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017907477 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025183573 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032895313 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017241995 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022835933 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024540452 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024810265 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021272781 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029003699 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024724476 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.01744581 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018212445 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020302138 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017208431 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028803313 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016700964 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021205401 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021274102 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016221243 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023481913 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033342921 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025827082 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025984433 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016232945 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015574956 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.0350424 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020315943 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019979805 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024753971 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026292436 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029105136 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025886918 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.03382828 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016803386 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022762272 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.02891272 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017274747 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016154659 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020299394 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.01808691 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025532025 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026326165 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023844938 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018399457 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023604761 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030015166 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017877379 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.02140819 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.023246044 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017286957 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027116397 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024467629 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025030685 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018040707 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016249925 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.01999437 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025296841 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023855542 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025533611 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017300761 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026057453 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031318551 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024053387 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020220067 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016305265 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020091198 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025715109 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023739361 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016354341 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021549135 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.02035451 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026256646 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.026155645 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021413618 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016276327 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034323463 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025782701 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025899315 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018335204 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018538409 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016784125 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016323614 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028054114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016328135 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018190543 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.170896572 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.017133232 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.033295479 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.023652314 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031376217 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016352092 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020557581 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.015327873 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.02506297 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.020630578 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.015327474 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.025903504 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.014837367 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030874739 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.026971286 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.021282731 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.015183928 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021069424 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.023813697 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.030642578 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025060191 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.024295658 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.018119639 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.024867128 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.016628465 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.026386566 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.015148256 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.014482307 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.025137059 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.023876605 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.027281422 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015081236 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.02514875 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.016663483 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.023529981 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.023671474 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.016555237 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.016590604 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.016530733 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024580663 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.020292006 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.024435069 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.020415705 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.032098177 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.015913508 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026099665 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024223991 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.025855164 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029104922 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026977267 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.02347792 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.01549975 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.022767767 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.023996318 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.016128236 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.02068857 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.017977355 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.036811889 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.016504078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.016488431 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029064782 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.021842028 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015193741 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.021586191 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.020197967 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.024945646 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.015878034 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.025399378 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.019625892 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.015811972 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020231412 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.020261989 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.014345999 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.014979164 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.015306356 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.024796316 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.020096286 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015338656 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034538349 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.01671157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024092794 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026334429 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022641794 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.016870024 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.014683615 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016220755 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.028923711 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031095963 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.019591544 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024144344 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017112208 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024813544 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.014795411 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.02418429 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023441912 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024079307 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015491833 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015703751 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.03052334 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031180711 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020706558 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032119099 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024540787 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017007904 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037617455 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024591671 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016536138 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026601777 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017789501 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015167239 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.014947295 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017175911 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027269931 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015670228 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017888365 seconds)
  done (took 15.079782841 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.059253633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.016352879 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015080988 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015049853 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021914632 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016107132 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015005063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016133704 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016188712 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017280889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015077197 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015080923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020532993 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030038199 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02281628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018682982 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015147188 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.016223869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015126007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01624443 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020994961 seconds)
  done (took 1.18717442 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.019534922 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.019497783 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.018853017 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.018983392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018269437 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015306335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018633232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015271624 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019197379 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015765769 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019184001 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015408044 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.015725628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.015660789 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01573125 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016799841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019154348 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018451162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015356699 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018827418 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016715716 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018840118 seconds)
  done (took 1.136854737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.017888483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.015858332 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.023873269 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.014744653 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014625827 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017440569 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.01465204 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019561717 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019539323 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019543475 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023731454 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015359502 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014618808 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.020888748 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014666974 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015532841 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.058971992 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015574851 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015642603 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.014849699 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017110953 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.023962377 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.014941137 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015025165 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019557067 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.017552376 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.01484946 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.01715402 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015380867 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.019748737 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.015942216 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.014759109 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.023930348 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023270033 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019847871 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019765181 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016309326 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015718788 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015038877 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.014993799 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023450299 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016304903 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015230682 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016044976 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023896869 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015064611 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014805101 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024029428 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014884875 seconds)
  done (took 1.658424058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028181166 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.067675073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.021130589 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050662579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.026980925 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020339642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.020914237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.05370002 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016149069 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.016605641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.027686992 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.027832197 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.01758426 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.01886666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022026191 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017575987 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018394826 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017121692 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020197957 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017515458 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020197727 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.022332219 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.02739055 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.027777541 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018694093 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017184496 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017416106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018948342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.027462939 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020603456 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019171365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019609309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.027855499 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.02143202 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017439466 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017732149 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028539474 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018139826 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017902381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016340572 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017587872 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019076899 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.022434056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028771654 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018157217 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.022957413 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018009764 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016023309 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.027913384 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017753423 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021218142 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.02866218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018840298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018107329 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019175828 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.027880473 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017970503 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016692093 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018015097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.027620027 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016292207 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018677178 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.028364767 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017392176 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.020751422 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.028479302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.022865339 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018988466 seconds)
  done (took 2.416591208 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.024894374 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.050029255 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028913638 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028741837 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.02439735 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.024747471 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.024638128 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.024656982 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.024545503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.027351001 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.024727292 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163730804 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.021841429 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026313655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025149194 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025243152 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.025224305 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025287641 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.025126515 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025103698 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.025108384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.029778108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.02512663 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.029747077 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.029525403 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.021845455 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.024967225 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.025072852 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029902078 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.025087692 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029582884 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.025111309 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.025200182 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.030115573 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029805559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.025150806 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015783557 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025108746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.025276881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.025150855 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.021899356 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.030286592 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.025203546 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.021893354 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.025286299 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.024978778 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.030068696 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029744566 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.026867701 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.028047907 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.025244203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.03007345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025201772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.025534931 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030499328 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.033316099 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030215681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030599411 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025691723 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030691385 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030704314 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.033716043 seconds)
  done (took 2.577044704 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030279897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020809886 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.033639232 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.014907936 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014807842 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.023823442 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.014914718 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.014941145 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020732538 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020683096 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022125758 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024042828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025857341 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022231867 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024036291 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02582542 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02402906 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024066374 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021165837 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024305506 seconds)
  done (took 1.21891625 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018741959 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.02030849 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015642272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.030938995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015605426 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022798654 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015642215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015573305 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015651444 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015688709 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02015199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.02007712 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01568446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023524095 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019114418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.023023722 seconds)
  done (took 1.063536339 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020021453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.023983286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124421131 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016204238 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.01812619 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015611719 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016360628 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015341352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.01761948 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029063822 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016446237 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018403211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016448476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015103265 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015753673 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018411827 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017563149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016503449 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016409716 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126519407 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.02510621 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017330633 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.018919923 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017409906 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018380751 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024677905 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018025102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018329963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016567035 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0188167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018396855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.02734524 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018402818 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017122062 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015307121 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016173888 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016614469 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018740196 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018733901 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016591482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015484534 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018332374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016659659 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.01698896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.017829402 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0187375 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.017834995 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.026416041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.01656671 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018423891 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016658318 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.01795055 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017037412 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027535899 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018715985 seconds)
  done (took 1.98861496 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034269615 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020544608 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014814563 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014768076 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020132282 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.020746072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.020176972 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.020262852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020727498 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01472746 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020748049 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019911747 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.020927574 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020474636 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020892516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020439318 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.014832389 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.020612761 seconds)
  done (took 1.127870698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024013656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020472442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020620505 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016728131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016782741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020546436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015139763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016441973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016472965 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016819554 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016818533 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016437338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016461304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016374886 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020348217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016849477 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016424417 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015348722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016796737 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015228746 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020742292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015375841 seconds)
  done (took 1.144845248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.187013337 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.146202011 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.039106177 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034749493 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.026567472 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051247182 seconds)
  done (took 1.244856601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.051092938 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.052531755 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020267805 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020272645 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024290067 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022642937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022540105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022937832 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025821293 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028614457 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022946108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026134825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025853526 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027645845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024422382 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024496146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023005642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02318167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020478662 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030839435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023313888 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026464003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023366245 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023126937 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023354642 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028074899 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026485858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029117878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023126468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026557872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024923749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023247588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026696588 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029227337 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020605726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026365509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023350846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031082221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024953388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028186227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020481189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0250414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026739595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026337033 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026717226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023563752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026213673 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023477711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023505745 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034826178 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025182449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028126716 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025099643 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027015336 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026568709 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034724899 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029291892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028303258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025317296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030163382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029045012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025678562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028809654 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030798864 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026845966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030679718 seconds)
  done (took 2.525067095 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059536025 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.020667574 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022817736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028098331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026959741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022848522 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022970459 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022907771 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022918492 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020694012 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058340889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023152054 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027560073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027527474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02307619 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022888107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023039042 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027961718 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020906422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034375309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023184145 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027903309 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027929665 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027914984 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029163119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024977065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023347338 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023343097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023287127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023222656 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026180793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023381032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028061285 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.020879182 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028059822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023438331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023325603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026220243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023370837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025086513 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028331655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031310901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02344642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023365637 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029289581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023336435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023326922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021010372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023407236 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020942726 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029354484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029291193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029234385 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028308901 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023606547 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023560557 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023452764 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023475643 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02352822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02509578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028629343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023685036 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.035903525 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024022681 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023903201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029233374 seconds)
  done (took 2.512624545 seconds)
done (took 51.238657607 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204716932 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175615632 seconds)
  done (took 1.129460852 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.137455568 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.13441008 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.157226755 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023853771 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081680581 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174043619 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125861956 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026135172 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024023498 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.026141041 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023600631 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025820739 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025975066 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023508674 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086421472 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026050069 seconds)
  done (took 1.891567638 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.07482942 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2398609 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.059024199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022647472 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105488322 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.02912659 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024354349 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028363777 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028864636 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022944085 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071599093 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.035851833 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027432258 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028432401 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024215479 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.027460181 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028400377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028853069 seconds)
  done (took 1.676702339 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.06897875 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.033221254 seconds)
  done (took 0.870511871 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.117238016 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.06357781 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.102543938 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309187607 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095429005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.099151486 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.103418478 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.098789786 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.068774099 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095520386 seconds)
  done (took 1.913837976 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.060816522 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.057591269 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.282420396 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.055333362 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034766428 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029651398 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029353913 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0310802 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.029664629 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029153588 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075528563 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.027801398 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024448991 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072872064 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.051014964 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.060841676 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023834136 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.030723322 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032774548 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023619796 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028667918 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.03140792 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133633962 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.031043774 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052986316 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.02811863 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029745221 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.028935918 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.028772806 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030844083 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.03128791 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.054636319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.030854566 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037246868 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.029091415 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.051087045 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024554713 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.052040973 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027398959 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024597191 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027945157 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031608469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.143322628 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.031924574 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030578728 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.03081339 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031982245 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023822796 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030195704 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027629919 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.02473299 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029045198 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.02892961 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029925579 seconds)
  done (took 3.150331709 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.078280657 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066565486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024061553 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075474604 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065232869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024238337 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080687514 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060376206 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078540632 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023686958 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023397131 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023245091 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031043725 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035128864 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076084962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069681988 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025664269 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024205116 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.069052947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.069536031 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023011308 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080455706 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071213475 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067950468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022697556 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024208173 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022826307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023517228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031853171 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031670637 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023263947 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034102017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035056862 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.03073604 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022659945 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022939287 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022960889 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031753262 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.03334301 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033275377 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030321912 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022694211 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023023995 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023548771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024044342 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022578366 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033312799 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.031400851 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033283219 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023938923 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024262778 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023542013 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024130906 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.03124191 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.02970179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031317506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03453246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023453945 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023327664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024822909 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034916161 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031862713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031796494 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024286035 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03284222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023258284 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033941799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036659566 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023130325 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023641089 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023289194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023252331 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023637526 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029914152 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.03003233 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023798341 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023606651 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023080184 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031762004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030302329 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023265662 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032664808 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022873557 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023450729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023772494 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024150654 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.035246775 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.033325751 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024538072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024040071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.02408759 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023989236 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023280631 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.034247495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032934882 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.033209889 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.035249075 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024495926 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035958824 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.033380726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02460409 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.03220198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023967628 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024356403 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024326908 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032107751 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031717455 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033427743 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02399339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023677096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.033105759 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035311229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023926381 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031849382 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034515741 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032730768 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023581069 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.03571123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02419861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035704262 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024379148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035073334 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024358603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032837062 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024273722 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023460344 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02418181 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.03643163 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.025010445 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024116392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02453223 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02409792 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032778899 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037146108 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024794923 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033177245 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032992436 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.02471703 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035419239 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024359256 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.03567842 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02441099 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024695542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023510448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037834027 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024272411 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024609952 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024265269 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.03508194 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024171572 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034845909 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032227393 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024030415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03652209 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.03459483 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.03231566 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035340152 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024973163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024326454 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023995193 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024303214 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.035637734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037118209 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025160152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024258168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.17455474 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.03218974 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.022778228 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.029214431 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.028959233 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.02945256 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.02318034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023163445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.032477161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033428494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.029157958 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.031728148 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.030115124 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022881116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.028952842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031855808 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022929608 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035983936 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022932614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.032640617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.032089562 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.028416993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031739374 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.032874882 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.031553102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031282516 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033246271 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022452271 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.022709191 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029103032 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.022705257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022871298 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.028817606 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023250239 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023343099 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035612373 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023111773 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032138875 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022433762 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029857933 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022391719 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023304732 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034103208 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.022745964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02327805 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029426903 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.022809492 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.028947135 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031843104 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028914621 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0226342 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023285045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032893564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.032677362 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023162474 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022992129 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023613217 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.032792715 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.03215592 seconds)
  done (took 7.841580253 seconds)
done (took 19.25174059 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.152790461 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.071599388 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.158434413 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.090777522 seconds)
  done (took 1.233943496 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.056180671 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.01930859 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.140226715 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.151938712 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.01953797 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.133964477 seconds)
  done (took 1.303173407 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.212016689 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.138509194 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.142694785 seconds)
  done (took 1.277644635 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.129348745 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.267090342 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.537927369 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.127232809 seconds)
  done (took 1.853448491 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.172345781 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.16541452 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031417982 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180851989 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.03901377 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016044873 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.102791562 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.022465826 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.053065153 seconds)
  done (took 1.626497101 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.096411076 seconds)
done (took 8.176085133 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.180243235 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.138574802 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.033182654 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.026928052 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.132735626 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.13547078 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.139183461 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.02923211 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.130106584 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.299166186 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.162342144 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048004163 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.155726446 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043115054 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.258439801 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031060481 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.028798849 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024314823 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.146099399 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.127974244 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.240434023 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028219615 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.094083674 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030327855 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.106182558 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.079059968 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.169462809 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.29218253 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.275989022 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030690395 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.128090163 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042968597 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.121240686 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.132754052 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.134204433 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049051994 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.0201339 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.243480284 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.112677111 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.305675416 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.152892912 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.026600668 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.144087596 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025473391 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019744667 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.146978489 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.034422655 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.02688862 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.045400661 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.026692746 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042552019 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.026784784 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.14305469 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023763666 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093918958 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.14194094 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.166253176 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.100193452 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026511017 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039470241 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029577869 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.154841071 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.039029003 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025864581 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032601044 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020151978 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.138591529 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039792137 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020542969 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030513942 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.028508901 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.115551502 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.157955006 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.065376458 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032117574 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.120632575 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097435918 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.048623991 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049243832 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029820394 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019680835 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.169675452 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025352934 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038526577 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.026254633 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053439859 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.019970877 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035679534 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.158104766 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.152830317 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.242114603 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.020393164 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.228663747 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.020966953 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.043444706 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.019964269 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.019483693 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.162589616 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.019348206 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.019501014 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029004017 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.027748836 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021083877 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.149390465 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.103476543 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.027510984 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.026056537 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.019814379 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.024929946 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.020547517 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.01977643 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.019583328 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094032012 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.034744378 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.018774122 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.106674787 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.125198543 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.030272999 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.037284563 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.083618463 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.022284642 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.027886098 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.026152306 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.122239616 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027183648 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.132376554 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.020814536 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.041893 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.117235659 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.092945276 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.105404063 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019337878 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.153373544 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029363212 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.018868991 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.026295956 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046951682 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.028786097 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.034648564 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027507635 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.154059559 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030180857 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.024735302 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.117479739 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.018745215 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.110252975 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.093989801 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.128308065 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.024750701 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029947233 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.092931483 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043607371 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049001306 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043126327 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024276521 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.0199073 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019592857 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034503214 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.018993991 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019799402 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.034587576 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026095303 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.019610652 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.241902049 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030168014 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024147367 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.26201561 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.031853256 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.099852421 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.041510966 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019962129 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.105251905 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021702494 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040315658 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08193886 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020200869 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.096001318 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020407579 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.01975966 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.027122507 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021352593 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.028531718 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033322827 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020288358 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033991734 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027357588 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.019877062 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.10494001 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021590343 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.168469214 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.104340344 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.116378502 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020256073 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038229248 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019619531 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.134363864 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.019923524 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.068477994 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.116118326 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.036461498 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040207528 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021405185 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.094713128 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035360552 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.01968461 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.10164582 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.130305205 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.101666575 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.027801003 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.249887504 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.0293958 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020956007 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.027668872 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028547189 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.02089738 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.097581577 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024821944 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019701596 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019978238 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021952274 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019314084 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.046735289 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.01948108 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.02773941 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.020060624 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022749447 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022092659 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019342061 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.027854205 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.097910966 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.131065488 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025976619 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.04042148 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033079281 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031504213 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.06837462 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.026845705 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.143412172 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019635349 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.02960898 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.043240513 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019867598 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025292539 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.020348831 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.040110684 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023554113 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021948295 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.02881397 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020586699 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.02068101 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020252771 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020518366 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028595886 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022001491 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019815191 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019824669 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.020324602 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.024803917 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025478437 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031064132 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.040505482 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.462977315 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022362868 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022405892 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020364405 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020338633 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020597145 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022095776 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.02016882 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022222652 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.02041345 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019776645 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049806273 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.02533043 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.191459589 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.043117529 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.019813386 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.029225836 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.12783329 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.036321813 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.023934114 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.018916191 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.265696388 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.1087904 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041791093 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.040124377 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.01992367 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.029545934 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.019907528 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.019926683 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.018767634 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.04632952 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.023933411 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.019862657 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.018710442 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019049476 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.06582907 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.027280883 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.019033205 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.027690142 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.019610292 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.019571269 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046801253 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020415903 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.019221017 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.03840564 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032040164 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.096175312 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.030677893 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.022168321 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.068864387 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.018580511 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.019231289 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.019711406 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.11094811 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.031884595 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.02041462 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.019283196 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.026408623 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.027931988 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.070746855 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.024991967 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.02220558 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.027027017 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.018561399 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.019686848 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.044293524 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047269006 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.020465109 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.022884332 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019186013 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.019654705 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.092424972 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.026820609 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.023694204 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.101663772 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.021190727 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.026995591 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.018614273 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.452781303 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.024147924 seconds)
  done (took 22.049379625 seconds)
done (took 22.8520342 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162539583 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.03357337 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.032887206 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028624349 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032419984 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032454733 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.033691278 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029231197 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032085139 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.03150492 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146460756 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019293674 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027011987 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034458705 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028227964 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.035570546 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032030943 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.034911172 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020086988 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.035063391 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.030162484 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.032735953 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028329971 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.034733272 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020232403 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028426466 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156626929 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.038549364 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0233339 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029655849 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027413635 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.033482743 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027444767 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027035552 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029279641 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.024998671 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029686886 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026203988 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156706034 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025320735 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020226938 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.032659726 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.02698441 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027648412 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.02887744 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031667863 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.024983534 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033436275 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.019380944 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.032617796 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156290821 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024520368 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.023269179 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028337971 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025022067 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029326094 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.023181724 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031546251 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.024881422 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.032025402 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.027777242 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.02774228 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019616191 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028339937 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027048767 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027262838 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018669099 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024524247 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019618654 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019523521 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.018874797 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028337884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0265116 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024584081 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.01908547 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019676287 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019183396 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.032085228 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.02681567 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028633326 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020037266 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025134704 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024673312 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.02012479 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024425196 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031599211 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.019102522 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020122009 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019067744 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.031336323 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026217536 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019619724 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031654285 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024343459 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024024348 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019658402 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019115164 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024322281 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027786607 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019641521 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018683501 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024305493 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024761392 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028535147 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019969401 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024189482 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024135016 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018694632 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028375741 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026901363 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.02873547 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.032580568 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.02846229 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031011074 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020124469 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018664184 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029493179 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019972927 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02454027 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027570222 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.024953112 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027647055 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020107905 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019029302 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024244004 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025581854 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020026234 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020112094 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019986699 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028573557 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026995057 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018756628 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019610623 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028509006 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028476737 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019109707 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019026433 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028418809 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020220248 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025716585 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.024914757 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028598145 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019355659 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019946767 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.018931885 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019304934 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.019050226 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0249804 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024388097 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020156114 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028533334 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026874625 seconds)
done (took 5.480593757 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.033312449 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.06370635 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176209957 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.139626957 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033236866 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.020838252 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024653919 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.040328 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.023422638 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.045723132 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045451261 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.041919185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.16277124 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.019027607 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020112015 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.020909671 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.018495173 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.032625916 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145593562 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.044125474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062712888 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.01969136 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.03683266 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.040081634 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033241154 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.03913446 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021238542 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020777465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.022752816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.03784558 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046164315 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.019800342 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021080597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039963158 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036498094 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029221678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020777053 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027151761 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.02079423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.01991725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.021895924 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.038777222 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027271743 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027595992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021151666 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.020583948 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020483311 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028466348 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035014209 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.026670458 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033166746 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037808192 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022239539 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.020531479 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.018819007 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028162703 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.020455852 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020555171 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.02090192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019739733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020834037 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.022999205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026044578 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.030995485 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024418943 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027964987 seconds)
  done (took 3.290088312 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.039792728 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.048821214 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.033986222 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.034330268 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019531883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.02016119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020117314 seconds)
  done (took 1.111303378 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067233923 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135921028 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144205017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144880008 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.156150192 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143880544 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033317385 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050076025 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.019665363 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157957473 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.154333448 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148980097 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024292829 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033111721 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053474185 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.152310999 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.03369191 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.02754996 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143979262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150152051 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025455975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051637366 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.032545654 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021370256 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.148082072 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140860883 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.02411912 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021508134 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023374945 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020636419 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020546688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043949463 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140507848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036174962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021788699 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019714576 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137865157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021879698 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140769832 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028401826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140234758 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023169869 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023262543 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02082139 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.021920755 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.143197934 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.021906044 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020755349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020322753 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141779666 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.020217605 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140249892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.023387043 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.025991428 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.027755633 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027318688 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027660513 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.02111839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143252022 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.030707525 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022440283 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.151565486 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.151066761 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140999052 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.152172642 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.029787237 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144170917 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.143545121 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021126022 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029281547 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021658497 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.155780876 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.024874647 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023670608 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.026308675 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028436363 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.160954584 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.16129317 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.16144262 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035980629 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.024003133 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021323092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.158501548 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.161560965 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027023939 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021215467 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.022165363 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037811715 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047162553 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.023476251 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026345735 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021471928 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.03183358 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023947792 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.024092029 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.155456247 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.021884583 seconds)
  done (took 7.672579581 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.029466123 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.023169512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.02182567 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021703466 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021905692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021623023 seconds)
  done (took 1.138846384 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.048496123 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.021804631 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.03360116 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021460464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.043532127 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.142009001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14283409 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022958435 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.037609532 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.033298774 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141945095 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.146177375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145547211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023390307 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144081305 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033276042 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143474106 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026486218 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032451208 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02297139 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.035277882 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022416052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022657872 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.152053451 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.023628101 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.032760696 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.030760801 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.032716217 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032299663 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022861606 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022506281 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.023381949 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.028460781 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022742011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144975972 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028783215 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022016272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.025607736 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.023714263 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.023375236 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149427174 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023287829 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026790785 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.025725754 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022952703 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028731418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0256718 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.025740138 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.145834769 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.026090931 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.025742585 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022396166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.023500473 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.025622347 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028654796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023089339 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.025746636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.146303483 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022877575 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028814074 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022063382 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.023521904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022877981 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.023485052 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026989973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.025500234 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028625381 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022943967 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022949798 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021902477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.02559571 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021801961 seconds)
  done (took 4.24787052 seconds)
done (took 18.363986895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530109257 seconds)
  done (took 1.431242796 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.018321536 seconds)
  done (took 1.959127687 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052444966 seconds)
  done (took 0.982438229 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.29205007 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.409464085 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726350552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.094120423 seconds)
  done (took 2.435384299 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.849401858 seconds)
  done (took 1.78706099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219785665 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.181010663 seconds)
  done (took 1.365411262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.50061516 seconds)
  done (took 1.428730066 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.332766265 seconds)
  done (took 2.270480789 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.189986695 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.130805047 seconds)
  done (took 1.256382758 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.598850186 seconds)
  done (took 1.529657722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.582929144 seconds)
  done (took 5.516575015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.195850822 seconds)
  done (took 1.190618206 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.195525254 seconds)
  done (took 1.133817421 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.732794336 seconds)
  done (took 1.665450471 seconds)
done (took 26.897568303 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043632773 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.039116598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.038902992 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034292626 seconds)
  done (took 1.078073585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030110474 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.02434624 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026776545 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027224012 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.024658578 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026410972 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.026916527 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.02318122 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.024554281 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.023766822 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022060713 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.023786106 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026370367 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023328659 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.02591312 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027469527 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.023818577 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.02420298 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025854042 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023259133 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026515123 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.023817368 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.023739228 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025212336 seconds)
  done (took 1.53805671 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.033888309 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025680492 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.028733385 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024419151 seconds)
  done (took 1.051340767 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.03233301 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.030321374 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038606534 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.043498982 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029679722 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030512386 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.037069384 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.037323078 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043705269 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.040171125 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021463491 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021145263 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020294964 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.039160479 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.036473435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015809457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017236127 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030730518 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.029881257 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.032575876 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023285686 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019047482 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029839931 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030520272 seconds)
  done (took 1.665681928 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.037688648 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019214738 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.035499513 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044354617 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.04559833 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.018967137 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.032756762 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045571795 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.082806286 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019122671 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025226139 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019130035 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057794284 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019101784 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.03439256 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.064652698 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.067350352 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023009976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.052326076 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019147119 seconds)
  done (took 1.706313782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.02813946 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024142579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.023889859 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019245292 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030140284 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026491045 seconds)
  done (took 1.095377117 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024041336 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.022032829 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02098215 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.026031154 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021767483 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021659858 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.020896439 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019770464 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019689052 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020427451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.02043841 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020891905 seconds)
  done (took 1.197434337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.170693593 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026313414 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.025627057 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.019762996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021446462 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.02043607 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.034613515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.02219892 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.037606679 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020552603 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020591636 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.02265697 seconds)
  done (took 1.380983864 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060940127 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06538276 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100361592 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07051961 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069258413 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049759529 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.197460496 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.03260563 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120182557 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093035843 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071299738 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045561227 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040180249 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023212285 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054853255 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074384717 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092311199 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026617349 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0684171 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.240607167 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090023537 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.093287421 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105662355 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072706021 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048014436 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105390664 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.051146682 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05871972 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.079302041 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0842008 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075627906 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.053755855 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.0254058 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024890052 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107936984 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.063754587 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076575944 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047637394 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060550539 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043513715 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064372623 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.023710414 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.036286678 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.067353104 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042306694 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094735039 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.048159771 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075036106 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036821065 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09958651 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089123476 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.178072535 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042699 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063619479 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103444383 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075070714 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.251114854 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061129779 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036321998 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.073554336 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.059235111 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053543857 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061399993 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03378496 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131886506 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042938264 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.065731253 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064690278 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049400299 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.04944828 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060408883 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089926749 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079820956 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.079815532 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091892943 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045879535 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074750777 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.055339274 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.083426368 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059862075 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.02689283 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.080067057 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085477763 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055675817 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055877219 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087342296 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047382924 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030119941 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.056473359 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.075251482 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034413343 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.070091574 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035622097 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.065626804 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095285465 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053449187 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066824983 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074471045 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032518695 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114568345 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.064289841 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027142162 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073341508 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071566944 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120097599 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054073872 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030743946 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057979511 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062990179 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.113244146 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069435829 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0361495 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070347696 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106688831 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052690362 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.416758827 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.049902324 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095295854 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064464844 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040382898 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028804133 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.044049676 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068294532 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061132196 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064986049 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047328433 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.037231127 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.039889931 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067761512 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046150345 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034371479 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.067250177 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.055935502 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.028241221 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04141093 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.030033519 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094628043 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.031816885 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089059207 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07936209 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.0289257 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060284531 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049103129 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06005183 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.051796111 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072783043 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098078966 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.142767663 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.046156737 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.050208225 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064086136 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101887749 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083305695 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0471079 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.031338106 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056183737 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067058489 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.05329886 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081145396 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049040861 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063451059 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058665206 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099922282 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104152392 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055214527 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056703883 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065406916 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.079414617 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029189841 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119438021 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063647287 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076663917 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042761938 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104694277 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.068750112 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047925092 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.043192241 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057972277 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.066314108 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066253303 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109913401 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.053129704 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027499265 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053064022 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.258907165 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031074727 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063306495 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044620844 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046359041 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072134977 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.048055828 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035123957 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022033781 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080559269 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111406363 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.023613813 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065456906 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.05999009 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055496223 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.074421369 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.022846592 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071760099 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089992684 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069889585 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094453839 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120993586 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075240847 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074890849 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.071062892 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.061494442 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033670816 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.08209504 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092393711 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052140796 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046964187 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092411266 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07404203 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.094095694 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.075111943 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075090053 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.063486039 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062774188 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060599418 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.062629439 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104825615 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.0791533 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.084742795 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038991286 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064664713 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.076325566 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098169106 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.037195218 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105691878 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.042737072 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081226028 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.034956677 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086560265 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030923838 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.127261428 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034901665 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.059355402 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024485711 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.030091195 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.256261697 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.066784492 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060734535 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054149719 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.091363474 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090216321 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031318077 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061386958 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066534703 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054451685 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069420162 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.061858985 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042387498 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048041684 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.059874045 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038480141 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.034714913 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069858214 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047338022 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078971788 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038011774 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028874663 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093059443 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058524149 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049356778 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0302428 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062633159 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.080306193 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.047644034 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041179077 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071011685 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060687058 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099995524 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045615291 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.052766462 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082213123 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.035072488 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.047319706 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.023437993 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.040153419 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.030218795 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088235695 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.030190237 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.073832374 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.022813981 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08827289 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.043177929 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.047901953 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057780307 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066658541 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084301446 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049555999 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1001493 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04547226 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.077814698 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064526773 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050174864 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042091279 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059692138 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057957597 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082680702 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.052292577 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084303522 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109894876 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062522519 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.105785888 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04899106 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082760931 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06625996 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.237682969 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065678356 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121226841 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092644114 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065206463 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063196904 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028558353 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048269622 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058476589 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.065511282 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127564081 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078443172 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.025836091 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05760555 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047339349 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062010219 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057368261 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035466741 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097800677 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056744717 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041717756 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066150267 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.045756022 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059876058 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030579922 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.055789052 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.060383637 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050475965 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052425666 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070373713 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085963889 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068952655 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.102379181 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.057297171 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046735538 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.075297318 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066819354 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06563736 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040505584 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040987129 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096498648 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075786933 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.08180304 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.055910416 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065561363 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067028778 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056500477 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083998176 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064700438 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.087455959 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036082721 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.032785739 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022698839 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026910292 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084121078 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066583742 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070731838 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056404237 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.027030497 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062119913 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062251607 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027677377 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045682368 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054742064 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056114268 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.051435328 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.22087471 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.065577383 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.050491867 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057736266 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051171289 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100970044 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.054542638 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04168221 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097505222 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103259477 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040941112 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045563373 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025058514 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.032489802 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065721483 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102354741 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10449595 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.03179698 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040271515 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.039186658 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04012011 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025169666 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042797051 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.042684301 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058645251 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05249353 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.068466266 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058983309 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029325757 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05694523 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053793488 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047346531 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.06323596 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076789335 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083621228 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.100811456 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069956431 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064235196 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030624955 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.0354586 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030386746 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033908082 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.056948718 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033257236 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030517958 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101507424 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.046414042 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060748653 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064030529 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04261263 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029810433 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092327044 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023534665 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093795103 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025237371 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036902733 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036574121 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033463346 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050014453 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098095419 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066338113 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.071140998 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065013921 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062946448 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124256397 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123471553 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040040481 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.105471819 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0318401 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033014317 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.03154983 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.220269777 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043469744 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067330809 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094325516 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043805011 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054836959 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.031366921 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097178978 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.05216235 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057773319 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039394818 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032711816 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096915943 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032909581 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.035050108 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.042511087 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064619761 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025902071 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055090618 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036262325 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033006645 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116683642 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.663607066 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045261889 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.029403404 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049403984 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.096219278 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088802302 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051746295 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064148116 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.07530889 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056097226 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049276775 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064074006 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.148645319 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028252316 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050656928 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.06013667 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05289637 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057646781 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.0543686 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.047883157 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.048081187 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.041220175 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033543046 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064026865 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043314379 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052019346 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063995996 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037616633 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.043215628 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088392654 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.059528774 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038090387 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043598047 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.05859913 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043150805 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060407805 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023493675 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068260436 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043968699 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080182202 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.056471537 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065639872 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085911308 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051225273 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101818014 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.068552896 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083141438 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043325339 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.034306649 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.232865409 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.0435833 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031394626 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098019463 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.04948201 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.057084701 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056906194 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050392974 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066233501 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070620859 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065904523 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.050162974 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032185477 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054260771 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.056286816 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039929464 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032769654 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.027959915 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.02996464 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060630838 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039328283 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039293486 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065859216 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042352283 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056583622 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.05705497 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076902178 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041163182 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05682378 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065600073 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046698923 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065803292 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056391105 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085802359 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135195178 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083124798 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08677478 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09277971 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032450862 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.030423173 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.022788628 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069041438 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033942071 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.044617087 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033384386 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09254499 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038328209 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069142608 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.203153083 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.035409438 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050540263 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052899162 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024034609 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038493077 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064567906 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042011692 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035283505 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075940939 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036107624 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.086739346 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070578029 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058322102 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.0531172 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037157639 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074873686 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.059283204 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.08914711 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052904716 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.031972178 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08750811 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062683087 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10462977 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.181447317 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035141236 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084815163 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057354056 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084358076 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033557008 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103224578 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095091793 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053203121 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088113988 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.024526615 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041060074 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043151356 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.079508454 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038098517 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06360967 seconds)
  done (took 40.89251697 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.137702243 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.132545946 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.075941481 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.088632482 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.244394447 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.2532142 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.106472837 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077980275 seconds)
  done (took 2.176046004 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024390421 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.03724681 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035032129 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.281858736 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.057594106 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.02111198 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.026152428 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035656493 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024502868 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020499755 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058866354 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020763429 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.024693289 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.437079154 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019995317 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025725067 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024707189 seconds)
  done (took 2.24595303 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.309481412 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.572616115 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.52590613 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.577617032 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.120122877 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.677185305 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029080473 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.035449185 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784310557 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.352413203 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.114230953 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181409215 seconds)
  done (took 20.341850622 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031708588 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.155760653 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153562029 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028004773 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027638003 seconds)
  done (took 1.513393041 seconds)
done (took 78.894592149 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.04051596 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.12420752 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020516211 seconds)
  done (took 1.232006194 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.158070319 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.154320063 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.153723383 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.155978464 seconds)
  done (took 1.676683058 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030438193 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029912715 seconds)
  done (took 1.122405188 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.185789624 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.25104468 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044968468 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039222765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.033371952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.034785924 seconds)
  done (took 1.171877021 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.02689507 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024710203 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.024721308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.02501321 seconds)
  done (took 1.155734617 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.13501153 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019424625 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021839785 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023691638 seconds)
  done (took 1.254962432 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040580739 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.04004428 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.069269748 seconds)
  done (took 1.210189419 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039213309 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038666876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032748656 seconds)
  done (took 1.171957821 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.065230834 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050176105 seconds)
  done (took 1.173351772 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.035486152 seconds)
  done (took 1.094541028 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.047212135 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.051228526 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.221181815 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.185585851 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.222844462 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.208119526 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.030408368 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030930432 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.026551754 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.025482469 seconds)
  done (took 2.103170213 seconds)
done (took 15.949029336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.035835061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.144953891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.2699511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040662628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608767125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.266570404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.677227153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044403628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053661237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.02184073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038437692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586348413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683006052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.100514099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.66751618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.092983779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.516322038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022820945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021395217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021775977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.661035249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021776839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021813212 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022263557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513890545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.289676523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023120469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.094234926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022401201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025783839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.26984391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022764116 seconds)
  done (took 11.955306871 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.02593958 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.0760831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026886918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037302032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023522271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023800362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025461819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022005158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.064362031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021702442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038820364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021224387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026007925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022752947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.041816827 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021607753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023672322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022315948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02155421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022024963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.04050237 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021208498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.021987313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022154155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.021881587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036060728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022759517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021591545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021901922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.02574661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026689865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02293982 seconds)
  done (took 1.984032369 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078465171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.078853867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027686096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.06189236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07411696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024544254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105462899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044211798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067943995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022421674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038926932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021798992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058471621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023066127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042803916 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021879118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024387503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022632607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022455406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022634962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.04141324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021682018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022155539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02259689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022453236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037942346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022838373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021828906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022081064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026196536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027744769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023515816 seconds)
  done (took 2.266312501 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.024930715 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.025056795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.03105191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034080037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020135114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022333431 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.023333603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0202903 seconds)
  done (took 1.272235181 seconds)
done (took 18.553931506 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035567095 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022150829 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.024962868 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.041626045 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028057974 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143808687 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.019194281 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.028915131 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025426073 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025644929 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.02710216 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.020399077 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024060539 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.018907876 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.025946234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020054159 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146590511 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.024368322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.144336929 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.145842673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.022569515 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.025576425 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028600635 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144927503 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145059675 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144842083 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029179445 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026028723 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.020318733 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.022966081 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.14269025 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.146237804 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023333337 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.14182073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020542543 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020246877 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.02447677 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021949375 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149757173 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029475527 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022606833 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029042295 seconds)
  done (took 3.429718865 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.148022435 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.153645717 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.146971232 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032428581 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029025689 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032023604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.152778052 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.028985725 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.02757297 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.151979543 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023433263 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027627862 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030025625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.02073641 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027546235 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.023825287 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.02926055 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021806269 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027573071 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027812786 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.153012545 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021034697 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028284607 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029079577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.02323511 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029252043 seconds)
  done (took 2.539911134 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.030487039 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043424705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.046038862 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.099683871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063709915 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.036210392 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036533097 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047243964 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054562774 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021356335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043197806 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.049381612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049802143 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028227581 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060736022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.039709485 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033890356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022866103 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027909652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.055585196 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.04412705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040030787 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054127876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041405116 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020274805 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030485277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.028590934 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037527361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.028624468 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.034046417 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025053381 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024676287 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.021982624 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032536796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025049474 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019260729 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.043948142 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.033731759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.035932585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060732826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031272823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022630741 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.04863085 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.087122222 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.02087724 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.02423149 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025774114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034259495 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022919287 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.052312936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036799197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021284088 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.041160878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022867173 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022962446 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.037079342 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022948452 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023483057 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.033220507 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027660668 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.042878612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026666776 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.042554287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.02127273 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.032796208 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022730512 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022931526 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019970367 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.05613779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028797501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.071186813 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022392327 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019464465 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033624722 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0327353 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028567323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.021030728 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.04019094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033774916 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025073521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.032224152 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024192303 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0245158 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.057689076 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020237068 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019396698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019270687 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.023673335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024460488 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021913086 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033647057 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020772619 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02457381 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.03586807 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021269423 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021995036 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023824078 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022541885 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.02068224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031256364 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024998249 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023008114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034056164 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022326398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.024569597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036475984 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030446394 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020692382 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.022404118 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.023625787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023014503 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.025743045 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.024612644 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023121765 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026293048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028827657 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027494605 seconds)
  done (took 4.931035036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.241080834 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.230470985 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022394505 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.225748799 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.029860214 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.158560658 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228781722 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.233358151 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.021997393 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.022814144 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.02097245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.172626559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167243047 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18089563 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.159782307 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024032009 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.04889035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.179166879 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.235366756 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.230228604 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.047906716 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029002693 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024237714 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023217596 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022514168 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030532011 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038520485 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030542095 seconds)
  done (took 4.182756217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030614465 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066203016 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025181968 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046458112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038953389 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.021815625 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023573373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022828724 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038504251 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.027389276 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.021617079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.025923513 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025248281 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.023845621 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022367617 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028042355 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028024745 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.029216393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025205157 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0261801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.032419368 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.045881231 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.02572632 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021673099 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.02498738 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021600746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027111102 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.030352489 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.02138135 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021455016 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018745002 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.02611732 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036119704 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.022769597 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021389849 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.02223622 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.021885309 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.021781883 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022006027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.019913496 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.019836123 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.026789937 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.02058956 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026708101 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035896291 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.023839504 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023287239 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024283157 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024125892 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.01873766 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025399144 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025038986 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024314601 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030012215 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.02552298 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024136561 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.02310077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.035850928 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027253554 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021115945 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.020755343 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020232802 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.023356045 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028228459 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038613436 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.023518881 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020246474 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.02194416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023412244 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035848555 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021208157 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.027420754 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.018890189 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.021990046 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024250844 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024785987 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.02330395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020230964 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021566249 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.022058677 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.021833959 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021726891 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021240388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024613465 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.019822265 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020319275 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022476571 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023435463 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027363171 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.02066444 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.02461635 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023331111 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020686768 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024506271 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027105385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.024765315 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.042174019 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029821639 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.022581035 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019732119 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.036637449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.023787644 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021129066 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.023631213 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.026405053 seconds)
  done (took 3.82475003 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.051871506 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.023939339 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041635876 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.053362784 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.031936977 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027505121 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035652037 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023127695 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.042935547 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021047897 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031096347 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020243192 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034693203 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.030515282 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023798551 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031694802 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.024673785 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042309403 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.036719821 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.020623273 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030429826 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.033853855 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034060546 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039382818 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039053761 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040061549 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.03391619 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024599061 seconds)
  done (took 2.028642033 seconds)
done (took 22.003847465 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.134587707 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.330745638 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.104002591 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.87845209 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.163808721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.196105911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.22258955 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.081694842 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.7975985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184188861 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.803059181 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.928590234 seconds)
done (took 58.983773609 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.199081691 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.245799853 seconds)
    (2/2) benchmarking "String"...
    done (took 1.3466895 seconds)
  done (took 3.684923145 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.527754148 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.0918248 seconds)
    (3/3) benchmarking "different"...
    done (took 1.13218561 seconds)
  done (took 4.829928785 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.391244643 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.600647985 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.377265141 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.078774834 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.094442476 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.583826236 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.296787834 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.757331517 seconds)
  done (took 26.878676099 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.081898499 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.49395901 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.524510042 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.602130744 seconds)
  done (took 17.872170271 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.53726944 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.485319884 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.4848587 seconds)
    (4/4) benchmarking "different"...
    done (took 1.819567752 seconds)
  done (took 7.535736247 seconds)
done (took 70.483116826 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.078859038 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.364767362 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.116349356 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.269439587 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.184834234 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.18599711 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.088282425 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.122441455 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.088371106 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.093012521 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.090751065 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.091014125 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.08794583 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.166308354 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.090877273 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.14507326 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.363961714 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.089503904 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.134232667 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.86146196 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.41718347 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.093475012 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.092454561 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.166566512 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.456974229 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.141391838 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.522326016 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.10430624 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.69077919 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.090541045 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.102065628 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.0872926 seconds)
  done (took 181.759207917 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.078369188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.962014831 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.919686053 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.101727767 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.469335273 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.44159624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.949510375 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.489235696 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.089267864 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.124420973 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.045025656 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.0862496 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.117092137 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.648100796 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.128037623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.10270317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.997735367 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.911838074 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.136966426 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.003515358 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.080765055 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.689611986 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.658733955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.934510241 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.108747326 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.155619555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.098038681 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.138552634 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.597667115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.989546223 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.105436007 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.112396446 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.282364438 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.325810137 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.094903851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.088214261 seconds)
  done (took 152.353098143 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.345143933 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.087467783 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.127428042 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.226933308 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.137626907 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.000496125 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.091778938 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.077635924 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.077266235 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.085281475 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.079376259 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.146338884 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.087056409 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.184220578 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.12062625 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.082024565 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.08024144 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.187109947 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.103331246 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.092130275 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.083484289 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.195635065 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.435264807 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.228675479 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.097320269 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.089933431 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.212269453 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.100783055 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.083706969 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.079938454 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.212901652 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.090835948 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.210907863 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.220429567 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.096775706 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.136314198 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.09699434 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.383246774 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.092989874 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.077776454 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.082363328 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.126788816 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.086489955 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.200599068 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.196909269 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.095445373 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.098034804 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.528411696 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.684104876 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.093368665 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.078259316 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.077995951 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.081504477 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.080151794 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.607442451 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.091652311 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.115192655 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.809002752 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.100895735 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.077859254 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.077288419 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.079634566 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.079172742 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.08393335 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.114505326 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.790969908 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.765687613 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.44243542 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.885806206 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.090410565 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.078801189 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.077471867 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.076616882 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.156350202 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.07966477 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.078400018 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.254808653 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.088170056 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.078604921 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.003584656 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.003139558 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.088443879 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.215916597 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.090373476 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.079649649 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.106327149 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.194133569 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.100783264 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.097093216 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.133777071 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.081533023 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.078154421 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.086632071 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.002564967 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.091196478 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.090215967 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.537495992 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.092892595 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.07890136 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.159159009 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.447540282 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.087574513 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.159872665 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.486564979 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.10248018 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.090457065 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.078529252 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.096554878 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.080802058 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.090781666 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.089263838 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.079491638 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.077174923 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.084984744 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.078535423 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.077675481 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.077496071 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.098085116 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.079469167 seconds)
  done (took 324.980335483 seconds)
done (took 661.661880185 seconds)
(4/20) benchmarking "parallel"...
done (took 1.077099887 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.341381019 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.481817101 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.209263174 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.338559965 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.293256798 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.272475059 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.295264257 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.385373021 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.320988602 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.26008437 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.319380553 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.264972997 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.383468317 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.350016011 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.383509914 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.356917557 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.294875742 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.782876338 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.304326975 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.265955287 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.296035517 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.289723354 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.2470317 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.327123215 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.386058742 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.264525515 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.489429621 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.326183165 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.306148963 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.338678338 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.358424708 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.374051615 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.304656685 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.37175109 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.341315782 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.392653041 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.302481794 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.356704553 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.28023973 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.302988229 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.316018352 seconds)
  done (took 62.956873454 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.551971025 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.270547426 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.381233569 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.388646771 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.94929006 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.385012191 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.480622222 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.277548627 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.278012759 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.392327591 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.406298613 seconds)
  done (took 17.870169399 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.402564124 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.273208505 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.402605009 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.408853475 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.502963929 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.413765116 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.44783496 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.268443735 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.28160868 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.395263946 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.4468866 seconds)
  done (took 17.347727312 seconds)
done (took 99.252817894 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.654587101 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.160147818 seconds)
  done (took 3.892873826 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.111394963 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.101436958 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.091406871 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.096565208 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.092859884 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.089745675 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.142591116 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.105352371 seconds)
  done (took 9.910327254 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.09034696 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.091884076 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.089945817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.091081624 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.08967888 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.091358261 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.09093918 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.09190903 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.089920369 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.08903803 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.090957056 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.093090176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.090472687 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.090878095 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.091483459 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.090505719 seconds)
  done (took 18.535472987 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.090218605 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.091177431 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.093186526 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.092329702 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.090119551 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.091432813 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.094274672 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.098429638 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.091784024 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.091846942 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.090302851 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.090860411 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.091124337 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.090514262 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.092085836 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.089376274 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.094760381 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.096177999 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.090656966 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.092324302 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.092796497 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.089914375 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.0918318 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.092912515 seconds)
  done (took 27.28972267 seconds)
done (took 60.732262971 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.801990776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.246631472 seconds)
  done (took 7.127681446 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.095399519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.090826939 seconds)
  done (took 3.389383821 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.091309339 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.090219783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.09116874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.090409402 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.090300212 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.090578255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.09026831 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.091465551 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.08990042 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.092250191 seconds)
  done (took 11.985161914 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.091407052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.089310296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.091054892 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.091634388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.090996042 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.091022953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.09057346 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.090298137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.090374408 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.091056648 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.092322053 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279918614 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.092374439 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.31744064 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.089659766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.090098159 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.091165137 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.092074128 seconds)
  done (took 21.132196344 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.091596194 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.090965357 seconds)
  done (took 3.260801762 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.090337079 seconds)
    (2/7) benchmarking "second"...
    done (took 1.090428061 seconds)
    (3/7) benchmarking "month"...
    done (took 1.092713676 seconds)
    (4/7) benchmarking "year"...
    done (took 1.093436312 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.089561652 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.090955586 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.090923545 seconds)
  done (took 8.717496662 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.544413431 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.252583388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.312363577 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.556352326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.745494885 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.047216477 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.746828856 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.04716086 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.909086187 seconds)
  done (took 16.240035222 seconds)
done (took 72.929386167 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.736005672 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.09032928 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.809656268 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215273085 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.098347451 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.429898415 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.083891978 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.627747985 seconds)
done (took 37.199905996 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.134910211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.081822821 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.127342356 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.126691469 seconds)
  done (took 19.421921108 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.078885709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.681226813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.135294773 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.097426137 seconds)
  done (took 19.179106293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.610468656 seconds)
    (2/2) benchmarking "read"...
    done (took 1.624832846 seconds)
  done (took 4.334726279 seconds)
done (took 50.153922004 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.090968042 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.090954852 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.090099451 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.090950446 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.089780402 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.091290585 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.090940294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.09077158 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.093192901 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.093251835 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.090214868 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.090895045 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.091554333 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.090575788 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.090602637 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.094395782 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.089658846 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.090614214 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.090434697 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.090574814 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.090518937 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.089887635 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.092069779 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.090905156 seconds)
  done (took 27.265275275 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.159427767 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.152451004 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.1620296 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.153824788 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.189792172 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.153073492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.155278652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.130366729 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.160394952 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.142341477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.129971948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.184474485 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.128736591 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.177318753 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127874837 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.177807113 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.162818178 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129657205 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.127832619 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.184246556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.154741407 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.131028329 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.186323641 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.130838958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.186883621 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.12592402 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.141729847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.154452765 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.123110197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.177661574 seconds)
  done (took 35.681968537 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.12340898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.092052109 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.092043827 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.17834994 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.091348558 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.093943356 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.094352135 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.093424034 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.091365895 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.090510531 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.090778882 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.092492372 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.091593958 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.091237818 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.09129563 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.090950009 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.121682254 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271439088 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.091848078 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.092691651 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.141486905 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.092115444 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.091041252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.091505778 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.091520885 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.092157262 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.091693873 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.091420754 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.091374489 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.091892691 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.092481265 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.135774787 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.126005781 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.093476723 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213601452 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.148578774 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.090786952 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.499175041 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.151207782 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.10078713 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.091269493 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.091155507 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.093903005 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.095944545 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.15753962 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.091685652 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.093009233 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.091042335 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.091407679 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.094037466 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.090906439 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.090616629 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.107712005 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.091098154 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.091126284 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.09150145 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.092935464 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.090297763 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.093242509 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.091630721 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.091523685 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.164340197 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.0909466 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.093058292 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.46960178 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.092858955 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.15787457 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.091762119 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.090576083 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.308521952 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.093948855 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.301717744 seconds)
  done (took 84.834635424 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.09149875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.090763863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.1705262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.16944705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.090366361 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.090857721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.092307645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.090441832 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75734072 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.095726137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.092630291 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.091586756 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759812329 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.095516067 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.091241697 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.16879804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.091479033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.089933446 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.092399787 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.090728757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.091379618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.09141152 seconds)
  done (took 26.667188744 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.136566253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.106738662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.134424099 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.106051083 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.106250233 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.106476303 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.136296216 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.106118464 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13751987 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.131790659 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.130744452 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133022108 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.106906494 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132007264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13183669 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189182446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13346635 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.186207984 seconds)
  done (took 21.432083506 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269054682 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257991752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.173758343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13561709 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.352634351 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.327666907 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195841156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.268427724 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.133505202 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.258331569 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.266604142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.134340949 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.326549087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135491348 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.133557701 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35375539 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.175894939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135231926 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204384304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195534288 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.269251995 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203021353 seconds)
  done (took 27.986284328 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127912838 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.139515908 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.175511443 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.169092971 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.091958656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.09159416 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.149084225 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.136667752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.109579245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.132594008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.135050991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.0919873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.183781096 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.145753637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.18423938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13493769 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.142655968 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.145419777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127534549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.092303714 seconds)
  done (took 23.787568297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093811918 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.093935327 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.093644326 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.095476067 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.092197547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.09253474 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092391101 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.0932684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.093193578 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330387503 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.094919514 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.092406798 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.093336998 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.092781649 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.09168465 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.095005292 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.092475761 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.091670176 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.093542364 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.091869898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329580391 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.093862995 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.092990679 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.092521385 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.093130796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.092124894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.091489442 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.093861666 seconds)
  done (took 32.162259287 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13980223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.090993886 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.090837052 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.09173839 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.096654558 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.155344919 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.093080633 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.091014601 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.092354149 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.091600983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.092033961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.091583508 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.093574253 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.141825781 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.093493388 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.091345438 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.151655475 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.098806101 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154838838 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.079868778 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.101001467 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.185813666 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.10655553 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.104158378 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.08096881 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.106644723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093531886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.094836577 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.094553431 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.094978211 seconds)
  done (took 52.267095855 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.114149503 seconds)
    (2/2) benchmarking "in"...
    done (took 1.11301455 seconds)
  done (took 3.30643943 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.091425011 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190148966 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.092148345 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295375839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259346881 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269098566 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258734377 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190829028 seconds)
  done (took 10.726822077 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.092233014 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.621574319 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.113661612 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.097438273 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.096355213 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.622931724 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.086184723 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.069293598 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.98874095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.964564803 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.105182433 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.592782611 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.118398722 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.437787797 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.216915773 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.977854522 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.412517675 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.775832853 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.257041106 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225158107 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.925813896 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203575607 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.091827231 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.092485355 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.092452752 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.001913234 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.930670459 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.553592165 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.341655171 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.225719747 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.949424109 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.181865317 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.093707296 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.417594499 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.219397494 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.092525481 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.305147298 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.206629083 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.093034727 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.09275561 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.96036633 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.926686604 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.405585447 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.382479031 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.186048162 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.093791766 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.092254569 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.091795342 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.379324064 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.73626193 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.119673943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.10485136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242024962 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.093901845 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.927316186 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.10715586 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.091352326 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.001708436 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.70595401 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.409950852 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.485577068 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.25710445 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.21120032 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.23090242 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.093051298 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.294603748 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.959985803 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.002978143 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.961782824 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.214420409 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.658307854 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.115562174 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.092727734 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.092334414 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.0470522 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.407071322 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.096165985 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.092300869 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.092833385 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.09316192 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.445050824 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.221716272 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.957558537 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.241385247 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.277548573 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.705177535 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.230885049 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.093487911 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.847883928 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.960980439 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.105588726 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.890000862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.348824646 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240710991 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.209484649 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.377176215 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.135963678 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.095300864 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.971513476 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.773214523 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.107084065 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.09199565 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.474975391 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.179678917 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.101273997 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.091765444 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.875059235 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.229377962 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.244771959 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.143817437 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.093517884 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.09441081 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.711301636 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.108783481 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.098769233 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.581217876 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.12482911 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.678209079 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.435160362 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.326473116 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.530972794 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.191410689 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.362158806 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.960863197 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.103767075 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.697403578 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.975137042 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.747451806 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.412188306 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.226039492 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.076698856 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.165460449 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.093987501 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.338087397 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.17786691 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.092906097 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.091573399 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.092046456 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.09303819 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.091687422 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.24009795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.547280931 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.041127421 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.107130759 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.36819522 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.222898636 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.078116088 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.361913213 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.834262555 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.239904548 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.094313678 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.941570802 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.416885501 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.904129708 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.22973681 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.094215326 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.091349295 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.966797171 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.17707668 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.198416544 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.094609794 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.72489707 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.110164274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.098478094 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.092034624 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.595281385 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239154988 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.094297765 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.271672836 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.989435775 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.048182694 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.109453206 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.434834876 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217812733 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.092916606 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.092801433 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.095060634 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.906156437 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.740968305 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.388985475 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.717037994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.043200956 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.194948669 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.2908009 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.195750603 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.470449242 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.369960703 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.240436999 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.094428186 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.09454409 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.092757722 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.583018237 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.996906361 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.212034107 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.04439234 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.119880327 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.987451968 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.099781645 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.924468783 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.111811587 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.881332725 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.168389198 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.202899014 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.095551414 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.094790832 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.27523591 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.311041779 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241332939 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.734389961 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.107742361 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.094852573 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.868263876 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.230036122 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.841228776 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.208969746 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.953178603 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.265181111 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.229474297 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.269641389 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.888260292 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.231853268 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.093927525 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.940498707 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.249124931 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.093673834 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.236653652 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.876509817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.924866221 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.880385719 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.771785914 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.083620112 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.663443873 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.383918284 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243917091 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.024583463 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.202641821 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.373934492 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.196584388 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.715270563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.117749574 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.872999192 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.111500263 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.906146209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.107968614 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.190164272 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.225000721 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.641571741 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.218473301 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.094666351 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.301174405 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.19652209 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.862434288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230725228 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.23988975 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.493510797 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.089709034 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.205176433 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.354654309 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.198962978 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.056006467 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.098675821 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.459123907 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.112694751 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.100237118 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.100697943 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.949151158 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.269123444 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.37909048 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.237404449 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.095425074 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.094827662 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.358767883 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.189182133 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.0936448 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.461696969 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.118418047 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.140908071 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.101340819 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.099221351 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.093021517 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.341269912 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.339383418 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.493697975 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.645710132 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.718390572 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.008859842 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.22995103 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.862305936 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.233201863 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.827789033 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.111144784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.100606388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.861472247 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.230985239 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.41449382 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247715649 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.254816223 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.792579022 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.2752814 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.436374826 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.353991649 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.226828653 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.924624297 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.672338151 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.390768946 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.579042023 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.139449303 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.631082559 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.253431002 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.663075215 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.142975964 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830397479 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.112856859 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.157985763 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.095221582 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.092665331 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.635741153 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.112201892 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.101774821 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.905187124 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.843773489 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.044444221 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.850312632 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.11052227 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.099831116 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.097133548 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.094578018 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.00208512 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.184776045 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.552935968 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.238120818 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.096135185 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.093508549 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.094743777 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.547583314 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.999748171 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.054621698 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.098931719 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.240158324 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.094472909 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.093983098 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.094683679 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.092054264 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.093978831 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.096030691 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.655270824 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.10919116 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.726323675 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.111959154 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.100297308 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.334001039 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.168575901 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.09457458 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.349449374 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.185469026 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.230775034 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.169854188 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.094248322 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.527354524 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.243503154 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.067358715 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.325838879 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.425405782 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.357386059 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.789199623 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.152593972 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.545832797 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.416541212 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.922082079 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.110091006 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.016397909 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.106138481 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.964897004 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.086803369 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.520530219 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.702292756 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.133908822 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.475805701 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.036781183 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.507320481 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.32274195 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169872085 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.094903782 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.094721754 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.213795544 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.364391221 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.148509291 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.445526734 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.321785245 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.081349199 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.332949771 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.197110617 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.391148559 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.133652833 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.109286561 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.094158763 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.094479011 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.65653026 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.150695082 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.191285588 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.094365366 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.99839714 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.94524512 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.033397769 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.7284911 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.085023757 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240075743 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.094677465 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.313149749 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.153275081 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.994540218 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.12157876 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.908600054 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.463570137 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.150146739 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.337478611 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.494738795 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.954645318 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.583934719 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.217945726 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.095159523 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.527307173 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.120831902 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.244870221 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.044814595 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.463786795 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.656036281 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.580444454 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.51237975 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.219661278 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.992925759 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.587001201 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.134460231 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.104793709 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.981967908 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243815407 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.472347193 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.14431402 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.42077209 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243954427 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.747385131 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.743968987 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.241426639 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.734889458 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.242562045 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.095550416 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.002288656 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.013453133 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.251947623 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.224339554 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.094840496 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.109415943 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.859422819 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.727088464 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.406617631 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178670971 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.096518531 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.97843272 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.855191933 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.110652714 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.103545202 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.095764995 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.692501099 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.151404327 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.095846196 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.526232004 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.739073177 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.243246603 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.586022027 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.277924552 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.243127388 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.470825916 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.563140652 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.324163114 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.168791882 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.094704566 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.094377526 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.095356513 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.695676913 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.111782724 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.095700763 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.727031875 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.244296616 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.877469624 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.049607895 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.390786619 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174168 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.529046921 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243054894 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.585935493 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.0178531 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.099738695 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.376447834 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.202428829 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.262640336 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.923709552 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.207697349 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.098755875 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.117079738 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.492755317 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.514802864 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.555058531 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.511014248 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.188231243 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.870898676 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.211098165 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.958494988 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.117485852 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.096640225 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.581923185 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.36238558 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.578381757 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254378316 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.640235186 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.217691611 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.45894531 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.404142101 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.19243187 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.096756559 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.096229669 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.211918918 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.130299564 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.5816713 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.068926024 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.619165951 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.235085785 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.983270917 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.715641682 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.875396082 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.4425033 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.465445272 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.450563391 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.137468317 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.106318542 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.536628224 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.184664051 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.294137222 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.194623147 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.960158574 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.17626911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.09665501 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.718168115 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.112803595 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.095858835 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.094763387 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.997443176 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.853777986 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.209725871 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.337843392 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.201117186 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.095702036 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.733680478 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.389512364 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.141586105 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.094584739 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.098669981 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.039812741 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.212692988 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.097545552 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.482379386 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.257412524 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.467686455 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.937482247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.554593302 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.193862357 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.095403254 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.097886672 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.836416225 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.783048024 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.132173278 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.495557982 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.180776456 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.59422349 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.122022873 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.662060844 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.659272786 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.177349469 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.225284782 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.096629875 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.122576824 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.110048065 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.056327359 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.865761969 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.52620116 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.196119108 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.956135938 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.136225918 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164624506 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.356870583 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.174092647 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.097026046 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.097264922 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.097540503 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.576062655 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.130424194 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.105370417 seconds)
  done (took 1441.940658976 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362638189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.096007844 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.097124567 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.096967341 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.098230681 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.097307359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.098672536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.097354222 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.097281201 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.094239037 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.098179782 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.094784844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.095401649 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369587848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.096230173 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.097456052 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.096004179 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.09555309 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.096692557 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.096775889 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.095504661 seconds)
  done (took 24.651640101 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.095474298 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.097176027 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.096600613 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.095997536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.097455674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.096166107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.095062253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096276796 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.096384079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.096959907 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.097365408 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.096991359 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.095817202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.096735282 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.095082984 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.09543962 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.09569135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.094940186 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.099869841 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.09665471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.095605452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.096341131 seconds)
  done (took 25.205524582 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.09789827 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.096983714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.892024745 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.226793146 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.099179084 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.096187933 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.09565891 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.314439763 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.150803539 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.995964501 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.500537135 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.184863082 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.104542019 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.301057289 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.196250685 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.096616254 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.218353612 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.096568755 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.096320668 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.095331769 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.098697053 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.350348027 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240117623 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.099408249 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.953697736 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.244597526 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.097313161 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.09901882 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.098311906 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.068518086 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.099566256 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.102741712 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.023045348 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.935343355 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.460902809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.989639492 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.111090163 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.102219623 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.096480166 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.097240639 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.297120859 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.915366982 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.105491291 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.098153163 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.433091652 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.221816979 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.096541716 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.481994384 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.18277414 seconds)
  done (took 88.242312807 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.101336202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.216515058 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.155215194 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.099752694 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213158794 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.097462176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.151567705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.09508178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.097002336 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.097983634 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.228166996 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.244532001 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.097160505 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.095257434 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.181701341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.096969607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.097667923 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.096153001 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.095999128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.095743782 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.096104909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.151065459 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.205674386 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257593695 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.097575685 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.095430317 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.095914555 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.096738774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.246904922 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.097014675 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.097389441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.096598628 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22184793 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.172368757 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.098674422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.095062396 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213790898 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.095914224 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.096329861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.095737544 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.095988905 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.097866662 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.148715208 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.223678777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.09574842 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.208926805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.098416778 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.096970507 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.246682339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.101845932 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.095993264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261435341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.097924786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.095637583 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.096949481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.212115636 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.097227319 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.096977158 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.095607175 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.235094517 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.097723664 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.096509593 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.247861859 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.097818637 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.098113054 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.253154635 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.200253106 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.099161674 seconds)
  done (took 78.460362545 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.098273469 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.23210006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271933474 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273460142 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234054416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215298547 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236495424 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.232645171 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.233937118 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23619972 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231798044 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201795032 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.203712109 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20079612 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.237418944 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216613857 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21587944 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216372659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236761185 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236210921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.218615467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271459163 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233136486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275686817 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.454498459 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204868695 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234572481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.235039585 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276461785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.23315158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.449952568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.236255375 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.233462014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278848865 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.447217753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.230544188 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.096702608 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232243509 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.23995048 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234214543 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.203048752 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276234601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232778631 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.203876839 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217730637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.231149461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272296959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.449759552 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199110014 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235991473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.236389331 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27524701 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231361004 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217474757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273787123 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.207199054 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271876112 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274342447 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234867291 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272987113 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27322244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.204221183 seconds)
  done (took 78.36043397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.095566262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.097191201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.183676244 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.096895891 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.096633346 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.182285926 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.09580373 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.098036574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.097458109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.099727931 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101663309 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181231722 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.460819876 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.099735622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.18186718 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.459445306 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1880023 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.182048265 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.097808183 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.180382376 seconds)
  done (took 26.362376745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.096281619 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.09714598 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.101965643 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274456984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.130183324 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.234791724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.108922404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.100448419 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.102831129 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108184183 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.098307001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.111747842 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.105732841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262280117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.104927531 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.240234125 seconds)
  done (took 19.365585486 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.098778784 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.103376332 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.104830243 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.099020847 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.09568775 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.095870165 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.09768808 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.096279366 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.095614696 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.556957324 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.099185451 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.096425684 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.097473038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.097162689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.10216896 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.096482792 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.096757876 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.097444508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.096338258 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.097664589 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.676552407 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.098993008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.099120332 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.096752765 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.09597799 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.669418642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.097392631 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.097096485 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.096327079 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.097249265 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.097860905 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.57162881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.09890838 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.096027021 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.097955483 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.098030062 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.097237897 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.098398074 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.096883715 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.096923705 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.096417898 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.096754358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.096683462 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.097995792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.096727792 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.095984811 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.096931597 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.552304051 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.100711353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.096749247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.096853179 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.09702287 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.096045476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.569010311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.09741329 seconds)
  done (took 64.467968495 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.137643179 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.155882397 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.100738869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.096467058 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.148960539 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.139317084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.13937661 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.111887936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136926504 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.096353824 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.157811684 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.113230775 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135531027 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.150758072 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.160811044 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142573886 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.098135333 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.173030172 seconds)
  done (took 21.480675824 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.098157043 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.098285998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.097166286 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.096659269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.097044845 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.096926846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.09608628 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.09867797 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097212392 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.09800188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.096406533 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.097238399 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.09616351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.098009422 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.097427686 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097219748 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.098614261 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.095459865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.096443284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.097817798 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.096351353 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.098403168 seconds)
  done (took 25.227705697 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.128190751 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.143599506 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.096443526 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.100240477 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.101548577 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.11967387 seconds)
  done (took 7.775835224 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.161203303 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159334062 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.135608115 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.150828145 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167352826 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188944702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176662273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185001459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162199846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395668498 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181608938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169311654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159346347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2288616 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164048769 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.172189027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182091902 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.185762034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.148521061 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18053873 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.188176284 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170549156 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190776025 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.183694068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184991418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227906378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159150842 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398573096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183718753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168365904 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160728444 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18773725 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16676801 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388633335 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.150925505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164459287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187521106 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180529237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16320013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222259668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.132652493 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163086754 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161765976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195081889 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166156254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193126747 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.184147189 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189434433 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18851937 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394327897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166210276 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221060601 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165088237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167888562 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.161644955 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385314628 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392452837 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22209832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.1609989 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396618824 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224061639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163311987 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222895968 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398264085 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165851128 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224242332 seconds)
  done (took 80.599220627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223147754 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.139239515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195956761 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399567449 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22413143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185258091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190275314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192365936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196675452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161740077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187557675 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19288877 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222763223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227759827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18756866 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188493167 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.183685536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224347138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.159838407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390178594 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184790143 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223121335 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225022279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224021407 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386250248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182618788 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188447862 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186650293 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180453529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.188755635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193593537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193259448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226287868 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.138790789 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224036839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186767136 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187138611 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193108044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188552549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.174976483 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228239964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19016371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186876533 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.185151823 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390952389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.189829741 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197252866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164514205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.189448182 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.15959591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390502132 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387375216 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404173647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226837361 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195137535 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181511246 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192328109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189643964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194822118 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178985625 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221759953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185390472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393391527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182012579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.1957926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224075554 seconds)
  done (took 81.463690249 seconds)
done (took 2410.803963799 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.174831719 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.16934459 seconds)
  done (took 13.428646329 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.101320942 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.096693781 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.247282835 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.09862359 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.138901095 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.168772005 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.138587417 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.107088187 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.097998603 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.192439535 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.098343861 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.234268065 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.202552722 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.100541574 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.091396015 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.10739985 seconds)
  done (took 39.3200442 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.154594069 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.603985867 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 2.983105645 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.834404824 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.125508765 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.83029829 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.394232354 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.749443309 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.398107773 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.548293305 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.352995818 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.928650258 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.789286438 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.18734545 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.551734068 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.591813453 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.667628186 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.741037994 seconds)
  done (took 59.518412528 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.09432144 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.252164422 seconds)
  done (took 8.455325551 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.115474224 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.109896331 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.134266927 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.11940858 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.107568877 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.117141387 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.135881457 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.119869406 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.117739471 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.132461616 seconds)
  done (took 62.313282954 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.201841314 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.66466695 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.550238657 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.660783449 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.704025414 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.565915051 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.256871498 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479935416 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.191780125 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.087009556 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.3151728 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.594471713 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.91540626 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.34107911 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.716767171 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.551706601 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.758610408 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.503040906 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.449104025 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.577796064 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.248790135 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.16187007 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.55060749 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.976122516 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.106350993 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.687426437 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.272816512 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.235144367 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.171577385 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.215632483 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.417623814 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.113753708 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.359879472 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.108064798 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.25177714 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.733233453 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.793544297 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.292268704 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.536603792 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.421592962 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.531580845 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.772398765 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.162457403 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.729482991 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.253777755 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.414635865 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.149675221 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366994209 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.184774012 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.219703721 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.746540454 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.283470203 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.24248785 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.215590438 seconds)
  done (took 154.111958701 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.086857273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.483142963 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.249507679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.087606846 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.497582669 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.30959483 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.894256243 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619210901 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.106275901 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.328338258 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.271620177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.222017792 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.089518948 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.095106821 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.095640413 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.094490147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.286743398 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.627449313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.104847582 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.095094758 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.310564204 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.338096612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.226713839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.091918985 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.271099781 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.339236847 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.49663049 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.22231082 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.489464533 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.086964762 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.541476838 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.104017287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.0981484 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.992164261 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.492054139 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.438756743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.520032457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.096261117 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.807725053 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.093586132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.74899953 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.296863991 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.427907972 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.238242625 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.346478384 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.32712778 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.703176239 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.087700886 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.850805078 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273646951 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.313284928 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.324326513 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.381798323 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.094753994 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.633649748 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.096158463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.095993115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.358688746 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.247524045 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.217822224 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.090955423 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.094525934 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.096408611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.344244986 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.089368559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.216867923 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.089971958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.095381835 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.215732312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.218365544 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.251472635 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.3456685 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.340218311 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.347503476 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.095041738 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.332932871 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.512707994 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.341490313 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.089026666 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.091821509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.542028759 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.549745719 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.258550251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.337488805 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.40614727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.390875878 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.658743816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.091047553 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.333756891 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.273243031 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.461535202 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.361946337 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.460772526 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.980436364 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.094408206 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.094253147 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.437271485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.229272094 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.090508299 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.610913686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.361563884 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.707038382 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.275251483 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.551841603 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.206361562 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.091099404 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.657644939 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.088071341 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.319620126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.406037001 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.098583717 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.097893348 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.254445639 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.056113194 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.091198151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.5184462 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.509270664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.102076791 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.259668265 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.09007503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.350341401 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.062806435 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.333536806 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.898396296 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372442088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.286472442 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.376517533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.093217016 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.432268774 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.362100089 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.500562746 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.417935433 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.090834523 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.095187325 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.406859566 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.088754247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.095546081 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.273640427 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.037925202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.276627823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.091291983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.468664358 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.257434281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.471208932 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.090120239 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.363996084 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.34260016 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.460728699 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.092003929 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.232616311 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.088538164 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.062143909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.258702748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.088458193 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.096751454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.949807111 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.097584542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.25279755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.323979783 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781855925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.464865173 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.4482791 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.087183349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.515847316 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.303015619 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.539436212 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.582883167 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.272011184 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.828390012 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.33731297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.095048337 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.339272821 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.388128734 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.092564801 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.093877888 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.823884117 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.218050797 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.093235494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.266003306 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.764280425 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.546838891 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.305857763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.090556406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.46243006 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.089794395 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.300684771 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593267288 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.409501652 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.096372465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.09510553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.094563311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.097766952 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.31190553 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.347340155 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.655615846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.246646969 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.393524189 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.311471775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.414674915 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.557258447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.100169963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.439233999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.089409175 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.490706362 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.096487209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.251977957 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.351323316 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.089688977 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.317632229 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.454126394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.1756192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.488471552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.091786929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.095297306 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.681293121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.278117909 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.508785406 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.091756166 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.230354518 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.464773969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.224282759 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.28874629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.35474593 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.085193689 seconds)
  done (took 726.004387759 seconds)
done (took 1064.237405226 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.088817174 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.097991045 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.097580081 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.097081956 seconds)
  done (took 25.470342384 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.058015627 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.160547883 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.27369969 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.09899964 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.4407976 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.15294585 seconds)
  done (took 11.281753126 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.089508208 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.096993847 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.101209379 seconds)
  done (took 19.376468565 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.377995473 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.55924385 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.2427572 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.19148161 seconds)
  done (took 6.467646087 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.121080564 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.119315085 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.099665231 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.122026217 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.09865998 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.098023464 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.135701939 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.114669563 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.103757926 seconds)
  done (took 11.104628268 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.565465469 seconds)
done (took 80.360519913 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.417093488 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.389109717 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.100193073 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.399304499 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.226515305 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.414740242 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.215904107 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.114978812 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.396490788 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.493934166 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.591866442 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.131439254 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.484159234 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.518592015 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.335736563 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.125981596 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.115113003 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.160511271 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.710678415 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.272557042 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.780576489 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.233860099 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.835009 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.126012288 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.943041788 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.236573828 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.347289306 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.353821005 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.125479313 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.120415491 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.182071369 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.570513083 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.197767979 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.428882725 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.237925769 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.982331901 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.523578872 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.098414059 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.358115377 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.469215783 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.362271353 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.191146464 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.115349385 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.263967746 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.492592264 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.115863425 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.028331171 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.264076481 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.598702481 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.262880052 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.62922949 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.10215274 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.705932582 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.174196509 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.224840829 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.1393588 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.007576757 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.560682399 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.258637156 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.408184548 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.107737426 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.087165604 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.096044348 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.127623004 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.674594839 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.538368161 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.510582636 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.240986249 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.117208404 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.125793613 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.114784012 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.123152357 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.79975249 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.243298853 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.088046354 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.229238174 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.424822897 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.22608709 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.145848812 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.560482367 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.326117873 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.175443826 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.236049328 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.406638935 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.262130757 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.419736935 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.582550369 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.49290243 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.535011375 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.10348719 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.774435403 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 8.282707316 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.720338336 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.222747354 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.102851723 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.705544139 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.902452135 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.552556365 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.234990429 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.598119309 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.125511744 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.11211649 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.477699275 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.399324191 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.881633967 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.134542983 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.2532254 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.086938448 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.382416566 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.186011769 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.19968971 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.646583872 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.101753695 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.159848739 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.583251522 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.096727753 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.431085121 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.541540379 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.075210285 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.098155555 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.378501648 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.102818434 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.220976319 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.637511599 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.485991877 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.311074131 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.097162686 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.027543916 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.102287351 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.288946017 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.102664798 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.677073714 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.625471568 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.128369161 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.35172253 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.222024955 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.086210795 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.435542502 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.162931431 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.331616783 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.421143293 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.419929331 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.227983966 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.096182019 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.450936601 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.100720746 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.342882063 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.428230059 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.261891508 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.408391709 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.184777654 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.1110922 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.047205862 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.515702065 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.681127634 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.637092935 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.367430876 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.230888757 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.618881131 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.344530921 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.895639202 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.232270764 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.151363311 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.101045115 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.116541637 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.163471702 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.087099361 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.097205082 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.37705938 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.397186377 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.641474631 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.891822891 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.105158489 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.423752988 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.252513419 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 1.977546559 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.672192804 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.100828864 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.399483382 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.593352999 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.186001686 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.125343593 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.091902546 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.131816637 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.834234736 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.13343487 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.407026745 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.581686421 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.511300957 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.512645945 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.276669806 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.134485489 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.452654035 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.360588092 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.386146689 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.312174854 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.528269348 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.239411435 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.378293254 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.098184513 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.388286247 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.100285319 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.759335292 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.301761059 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.575931367 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.4258942 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.33055134 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.269381308 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.43939258 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.099850396 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.7699778 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.193707976 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.464031297 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.128145251 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.745455599 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.197648141 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.361511143 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.00858193 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.216870085 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.457374748 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.247372677 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.205171114 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.533618743 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.11518996 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.427884484 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.261286053 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.226683048 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.342298464 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.129244288 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.226941741 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.37053307 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.237934349 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.353160368 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.95923888 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.520784194 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.087797645 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.575805543 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.091703707 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.397710069 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.133741861 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.11213133 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.375083218 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.262391335 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.415047888 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.19981595 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.261884499 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.088847129 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.274202932 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.49062481 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.92765431 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.665205956 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.082433714 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.123089112 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.086350793 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.492474551 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.507067143 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.163660279 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.233843002 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.671349937 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.131989177 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.245936296 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.103001261 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.102763323 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.7528988 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.22879572 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.345692654 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.635585842 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.102630348 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.935981641 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.084207582 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.509100429 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.565079676 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.151197763 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.2222362 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.693499542 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.131284958 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.501436123 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.128178769 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.272975829 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.432724894 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.216967325 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.211742772 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.09020469 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.133334096 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.60720797 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.391779869 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.592380447 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.128099522 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.500166511 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.101755895 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 3.092813347 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.126924771 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.183468773 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.48903161 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.255606201 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.497982957 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.102897836 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.243529322 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.383195853 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.118344867 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.088272106 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.371835078 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.090501424 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.261692075 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.510184833 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.195582363 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.024134665 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.336073168 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.098623175 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.102459446 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.241318428 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.226869208 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.676394575 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.576076811 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.101521325 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.350182901 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.097479407 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.446692704 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.125052059 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.114203599 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.235191289 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.183856269 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.087186383 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.17450414 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.284705058 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.58603855 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.161919245 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.992283798 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.107128758 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.01634503 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.216612721 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.410862088 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.10273077 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.117230449 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.239601766 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.756782123 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.229815817 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.126886606 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.347915809 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.101400065 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.704501534 seconds)
  done (took 868.069850279 seconds)
done (took 869.32523841 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289163863 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.469729905 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.339694881 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.030621218 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.898738481 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.743493867 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.35699265 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.33125486 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.173206668 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.3561757 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.019469529 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898069967 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.19518193 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.212484241 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.188048127 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.196684829 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.308035927 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.338882512 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.214750358 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.162751588 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.614711366 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.164461891 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.514332385 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391558151 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.468016118 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.204335555 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348464222 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.528304525 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.526693827 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.062325859 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.34261317 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.373266338 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.930758908 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.337055872 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.188758816 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.180011477 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.975996407 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.200704271 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294776433 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.179726325 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.471860524 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.22550317 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.81422221 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.989455163 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881746387 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.511683044 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.937271106 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.202002692 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.201704787 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.304160925 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294660203 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293880775 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.528890253 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.080889073 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.989086166 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.985985291 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.530245809 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.014711381 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.823591325 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.304331751 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.493300908 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.196805519 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.30424169 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.329800543 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.217560863 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.389861066 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.509058011 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297718125 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.371108157 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.360780721 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.342901521 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.321131334 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.213863566 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.310500432 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.241475391 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.353643811 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.828035972 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.341541178 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.887626245 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.201354809 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.053975427 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.002207299 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.05332048 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.1749082 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287129152 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.870460689 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.917097883 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.056699357 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.214323152 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.371750289 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.017489464 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.339204224 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.561219675 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348547805 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286770469 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.336352753 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.940779759 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288952067 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.057066811 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.372515847 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.882322866 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349129868 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.131463311 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.177850606 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.199862547 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295852056 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347986088 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.511956124 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.324255741 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.254831566 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.476186146 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.239003199 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.319446444 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.213100795 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.172432195 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.87516192 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.379991405 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.007688554 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28962331 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.772875163 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.361783904 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.179086157 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.470111709 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.395197012 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289392617 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.190289872 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.199364543 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.046624651 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.201085286 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.19572712 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.272754748 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.551312772 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.307504192 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.034991178 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.322875079 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.882241249 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.336991847 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.32201194 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.173658112 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.966846359 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.194442513 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.04782432 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.39753011 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.47104584 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.340753347 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392823576 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.216414291 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.389934314 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290916849 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.214118037 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.321859797 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.227207992 seconds)
done (took 243.532381281 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433216709 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.50044232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.396794746 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.390012595 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.460629101 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454934449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.167871623 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.554419832 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.214342389 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.514926384 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.397384659 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.083637487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.47835795 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.317885227 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448792941 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.349336847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.213265775 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.358960639 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.555977878 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.459688817 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.966729404 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.396971257 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.255356216 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.512296996 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.090008737 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.964568317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458979251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.245978098 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.36281911 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.955163942 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.969952349 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.369494023 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.4542573 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 5.043992841 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.698823949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.927182757 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463163039 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.056040816 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437176232 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.440915162 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.390345789 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.088226768 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.964065537 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.9886994 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.269633787 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448355342 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.170642101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.240017399 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.095277343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.931887295 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.366817808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.978084142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.081129122 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.437370899 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.313962601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.932105118 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.586155949 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.599203656 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456234024 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.397861885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434915241 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.515098363 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.540786351 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.304850896 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.969440882 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.403614961 seconds)
  done (took 149.816345834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.52084844 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.395149821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.548342449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.57308783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.677766651 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.566907892 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.640806901 seconds)
  done (took 14.024808206 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.16086421 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.149080919 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390760512 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391460151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.152524317 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.271483631 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.23658832 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.96797322 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375896106 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.18835891 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.472465669 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.390686588 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.909806129 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.96363512 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.239550914 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.419487531 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.118365981 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.21588132 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.204222319 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.406420845 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.974101377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.946845022 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338179344 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.235702265 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.15057026 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.18840576 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.146007568 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.119227661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.203561256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.126501927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.154395059 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.259891595 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.142488576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.926594666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.192680124 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.472087828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.152664905 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.203748164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.280056615 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.088781557 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.136399947 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.15130555 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.279928313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.155451285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.128000856 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334501461 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.136413921 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.157015504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.128709404 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.147001562 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.335810699 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.142251469 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.18659225 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.904662431 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357446631 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.953819613 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.215641754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.143437295 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.14540576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.202205228 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.142619109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.404329834 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363852888 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.129430075 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388113599 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.425978822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.142822637 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.132192761 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.128629837 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.388130095 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.141532497 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388579364 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.151565504 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.193663437 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.203124208 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.281719256 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336973098 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.939223612 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.927969675 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.890610572 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.12330189 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.137152878 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.462026921 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.084894741 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.90453509 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.136152352 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.202400491 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.824817896 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.057343372 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.14818709 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.457139783 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.126871484 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.202370193 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.195277113 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.190607505 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.205597001 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.368486502 seconds)
  done (took 152.472225036 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.48322907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.703806648 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366781228 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.388683928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.536150418 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.636038946 seconds)
  done (took 16.203931504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.433223004 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897636112 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.166470344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.162918165 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.202072122 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.14254102 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.139216403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.345417264 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.321323282 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.157904983 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.140940512 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.164281625 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.145403027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.283830399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.141254874 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.147656631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.144729036 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.16908874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.151979133 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.211570841 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.469576404 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.201634172 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.209856698 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.074646064 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.227561344 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.150736011 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.095813939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.157063746 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.153474117 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.455620255 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.338899941 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.141360736 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.006193285 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.49965376 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.859995018 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.067432995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.320235171 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.168001622 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.210674645 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.140701643 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.164405927 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.213120246 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.172939925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.164875874 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.486917852 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.024220935 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.250812755 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.406131929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.14050042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.164908989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.165898366 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.16168791 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.139749029 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.163569354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.635287687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.551661399 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.146464453 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.147426099 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.20076958 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.073603965 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.25435952 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.146583248 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.486128368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.113841883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.924960998 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.171613202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.08103562 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.306286243 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.21503242 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.163291225 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.165168308 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.161156271 seconds)
  done (took 117.569997513 seconds)
done (took 451.177348111 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.155703603 seconds)
  done (took 7.245159909 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.208718465 seconds)
  done (took 7.444912251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.092544921 seconds)
  done (took 7.19273914 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.108293312 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.121632716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.111158985 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.116916702 seconds)
  done (took 25.588980073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.266264298 seconds)
  done (took 7.362870794 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.087745497 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.108969195 seconds)
  done (took 13.394375706 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.132779415 seconds)
  done (took 7.244494945 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.548325647 seconds)
  done (took 7.649694902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.097242608 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.13019338 seconds)
  done (took 13.363536413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.08904758 seconds)
  done (took 7.188726528 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.568328297 seconds)
  done (took 8.756947592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.09303405 seconds)
  done (took 7.224272223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.17557317 seconds)
  done (took 7.273443868 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.188626772 seconds)
  done (took 7.286036019 seconds)
done (took 135.304141591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.08945667 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.100181339 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.103035114 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.100944744 seconds)
  done (took 25.482675754 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.425847853 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.425892308 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.404012589 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.476717575 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37052201 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.370290931 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.428430841 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.426990795 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.370213976 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.576403402 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428378582 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.577657376 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.477709853 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.40382032 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.40398302 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.57632067 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.486956749 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.427156883 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.369998993 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.406094978 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.57827302 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.577893418 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.862828827 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.839953862 seconds)
  done (took 36.793046366 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.310693575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.466555076 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.270417089 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41957594 seconds)
  done (took 6.558255675 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.132968061 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.477226561 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.459099239 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.518489588 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.459096035 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.273970509 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.458012618 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.286299172 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.2813821 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.241888795 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.725513551 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.255107086 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.265405578 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.51920071 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.271725043 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.101571621 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.101406885 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.24060643 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.475499202 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.317996382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351483885 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.459819264 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.457665629 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.461150253 seconds)
  done (took 33.683643042 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.857600486 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.03134248 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.462036316 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.016745597 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.813526466 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.919081863 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.38542242 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.628016692 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.368207107 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.34784315 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.84749149 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.895088378 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.246960424 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.987759817 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.932238597 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.278844805 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.2781058 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.950719743 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.709996247 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.402467936 seconds)
  done (took 38.450763271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.090760745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.097053718 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.337790963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.268630867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.089708846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.098684115 seconds)
  done (took 28.078897013 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.409183053 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.238753092 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386262217 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.36016564 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.259483639 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.224203531 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.647643921 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.322227133 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.842669998 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.79144684 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.522119742 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.51232409 seconds)
  done (took 21.616439919 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.089293004 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.133207225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.099726021 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.26714144 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.920339001 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.96210553 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.4196403 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.092639046 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.164774949 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.294870009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.962587294 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.26783595 seconds)
  done (took 39.78591057 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.283301564 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.366434419 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.438448058 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.934631466 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.628238561 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.188288469 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.525734223 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.607928533 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 4.135133056 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.919665377 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.625080352 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.155343926 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.62852136 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.067715892 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.096198754 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.4388499 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.91642411 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.144083806 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.538425222 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.173503535 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.063814706 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.249609531 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098060654 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.643137536 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425886343 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092444808 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.321515047 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.340928186 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.090002368 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.344881494 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.092645809 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.5797943 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.268166287 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.399950176 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.624776351 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.179843103 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.210151885 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.229396931 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.693369236 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.390121223 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.239251148 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.25652255 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 5.621951491 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.32034154 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353307288 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.877724986 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.109451003 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.750077131 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078163528 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.1961481 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984268932 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.325820753 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.54867449 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.847668786 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.237849725 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.434613034 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.248733574 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.226600123 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.396231894 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.133244518 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.284717806 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.207934672 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.288562699 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.062966163 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.544002221 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.438327723 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.422718248 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.423750706 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.393920638 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.428719916 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.464896076 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.217564544 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.915329336 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.261309458 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.64662367 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.015367511 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.472683431 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.10464709 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.835737039 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.630691796 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.077576953 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.213534454 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.768640259 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.063299649 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.091650839 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.268451971 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.333464244 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.066106756 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.189993471 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.145866656 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.508060848 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.230273619 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.248987035 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.361092346 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.79255826 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.107341782 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.837132393 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.387992251 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.063239116 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.664278632 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.09114554 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.07445484 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.096485465 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.680677823 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.508576561 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.146795716 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.868878156 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.770950379 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.430254042 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.723209681 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264433164 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.093088305 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.470520905 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.42365469 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090723498 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.857208008 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.221725456 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.177094365 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.448009645 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.093229087 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.069160873 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.491237877 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.268222908 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092919888 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.325792598 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.093358047 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.251103372 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.09320865 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.897773679 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.147407026 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.340421721 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.627447241 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.318797207 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.183940401 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.061707048 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.246195267 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.595912515 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.186273669 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.441677285 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.536468627 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.698595612 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.668604611 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.088656588 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.940814618 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.57991503 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.365723132 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433960609 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.23019627 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.27288894 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.185814966 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090586682 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264351494 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.104811265 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.650080103 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.139900267 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.767302491 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.897325321 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.395478897 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.092944914 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.078677101 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.234392636 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.31221498 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.741978437 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.146884605 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.266372863 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.376974223 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.36935923 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.090649948 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.067803435 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.475042567 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.373360902 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.618818016 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.355113764 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.739383807 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.459669007 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.577784375 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.313105726 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.451167986 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.946079803 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.33988217 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.450781165 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.696985264 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.119803437 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095721316 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.132303809 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520961644 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.322678062 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.883787594 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.218283313 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.146652708 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.137226884 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.680240581 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.070070637 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.249498678 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.574146828 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.130954992 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.66182905 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.187711151 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.287122937 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400937746 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.125798104 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.437939563 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.903702381 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.514007693 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.481069611 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.409540867 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.071503222 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.861161585 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.654376195 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.585890243 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.237090321 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.3866662 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.032385087 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.151143709 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.108676453 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.449031235 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.065025876 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.811377863 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.431106764 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.916690166 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 3.835780697 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.248937758 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.630355021 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.103808441 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.26372457 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.246243305 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.138852428 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.262365443 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.638481278 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.360226581 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.422894026 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.092540268 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100928536 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.397056859 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.40448406 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.371970811 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.609153783 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.712139713 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.785230017 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.204586752 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.770416485 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.263323816 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.132228662 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.736915202 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.390616368 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040928783 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.260753696 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.923219767 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.21512541 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 6.26913349 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.399954435 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.093755076 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.580327564 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.716105675 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.134147666 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.056308564 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.237798103 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.095776567 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.417978435 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.99021499 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323897835 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.271328551 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.432601617 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.321856115 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.256059098 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.50095557 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.624906459 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.458104973 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.069133456 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.259766774 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.182855443 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.427795825 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.092298423 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.377772011 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.732162859 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.754817518 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.914850976 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.638767277 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.313910345 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.857337539 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.568372216 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.348703341 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.42924665 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.052881255 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771433485 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.083885235 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.240386017 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.060786731 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.870761102 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424689096 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.477845723 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.576263114 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.164281156 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.630970536 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.514838312 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.132240774 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.246333419 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.357246499 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.089233593 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.382293335 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.094503897 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.455785571 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.519321379 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.094894668 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.810740101 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.296734516 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.422890542 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.25622846 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.731799078 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.13673782 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.221248342 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.57251561 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.275728637 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.230693197 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.432596862 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.908218244 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.135884253 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.210252121 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.225514032 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.722893611 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.580256417 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.698840346 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.691911001 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.444270624 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.861129445 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.095787026 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.323504886 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.255038865 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.870820289 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.286843863 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.499816285 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.131993199 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.288867441 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.423528317 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.304800689 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.62962158 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.076626865 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.700222178 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.369828085 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.610779622 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.629871204 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.875238632 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.559697023 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.289003777 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.614316047 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.07347257 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.262218574 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.36992397 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.816665797 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.905477373 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.941037211 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.889400745 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.244755993 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.528451534 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.173838922 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.881196883 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.276297843 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.336139078 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.320337517 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.246338611 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.067568185 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.74535156 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.878224506 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.378200545 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.266269521 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.255805705 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.229172614 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.416127649 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.653744918 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.405981366 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.863309048 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.575485803 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.338858581 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.062761691 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.098446018 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.371765742 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.283463244 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.188914256 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.425596529 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.536098624 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.194118462 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.101645012 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.485021258 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.618785926 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.823342149 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.820836944 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.445488663 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.635024425 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.565334729 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.096635563 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.867741919 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.31507059 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.457891866 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.508229379 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.033617327 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.526937699 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.429489321 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.249983242 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.065931043 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.264566442 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.100817726 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.200776565 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.875669623 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.39337082 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.154284902 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.968175979 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.69373713 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.417853432 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.139755883 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.33906885 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.322678662 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.290303504 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.091595152 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.766868939 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.516254797 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.266666505 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.07946174 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.861428901 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.063947793 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.321459589 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.403071862 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.299052237 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.927752206 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.187285936 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.758515896 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.638234364 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.490013576 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.310042843 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.067181842 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.866549587 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.113558159 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.762457673 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.911468337 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346158096 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.604668467 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.261185651 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.095360095 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.427328087 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.226840049 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.426262972 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.383630459 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.583278146 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.515815895 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.473798434 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394340233 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.608098412 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.265586757 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374771659 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.109164175 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.110559385 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.17789025 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.501733639 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.488305791 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.179365722 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.657367428 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345692068 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.218083951 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.264749525 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.192191497 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.700456421 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.313752884 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.233810552 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.262051519 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.332081649 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.454250704 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.099708323 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.327934068 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.09304375 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.11944629 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.323398451 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.34492375 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.479686315 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.414489536 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.990419584 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.255274093 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.82104374 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.050979147 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.631398763 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.100904285 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.870591502 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.511705873 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.122987763 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.627200547 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.777576015 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.278400801 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.384323918 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.267443401 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.497552281 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.290237229 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.60567383 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.099323422 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.747935103 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.535129242 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.097886997 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.578436286 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.177512208 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.265815577 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.886079902 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.592998373 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.096885419 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.155567096 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.298649339 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.651499569 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.796730977 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.181730147 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.103338516 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.891811852 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.07593912 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.155234731 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.166589159 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.630282183 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.110591904 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.667323024 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.214177768 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.262267888 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109514097 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.240254892 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.091480847 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.322647861 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.695115882 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.338990363 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.381632902 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.260087288 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.091490355 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.742909738 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.799394402 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.541365266 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.306520998 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.407128679 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.486668543 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.971588658 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.418276454 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.671189504 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.376134017 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.29857421 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529169606 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353598621 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.128265856 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.283509604 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.09338077 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417730772 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.255583385 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.658042879 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.363996387 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.381144291 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.457385364 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.122961385 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.654176436 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.566778277 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980618708 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09395319 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.411339015 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.095438854 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.871107489 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.75010815 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.2919476 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.213794986 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.040670769 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.688385407 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.393934742 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.22776893 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.098680484 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.312307371 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.606982472 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.066418733 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.879666545 seconds)
    (567/608) benchmarking "2d"...
    done (took 1.982735648 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.304000538 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.429641651 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.06498127 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.267911908 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.111456006 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.082910953 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.598009269 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.100452757 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.443014421 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.068165736 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.643325473 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.078480042 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.186506468 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.258776107 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.494094227 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.094064204 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.086379221 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.26651167 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.097651822 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.101538589 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.461052411 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.187921222 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.350558256 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.569205537 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.323321758 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.43255235 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.00501823 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.144951198 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.110900259 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.408043366 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.926791816 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.658959717 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.176280543 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.628214764 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.149433323 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.111384446 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.651728504 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346321015 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.834498214 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.242617978 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.612365948 seconds)
  done (took 1942.808133669 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.151910147 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.18788573 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.174334101 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.198852725 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.164725284 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.17233027 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.161375501 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.205729358 seconds)
  done (took 50.550687697 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.093223445 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.100399109 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.531198747 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.277122044 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.126923515 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.310380773 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.253110311 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.596629398 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.295527142 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.145728831 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.159416572 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.153096287 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.105741711 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.13735111 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 5.987452104 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.181987037 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.097137257 seconds)
  done (took 90.657858447 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.111946885 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.186239735 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.132306295 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.75034803 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.161338353 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.416694576 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.114318796 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.100168632 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.203341554 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.752400002 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.163906491 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.247213056 seconds)
  done (took 78.479654255 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.134561855 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.130690519 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.130280903 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.132104358 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.132175943 seconds)
  done (took 6.757955442 seconds)
done (took 2400.823767385 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.322841082 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.624945763 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.703840559 seconds)
  done (took 4.421440309 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.161087558 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.224640428 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.324381888 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.246469379 seconds)
  done (took 6.074249625 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.392378889 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.581762026 seconds)
  done (took 4.065133739 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.548497445 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.111383788 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.639724309 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.09481469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.102919166 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.105486199 seconds)
  done (took 19.411981177 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.128254352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.128178378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.129801387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.120997973 seconds)
  done (took 5.608268185 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.091327807 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.088946355 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.100447744 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.095465524 seconds)
  done (took 18.468187698 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.261940805 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.186022858 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.849208423 seconds)
  done (took 5.402821368 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.913159706 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.476263717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.898457787 seconds)
  done (took 6.380639438 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.056077213 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.124745611 seconds)
  done (took 5.278449107 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.254911524 seconds)
  done (took 2.348115914 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.583848538 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.584016998 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.949863843 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.986646798 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.121972862 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.420846495 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.430266781 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.471587294 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.793315294 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.616577722 seconds)
  done (took 18.050262611 seconds)
done (took 107.223422622 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.00289658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.502158255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.247665069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.172718541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.195007336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.249847649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.717328214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.944147523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.694328826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.695835353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.806823219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.194176238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.121866414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.496855153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.123433625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.459413369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.510152349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.011515303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.138496168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.65741541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.720601835 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.390915012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.516839417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39915365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.515966457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.258628392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.270362985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.46702463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.395153673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.27723124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.267580722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.928437368 seconds)
  done (took 153.44220692 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.092790025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.10688339 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.111615586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.102127039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 4.933821844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.11107836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.104559764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.104983975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.019768983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.023375956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.111053541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 4.947074836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.11082446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.101121129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.108332051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.103120931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.155031351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.108038956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.107911479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.10779878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.112528702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.726048992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.108789459 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.730926961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.158167044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.108386936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.102692337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.107208055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.108679756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.109834962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.107923814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.102227254 seconds)
  done (took 187.363697725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.09228647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.107123624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.106323339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.10179917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.10589876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.10613422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.102338911 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.103290165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.108711562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.10595678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.107940392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.106957216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.107855634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.102113981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.109387731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.10387242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.10732602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.105697174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.108398584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.106931743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.107376744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.102685507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.102224025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.106905006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.104951366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.108108031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.102655443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.106571641 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.108314518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.106207502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.107927782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.102850989 seconds)
  done (took 196.481586468 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.401683108 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.15331872 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.039200807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.486513123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.415140231 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.12795354 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.462163161 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.408430349 seconds)
  done (took 15.601238059 seconds)
done (took 553.995435286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.820592604 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.083026395 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.283037929 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.362097857 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.705053468 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.405167575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.354853096 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.532990398 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.825441886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.505996409 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.666837222 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.319490763 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.041476202 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.360959221 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.287892708 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.571185678 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.537206118 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.828110159 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.311532154 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.006045596 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.323808373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.99805812 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.528134116 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.876070709 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.634187269 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.043854459 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.218791683 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.537188896 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.348669668 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.307037669 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.142366298 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.50511934 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.355801807 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.350992079 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555128076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55787408 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.451000676 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.531867929 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.281058012 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.791796961 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.986194251 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.69830689 seconds)
  done (took 74.926507857 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.121998404 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.152529031 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.293508894 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.200514911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.76259026 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.202482912 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.357747462 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.339875734 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.217086885 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.336770457 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.375881009 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.785526329 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.376349794 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.750500315 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.363278606 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388274154 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.205355913 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.721827512 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.386228665 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.357508609 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.167665042 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.298903144 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.167561751 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.326352298 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.173170442 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.186937736 seconds)
  done (took 36.137098035 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.193049816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.317742881 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.366393908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.626220504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.33695165 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.226314202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477180427 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.294692221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.861374052 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.334415038 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.215989605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.231346428 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.307299626 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.392925028 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.34530707 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.242616507 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.29124784 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.2897912 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.317853908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.334630748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.270477143 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.212248713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.477103794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.271750089 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.805689813 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.59607807 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.288920172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.700538725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.344567709 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.228105189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.259121194 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.453983693 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.564580855 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.366777628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.270278164 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.152230935 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.179021695 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.211649545 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.059994591 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.305169902 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.4691467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.446878707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.418921624 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.658110096 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.362117729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.29691309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.583556584 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.225037991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.262174941 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.900397778 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422152892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.822564945 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.25067973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.344285461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.251874463 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.454616097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.31027064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.444238537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.298515038 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.843988182 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.218479921 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.523133503 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.323472858 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.37936141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.377480222 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.343727055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.28662854 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.679590354 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.414451258 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.099986829 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.796522111 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.213601229 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.17645154 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.207264437 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.320320606 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.62151003 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.099433252 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367458998 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.584700643 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.459436172 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.520231929 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.720495543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.125884419 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.603516199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.165804259 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.14044851 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.216099285 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.451953024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45277735 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.60781343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671347168 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.464188016 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.725624495 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.478144362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.690982327 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.486568457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.138641559 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.177257554 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.350610955 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.670353216 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.218119844 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.352830853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.78708264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.421388373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.586236277 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.209594771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.480113596 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.376425732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471237285 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.127091838 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.323247789 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.229342605 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.36735903 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.810621845 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.129837831 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.640945332 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.23063237 seconds)
  done (took 234.308183625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.093066039 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.108041445 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.100774612 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.111403476 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.103670382 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.715116041 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.170053329 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.099923094 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.709063116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.171675205 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.099633313 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.099251283 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.100971742 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.10117244 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.651192132 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.607412453 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.924219689 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.097421914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.103117094 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.10345447 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.928900132 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.09967789 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.097847038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.104889928 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.103552977 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.097737147 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.112687341 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.154571233 seconds)
  done (took 152.070157395 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.160383131 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.586626812 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.201364795 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.246411521 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.202392761 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.176295852 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.70489156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.292114091 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.230331508 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.174185601 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.170302846 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.386521471 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409512577 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.782444626 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.29068408 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.290865854 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.861713505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.298801854 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.166471283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.160569477 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.318114905 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.517517283 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.453305958 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.454248517 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.341457285 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.450131008 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.26826882 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.162483228 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.283722563 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.68654563 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.178097613 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.581555595 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.304534229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.171834701 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.703736696 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.512644158 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.762936774 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.744265749 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.350491342 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.12434174 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.119761322 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.405166148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.52464136 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.213782252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.181839002 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.907112587 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.181315288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.56611253 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.202512196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.119308424 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.250425343 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.263504287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.433358496 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.146963126 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.331899239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.309133884 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.701886066 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.141930592 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.227017325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.459859731 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.138005083 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.678083572 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.735100867 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.245191016 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.180327764 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.01196668 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.244929401 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.714130978 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.81010197 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.230966416 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.498937433 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.343249049 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.137072647 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.441895535 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.358942645 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.659102911 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.766736678 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.295222882 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.259867561 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.240165014 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448648107 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.154085149 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.701405468 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.258336445 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.13451561 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.683855356 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.553466229 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.1377895 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.157002442 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.280216067 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.315855787 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.358190633 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.511726247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.23106278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.078553154 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.422409841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.50260933 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.176567689 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.285259103 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.149883491 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.545700392 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.342484465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.142455887 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.470335759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.570990792 seconds)
  done (took 156.562697722 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.895818631 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.206549568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.406967589 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.702724389 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.486182081 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.592966484 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.430360813 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.236473291 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.440457046 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.401245862 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.356918834 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.242120447 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.865885055 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.909751005 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.20781323 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.356929078 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.223423493 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.806586491 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.466505509 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.168958209 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.441606855 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.864389212 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.471033079 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.5538411 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.53550286 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.663997947 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.816368249 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.303007606 seconds)
  done (took 48.161774379 seconds)
done (took 703.259220525 seconds)
SAVING RESULT...
DONE!
