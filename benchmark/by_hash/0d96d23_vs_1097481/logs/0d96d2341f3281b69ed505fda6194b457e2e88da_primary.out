cset: moving following pidspec: 1992342
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.133436792 seconds)
loading group "string"... done (took 0.263012636 seconds)
loading group "linalg"... done (took 4.767448535 seconds)
loading group "parallel"... done (took 0.021790658 seconds)
loading group "find"... done (took 1.401943 seconds)
loading group "tuple"... done (took 0.882704473 seconds)
loading group "dates"... done (took 0.246744845 seconds)
loading group "micro"... done (took 0.059820053 seconds)
loading group "io"... done (took 1.307907672 seconds)
loading group "frontend"... done (took 0.012488018 seconds)
loading group "scalar"... done (took 4.950671253 seconds)
loading group "sparse"... done (took 4.433119484 seconds)
loading group "alloc"... done (took 0.016561392 seconds)
loading group "broadcast"... done (took 0.389850824 seconds)
loading group "union"... done (took 3.633698503 seconds)
loading group "simd"... done (took 2.948208015 seconds)
loading group "random"... done (took 2.94254567 seconds)
loading group "inference"... done (took 1.584759451 seconds)
loading group "problem"... done (took 1.105011865 seconds)
loading group "array"... done (took 4.660708662 seconds)
loading group "misc"... done (took 0.929793124 seconds)
loading group "sort"... done (took 0.367399401 seconds)
loading group "collection"... done (took 6.067662755 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/6) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21207682 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.020503847 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.161990996 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.020123515 seconds)
  done (took 1.912454156 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.291717308 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.041859061 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.034049654 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.025495971 seconds)
  done (took 1.077435333 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022559707 seconds)
    (2/2) benchmarking "read"...
    done (took 0.029576333 seconds)
  done (took 0.732178371 seconds)
done (took 4.721239428 seconds)
(2/6) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.458666409 seconds)
  done (took 1.135915902 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.269350047 seconds)
  done (took 1.951626659 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.058281603 seconds)
  done (took 0.760436412 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505380481 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485365065 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.812036496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.078563802 seconds)
  done (took 2.564571361 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.657408053 seconds)
  done (took 1.349145182 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24588127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.212251872 seconds)
  done (took 1.174446373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.487328851 seconds)
  done (took 1.178761551 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.157886944 seconds)
  done (took 1.854216441 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.217599289 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.11729053 seconds)
  done (took 1.037489113 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.421829918 seconds)
  done (took 1.119910594 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.090200136 seconds)
  done (took 3.793502961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.178334061 seconds)
  done (took 0.893005015 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.256987225 seconds)
  done (took 0.966847612 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.620817719 seconds)
  done (took 1.32578018 seconds)
done (took 21.778596962 seconds)
(3/6) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041860492 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.115065694 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021955887 seconds)
  done (took 0.876087947 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.028235685 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.034730349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.035128665 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.035341462 seconds)
  done (took 0.845368384 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.029487916 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030841768 seconds)
  done (took 0.770519907 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.177534241 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.125391264 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.07002419 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.038383543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034008616 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.036528475 seconds)
  done (took 0.822686113 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.023224006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.021789936 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.021818327 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.021759508 seconds)
  done (took 0.801135527 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.022306029 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.021513219 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.021636472 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.043279893 seconds)
  done (took 0.82081737 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.055571729 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.054809981 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.123024605 seconds)
  done (took 0.946693321 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040903545 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.031079536 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.032037771 seconds)
  done (took 0.81735065 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.061866954 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.042092223 seconds)
  done (took 0.819943227 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03363103 seconds)
  done (took 0.747660659 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.040115644 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.050302395 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.088132239 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.044331604 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.090403431 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.070705958 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.019079284 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.019184073 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.029620031 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.019160032 seconds)
  done (took 1.186578972 seconds)
done (took 10.621156111 seconds)
(4/6) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.038434121 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.020973868 seconds)
  done (took 0.775686515 seconds)
done (took 1.493028686 seconds)
(5/6) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.039763635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.226794483 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.037268617 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.324257055 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.041281577 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022706008 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.071742239 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.139992841 seconds)
done (took 1.625862242 seconds)
(6/6) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.348559108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.082545276 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.087611684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.065738353 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.101893668 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.081563007 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.088367108 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.043653474 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.490057152 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.057890717 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.105408989 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.382887844 seconds)
done (took 3.658858495 seconds)
RUNNING BENCHMARKS...
(1/6) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.809278397 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 4.664354506 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 4.679622089 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 5.766034946 seconds)
  done (took 15.837110589 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.726995217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.088618894 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.735773874 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.504253454 seconds)
  done (took 16.781035048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.952348148 seconds)
    (2/2) benchmarking "read"...
    done (took 1.054417801 seconds)
  done (took 2.738528348 seconds)
done (took 41.974223361 seconds)
(2/6) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.946560366 seconds)
  done (took 6.672503252 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.728697673 seconds)
  done (took 6.459038197 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 5.733289958 seconds)
  done (took 6.478892875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.774545209 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.766203028 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.762687622 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.766909932 seconds)
  done (took 23.808860738 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.810150513 seconds)
  done (took 6.534119952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.726298421 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.742100839 seconds)
  done (took 12.218941902 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.828636684 seconds)
  done (took 6.566187518 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.867191166 seconds)
  done (took 6.59994455 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.728175064 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.739550294 seconds)
  done (took 12.211436478 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.557727004 seconds)
  done (took 6.283906453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.782725983 seconds)
  done (took 7.51786267 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.731837845 seconds)
  done (took 6.458447666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.789424695 seconds)
  done (took 6.518540367 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.792703749 seconds)
  done (took 6.527839203 seconds)
done (took 121.582570068 seconds)
(3/6) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.934997966 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.340180535 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.24811085 seconds)
  done (took 3.314342277 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.886038173 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.927933367 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.052304606 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.966236452 seconds)
  done (took 4.771985095 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.994201076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.106243738 seconds)
  done (took 2.826608394 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.221125271 seconds)
  (6/15) benchmarking "18129"...
  done (took 5.741891329 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.040887785 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.728584469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.726676984 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.729225221 seconds)
  done (took 17.918357593 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.767985519 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.767579087 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.767049394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.767915758 seconds)
  done (took 3.797585756 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 3.220239286 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.15267419 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.3526731 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 5.72855631 seconds)
  done (took 16.180478429 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.88824542 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.812536353 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.506389568 seconds)
  done (took 3.955691741 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.617617886 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.790187306 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.337698459 seconds)
  done (took 4.473095893 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.577848271 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.819824691 seconds)
  done (took 4.124591967 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.893594012 seconds)
  done (took 1.620757658 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.573151441 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.047373785 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.187754124 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.168458717 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 1.21069065 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.891674765 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.030131128 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.974812697 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.098282504 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.381613824 seconds)
  done (took 12.292741798 seconds)
done (took 84.976044785 seconds)
(4/6) benchmarking "tuple"...
  (1/1) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.096740039 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.794755519 seconds)
  done (took 2.618262151 seconds)
done (took 3.368127705 seconds)
(5/6) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 3.864165435 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.735335176 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.822568518 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.727847969 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.74235412 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.118680137 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.775373494 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.069679219 seconds)
done (took 32.582840853 seconds)
(6/6) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.747790661 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.865892906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.742121667 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.25742634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.08768763 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.133576115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.785798768 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.730596676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.651335089 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.751991771 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.061707722 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.555221385 seconds)
done (took 54.099293196 seconds)
SAVING RESULT...
DONE!
