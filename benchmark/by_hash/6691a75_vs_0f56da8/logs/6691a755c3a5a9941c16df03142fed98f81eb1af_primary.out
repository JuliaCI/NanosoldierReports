cset: moving following pidspec: 3610828
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.149964676 seconds)
loading group "string"... done (took 0.252821012 seconds)
loading group "linalg"... done (took 4.645314815 seconds)
loading group "parallel"... done (took 0.021287952 seconds)
loading group "find"... done (took 1.375705646 seconds)
loading group "tuple"... done (took 0.892047429 seconds)
loading group "dates"... done (took 0.241279393 seconds)
loading group "micro"... done (took 0.058195888 seconds)
loading group "io"... done (took 1.257102873 seconds)
loading group "frontend"... done (took 0.012419618 seconds)
loading group "scalar"... done (took 4.874438628 seconds)
loading group "sparse"... done (took 4.230204924 seconds)
loading group "alloc"... done (took 0.016369567 seconds)
loading group "broadcast"... done (took 0.373902844 seconds)
loading group "union"... done (took 3.553430602 seconds)
loading group "simd"... done (took 2.957661076 seconds)
loading group "random"... done (took 2.909513634 seconds)
loading group "inference"... done (took 1.493652514 seconds)
loading group "problem"... done (took 1.07559528 seconds)
loading group "array"... done (took 4.466271945 seconds)
loading group "misc"... done (took 0.980837802 seconds)
loading group "sort"... done (took 0.360971857 seconds)
loading group "collection"... done (took 5.920900829 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.254425781 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.02283641 seconds)
    (2/2) benchmarking "String"...
    done (took 0.024400301 seconds)
  done (took 0.748051852 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.020122701 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.019664899 seconds)
    (3/3) benchmarking "different"...
    done (took 0.019483122 seconds)
  done (took 0.755875902 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.019463525 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135885023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.02162256 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022339415 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022269399 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021606604 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021398384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021677922 seconds)
  done (took 0.963590885 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.02107533 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.020660749 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.017587722 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.017619722 seconds)
  done (took 0.775921974 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.019381711 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.037987778 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.017706947 seconds)
    (4/4) benchmarking "different"...
    done (took 0.01798443 seconds)
  done (took 0.792987386 seconds)
done (took 5.118362507 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.280078874 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.037864407 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031626973 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022951842 seconds)
  done (took 1.09881557 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020406816 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027427233 seconds)
  done (took 0.743407368 seconds)
done (took 2.543683 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.753525027 seconds)
  done (took 10.446529435 seconds)
done (took 11.142167672 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166884497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.018487727 seconds)
  done (took 0.883742848 seconds)
done (took 1.607868665 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.803476578 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.85046155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.934144682 seconds)
  done (took 2.508680605 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.012512028 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.745527978 seconds)
    (3/3) benchmarking "different"...
    done (took 0.763814586 seconds)
  done (took 3.225724942 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.789822933 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.702732521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.929491358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.702750223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.708404779 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.942295689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.727780316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.594449514 seconds)
  done (took 24.011186994 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.935616059 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.92104012 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.89361662 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.926274446 seconds)
  done (took 8.38679285 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.007616673 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.880724044 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.879734318 seconds)
    (4/4) benchmarking "different"...
    done (took 0.78396142 seconds)
  done (took 4.294809434 seconds)
done (took 50.79595615 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.534725301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.839154128 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.73101082 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.403533669 seconds)
  done (took 16.209336255 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.925107764 seconds)
    (2/2) benchmarking "read"...
    done (took 1.027496162 seconds)
  done (took 2.665604925 seconds)
done (took 19.575564127 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.277356525 seconds)
  done (took 9.977263763 seconds)
done (took 10.678317434 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.867216124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.060250499 seconds)
  done (took 4.628630288 seconds)
done (took 5.344056017 seconds)
SAVING RESULT...
DONE!
