cset: moving following pidspec: 3614263
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.155292516 seconds)
loading group "string"... done (took 0.254745207 seconds)
loading group "linalg"... done (took 4.745871135 seconds)
loading group "parallel"... done (took 0.021515248 seconds)
loading group "find"... done (took 1.377092229 seconds)
loading group "tuple"... done (took 0.910492556 seconds)
loading group "dates"... done (took 0.242351978 seconds)
loading group "micro"... done (took 0.058265907 seconds)
loading group "io"... done (took 1.244318747 seconds)
loading group "frontend"... done (took 0.012948775 seconds)
loading group "scalar"... done (took 4.914015926 seconds)
loading group "sparse"... done (took 3.802578476 seconds)
loading group "alloc"... done (took 0.016641146 seconds)
loading group "broadcast"... done (took 0.375127876 seconds)
loading group "union"... done (took 3.550963671 seconds)
loading group "simd"... done (took 2.933263922 seconds)
loading group "random"... done (took 2.829267529 seconds)
loading group "inference"... done (took 1.494479555 seconds)
loading group "problem"... done (took 1.182969838 seconds)
loading group "array"... done (took 4.535778203 seconds)
loading group "misc"... done (took 0.868536722 seconds)
loading group "sort"... done (took 0.37542902 seconds)
loading group "collection"... done (took 6.182337093 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.253640635 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.022662067 seconds)
    (2/2) benchmarking "String"...
    done (took 0.024102397 seconds)
  done (took 0.755456836 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.02014506 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.019496551 seconds)
    (3/3) benchmarking "different"...
    done (took 0.019849609 seconds)
  done (took 0.76241406 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020102461 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135251374 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021708915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022983962 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022754229 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022105389 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022239696 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021819036 seconds)
  done (took 0.97050984 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.021049866 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.020505095 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.017580815 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.01767866 seconds)
  done (took 0.779583471 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.01912705 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.037257126 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.017922111 seconds)
    (4/4) benchmarking "different"...
    done (took 0.017780546 seconds)
  done (took 0.794756563 seconds)
done (took 5.153619833 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.279599923 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.037517381 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031958839 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.022946164 seconds)
  done (took 1.108030884 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020302144 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027956488 seconds)
  done (took 0.75182934 seconds)
done (took 2.563274624 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.895741649 seconds)
  done (took 10.598695021 seconds)
done (took 11.302017756 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167787138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.018519384 seconds)
  done (took 0.895063279 seconds)
done (took 1.655302392 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.781020557 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.859537378 seconds)
    (2/2) benchmarking "String"...
    done (took 0.947803769 seconds)
  done (took 2.546911566 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.023134269 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.752573157 seconds)
    (3/3) benchmarking "different"...
    done (took 0.771873685 seconds)
  done (took 3.256082841 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.814736913 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.712278117 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.937531949 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.709827584 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.718665789 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.94734982 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.711624401 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.606206596 seconds)
  done (took 24.053404534 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.830904575 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.985226232 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.917645082 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.909178915 seconds)
  done (took 8.36819498 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.015236685 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.892024079 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.893986677 seconds)
    (4/4) benchmarking "different"...
    done (took 0.791455835 seconds)
  done (took 4.302059632 seconds)
done (took 50.907711726 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.709192228 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.819988539 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.740927672 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.415001942 seconds)
  done (took 16.394168282 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.929334936 seconds)
    (2/2) benchmarking "read"...
    done (took 1.032237315 seconds)
  done (took 2.681522767 seconds)
done (took 19.785089862 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.435471839 seconds)
  done (took 10.145607339 seconds)
done (took 10.854793535 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.851577608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.078843711 seconds)
  done (took 4.639498072 seconds)
done (took 5.388262914 seconds)
SAVING RESULT...
DONE!
