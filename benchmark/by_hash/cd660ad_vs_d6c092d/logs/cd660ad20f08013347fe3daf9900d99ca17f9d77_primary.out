cset: moving following pidspec: 61787
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.945539268 seconds)
loading group "shootout"... done (took 0.886796239 seconds)
loading group "string"... done (took 0.253668763 seconds)
loading group "linalg"... done (took 3.325477615 seconds)
loading group "parallel"... done (took 0.023976346 seconds)
loading group "find"... done (took 1.319841427 seconds)
loading group "tuple"... done (took 0.799585273 seconds)
loading group "union"... done (took 3.223036266 seconds)
loading group "dates"... done (took 0.165228406 seconds)
loading group "micro"... done (took 0.063387092 seconds)
loading group "simd"... done (took 0.38708494 seconds)
loading group "io"... done (took 1.551226089 seconds)
loading group "random"... done (took 2.595231489 seconds)
loading group "problem"... done (took 1.183882225 seconds)
loading group "array"... done (took 4.944372722 seconds)
loading group "misc"... done (took 1.020699441 seconds)
loading group "scalar"... done (took 3.694158043 seconds)
loading group "sort"... done (took 0.328142373 seconds)
loading group "sparse"... done (took 3.631740592 seconds)
loading group "collection"... done (took 6.524586416 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585190131 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.080284696 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252168067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.087650956 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.296201423 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.086659759 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.090147114 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.076594087 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.014320484 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168933969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.213213432 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411211513 seconds)
done (took 5.178516879 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.273726124 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033785554 seconds)
    (2/2) benchmarking "String"...
    done (took 0.133675593 seconds)
  done (took 0.845404626 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.145755671 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.018429927 seconds)
    (3/3) benchmarking "different"...
    done (took 0.024862007 seconds)
  done (took 0.86029654 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.022531278 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.100863368 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.024511365 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.025070213 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.024476897 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.024140552 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.024168077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.024095079 seconds)
  done (took 0.923267471 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.027708463 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.025077444 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.022182788 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.023860669 seconds)
  done (took 0.766504404 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023264248 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.087587216 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.022517981 seconds)
    (4/4) benchmarking "different"...
    done (took 0.022285606 seconds)
  done (took 0.824721453 seconds)
done (took 5.211213198 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.213642197 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.819635124 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 1.014824874 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.184804084 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.350613146 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.312010864 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.08088832 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.250601197 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.160309383 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.034513089 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191525371 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.042633319 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.556452211 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.459786942 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.031490019 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.157828125 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.603068407 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039636519 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.07451253 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.268915694 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.04059433 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.041023994 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.045674302 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.028360151 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.165712623 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.139923228 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.604787322 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.067712376 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.029461375 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.144440337 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.030901154 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.034238751 seconds)
  done (took 9.933388285 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156881671 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.151135033 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.026893276 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.060978046 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.050269362 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.027592413 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030513053 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.025808141 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.04359542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.090656653 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046443228 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.163282308 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.02318946 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.025851985 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146111005 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.119181627 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.040095873 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.041198369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.025326649 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.038502425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.05165394 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.038075646 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033790676 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032533135 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.073010553 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.092133816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.043254851 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.067735661 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023814534 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034488337 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.056918172 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063169052 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.024223806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.023407953 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.066918721 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.042733938 seconds)
  done (took 2.802997852 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.703328778 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.057519901 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.150833893 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.142800152 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067966915 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.053298688 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.188534855 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.085691478 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.058820204 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026663236 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.222753576 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.664088252 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.18148911 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.084379985 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02882865 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.193171325 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.912619906 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.980744869 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026473676 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.027010677 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.143849022 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.028159395 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.179465084 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024437116 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.127529391 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.844774061 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.02858727 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.028061174 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.05901636 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.155844048 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.022989909 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.103172582 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.056951303 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.029080654 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.557953447 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.024612065 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.022824242 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.047101154 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.057187249 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.025315385 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.026546529 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.038372056 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.023762166 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.078387155 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.039578846 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.496958451 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.028017347 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.692005228 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.886738813 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.033467046 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.030359431 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063083714 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.022585531 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.026513763 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.620618409 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.114026934 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.024959396 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.262029405 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.02572009 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.025112855 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.025651588 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.05540917 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02604038 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.027948219 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.029425956 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.044258753 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349385118 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033397725 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.045770604 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.023149311 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025042418 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.022968534 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.407258308 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.030340272 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.02794046 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.023369976 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0300349 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025816456 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.025396719 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.070416204 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.052500774 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.048029789 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029030177 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.02636418 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.025594501 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.526720873 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.084029045 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025254585 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.026211768 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.488284749 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.022514829 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024717253 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.026691285 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.046278721 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.02591343 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.022403358 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.062021777 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026849042 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.13520901 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.547359856 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026532047 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.02221277 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.567528137 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.026707564 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.057525171 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.082574746 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02548042 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.0637623 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.025910127 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.023311559 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.02974065 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.021950234 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.026865579 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.024090088 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025098868 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.024018539 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.02519456 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.026369029 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025137487 seconds)
  done (took 20.95110079 seconds)
done (took 36.059943804 seconds)
(4/20) benchmarking "parallel"...
done (took 0.816285865 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.230910417 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.047809424 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.021554815 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.179891318 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.048086366 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.148824172 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.190504464 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.138541828 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.049136383 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.049339406 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.049901739 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.197928586 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.209963219 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.051088771 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.130090826 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.208046181 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.050296741 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.022006988 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.048823218 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.050593379 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.050610186 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.022224143 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.049691599 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.051341027 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.13037301 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.04975426 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.021942529 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.12941344 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.050424875 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.130807224 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.049917358 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.048974482 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.050411547 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.131077599 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.051945062 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.132772557 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.022270389 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.051825428 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.052162292 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.05219273 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.051252833 seconds)
  done (took 4.294392618 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047223732 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.04344978 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.04500155 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.019530698 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.03074946 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.041541777 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01961261 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.042141593 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.048337991 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.043529021 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.04330454 seconds)
  done (took 1.261404487 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.040596475 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.04449501 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.044800136 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.019382864 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.03152871 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.042444355 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.019404819 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.042121865 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.045051587 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.043388771 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.042774716 seconds)
  done (took 1.192633216 seconds)
done (took 7.499621542 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.16196948 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.130358181 seconds)
  done (took 1.062266848 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.586232137 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.24375137 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.142345997 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.266278769 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.133006162 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.165828471 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.393731465 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.169858267 seconds)
  done (took 6.911344476 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.082876509 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.152148746 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.026788529 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.024975457 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.025057513 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.024763745 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.025608284 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.025564254 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.025527622 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.026880086 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.026466851 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.024976484 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.025775555 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025861247 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.025082486 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.026110804 seconds)
  done (took 1.511510487 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029375124 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.027317608 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.029432003 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.020406222 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.030981541 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.029685987 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.031016694 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.032406258 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.030443645 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.030243535 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.028336358 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.030984805 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.029484548 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.028482337 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.030771197 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.020583268 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.031722506 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.030204974 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.032194283 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.031381782 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.030711377 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.027780313 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.03185811 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02903424 seconds)
  done (took 1.492600223 seconds)
done (took 11.747871605 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148396156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.033612876 seconds)
  done (took 0.961113527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136656525 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.13682102 seconds)
  done (took 1.063456192 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.030489525 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.018680876 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.036131312 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.027929628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.019447223 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.01927184 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.035357506 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.019497073 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.019107393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.018894355 seconds)
  done (took 1.02687483 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.020695093 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.02636191 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.024635403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.022555704 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.024422599 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.020175609 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.022719263 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.020635088 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.026059726 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.019314164 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.023192565 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.040807284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.022536097 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.042650558 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.023094204 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.02374362 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0252234 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.022850599 seconds)
  done (took 1.238058556 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018736759 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.019337515 seconds)
  done (took 0.822427226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.022069927 seconds)
    (2/7) benchmarking "second"...
    done (took 0.019460636 seconds)
    (3/7) benchmarking "month"...
    done (took 0.021698856 seconds)
    (4/7) benchmarking "year"...
    done (took 0.021694974 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.019459628 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.018734292 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.018955297 seconds)
  done (took 0.934409946 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.427989799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.097857401 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.354046676 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.027098455 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.041025931 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247960727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.02217235 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.027182917 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.027139067 seconds)
  done (took 2.058115555 seconds)
done (took 8.898624086 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.043155414 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.1455604 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.158093711 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472442328 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.039132418 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.025104255 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.055039497 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.240833834 seconds)
done (took 1.981916884 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.506000443 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.355196477 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.217905838 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.02673509 seconds)
  done (took 2.394638709 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333245722 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.151676008 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.03336981 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.024911303 seconds)
  done (took 1.349709761 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022479217 seconds)
    (2/2) benchmarking "read"...
    done (took 0.02965014 seconds)
  done (took 0.848800911 seconds)
done (took 5.91172495 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03175253 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.019937203 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.027165857 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.022370982 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.022090762 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.021566271 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.021589798 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.02238499 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.020356307 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.022405689 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.022234382 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022029997 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021719195 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021821235 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.020920762 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021924149 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.019750815 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.021256174 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021389668 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021297793 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.019643753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021810205 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.02134335 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.021477079 seconds)
  done (took 1.322144521 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.03818703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.02361927 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.024745765 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.024692192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.025118379 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.024601065 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.025025431 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.023700281 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.02427463 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.023059902 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02485991 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024464025 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.022260798 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024108643 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02287684 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024743479 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.024148701 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023449032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023387549 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.025132374 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.024491795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023368993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.024073882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02406405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.024712094 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025089081 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.022948782 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.023798245 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024481261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.025269795 seconds)
  done (took 1.542367202 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023620019 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.017994226 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.018470259 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.028744592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.017865439 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.017876979 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.018278318 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.017223864 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.017833072 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.018789784 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.018476449 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.017995757 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.018918311 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.018133985 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.018417094 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.018982126 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.023615408 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.041841816 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.018521445 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.018286298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.021718252 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.017705606 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.017787021 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.017968428 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.018385111 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.018008271 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.017450305 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.018371269 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.01786461 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.018592627 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.018147006 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.022411864 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.023763168 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.018345223 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.028317472 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.022736473 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.018697811 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.024666141 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.019108567 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.018127098 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.017656602 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.017862064 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.018079526 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.017789882 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.028800016 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.017946015 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.019179283 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.019044871 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.01854331 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.017484987 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.017592529 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.019473205 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.022426714 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.019055913 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.018026415 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.019739082 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.01824894 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.019148219 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.018750573 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.018347929 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.018246568 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.021602397 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.019745899 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.018997261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.040213494 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.019537634 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.028625041 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.018327315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.018740054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.021398696 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.018620185 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.03825941 seconds)
  done (took 2.28632907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.029468513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.029323039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.038042388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.027472323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0217273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.018905701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.022257669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019308786 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02801052 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.023084443 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018918114 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022492379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.027850997 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.022920533 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.020579766 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.027818581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.023133303 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022439917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.019281391 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.023108486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0207112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.022294699 seconds)
  done (took 1.339315075 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108519328 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.023654303 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069834277 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.027002871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02545509 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.027250054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023557574 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.023698359 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023082156 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024155832 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024224923 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022777964 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.025390908 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024911507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02467929 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024983647 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.024371247 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024956353 seconds)
  done (took 1.382727044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.035023839 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.023400503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.05236828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.023753122 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.023496633 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.023581238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.027409042 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.02717741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.023027993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.02384091 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.027292922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023444442 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.023507016 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023506183 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023665936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.024274977 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.023739534 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024245074 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02797898 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.027239702 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.027052033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.027010853 seconds)
  done (took 1.398212923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036442282 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022004079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.040922139 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.024835128 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.01889133 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.01904261 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.024022968 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022479419 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023578642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020986945 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021556167 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.017850141 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024440407 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022759985 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.025521456 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022790965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022006819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022555224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021877208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.018586899 seconds)
  done (took 1.280339192 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.139348515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021058756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.020868326 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025523496 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.020267165 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.020158208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.025233596 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.020435774 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.020627066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.044711735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.020624681 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.020696894 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.025608869 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.02392036 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.020372846 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.025358317 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025670632 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025807233 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.020722032 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02079009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.045715583 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.021114089 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.026322268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.021343291 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.021298507 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021220975 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.020897472 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024189069 seconds)
  done (took 1.606002975 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03925068 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021103695 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0190287 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.02295241 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.022766347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.03553274 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.023220717 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.023056181 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.021224892 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.018727532 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.020978461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.020756078 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.021059611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.031760695 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.02125014 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.021496522 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.03162674 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.02355517 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.035745299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.035600258 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.021081783 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.030485882 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.020946787 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.018646057 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.034584567 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.021231723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023506104 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024486392 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021442078 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.018160448 seconds)
  done (took 1.568527876 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.031126931 seconds)
    (2/2) benchmarking "in"...
    done (took 0.028742441 seconds)
  done (took 0.870187036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.01956538 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.034364549 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.017583709 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.030241519 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.026444086 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.022060478 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.026842072 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.026552885 seconds)
  done (took 1.016112011 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.134368827 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.159330091 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.019907346 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.019590388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.134543168 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093709325 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147659856 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.031805426 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032676815 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.021993865 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.020305011 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.143663044 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.020036557 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.034258896 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.021656255 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.029999346 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.026890593 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.040317382 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.032790835 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.018718471 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.032807089 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.020311932 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.019283491 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.020504653 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.020583047 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.025559721 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.035825681 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.032881399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027820075 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.017706719 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03952684 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.018772505 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.01979887 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.02876823 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.135350683 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.019187168 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.060445467 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.019465147 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.024008431 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.019173705 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.032139554 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.042152044 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.032657433 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.036615013 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.02008437 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.020546419 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.018355205 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.020265533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.021704074 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.028259325 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.019131553 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.025930229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.018836787 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.020697718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.030034667 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.01920491 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.024022258 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.027572702 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.033055692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.028831022 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.03143938 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.034637228 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.027904449 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.028316115 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.019906807 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.040643955 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.02131231 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.033902547 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.035359251 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.020408677 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.032007667 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.018646359 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.017443791 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.018577045 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.055221109 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.020330397 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.01972498 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.018704618 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.018897202 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.020502763 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.028686035 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.024271193 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.026130019 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.022400915 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.035328584 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.027745425 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.018670383 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.026615521 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.036875879 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.021663465 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.018708163 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.036533212 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.022194612 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.01874227 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.037160104 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.028667281 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.020477171 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.019718935 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.022067772 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0330441 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.020713768 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.018264126 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.027496676 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.021017592 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137624359 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.02432974 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.027141093 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.01916569 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.02984389 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.026079458 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.020725362 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.01829258 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.023093385 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.020160877 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.018232338 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.028472642 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.019484189 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.034284859 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.025793731 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.03356469 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.033577636 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.029912112 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.036090038 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.019122014 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.018384251 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.039228824 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.029316005 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.021141836 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.038956319 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.019133973 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.029465542 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.019170133 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.020602886 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.027939415 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.018707709 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021325015 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.019560039 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.026096813 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.021204363 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021574728 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.024941143 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.027713051 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.032860664 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.020998671 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.028229084 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.020075852 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.036757969 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.029525801 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.024196633 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.023500202 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.020781168 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.031818285 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.025601983 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.027875049 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.018906688 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.020345319 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.019345422 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.030278109 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.028587652 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.021295386 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.029574982 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.023555899 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.020376162 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.019535856 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.020709358 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.023144066 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.02374171 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.020935702 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02772874 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.028965718 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.034845273 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.027704336 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.028641243 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.018878667 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.019494116 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.021794931 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.019593814 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.023928742 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.029350319 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.036531079 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.032156546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.043715815 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.020422152 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.030028188 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.021593052 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.037844426 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.033721828 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.021033646 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.024972304 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.018678527 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.02129514 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.028252178 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.03156632 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.034223593 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.0350291 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.023597891 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.023751951 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.018889278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.034259522 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.019792428 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02720255 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.02804552 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.026379539 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.019214035 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.021735542 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.028896538 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.02391311 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.021023863 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.036293909 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.028030296 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.019242417 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.033918231 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.019907542 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.030040106 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.019212839 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.022657837 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.024550978 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.022132405 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.029088571 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.035285526 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.018475397 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.020253161 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.035685798 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.021276712 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.021006021 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.026757795 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.035127482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.023777728 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.027541845 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030007946 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.030138346 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.172549532 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.029428211 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.019779288 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.027798522 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.021904111 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.031009226 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.019437372 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038958191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.01851885 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.035828956 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.02004194 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.031100053 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.019756446 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.028734642 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.019645358 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.038040648 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.020742481 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.019778062 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.030570649 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.017956455 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.028086715 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.018976599 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.023877208 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.02502209 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.027420196 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.020471743 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.027848406 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.020130559 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.027576254 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.023459276 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.027202999 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.027553205 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.022875103 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.017874297 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.026198228 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.029364066 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.026557505 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.020189847 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.020313613 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.019209889 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.02775733 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.02011467 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.019920761 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.026886712 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.023571685 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.024253977 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020088674 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.020445377 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.02042018 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.027219409 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.028688834 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03780932 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.02750567 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.026279185 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.027521918 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.018388273 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.03510759 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.018665402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.026801382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.017786682 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.025261088 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.027875439 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.018797182 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038414387 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.020003753 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.025827404 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.030222037 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027328582 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.022515668 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.037934898 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.021672188 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.026077761 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.026056299 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.022715355 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.025353667 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.020299649 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.02722206 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.028239444 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.028544979 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.019193473 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.025385062 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.026361082 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019751182 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.026755679 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.019855659 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.027152166 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.020435851 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.01796957 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.023178605 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030103951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.023472461 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.023570907 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.019102186 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.017806616 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.01884936 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.026171253 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.022837288 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.026772591 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034235166 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.017862733 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.019690083 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.018708715 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.022096181 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037800875 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.028307691 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.026696705 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.023145366 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.017718315 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.01961279 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.019853436 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.01858665 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.02124218 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.017322783 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.017984906 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.028731171 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.020803304 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.023077847 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019223529 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.020532776 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.029099592 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.023788997 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.019443468 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.025121574 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.018210654 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022580401 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.017087094 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.01945344 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.022132451 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.017755593 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.021916248 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.028000945 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.035491171 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.025457029 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.02727505 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.01992408 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.025904685 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.034590203 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.027805905 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019634792 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.02700637 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0179903 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.037291549 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.027837202 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027102094 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.028204458 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.01989721 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.037170395 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.023442169 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.028561357 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.034852081 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020256524 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.028309903 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.019355904 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.036154574 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.024015932 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.01928351 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.027380681 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.026146928 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.024523636 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.031472639 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.020238669 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.02725479 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.024864813 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.022517836 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.02123737 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.020912087 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.027083939 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.034480712 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.019955435 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.025461727 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.026440386 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.027152508 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.023784919 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032297541 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.028091018 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020647792 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.021462713 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.022729482 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.020297957 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.032501921 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.019911843 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.02367801 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.024178354 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.01949336 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.026337616 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.037204148 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.029018339 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.028806879 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.019194435 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.018359834 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.038243753 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.022265403 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.023081968 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0268756 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.029276861 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032484507 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.028932257 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.037447367 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.020034214 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.025271982 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032356247 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.020780457 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.019528885 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.023093423 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.02178265 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.029558274 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030303327 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.027457913 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022188875 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02704759 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.03337202 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.021327928 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.023869289 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.026691918 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.020906475 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.031098648 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.02823042 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.028888776 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.021860498 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.020007371 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.023375134 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.029532782 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.02777738 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.029133294 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.020872475 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.029358455 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.034176637 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.026455389 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.02321046 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.019007119 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.023150656 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.028595917 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.026974239 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.019072117 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.023142074 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.022492189 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.029174644 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.028707799 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.02378797 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.019433596 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.037555851 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.027350019 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.027239763 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.020870334 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.021360101 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.019455452 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.018928831 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030141223 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.01933785 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.021319967 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.023443306 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.021845345 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.039165028 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.027643319 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.036282907 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0207947 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.024005855 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.019756219 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.029480174 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.024322007 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.019705024 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.030491127 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.018998044 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.034894286 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.031164483 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.027948222 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.019139934 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.02354614 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.027741776 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.035397789 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029013547 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.027656914 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.0232612 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.028355132 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.170686614 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.028324525 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.017489845 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.016745133 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.027267158 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026731713 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.030157082 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.017611744 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.02744972 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.020390319 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.026724135 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.027032771 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0207209 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020680572 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.020341995 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028457632 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.023706913 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.028580482 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.023336365 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.035802908 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.019468317 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.02972247 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.027705217 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.029280745 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.033137021 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029802739 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.026358889 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.018688917 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.025375736 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.02620611 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.019251748 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.023035702 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.021010918 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039323339 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.019243449 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018975239 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031378516 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025580705 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.01810911 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.025211131 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.022747823 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.028373285 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.0195412 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.028775941 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.023898899 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.019608158 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.023299399 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.023193934 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.017953765 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.018286842 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.018373466 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028255829 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.022758144 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.018235496 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037532562 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.020124791 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.026920672 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029236545 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.025821943 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.019866064 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.017453086 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.018980364 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.032010188 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034627014 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.022031915 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.026462575 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.019725647 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.027519508 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.017546496 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.026786471 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.026595807 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.026907811 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.018147331 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018685352 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.033256445 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03430026 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.02251561 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.034471631 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.026581056 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.019952188 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.041668296 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.027512757 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.01942914 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.029319742 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.020120153 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.01766208 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.01711941 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01920689 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.029576041 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.018703689 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.020923569 seconds)
  done (took 17.120256891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061914478 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.019354331 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.018056755 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.018088884 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.025448132 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01951169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01806293 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.019398912 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019287749 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.020446322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.018283697 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018505574 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024580715 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.033853155 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.027205016 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02243863 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.018561182 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.020020692 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.018368324 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.019704844 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.024309897 seconds)
  done (took 1.360333999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.021240976 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.022453887 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021878694 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.022422404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02173217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.017949626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.021619938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018238294 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.022490666 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018800961 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.022360121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018372517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.018998155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.01911555 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.019116278 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.020714288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.023130236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022004325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.018181025 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.022669854 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.020250074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.021874525 seconds)
  done (took 1.296679605 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.019314415 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.018423032 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.026534697 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.017549709 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.017380668 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.020168607 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.017245587 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.021786694 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.022574134 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.022590422 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.027310949 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.019199718 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.01836737 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.02389241 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.017890132 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.018790393 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.064649778 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.01882802 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.018808167 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.018367757 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.020287964 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.026508045 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.018687635 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.019057449 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.022800869 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.021435288 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.018325374 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.021273509 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.01914788 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.022251055 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.019242527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.018133323 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.026965265 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.026254564 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.021811761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.022054469 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.019454156 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.019092068 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.018422018 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.018412162 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.026443747 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.019623572 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.017930615 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.01881329 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.02556714 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.017627367 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.017632577 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.026558745 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.017895154 seconds)
  done (took 1.915587593 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.03023033 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.074833476 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023882668 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.056656122 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.029238275 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.023598547 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.024277527 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060703139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.019227989 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.02013662 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.031227668 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.031258449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.02135384 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.022688704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.024976426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.020742807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.021418384 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.020121422 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.023661861 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.021047963 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.024043919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.025708274 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.0308702 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.031116818 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.022205182 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.020656727 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.021183159 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.022956276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.030958123 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.024145917 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.022680218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.023259295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.030758743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.022712313 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.019611288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.020647268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.031530988 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.021123959 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.020795381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.019305636 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.020348906 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.022438829 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.024962424 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.031532877 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.021572627 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.025928359 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.021009321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.018838866 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.031309559 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.021546938 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.025270095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.032265656 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.022397905 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.021861619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.023325491 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.03161528 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.021645606 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.020191106 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.021673782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.03051136 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.018790535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.021658516 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.031621905 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.020728289 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.024619892 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.031921146 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.025402222 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.022445659 seconds)
  done (took 2.768662331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026428757 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.054922138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.031377896 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.031733592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.026363469 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.026365238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.027208721 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.027492962 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.027685513 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.03051186 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.028217589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.178745281 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.024945012 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.029598223 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.027939187 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.028726666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.029167234 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.028682941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.028984481 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.028814637 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.028576125 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.032913839 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.028645102 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.033238557 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.03321348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.025156608 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.028363864 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.028692304 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.033687228 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.028694095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.032789843 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.028409039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.028805645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.033863194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.033029532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.028581592 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.019250942 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.028120859 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.028211334 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.028125918 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.024231432 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.033327893 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.028544986 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.025130611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.029226605 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.028870913 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.033300422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.032708711 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.029373701 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.030830577 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.028600168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.03411107 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.028910668 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.028943341 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.033690801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.036298802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.033656255 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.034077382 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.029064579 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.03457625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.03466943 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037334603 seconds)
  done (took 2.885951029 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.032338382 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.024360696 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.038544457 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.018372438 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.018545454 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02718257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.018277815 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.018133726 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.02465044 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.024546826 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.025997683 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.026398015 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.028176156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024831869 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.027202847 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02958154 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.027703238 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.027708727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.024885249 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.027963106 seconds)
  done (took 1.395118332 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.020328656 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.023119373 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.018405208 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.034139782 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.018862182 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.025653603 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.019027806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018999464 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.019220636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019137635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.024177325 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.024119766 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.019291103 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.027453657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.023494696 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.027090788 seconds)
  done (took 1.231069388 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.021950705 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.027749398 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.135269634 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.019462381 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.021784688 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.018955052 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.019911834 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.018988279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.021423712 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.032757723 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.019683102 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.021560112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.019887891 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.018462004 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.019103257 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.022072571 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.021121306 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.019838625 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.019900667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.137948539 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.027757822 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.019913499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.021166751 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.020026025 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.021526241 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.027877296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.021173611 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.021836501 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.019692723 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.022140133 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.021954148 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.030496686 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.021908933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.020561662 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.018872227 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.019892259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.020368076 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.022335598 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.022228177 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.020179376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.018685543 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.02188976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.02003595 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.020235341 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.021081012 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.022260384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.02118195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.029855182 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.019678984 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.022140792 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.020300136 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.021678186 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.020868136 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.031768313 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.022130377 seconds)
  done (took 2.300203606 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036417681 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.023299119 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.018287797 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.018157522 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.023291402 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.023654585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022973381 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022843186 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023838989 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.018578304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023915422 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.02264599 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023726607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.02339606 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023744624 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022620308 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.017476274 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022597948 seconds)
  done (took 1.287050249 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.025716722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0234234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.023945644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.019558282 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.019768508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.024574562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.01853933 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.01975152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019737823 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.02055879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02051752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.020397405 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02031643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.019924936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.023978108 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.019989122 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.020000681 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.018558404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.020338033 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.01856518 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.024461477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.018392197 seconds)
  done (took 1.317757661 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.199204644 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.158570775 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.043787231 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.038650375 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.028594084 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.056706324 seconds)
  done (took 1.379867499 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054320494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.059363104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.023381757 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023475942 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027522431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02568971 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025699507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025588773 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029009972 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031300455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026244412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029775235 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029545251 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030476021 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027571897 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027747366 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026526509 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026480395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023501232 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.033757707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025318692 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02878773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025809491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02581774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024938126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030953085 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029490391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03228257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026157342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029670377 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028065745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026516169 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029020192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.031572163 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022956921 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029633855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026386973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034333294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02832696 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031129255 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.023025292 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028255126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030420795 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.030004402 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030147878 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027176438 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030226834 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027181289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027374712 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.038456136 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028392632 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.03237671 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028395885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029906509 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030010489 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.038389386 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032892657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032008399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029058503 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.033499426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.032578202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029307179 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032802925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.033793874 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028950878 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.03254977 seconds)
  done (took 2.847285209 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061885687 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02245714 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025100892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.030285459 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02964537 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025479303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026146898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026142989 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025861664 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022603684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064854502 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026159023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030624907 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030513825 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025572594 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025675635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025950902 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.030290288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023095979 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.036927874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026025316 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03108329 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030731976 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031486749 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.032042062 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027915173 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02591564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025942257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025747893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026425343 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02937695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026644335 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.031777399 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.024137107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031942898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.027083365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02641983 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030069664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026585733 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027637658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.031434086 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034334532 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152168572 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.026445349 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032498556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026362877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026306367 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022754677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025633289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023119395 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032534439 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.032441031 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.03203397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030704099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026507487 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.026711606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026432314 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02631319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026238772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.028153516 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031389005 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026236666 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037619608 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025241505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025498147 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.032009917 seconds)
  done (took 2.925117506 seconds)
done (took 58.440074928 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213171897 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174179895 seconds)
  done (took 1.255804369 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.143458735 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.1448453 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.172049522 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.026636704 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.08681502 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.167335184 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.128285331 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026575585 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.02695703 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.029052505 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.027128045 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.027753904 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.02779997 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.02619075 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.087089459 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026854721 seconds)
  done (took 2.046596076 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.056648908 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255487502 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058546704 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.025228597 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.085017094 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.031997543 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.027169482 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.03192466 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.031918663 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.025721985 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.058693079 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.040481529 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.031570732 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.032512213 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.027330151 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.030502294 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.031171125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.031552812 seconds)
  done (took 1.796712509 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.080175454 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.036959593 seconds)
  done (took 0.990480082 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.132112172 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.064908394 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.109834594 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319148675 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.098085998 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.103137699 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.106007238 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.103269108 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069709711 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.098144634 seconds)
  done (took 2.062348821 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.062359668 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.061648318 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.289377108 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.061260849 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.038661479 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.03266114 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.032518928 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.03445957 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.033673813 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.032198959 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080479193 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.030450316 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.02687129 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.078286877 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.055020557 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.067036075 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.02593771 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.033351732 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.037197036 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.026928389 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.031523557 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.034125859 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141899584 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.033768603 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.057132796 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.031811983 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.033713192 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.034005344 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.033357187 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.034551395 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.035140931 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.059101516 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.033632311 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.040177868 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.032002923 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.054316577 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.027579481 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.054857008 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.029855938 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.026937384 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.031095951 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.035369144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.028436362 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.034739015 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.033996896 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.033643551 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.035480779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.027974017 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.033669411 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.031328331 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.027910782 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.032894327 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.033041121 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.033592341 seconds)
  done (took 3.34428575 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.074412278 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.061519632 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.026660474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.070894576 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062011306 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.027540784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082298293 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.057265652 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079397785 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.027082604 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.026558778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.025987438 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.033238839 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.037415842 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.072852736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.065044473 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.027951435 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.027238334 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.065603947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.065896126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026250806 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084091659 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071097562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.06426066 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.026072152 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02772764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02552244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.026139563 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.035351742 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.034679497 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.026353497 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.038010137 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.038924962 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.034364549 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02480993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.025390285 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025742034 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.035167864 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.036339016 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.036502237 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.03208147 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024124504 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.025292183 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.026741806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.027379585 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025807906 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.036475141 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.034131716 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.035601898 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02501854 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024870213 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.025856644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02569247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.033354889 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.03254955 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.034042477 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03743732 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025907351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025700027 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.027157506 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.037256839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034682745 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.034443519 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026820367 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.035775859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.024931466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036846949 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.039532974 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.025484952 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.026731129 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.025980297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.025925153 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.026600902 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.032523112 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.033199341 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02662071 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.026318022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025929243 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.035616658 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.033865936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.026366988 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.036508109 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.026330644 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.026619893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.026949298 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.027070798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.037079676 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.035806516 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.027063036 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.026623475 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.026126713 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026058258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.025902375 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.036065517 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.035698285 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.035144946 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.036993882 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.026256697 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.038825497 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.036168482 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.026756824 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.035205626 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.027180812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02740937 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.027411528 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.034976685 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.034598353 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03709442 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.026844385 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.026930516 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.036598726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03947469 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.027607881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.035236055 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.038375659 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.03574548 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.026599173 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.039262621 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02710209 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.037936272 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025798607 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.036786626 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.025524233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.035235746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.026915159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.026257562 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.026273653 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.038439554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.026584752 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.026151116 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.026752835 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.026492918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.035816715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.039435305 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.027169025 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036314431 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.036332961 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.027219205 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.038131191 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02676992 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.03816831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.027036805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.027393998 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026228476 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.040326367 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.026449136 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.027000396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.026516992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.037727486 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.027117425 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038571605 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.034737323 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.026201134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.038020009 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.037413461 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.034823411 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0387853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.027929963 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.026632032 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.026612051 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.026838873 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.037825186 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.039143068 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.027230021 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.027099254 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.03491328 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.038831202 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.026471464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.034822187 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.034828425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.035437712 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.026588149 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.026798666 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.039697894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.040387487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.035207071 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.038419663 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03594519 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.026445588 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.035167333 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.039018405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.026606671 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.041949695 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.026673673 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.039794613 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.038627098 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.03433812 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03902281 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.040019605 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.038955847 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.037865817 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.040268332 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.027085948 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.027580262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.036242415 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.027098201 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.026377403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.034725404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.027344754 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.028153756 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.042474166 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.026985366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.038637165 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.026575697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.036503737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.026884407 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.027944914 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.041732406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.027543983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.028311289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.03640994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.027431223 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.035011609 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037987302 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.034520908 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.026355411 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.027356631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.039147816 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.038802076 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02745547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02697385 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.02732111 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.038477567 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.037763772 seconds)
  done (took 8.502125947 seconds)
done (took 20.874151859 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.162268803 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.078194402 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.15716184 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.093358528 seconds)
  done (took 1.365566091 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.061045741 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.022372828 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.155906453 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.16839252 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.022765057 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.150149196 seconds)
  done (took 1.480335568 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.222902951 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.147331296 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.156548328 seconds)
  done (took 1.432793905 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.145716675 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.296482047 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.556412235 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.13639726 seconds)
  done (took 2.038867354 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.188934743 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177957839 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.035062665 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194575363 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.042884042 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.019426326 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.108268736 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.025584179 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.057993626 seconds)
  done (took 1.80209165 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.100665123 seconds)
done (took 9.243644404 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.176874018 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.14956981 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.038321565 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.030881191 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.132726084 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.141206944 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.136156563 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.032865515 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.122556623 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.30141607 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.163989289 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.053904561 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.168658167 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.050586015 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.26347273 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.03522752 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.033155952 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.028218474 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.158951862 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.124148162 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.251576221 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.031408315 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.101603569 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.033239515 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.116329596 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.086898973 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.168157079 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.314412946 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.293356669 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.034051538 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.126657549 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.04514378 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.130662726 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.132317956 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.14543797 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.053746094 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.022298773 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.259050322 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.104664782 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.31173222 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.161716831 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.028324165 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.151155246 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.027932868 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.021612193 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.151275706 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.036461643 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.028793521 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.048942086 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.028883821 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042128886 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028816394 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.143485551 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.025858059 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.100704298 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.149628261 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.163414485 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.106815231 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.028564822 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.040889249 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.031985756 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.16539668 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.040538506 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.028408415 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.034983502 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.022179642 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.147408368 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.043259156 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.023049545 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.033506762 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.031733613 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.098271466 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.167132098 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.071432381 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.035717971 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.114840564 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.103971066 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.05241323 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.052898962 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.033018513 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.021628371 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.180658221 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.028066209 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.041997256 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.029618849 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.058269047 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.022253974 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.038143215 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.169502554 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.158659385 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.093054933 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.023054994 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.241166079 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.024378307 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.207212842 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.023211022 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.022457734 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.165437612 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.022005855 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.022140135 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031966422 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.03109505 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.023269787 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.161042799 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.115667225 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.030960437 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.029754599 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.022219221 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.028334832 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.023183596 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.022463635 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.022714797 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.102731582 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.02936299 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.020634167 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.11447948 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.125732104 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.032736324 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.04152458 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.091598638 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.025971308 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.032076008 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.029439723 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.130767379 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.030699041 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.135435305 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.023656585 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.045650758 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.115278533 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.100749316 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.112059296 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.021350577 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.162576355 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.033660033 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.021481851 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.029974545 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.053141823 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.033022655 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.029818693 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.0312937 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.160289257 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031183788 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.027666071 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.115071207 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.020993749 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.108108326 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.1032429 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.12867673 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.027067353 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.032071804 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.103768131 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.048793284 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.054357468 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.04530667 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.026731308 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.022277528 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.02137404 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.028289404 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.020523822 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.021992793 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.03722278 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.028752109 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.021871802 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.245661055 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.033584182 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.027778176 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.276601178 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.035610604 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.090655187 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.045814363 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.022207263 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.114604264 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.023779544 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.044148403 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.091872726 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.022251773 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.10536372 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.022620368 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.022987102 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.031270402 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.024623013 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.031915811 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.03675648 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.021850212 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.036136099 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.029203182 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.022010843 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.1178992 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.024896587 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.166506643 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.114897516 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.092896888 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.021955417 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.042516096 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.022019469 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.135427807 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.022149748 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.076820689 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.129252547 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.040798895 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.04433315 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.023702446 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.103412743 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.039342492 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.022187287 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.110876092 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.125286302 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.091194521 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.03124973 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.251465219 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.032588042 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.022961512 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.029192253 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.031235943 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.022638319 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.102752623 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.027531224 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.02138626 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.021688539 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.02429549 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.021193458 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.049576025 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.021179973 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.029709393 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.021261212 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.024212884 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.023250147 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.020782991 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.030351766 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.104881162 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.128855512 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.029248556 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.044868777 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.036389118 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.033882527 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.074001412 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.030275229 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.152024576 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.021042259 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.031701761 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.046838342 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.022219341 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.028016096 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.022799923 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.043521844 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.025776848 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.023879189 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.032199028 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.02300106 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.023237765 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.022461651 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.023137671 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.032031023 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.024455483 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.022177048 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.022153548 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.022766994 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.027719007 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.028163773 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.033855949 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.044185353 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.478852708 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.024955227 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.025087642 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.02265791 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.02266069 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.023261016 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.024611097 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.022334797 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.024107047 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.021795967 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.02128038 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.054077708 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.027782597 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.023311639 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.046923624 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.022939333 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.033368862 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.129610447 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.040903386 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.027685216 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.021293552 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.280447354 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.094915795 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.047585067 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.046141727 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.194482976 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.035834643 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.023355344 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.023047607 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.021972592 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.053680828 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.027543543 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.023080438 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.020736109 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.021659612 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.075055339 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.031499801 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.021950176 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.031211739 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.022277277 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.022106244 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.052848675 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.023602928 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.02188164 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.043079957 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.036252392 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.086097045 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.035369793 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.025274436 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.077497641 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.021029044 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.02188355 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.022747688 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.107577255 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.034589334 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022879366 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.021986887 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.030384671 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.031196249 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.078686603 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.02906274 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.025699094 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.03010103 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.020620478 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.022380034 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.050512539 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.052354407 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021746633 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.024670958 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020264378 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.021085998 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.099627407 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.029888051 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.026264011 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.096410923 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.023333095 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.029763607 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.020185235 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.476250083 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.026074097 seconds)
  done (took 23.378408895 seconds)
done (took 24.279523901 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.175078564 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.038334101 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.031708491 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.025982043 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.034954848 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.035779353 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.037674468 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.032002789 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.030668396 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.029847461 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.152232155 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.021909939 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.030184627 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.038265568 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.027131811 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.040357586 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.03588065 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.038551887 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.022300915 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.039709543 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.034007852 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031038767 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.027892062 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.039986606 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.023173971 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.027075584 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167880469 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.042581682 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.026399798 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.033361694 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.031373524 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.038144569 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.030638537 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.029593729 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.032160548 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.02815389 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029995299 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.02396062 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168448589 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.029569746 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.023347175 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.037590288 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.031426473 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027198574 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028539653 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.03626869 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.028793081 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.044302462 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.02219299 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.031255065 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169570653 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027591979 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.026641045 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.027718276 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.028070024 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.032179384 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.02648568 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.03581616 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.029062455 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.036746046 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.031414826 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.026967057 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.022348116 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.031806353 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.030441772 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.029880288 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.020256913 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.026653324 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.021401575 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.021313945 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.020917257 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.031334744 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.030057027 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.027496894 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.020875892 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.021438982 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.021000209 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.035423501 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.030328035 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.032201557 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.022800653 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.028281426 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.02702133 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.022042974 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.026725566 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.034890755 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.021738954 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.023006508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.021540422 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.030371477 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.02578269 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.022788474 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.035539849 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027974025 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027307341 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.02228486 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.021744192 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.027133186 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.026063837 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.02174058 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.020363462 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.026653527 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.027697808 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.031088162 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.022558296 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027656107 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02741267 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.02132224 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.031791198 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.031005735 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.030074425 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.031158276 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.032415998 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.030489542 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.02243479 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.020993643 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.026826219 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.022527953 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.026484603 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.025244499 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.028801169 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.026969621 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.02297668 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.021586721 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028213227 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.024781489 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.022892654 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.023044089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.022851063 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.031487356 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.030662793 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.020789704 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.021952613 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.032398552 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.031434312 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.021430739 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.020508395 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.030705277 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.022168749 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.024066084 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.027721923 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.03196223 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.02234371 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.022649104 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.021145209 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.02147862 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.021380998 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.028154779 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.026973125 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.022293834 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.031000015 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.029468798 seconds)
done (took 5.996077863 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.036537331 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.06875135 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.190416096 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151780764 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.036825321 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.023698183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.027699073 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.044633481 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026390212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.050781099 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0515018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.047206122 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.173958896 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.021010153 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.022074832 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.023179936 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020359547 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.035698345 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155800676 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.049802199 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.069645352 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.021867227 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.040469269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.045617561 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.037027242 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.043597903 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.023807467 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.02394092 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.026153463 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.041277282 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.051980263 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022059235 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.023515078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.043267241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.041025619 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0327322 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.023712109 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.031098087 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.023892775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.02257505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.025340565 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.042762144 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.031167723 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.031385904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.02444277 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.023901875 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.023627822 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.031858365 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.038902132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.03004305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.036684884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.041110174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.025425014 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.023547518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.021087897 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.030950678 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.022185256 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.023024607 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.022713602 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020906993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.021901813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.025628724 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.02864284 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.034086354 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.027086033 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.030918572 seconds)
  done (took 3.671109423 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.040084643 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.05362468 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.037841073 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.039286674 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.022377726 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.023643894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.023838553 seconds)
  done (took 1.260231091 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064173574 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147310267 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.156773693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.156696593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.16997141 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.153892143 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.036334984 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.05633675 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.022084085 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167712346 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.166191515 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.162765613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.027083992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.036450381 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.05651745 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.160313917 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.037325016 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.031123434 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151609759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.163188678 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.029345539 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.058337216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.03631071 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.024427302 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.157611862 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149040171 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.027402566 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.024066016 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.026230958 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.022881351 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022336821 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.045482197 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147961137 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.039444392 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024091949 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.022503541 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.146000108 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024175219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.147215365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.029876138 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.147584394 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.026186663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.026085208 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.02366252 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0249903 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.153892127 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.025243307 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.023593649 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.022096131 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.153386579 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.023155404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150806644 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.026282184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.029166538 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.030662957 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.031679412 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.031725406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.024622125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.155166474 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.034726769 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.025409293 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.160791397 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.161791648 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.153642057 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162616317 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.032523928 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.155103679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.150779678 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.023675437 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.031592305 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.024206867 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.164076287 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.02782742 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.026192446 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.029690249 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.03141995 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170253693 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.16875669 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.169775125 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.038862813 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.026556004 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.023502345 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.166244846 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.169119572 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02924566 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023312187 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.024781208 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.04238339 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046070289 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.026442672 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.028951406 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.024193259 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.035422819 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.02610194 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.026738892 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.162164429 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.024024011 seconds)
  done (took 8.3144605 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.02936566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.023997174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.023831132 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.02468381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02476527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.024473766 seconds)
  done (took 1.272022796 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.050453747 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.024236832 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.038510151 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.02509089 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.049447158 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.15605056 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.155149524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026049109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.042584963 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.036958387 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.155135925 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.157800128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.156558921 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.025056415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.154643759 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.036830941 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.156239758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.030301378 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.037686752 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026335768 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.039048768 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.024816534 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.025993141 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.166203428 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0266751 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.036118827 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.034646235 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.036702253 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.036615576 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.025592983 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.025350297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.026034567 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031868098 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.025334813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.155875037 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.032341411 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.024940622 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.028482802 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026727792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.026720654 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.158938807 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.026031923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.029825383 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0290264 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.025259868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031629009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.028811962 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.028314788 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.154833682 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.02897447 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.029586115 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.025948058 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0272939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.029388793 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.031985812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.026082982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.028747514 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.156721466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.025925429 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.032312948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.024089356 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.025828683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025920331 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.027084695 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.029808038 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.028172289 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.031667263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.025474281 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.025685869 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.024203617 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.028711788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.024509649 seconds)
  done (took 4.701990863 seconds)
done (took 20.249452602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515078347 seconds)
  done (took 1.542246079 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.055583915 seconds)
  done (took 2.120920872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.055072222 seconds)
  done (took 1.116096166 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.29095308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.389657503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712522973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.08190825 seconds)
  done (took 2.516913634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.858232063 seconds)
  done (took 1.917890773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.194824082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.163854319 seconds)
  done (took 1.44469629 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.488640572 seconds)
  done (took 1.536158663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.536024107 seconds)
  done (took 2.586596607 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.196956587 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.134196644 seconds)
  done (took 1.388468785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649973948 seconds)
  done (took 1.708271513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.962008447 seconds)
  done (took 6.021997882 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.183733254 seconds)
  done (took 1.323221342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.194784453 seconds)
  done (took 1.267608439 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.690185107 seconds)
  done (took 1.74382196 seconds)
done (took 29.303797895 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.042086215 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.040164359 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.040168312 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034799764 seconds)
  done (took 1.225116166 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031933811 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.02803894 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.030252167 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.031120209 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.026960154 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.029449286 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.031657558 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.027294095 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02800623 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.027395262 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.025382466 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.027632502 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.029927216 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.026813529 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.029260867 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.031131689 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.027388623 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.026937582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.027693325 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.026123687 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.029176993 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.02638483 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.026006281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.027686247 seconds)
  done (took 1.754844349 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.03481835 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.027879006 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.033046903 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.027864179 seconds)
  done (took 1.197999673 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.034304695 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.03452173 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.043181991 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.047866678 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.034210358 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.034489945 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.042363913 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.042294292 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.04879056 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.044885905 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.024879552 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.024003734 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.02326912 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.04267674 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.04062198 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.01893839 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.020376327 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.034404005 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.034237586 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.037246878 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.027235997 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.022501152 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.035022418 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.035583881 seconds)
  done (took 1.869832741 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.039511788 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.021546868 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.040053448 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.050715235 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.051441053 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.022173241 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.037651623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.05206779 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.091263392 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.021311076 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.028036757 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.02115589 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.064090138 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.021892271 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.038930448 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.071378133 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.074808279 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.027211309 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051405233 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.022922062 seconds)
  done (took 1.934884087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028511734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.026187712 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025229814 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.022062872 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.032970226 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.029707124 seconds)
  done (took 1.244510307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.02461427 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.024587801 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.023476634 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.029843303 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.024165251 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.023760868 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.024682909 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.022829985 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.022706595 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.023692578 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.023673842 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.024053436 seconds)
  done (took 1.369246251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165848914 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.029508744 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.027578683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.022383149 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.02417552 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.023031947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.038681633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.025635372 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.042745507 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.023735816 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.02360876 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.02627172 seconds)
  done (took 1.535330495 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063603727 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071372508 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103923256 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073666133 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076012131 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054908011 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.211957581 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.035995715 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.126218828 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096935901 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079950852 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.051325634 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039962487 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.026348206 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.05971902 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079036661 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103070602 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028648828 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074791914 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.260111074 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095566565 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098928533 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111697137 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079305209 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.052694204 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111803768 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056036408 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062363709 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083849938 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088475869 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081965723 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.059909546 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025431829 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.028434564 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113828579 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.067803159 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082718337 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.051640809 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062086006 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.047705208 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070376018 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.027274468 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.04048449 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.071352643 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044053375 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095067722 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.050994043 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077193874 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038862597 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094957301 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087973559 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.188782389 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045276372 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066811998 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109612178 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.076936381 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10437272 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070656508 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.042574217 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.228206636 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.065751276 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06052731 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06782821 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037254887 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133188276 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.046310646 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.074270805 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070075771 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.054108586 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053342084 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065545691 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088495423 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086922092 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.087104117 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093424081 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.051423254 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081386883 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.059652907 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.084023699 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062312493 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.030374034 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.084762373 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08881192 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058943819 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060943917 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09146704 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.051948087 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033492545 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.061915803 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.07130694 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038296522 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.075871771 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039342214 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.072928724 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097941126 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057539482 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072292896 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.081310395 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.03669346 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121952412 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.069192903 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028598853 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078940886 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07146369 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112320884 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058047755 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.035156292 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059449449 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064605499 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.118110739 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072291709 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.039562577 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073851887 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107776703 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053841638 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.272571 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056462309 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103023252 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075233315 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045166364 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.032513321 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.049509928 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.228674904 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066321595 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071516546 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045899135 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.040887027 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044985485 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068659892 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049447943 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037812455 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074578424 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.063361984 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.031438623 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045194505 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.033747025 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101762853 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.036780245 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096514567 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085122015 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.031742007 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064263497 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.054694543 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064354594 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.058270265 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079888992 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100502631 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.151009179 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04882787 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.052440495 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066144091 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104994702 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088908437 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.047531517 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.034879692 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058325951 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069351772 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.059235 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090636384 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.054858611 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070313413 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06588331 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103539231 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109398754 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058081814 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061704441 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07186716 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.083537733 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031901723 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117751577 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063368183 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082692899 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04037114 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104301755 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.072611818 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050340547 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.045920417 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.060583672 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.065523154 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067771941 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109418805 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.057143391 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.031336123 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056311762 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105759408 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035969704 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074881902 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.052812127 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.054397058 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082742247 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.05801926 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042355015 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.025634386 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.25159983 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10900611 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.026009889 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073306761 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.065580713 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.060872076 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.082396162 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.026218133 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075924044 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.091777141 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075510222 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102528877 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146601197 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075849892 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07689628 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.075907047 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067436013 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.038157997 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.083700978 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092880751 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053949397 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049828421 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095225981 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079618038 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.097970387 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.081108593 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076219086 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.068022267 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.067977551 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064746147 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.065938211 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106830299 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083000147 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.079185855 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.041886615 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067140456 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080517455 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099894876 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.039413824 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106309519 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.04384068 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.080162159 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.035532891 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086877466 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.033757616 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.132844198 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.039256043 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05989588 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.027543839 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.033585136 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106922283 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.079260296 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073124365 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065819466 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.102548585 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094267916 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.035582933 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070518199 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.079089135 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.064865497 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.238881555 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.068968977 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.048750225 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053433978 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069210849 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.042822623 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.037811034 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077376263 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053184665 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085652013 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.042037498 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028097602 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093528795 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063412971 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053012416 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033319611 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065188243 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.083485783 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.052211347 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043311692 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074910117 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062318599 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101070158 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.049850804 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.058502562 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075237473 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.038731917 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.050976116 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.025067474 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.043118027 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.034169429 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083532169 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033019948 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076055 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.026660357 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091685887 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04790762 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.054330834 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.066089806 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073827544 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092647207 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055149872 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097333189 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04880639 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083473231 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067727992 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054099147 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045769279 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062432111 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.061237205 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085215453 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.054818948 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084439373 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108186768 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063867533 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.104738106 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048090233 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084203804 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066579265 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.089047055 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074348988 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157242775 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105469203 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077022116 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074277477 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.033260418 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05799033 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071012512 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073558398 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.297160713 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084041895 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026223792 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.065502356 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.054805121 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069772463 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063872111 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040694253 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102751228 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062372417 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.046682742 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07136177 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.048246928 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059432212 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0323512 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059698181 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.057869 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053434566 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053236762 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074442787 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079687888 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073986082 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095805455 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.061582847 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.050602381 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.075482167 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070299313 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06821877 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037313479 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038902059 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088431881 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077653806 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.075902668 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054859372 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069204583 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073227336 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060840802 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088193071 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068966598 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.086302774 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037309961 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.034495653 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.024760285 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026223875 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075998006 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069762062 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069436658 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058596176 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026175046 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.063799819 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063879689 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028779108 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045466674 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054087306 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057971572 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.051582178 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069479602 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.074791792 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.056219642 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065707018 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059515249 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105153767 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.057891003 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050292816 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109106853 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110431592 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049309836 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05546136 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.029029768 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.038198254 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078548242 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1105402 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.268898336 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.035390071 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044372698 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.043695316 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044361619 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.028543686 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.046175992 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.047918847 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060873845 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.056106489 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.062939883 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060378017 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031451971 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062192719 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058201755 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049012437 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.066090455 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079045071 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.085047952 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.095120885 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071588809 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066447263 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032615733 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.037468096 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033540782 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037739978 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060776515 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.035969896 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032897913 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094786063 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.047030144 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066590793 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0687422 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046449866 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032634894 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093601351 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.026001159 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094303362 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.024482288 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.040266622 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036536216 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031826733 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054011311 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105527534 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072332674 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07484829 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067582725 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067100176 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146905787 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121660389 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040670257 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.101953176 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032766622 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033593946 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.033844459 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071071551 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049389281 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.075665906 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107041636 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049497055 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057893537 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036313603 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101125166 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.064623296 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063626874 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040330844 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.037015576 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101563454 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.037948022 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042654759 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.048655912 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074360159 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.027099378 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064821387 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.042801811 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039234515 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.303496439 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.665872402 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048441319 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.03136912 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053390641 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09956909 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086885927 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055696451 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06829189 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.07619205 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058531962 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051291158 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067415223 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.151799072 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026171553 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052180077 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.061132917 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057531803 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061030036 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.052654564 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.043661354 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.051482161 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.045166554 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036995424 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067723509 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04721977 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055852814 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.066687611 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.040184642 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.047018595 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089246274 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.061809822 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.040516969 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045859702 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.062487837 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045771064 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05868391 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.026354126 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071671287 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047640896 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080863036 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.059583476 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070937765 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0801914 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048277864 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102437397 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.07190486 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085850511 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.046071018 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.034798714 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087764952 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.050069214 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032000661 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111973139 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.057906933 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.065487808 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066486845 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.056823004 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075781239 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.07971271 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07169144 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058903047 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033205162 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066316232 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.069155897 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.049317883 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039497477 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.034125817 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.035131991 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07091664 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.048575173 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.040961824 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080069279 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.051146713 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.218765439 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.059535644 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083957105 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.04147822 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062912357 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073125954 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050903904 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069324544 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060409946 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086564377 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130314324 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083259869 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08139966 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093573604 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.035488361 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033021457 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.025473463 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.347226894 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.036950483 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.043263832 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.035854278 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091158621 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.042793223 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.07099167 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.215168316 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.038930576 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053941775 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056028112 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.026712861 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.040934878 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065757113 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.045620382 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037567356 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071760767 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.039490446 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.08116025 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071615506 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059755072 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.055573674 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03828321 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072549547 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.06330741 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.095716062 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.055128537 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.033899276 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076377845 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.064796309 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094298987 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.031112438 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.038525031 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090598505 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06388267 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096195609 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.039611203 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118325785 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09973872 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061626595 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096206542 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.02844642 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042317333 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.048491345 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.085116691 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044252585 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070498085 seconds)
  done (took 43.616150437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150888241 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.145732593 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079208709 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.092497735 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.250959088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.254767829 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.107946695 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.080614185 seconds)
  done (took 2.416484776 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.026103916 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.042038469 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.040142016 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.307312431 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.059704458 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.023911431 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.029170055 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.040517561 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.02377727 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.022948709 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059628477 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.022986325 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.024300046 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.459227453 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.022713436 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.029122644 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.024115433 seconds)
  done (took 2.493249766 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.314871618 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.725429262 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.351778648 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.49400112 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103089544 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.563934509 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.02769645 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.035396111 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634703492 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.38707399 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097607053 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180493255 seconds)
  done (took 18.130229477 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.029389839 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.166221555 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.164021644 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.027479231 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027616661 seconds)
  done (took 1.700789018 seconds)
done (took 81.64029179 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.034839368 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.140153743 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.024022886 seconds)
  done (took 1.429095123 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.165336652 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.165272318 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.165447573 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.168646681 seconds)
  done (took 1.875161373 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.032388756 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.034717356 seconds)
  done (took 1.29765651 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.210265161 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.26459648 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.048303349 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.04086837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.03722314 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.038759272 seconds)
  done (took 1.34309577 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027242693 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.02742501 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.027940717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.028068857 seconds)
  done (took 1.332476763 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.145976659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.02206765 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.024562358 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.026889754 seconds)
  done (took 1.458769939 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.043696693 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.046023377 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.075178911 seconds)
  done (took 1.392973035 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040567535 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.035411231 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.035434953 seconds)
  done (took 1.327914348 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.060828978 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.05390875 seconds)
  done (took 1.33190851 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.038780508 seconds)
  done (took 1.259034401 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.051782496 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.059132878 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.23386571 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.202098562 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.238585093 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.223348918 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.033019197 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.03344825 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.030276648 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.029064283 seconds)
  done (took 2.346415516 seconds)
done (took 18.175656237 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.037444615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.153547159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.272502415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.043789435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.615464206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.269611408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.686868446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.049430135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.061376194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.024867368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.040873053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.58929105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.690188821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.105077734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.670197349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.099759208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.764530259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.026123819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024986052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025537681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.663957459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.024786183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.024669149 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025195416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.762443162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.414716616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026247442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.096762231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024603018 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.02878787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.396355971 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.02615979 seconds)
  done (took 12.983820098 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.027306305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.087225549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.030914265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.040593721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.027730524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.027638787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.029510105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.026172385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.074326953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025084577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.041369183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.024276391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.029229139 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.025611108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.044797172 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.025175583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027741587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.025718803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.024491619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025784966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.043186461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02459526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02559078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.025101341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.024745546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.040884758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.026602157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.025333112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.025777547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.029930141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.03114897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.027329046 seconds)
  done (took 2.27161488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084085698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.085705235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.029928452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.066737728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.083268385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.026588814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.11534926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.049400854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.076776713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.025863721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.04241611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.025613649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06647365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.026735396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.045388325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.025359579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.027905812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.026204931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.025285054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.025942016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.043588417 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02546274 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.026071339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.026792248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.026099519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.042975668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.025314417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.024146368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022795985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.027867323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.030575433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.026375027 seconds)
  done (took 2.57163492 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025642801 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.028459545 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.035975063 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.040411796 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.023436564 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.025680922 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.027109546 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.023224243 seconds)
  done (took 1.466782509 seconds)
done (took 20.51434154 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.039322947 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.025518614 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.028917321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.038832772 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.032034481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.156524642 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.021343273 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.032151622 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.028238378 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.029154131 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.030217629 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.022494042 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.027422525 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.021206026 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.029086781 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.02259438 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.157248634 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.027524553 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.15538808 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.158844003 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.025813938 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.029456167 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.033383391 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.158190032 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.160196618 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.161834875 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.033388167 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.030385213 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.023936957 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.027191007 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.154938705 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.157972132 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.026277523 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.152850982 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.023445273 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.023010801 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.027923173 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.024836095 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.163384622 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.033858579 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.026666544 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.03360179 seconds)
  done (took 3.836977653 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.157572625 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.166463357 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.16272035 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.034759839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.031326407 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.034618387 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.168934315 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.031317945 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.031999579 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.168516976 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.026156169 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.029850976 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.032495308 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.023586816 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.029963835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.027442569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.031624384 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.025365926 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.029199733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.029403269 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.167800177 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.024467932 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.032198827 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.030978311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.026174 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.032626256 seconds)
  done (took 2.841719397 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.03189611 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.044326912 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0526454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086373431 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.053386928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.037719564 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.042238563 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.044070832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.047584904 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.023633534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044788953 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050377893 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.053191388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.030967005 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.050170253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.041427584 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.039220321 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.026431136 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.031983765 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.060530068 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.045459294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.041246794 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.052793949 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.042925897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.023093812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034851426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.03158104 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.042182502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032328766 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.038002719 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.028079355 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.027363417 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.024431952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.037067371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.028603891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.022333394 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.04610528 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037121294 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.037117759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.05080841 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.03620996 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.026355902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.056503466 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.100949871 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.024218206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.027539534 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.030130228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.038779729 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.026221753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049991449 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.041413604 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.02263388 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.041303945 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.026205178 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.026073136 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.043212004 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.026197361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.026373162 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.037662394 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.031358547 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043601282 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.030582119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.045837009 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.023392325 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.035997289 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.025115095 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.025127798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.021779073 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.059920909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.032855972 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.078092375 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.02564372 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.022451997 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.038340033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.037578313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.033287693 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.024551728 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.046914755 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.039103801 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.028326579 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.036453859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.027202453 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.027472892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.051521472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.022955789 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.021324321 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.021413129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.026955231 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.027684048 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.024925072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.038258319 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.023143154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.027176581 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.039289238 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.023328375 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.024286566 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.027078171 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.02589462 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.023594915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.036187159 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.028330249 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.02544976 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.03843101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.025330243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.027169749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.040854127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.034959896 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.023336378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.025031541 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.025783289 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.024558786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.028978847 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.027003474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.025979978 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.029428035 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0327909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.030837437 seconds)
  done (took 5.392171636 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.26082022 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.249342059 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.024700799 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.246293682 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.034022631 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.174584789 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.248391847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.257158797 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.025767652 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.026429572 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.024204543 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18713643 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183773147 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194594036 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.175639515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.027521195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.047764118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.198631977 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251866513 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.247891923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.043875136 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.036693402 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.027666309 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.026274351 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.025544115 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.036010099 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.045073328 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.035633694 seconds)
  done (took 4.620238545 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031999355 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.067906222 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.027858627 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.049981036 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.043379308 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.025058828 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.02691289 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.026119298 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.040280962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.030810098 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.024871028 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.029221041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.028266304 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.027086834 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.025881789 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.032845506 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.032104113 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.033561639 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.024430129 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.02896511 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.036912793 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.052401878 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.029858722 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.025484434 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.02918425 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.025238333 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.029972169 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.034058256 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.024508495 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.02447947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.021569496 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.029625483 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.040680569 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.025946902 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.024118137 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.024776374 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.024617617 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.025067683 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.025039044 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.022927288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.023059238 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.030027422 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.023175677 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.029558823 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.032523163 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.026901196 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.026419609 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.027377304 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.027837766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.02112757 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.028427537 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.027719901 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.027609268 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.033550479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.028517711 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.028663253 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.026880206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.042674533 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.030341039 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.024535742 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.024497213 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.023546183 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.027236104 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.031262565 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.035404873 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.026361521 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.02337682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.025621202 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.026814406 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.033538233 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.024427194 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.031686217 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.022061135 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.025258404 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.027843558 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.028525866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.026535926 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.022685944 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.023764996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.024549791 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.023873279 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.023738855 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.022550223 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.026421267 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.021159358 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.022588209 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.025158393 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.026637284 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.030678982 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.024009205 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.028247513 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.026435341 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.02328182 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.027559758 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.030850546 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.028777617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.048373526 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.033811225 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.026048222 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.022756191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.040926115 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.026403591 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.024217438 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.026780712 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.029112387 seconds)
  done (took 4.322284957 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.054094014 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02666194 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041499491 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.056552716 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.036592873 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.032337632 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.040735442 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.027331789 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.050084253 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.024769983 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.035671591 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.024060026 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.039866069 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.034792141 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.026181805 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.035117896 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.026779766 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.044223175 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.040376018 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.02363684 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.034099146 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.037936113 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.038274197 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040797385 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039940085 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040742852 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.037355221 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.027960296 seconds)
  done (took 2.289920389 seconds)
done (took 24.546246359 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.30801115 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.495108139 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.265592209 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.062718031 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.343856149 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.279175874 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.395727008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.256942974 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.748566565 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.347102126 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.015593075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.937180912 seconds)
done (took 61.796037041 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.304228542 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.431159997 seconds)
    (2/2) benchmarking "String"...
    done (took 1.498352003 seconds)
  done (took 4.192651148 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.707194944 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.24518146 seconds)
    (3/3) benchmarking "different"...
    done (took 1.29118854 seconds)
  done (took 5.488515984 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.589536026 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.255390866 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.53928827 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.258271146 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.259724238 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.739381571 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.428375053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.927360317 seconds)
  done (took 28.666548461 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.353609198 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.517056117 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.642951371 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.749204558 seconds)
  done (took 18.598419807 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.690760348 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.667407868 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.660776655 seconds)
    (4/4) benchmarking "different"...
    done (took 1.970233071 seconds)
  done (took 8.364312313 seconds)
done (took 75.556771167 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.258974602 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.779014815 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.288888907 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.43290744 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.330461173 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.366860534 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.258244028 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.285071478 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.244734527 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.26433508 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.241670273 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.256090997 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.262039655 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.306514238 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.241123647 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.278502865 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.760158469 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.26077511 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.276514481 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.33966991 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.80103006 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.263637286 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.270972208 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.339908493 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.951437944 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.319448262 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.350382782 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.256272783 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.850874144 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.27891298 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.274484919 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.242722061 seconds)
  done (took 188.181472438 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.256304102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.1058234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.153198401 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.27425609 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.653872953 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.606001263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 4.025488414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.716342407 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.259051431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.245304558 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.271086903 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.25481343 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.310815906 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.83699179 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.304281455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.275135359 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.205741211 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.07813033 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.296973277 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 4.219925146 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.27143202 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.857523834 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.837469619 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.121670115 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.255097976 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.308796402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.281317652 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.288025611 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.78884052 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.1880436 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.25624253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2806644 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.440444659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.496243726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.265551275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.249453757 seconds)
  done (took 162.812087689 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.498981871 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.255386211 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.28676607 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.377060241 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.24278827 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.163038582 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.273128082 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.273007113 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.242272145 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.253512659 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.259995843 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.324255338 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.245372914 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.034060289 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.27097887 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.249641088 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.241982857 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.971577101 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.249114846 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.238078481 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.260290319 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.346597469 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.592219159 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.377490317 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.255488999 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.241959042 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.373868379 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.260548939 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.24890567 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.270210515 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.358953664 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.254964516 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.405105551 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.37148436 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.238440201 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305415747 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247593278 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.673160198 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.234585752 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.238326973 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.248813728 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.302835968 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.255013582 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.496527085 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.354913641 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.241385552 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.250601159 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.170182194 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.82823955 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.252879699 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.24357694 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.241698519 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.22748434 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.247533419 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.502203604 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.271126166 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.293715319 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.31928518 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.264634553 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.251553454 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.25566184 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.251064239 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.251492726 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.262259403 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.292613603 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.905628887 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.464429609 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.598779162 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.059448461 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.236604698 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.246458144 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.250445667 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.66013714 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.295024303 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.257702935 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.261880107 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.414128214 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.247584418 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.240969874 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.202382444 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.187559487 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.229819276 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.376469776 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.258511827 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.247452288 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.659409972 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.030194608 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.2539268 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.27168803 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.304222852 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.260384974 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.236587095 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.251385166 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.208264742 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.255335249 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.256358623 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.679856899 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.241936881 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.243094109 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.73938256 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.591945839 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.24485282 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.333065854 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.655548141 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.212477279 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.266523441 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.267766097 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279248902 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.27033234 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.249768572 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.266410148 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252308518 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.256788056 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.263413711 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.247594011 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.253245161 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.24646642 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.259386691 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.238583738 seconds)
  done (took 349.059403459 seconds)
done (took 702.937313077 seconds)
(4/20) benchmarking "parallel"...
done (took 1.241010795 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.542044438 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.304066062 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.424739233 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.517448041 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.484945187 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.45124997 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.451329918 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.548075114 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.487977985 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.432271799 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.513988467 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.459936257 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.572632932 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.529529674 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.563306049 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.535176515 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.463735567 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.991172343 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.493352076 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.464586802 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.476225452 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.433456237 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.429863807 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.514257568 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.588258864 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.445487902 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.652461882 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.525885414 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.461165334 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.539931071 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.548530896 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.559080478 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.478654956 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.566729471 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.516104048 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.582714122 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.470622451 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.538000514 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.467707553 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.490783394 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.491693214 seconds)
  done (took 70.261423886 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.579380096 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.418864329 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.546298764 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.551960243 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.158143252 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.552253955 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.643699293 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.444544532 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.457611914 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.564976984 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.567567166 seconds)
  done (took 19.770639287 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.33443049 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.434955163 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.555317803 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.533899096 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.716229644 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.554393137 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.554582438 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.446147567 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.443527588 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.552460307 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.584926686 seconds)
  done (took 19.009219761 seconds)
done (took 110.284348134 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.836860833 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.326446308 seconds)
  done (took 4.416942733 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.278142884 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.270399026 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.260140632 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.284537737 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.268032693 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.257115241 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.320450323 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.25344589 seconds)
  done (took 11.45668925 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.268186397 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.268541095 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.252082118 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.255975421 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.254808649 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.25010793 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.253833316 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.264317839 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.263676266 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.276247762 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.26895338 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.266276082 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.276681527 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.284991015 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.292742616 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.293341668 seconds)
  done (took 21.536424549 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.252127987 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.273481854 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.271974074 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.273049944 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.261578015 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.247528794 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.253079415 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.287499651 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.273093272 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.257755762 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.264649679 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.27329658 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.270215629 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.269712457 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.26550451 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.281677156 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.294804848 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.250909092 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.246168589 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.253096104 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.267225135 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.256799857 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.274059358 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.280427337 seconds)
  done (took 31.659364163 seconds)
done (took 70.334112433 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.825099622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.271883003 seconds)
  done (took 7.349092654 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.262315847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.248369432 seconds)
  done (took 3.868943152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.268123359 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.256809495 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.251932392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231759433 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.278525306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258937345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.257319231 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.277028157 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.277794345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.276913523 seconds)
  done (took 13.887975711 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288815436 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.256443618 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.259888517 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.276603601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.265916716 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.273219535 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.289964582 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.27938717 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.282071666 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.263509554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.257643471 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.476697554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.263443197 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.504146659 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.269046162 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.257562119 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.268820858 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257296473 seconds)
  done (took 24.550522545 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.259483067 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.272459146 seconds)
  done (took 3.784370077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.258553961 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271300067 seconds)
    (3/7) benchmarking "month"...
    done (took 1.264731979 seconds)
    (4/7) benchmarking "year"...
    done (took 1.266039054 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265516463 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.251526354 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.26610713 seconds)
  done (took 10.088741807 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.721688395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.43034647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.489991829 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.721523036 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.838868474 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.181922087 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.846393171 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.186802494 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.091692441 seconds)
  done (took 17.757613361 seconds)
done (took 82.550245372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.941834405 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.268358563 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.932565584 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.36821509 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.344080333 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.622091873 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253394333 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.795213017 seconds)
done (took 38.813438557 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.541803641 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.253834027 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.269924245 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.293231696 seconds)
  done (took 20.053134786 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.235202999 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.830537654 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.28222558 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.288924825 seconds)
  done (took 19.992583487 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.763816977 seconds)
    (2/2) benchmarking "read"...
    done (took 1.789992903 seconds)
  done (took 4.824986555 seconds)
done (took 52.673256595 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273446061 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.26663859 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.284618694 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.270385429 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.284340244 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.276327661 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.262341196 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.265642228 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.265829842 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.281296222 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.278344341 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266159566 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273852948 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267409736 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.281457163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263100847 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.266216838 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.250482771 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240202086 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278315358 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.251779328 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276353048 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.263970473 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.270966949 seconds)
  done (took 31.709671245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.353325026 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.32540189 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.338182001 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.318804744 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.370525181 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33830962 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.326539021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.312310571 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.349334152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.294411292 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30127052 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.360927022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.321540068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.361215962 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294807005 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.363365231 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.324735532 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28757482 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296442157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.361010852 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.336321661 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316380775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.358277486 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311253842 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.339830904 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284138328 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303713835 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.331015169 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298669703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347751266 seconds)
  done (took 41.101284991 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.295499448 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.279359012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.26841504 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.343223824 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245677382 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.265890408 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.259135106 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.262451001 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.253874891 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.278574071 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.267127347 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.274230094 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.287418732 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.285753284 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25904114 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.27758374 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.294854422 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.451521761 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.274073516 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.279197065 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.317457576 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.272875449 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.277796867 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.274186113 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.264518015 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.262455048 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.274440713 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.268639525 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.249245565 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.266850231 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.27741816 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.31905647 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.301114458 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.273219482 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.388229856 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.318476888 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.27494791 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.848138889 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 3.298639355 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.26484734 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.254133483 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.27401316 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.264888145 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.280974953 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.321699447 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.267497911 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.264628536 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.253290659 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25100217 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.266999448 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267561724 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.257190762 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.266428353 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.24940057 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.276573405 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.263548473 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.274000925 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284893595 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.2717564 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296929131 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.268925816 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.332734583 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.269019349 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.24905613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.647075543 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.276899482 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.36201987 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.280554155 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.274359894 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.483497037 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.256345497 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.489261207 seconds)
  done (took 97.839905337 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268860275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.286929657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.35190805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348894006 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260581086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268517587 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264749085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264896552 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.953782032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278858877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265406323 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256776286 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959640485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28283567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275080942 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341209328 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.272513341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287204734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.271411883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269012535 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257015298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25660978 seconds)
  done (took 30.798205338 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299400228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276034823 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.320978994 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290600006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294487604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273526985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.303700717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276543768 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33013913 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309112135 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311144351 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306786868 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269381871 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305676654 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312275169 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349587404 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321010284 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.341804735 seconds)
  done (took 24.7462848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.460222385 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.434729129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.353714847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.314384787 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.524327185 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.498931128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35776083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.44527682 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.297681015 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.435514693 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.442105089 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294767522 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.490237937 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312804036 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304101845 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.547749024 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.35144266 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315065416 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380856778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375484552 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.454280593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.372001906 seconds)
  done (took 32.02307178 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292760502 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325477592 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.328273764 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.331261994 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270952953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270337463 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.344014823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.330326101 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.277471814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.309799876 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299301555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262270747 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.361464465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319286104 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34960255 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318158224 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314983811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312405779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302605567 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264811437 seconds)
  done (took 27.437321144 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267971774 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266638257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277954149 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261380044 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259663324 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277222263 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273266541 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28796187 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247640066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.510582048 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258372681 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272330367 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270285758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26792775 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270811748 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264247326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26603978 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256822451 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252628649 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270827063 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.495192694 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253998578 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26790891 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250643315 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255791684 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268597386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264710646 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259547347 seconds)
  done (took 37.16273083 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307121353 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272770056 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.263703018 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259347853 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.287212571 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.33080894 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.269964399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.274761422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281723128 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26966033 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254686235 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.277083543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267666093 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.323222812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266217253 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.264228001 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.361513956 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266117425 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323840228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.255238751 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.271730358 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.366736978 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267823937 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250527028 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.247934382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.260100948 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262863929 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257676904 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267934967 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.261704705 seconds)
  done (took 57.642102914 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 6.265569241 seconds)
    (2/2) benchmarking "in"...
    done (took 6.264327045 seconds)
  done (took 13.767279109 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.284993208 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373817842 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.266411927 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.474041732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.424986629 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.450357677 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.434038584 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352268214 seconds)
  done (took 12.320966818 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.272157204 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.677414469 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.271448891 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.27208783 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.276434841 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.749525774 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.228465455 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.153762719 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.064142967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.119797717 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.409248257 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.751185998 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.249264991 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.566974203 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.365679432 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.14235536 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.505332541 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.813398977 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.340927522 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.387209858 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 4.01294822 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360562756 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.272705603 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266706763 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.271497237 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.172426792 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.180378008 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.682511149 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.41411065 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.38251169 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 4.029459218 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.356012575 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263679532 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.52453226 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.377851279 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.242456185 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.386870081 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.374877294 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.260990334 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.257544884 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 5.029681756 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.985307443 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.554194889 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.478751485 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.356027467 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259176063 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.267684364 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.258237425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.543955418 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.881155081 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.284249084 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.247684175 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.416633734 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.282284452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.997393387 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291718983 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.276491226 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.166459402 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.833025733 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.51037979 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.620345398 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.388431482 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.275707387 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.414898134 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.265108463 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.464483031 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.14274087 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 4.05125855 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.027941431 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.3772984 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.774233945 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257575612 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.272067619 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263102676 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.202745272 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.582439195 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.264193584 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.258330293 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.273611852 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.256399982 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.535611578 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.379994557 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.102124603 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.403797912 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.44511901 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.751023513 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.394732873 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256640783 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.929818431 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.121599461 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.412878588 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.923959109 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.49843526 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.408998408 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.268557045 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.521858462 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.299554329 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273432166 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.102269883 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.878154163 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.278055978 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.270138116 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.606105447 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.338288397 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.281154996 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.262243499 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.952341332 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.388862203 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.374007825 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.300066818 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.26159925 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271804953 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.855854648 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.388704116 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255223495 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.740581435 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.281149754 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.788090398 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.504443864 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.479715487 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.636381189 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.26833239 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.510062894 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.126035448 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.2708453 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.81571935 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.101363826 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.904271877 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.540782364 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.394390521 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 5.138422355 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.326635821 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.269948944 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.390176456 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.330386498 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.253955257 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257278855 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.285887958 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.290052329 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.275563178 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.396228912 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.669714475 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 5.118068504 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.266351999 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.507465986 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.396560681 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 5.131176277 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.478288888 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.970333415 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.420558788 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.275567971 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 5.040022182 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.549543325 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.999791973 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.408027678 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.265581719 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229664467 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.142999186 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.288443788 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.34998687 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268352426 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.879391749 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.421937004 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.285437596 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.27419824 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.760044777 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423009121 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.275451006 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.379690192 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 3.04529245 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.159335276 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271727555 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.579353284 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.38663686 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258324689 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.264476942 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.284062605 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.07405696 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.890052321 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.471313341 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.878318205 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 6.083968221 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.343402752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.405396175 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.362183396 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.53701587 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.506202297 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.410692401 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.279933422 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.288406454 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.259318084 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.743452672 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.151398528 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.336782634 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.148492095 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.261906996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.259566511 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.380170137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 3.07355303 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.271628254 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.962170297 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.299778968 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.373337883 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.265866485 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277671505 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.426262105 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.444967692 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.408821593 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.848713031 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.285641887 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273515927 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.958662122 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.420496659 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.983351284 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.373460639 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.106550865 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.357311006 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.401287872 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.438473169 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.950915585 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.419114377 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268922149 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.998902024 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.424537047 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.285023664 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.305395383 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.975369578 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.06725764 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 3.007771572 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.90064133 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.226267247 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.801031852 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.527104972 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.404660406 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.156646103 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.35931631 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.489887547 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.387183035 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.779311172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.283828604 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 3.021971812 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.277552869 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 5.031731743 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263854129 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.233665677 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.410007586 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.740061807 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.41404852 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.284326896 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.436436135 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373763307 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.940336254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.379234476 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.403668801 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.586728896 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.22126028 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.383826901 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.475342037 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.367726383 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.168420389 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.242031809 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.615825067 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.244524604 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.259235121 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.398083322 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 3.037027204 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.437552706 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.527138877 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.41225543 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.271975859 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281651945 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.500304913 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.348217879 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.279186177 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.592629449 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.285025837 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.28821614 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.414874172 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.272331868 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.253476691 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.465820237 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.462557794 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.580443716 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.774903986 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.834489786 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 3.081399979 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.391061719 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.958096515 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.412715865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.965070774 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.411572219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27222891 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.958580892 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.3765348 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.522400456 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.40802071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.389814161 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.934286992 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.377215643 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.552460656 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.441881307 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.416327156 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 3.040761408 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.809561044 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.512036706 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.685173201 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.303126924 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.791010478 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.390295086 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.826760987 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.294375171 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.982800022 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.365820258 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.323496723 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.273131229 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.279058747 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.78763892 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.274439667 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.275770977 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.043797612 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.969120633 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.195304081 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.006361803 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.428782288 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272362243 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276533226 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260301284 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.185890373 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.422677007 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.628144345 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.406962035 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.241108319 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.282010385 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.23452464 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.626549615 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.089695468 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.163138908 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.272675738 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.408653252 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.289008069 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.26667362 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.245275475 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.257562695 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268389236 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273669804 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.764437787 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.247299001 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.900251739 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.402890181 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.278033614 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.4784414 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.327803507 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269944972 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.471951823 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.331388889 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.386486241 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.336530683 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274044884 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.679200768 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.411272795 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.264045296 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.573178528 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.541398608 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.513150878 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.811915447 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.30701663 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.675011162 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.574113583 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 3.07335494 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271209809 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.183102893 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.380165345 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 4.053340829 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.239576145 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.754111775 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.864163567 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.291059248 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.538712572 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.1765935 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.634096216 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.452693404 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34909559 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.282864513 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258607801 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.358504385 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.503148658 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.313323151 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.558743204 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.466983074 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.248946802 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.563245562 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.357274853 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.493236417 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281745339 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.303057346 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.270300784 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.28290428 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.750877343 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.164343916 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.373618145 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279012339 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.17731348 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 4.160389162 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.183870352 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.889963801 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.206705968 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398311244 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2675169 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.474797279 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.323193051 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 5.030745152 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285117787 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.056986663 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.577889636 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.314986032 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.437463974 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.634309218 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 5.014527616 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.662820021 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.400571467 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278320733 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.657828477 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.263161145 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.425634044 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.206402797 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.604444161 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.804785049 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.731333419 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.559835351 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.390819318 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.174445556 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.832061481 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.307797471 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.263049256 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.098928534 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.414733079 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.569466418 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.220846834 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.522508657 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.412126773 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.92155829 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 4.012033278 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.405802715 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.876438871 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.394764 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.271105441 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 5.0907475 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.179962185 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.457978446 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.388456698 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27844445 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278480854 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.948350091 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.854580048 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.540102233 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353238349 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.268296227 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 5.05955616 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.949655149 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.401110342 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.260991192 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.249403873 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.7111081 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.332181289 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287836304 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.685392216 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.863888253 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.413263913 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.765443892 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.403083428 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.403992927 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.558118198 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.682879291 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.461386947 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.334475919 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.257599238 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260913615 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.260892585 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.80405894 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.271339759 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.260410271 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.869543225 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.414063283 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 3.007675202 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.199994577 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.528819629 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329783011 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.677066904 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.408659331 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.756842618 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.179937836 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.399105766 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.51455859 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.357524811 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.391918239 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.98894729 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.370880885 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262894062 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.211399089 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.5924247 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.634241265 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.674869712 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.627312086 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.336717055 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.985267201 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.361226389 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 5.020331783 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274171992 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288928934 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.766144733 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.434034014 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.718421841 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.40647294 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.738735389 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.388886732 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.558184563 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.544132461 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.365618149 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.271645718 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.275574858 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.279020261 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.301079834 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.828150045 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.206482711 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.743348124 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.400997437 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.07386121 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.813503371 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.139788475 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.45706291 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.582463975 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.562452945 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.301842759 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.229538281 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.648595508 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.355341217 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.428192746 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.354662142 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 4.063697107 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.338202256 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263641559 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.845136072 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.28276669 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.267803328 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255821778 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.167442245 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 5.085609583 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.372671207 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.44718593 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.34927779 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.26249904 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.864162352 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.537308946 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.316812199 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273305402 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273093313 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.179858382 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.369007753 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.260728443 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.595256116 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.4283324 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.552585355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.091689421 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.711782176 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.368713407 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262483601 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247958047 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.982012204 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.836919364 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.285996856 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.601790368 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.325740396 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.752912901 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.280584421 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.729549373 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.77491998 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.282687097 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.406862596 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294067096 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.29635332 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.200649454 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.190001309 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.012989483 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.770256234 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.358419309 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 4.055701668 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.288287776 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314746174 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.40043395 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344613482 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276064754 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277763916 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.27800959 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.704962491 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.280466591 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.269437645 seconds)
  done (took 1530.505297572 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.549859946 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263389997 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263008669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27520739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270416251 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266996292 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265944736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26232884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276436613 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274309269 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279625929 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26519432 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2720641 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.552333719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263156651 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25024921 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284934794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270875187 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274298457 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285693848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273887504 seconds)
  done (took 28.498879165 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263119579 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254025914 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277556538 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278369313 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264314123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270753261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252511871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266708984 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263304969 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275405005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275807945 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261347415 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257409756 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.270332903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25888004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269107662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285249032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259794589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.267092408 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25606996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25972208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.266354634 seconds)
  done (took 29.106225347 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269029779 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259636489 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.989800008 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.377068544 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.261321298 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264683955 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.26784727 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.473595048 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.287523005 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.175915001 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.678704478 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.355510288 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.287148858 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.447458461 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.381519614 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.262839069 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412818038 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.268126044 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275948244 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.275713331 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.275054873 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.468049626 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.418934926 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262058796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.10264174 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.421358939 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.267799884 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.274540099 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.281196292 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.248631744 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.370786138 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.252178202 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.129925004 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 4.022311153 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.598190959 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.148009186 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.377998733 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277939256 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.268081145 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.267004996 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.463736182 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 3.073315652 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.274513485 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.260298048 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.562243864 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.374725811 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.26342626 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.595057947 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.340622252 seconds)
  done (took 96.475152797 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283633414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.394680403 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.311525695 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266891408 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.392227886 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.269857931 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.322181562 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266749078 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.275634664 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266488957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.403432915 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.41974946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261194874 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.260139746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.363103644 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276837826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266107069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253259973 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.258328966 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256189851 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270420233 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.316183241 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364842454 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.418086059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265728214 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273355705 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278228191 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255624754 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.436028528 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.289344563 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274516867 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278482234 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.383441163 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.337369221 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257591758 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281237111 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.378722375 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270620203 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266813612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26710733 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.277136225 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26214336 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.321849574 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.393362185 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258452872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.373975184 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279044804 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.251682213 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.417934109 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.264585924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274993562 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.407456923 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269056474 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277488705 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261279504 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.384408861 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282941293 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272595603 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.257543224 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.422131165 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279126684 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267567246 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.417062374 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.249067484 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.261147272 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.436817029 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.367128942 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272907367 seconds)
  done (took 90.269355648 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258628446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.397697964 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.430359862 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.431551369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406489023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.401202831 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.411594718 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.399675651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40122001 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.412329784 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407777398 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354289835 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.372876766 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.345137244 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.413813162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391088635 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378653327 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386660912 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.406634663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394718478 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.379029605 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.433276614 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.423084392 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.456723633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.628171329 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.374600336 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.409623026 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.406471425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.454542695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408435315 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.619840102 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.390186743 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.399566836 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.445842095 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.643144908 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.39704412 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272537374 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.404325373 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.400343358 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.419982659 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356747022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.449421858 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393515318 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.355364255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387297068 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.407180584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.443611033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.643769289 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381920747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.408220312 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.402179718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.444843639 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395085892 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.400866912 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442525174 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.361022643 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434917024 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.438781681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402267365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.458865712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.442374203 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.352974508 seconds)
  done (took 89.026173822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267252373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.267863071 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.354412328 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265774466 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264040284 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.355130541 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270094499 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281088566 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270259046 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.261252541 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275986439 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349993147 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.624578863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270218539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355781768 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.609300661 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345639911 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364532236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246327174 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345754829 seconds)
  done (took 29.905144175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.263692323 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.265064327 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.257495365 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.429778063 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29302773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.421808987 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293169811 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28541743 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27438068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280635754 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275439062 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291605313 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272147652 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418577295 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255673673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.419217861 seconds)
  done (took 22.238337709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275968269 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274473497 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273963894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284884826 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282438308 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.257775631 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270917799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275522651 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271561314 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.73233181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.261297167 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.274023388 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26710556 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269939993 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.247057885 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267383155 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.273751705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27730257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275170472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261502448 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.826628906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274634266 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.255903672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.254072108 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.249870732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.835965281 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.259467808 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268170093 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259383877 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.258536047 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283968101 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.739778462 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275694929 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.279889846 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.264478689 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277862939 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284071966 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272061579 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.275513119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.265092005 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.262696457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.28453292 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.275114903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.27692779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27710524 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260511004 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.26230818 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.720157153 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283088336 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258219056 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.266332587 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.251011394 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.273658711 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.738866327 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278203647 seconds)
  done (took 74.061994791 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28259735 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317271115 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253230053 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270987204 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.32366803 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.29481803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313330547 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278808063 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300724745 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281031742 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334721554 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278736918 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314954031 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305301323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314445233 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316192259 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278428954 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335050619 seconds)
  done (took 24.654910961 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255477722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268219464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.260359093 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260514454 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286371302 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280900398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276037223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296180897 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262401623 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271748614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273371444 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.267249327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270911878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.26506174 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26687602 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26939843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274596796 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258662454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262638865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276343201 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278677284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263243815 seconds)
  done (took 29.192024771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.308828988 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.297793566 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.267727934 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.277829165 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.263104863 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.284498229 seconds)
  done (took 8.956742913 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314168128 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335462293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300299596 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308657696 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347463567 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352060948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330243278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346242749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347958768 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.578229549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351626423 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32002832 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341083138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39391558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32698226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322648513 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353774502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339074597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304904384 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354812851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372046589 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337577239 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372055385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361067606 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355574348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40078073 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342813856 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572888195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355256977 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35231756 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335014687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352450311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346053497 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.577387583 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307810776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345347143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351331052 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342661906 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329017191 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410692382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294290519 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349029814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349264207 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358423975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346129895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353407444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36170431 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368485872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366385847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.576043381 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328369032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38190632 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327416323 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337159474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346880097 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.562731095 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.563319977 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39021662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338104133 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573545895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384300429 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338693665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389094518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569058468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341980115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41299016 seconds)
  done (took 92.061412273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397124038 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302348348 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354950312 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571315065 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379252336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343172458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364551604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364640543 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363830993 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327814888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351908593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361931802 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406398018 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396474264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360615756 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348894282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354597734 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377223043 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326409588 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.579734677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369769945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394284936 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383582912 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396875161 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567879087 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335644133 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361319647 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363016457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340229897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345045726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371018613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364318893 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390307029 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292724881 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382303887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332375352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346333818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350846851 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364003179 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347708886 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401553017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350009501 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368463528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340165671 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582741843 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370284067 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359675345 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310945722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343261173 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329140385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566649359 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.579667159 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.578920841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397955067 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359088034 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361910202 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368118316 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358722446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357175724 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335882917 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384418007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349450475 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567479574 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363528664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353339958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408473438 seconds)
  done (took 92.753493053 seconds)
done (took 2645.498351431 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.401302978 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.325885907 seconds)
  done (took 13.991391559 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.25708502 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.255012968 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.4112689 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.264173551 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.300086402 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.386141176 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.260263823 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.25646781 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.255848254 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.361855711 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.265336257 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.404798632 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.386109996 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.269606411 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.269614529 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.250896577 seconds)
  done (took 42.099036003 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.330260497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.900694673 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.219852331 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 3.057915426 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.29716814 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.947030353 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.663881067 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.954133922 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.586433134 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.742809199 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.520794833 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.176271926 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.323854496 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.422580153 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.732058168 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.817993535 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870802415 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.916241833 seconds)
  done (took 63.737848329 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.284555069 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.414416431 seconds)
  done (took 8.980434424 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.282827121 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.285103446 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.26792835 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.272380997 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.268441052 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.295029942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.268543257 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.291561977 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.313445192 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.28720406 seconds)
  done (took 64.10766381 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.336974036 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.767360955 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.679145296 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.744841802 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 4.012209236 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.77161276 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.443534869 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.724657645 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.356634336 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.261252893 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.592517133 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.769531061 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.121657197 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.566621691 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.915386913 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.512996639 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 3.030462303 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.714991678 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.606021462 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.696011192 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.534818864 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.408843423 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.746256888 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.233878292 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.282349251 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.913233185 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.593505734 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.406194568 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.352307518 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.430765727 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.685733836 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.266745951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.580285457 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.27606245 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.35279692 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.970600263 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.007309508 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.473382241 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.725949661 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.625604487 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.674378477 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.981712754 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.332352218 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.964718256 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.430184254 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.760304043 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.393047243 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.530679762 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.354962486 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.423299738 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.805649921 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.457051752 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.40075478 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.378459603 seconds)
  done (took 164.649212188 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.261436619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.745677757 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41813259 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270468978 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.550130628 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.493167457 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.106812383 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862187502 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.293676881 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.463659395 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.443535534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.413339148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.261393596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.266376688 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.264656298 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.2657277 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.454851092 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872610801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.260187126 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.243181751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.476037801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.508504117 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.396861183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.274401373 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.415349472 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.528224866 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.694606386 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.392463611 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.684787483 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.264507033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.736999818 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284359145 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.258566799 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.25671209 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.650736743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.647432427 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697085741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.266489678 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.256038739 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.261851423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.968614332 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.520036704 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.622689488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.425398674 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.537647439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.556797834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.882565659 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.258255118 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.016973198 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.473673716 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.490091742 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.482343936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.550185128 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.27885385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.248851213 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.256982237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.23727318 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.523727205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.416629453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.41526958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.280833954 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.263268544 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273624795 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.535402402 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267561367 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.37077312 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.270800091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.267423495 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.374328376 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.380059539 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.433930907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.533710798 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.514689818 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.824830824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.663369222 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.504310843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.699857877 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.517071198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.287108224 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264811268 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.70682675 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.779901996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.427911302 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.513555292 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.578900256 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570635587 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.802774881 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.269661027 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.49982786 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.440963953 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.495504245 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.554177549 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.62494509 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.198636092 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.256761136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.256190847 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.48882174 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.384804824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.245925727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.849189382 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.564919478 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.083040975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.453437612 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.580998835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.372163864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.269755902 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.857902639 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.277726044 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491456874 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.52385535 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.278597078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.236391941 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.401549756 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.148818284 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.263795688 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.958498299 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689549175 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.288262502 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.417179966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.253983419 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.549937636 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.224187181 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501311191 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.266146705 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.574038394 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.483515829 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.579207322 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.255587365 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.681536018 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.551103649 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.663290664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.514961832 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.25810402 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.264618395 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.616610837 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.263685295 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.264679642 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.463393634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.284540983 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.47601957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.260025692 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.527860192 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.409673499 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.635973549 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.259902389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.493800783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.518806015 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.642662713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.243543757 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418472853 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.248316756 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307611395 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.463293515 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.252065809 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250471887 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.937900351 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.248654992 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43471283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.504182567 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.962149403 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.649742013 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.613588304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.260059181 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684674924 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.469468724 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.76656437 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.955786166 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.42494935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252521581 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.263129166 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.258687913 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.512529563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.476710756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.27765482 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256510743 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.091891446 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.466180617 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.256296594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448242512 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.25673596 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.774771152 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.492082523 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264877201 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643855942 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.268141009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.435076137 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.835587756 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.610472847 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.253169075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.259693469 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.268922239 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.256022884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.51425895 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.471726491 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.007828225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443332467 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.565608594 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.570657882 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.58780888 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.734902406 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.281964629 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.5379944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.259343294 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.687105154 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.266942625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.502426649 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.555878037 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.265354052 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.504177051 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.62507316 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.432168579 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.66139367 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.255785856 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.244816008 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.266889733 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.439930524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705932628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.284070598 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.049167415 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.648712701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.391026715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478980491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.582677076 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.303636015 seconds)
  done (took 771.369584592 seconds)
done (took 1130.185112289 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.267012916 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.26845037 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.276144945 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.245589534 seconds)
  done (took 26.314740337 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.22964108 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.336955759 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.455590623 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.281323127 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.627184647 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.353998686 seconds)
  done (took 12.548283542 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.254782098 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.26125416 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.263684601 seconds)
  done (took 20.041288095 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.551169197 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.717416728 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.413490872 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.353487696 seconds)
  done (took 7.305874507 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.277210452 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.2926171 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.274194235 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.301097531 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.255227777 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.27092931 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306358758 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.285355263 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.274979333 seconds)
  done (took 12.800532006 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.037106003 seconds)
done (took 85.318896203 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.626381409 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.562873405 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.398375484 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.448887793 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.402967622 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.593103501 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.377753894 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.278460959 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.625872991 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.738460881 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.774757888 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.379635732 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.6016212 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.711662914 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.510724476 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.295537269 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.282010672 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.332714773 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.798806609 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.427681421 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.821459902 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.400638601 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.25427559 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.301023934 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.161000406 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.379007262 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.591770491 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.135412762 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.464349766 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.278636038 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.367385897 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.78734168 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.521519598 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.592006486 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.364313852 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.111234949 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.693402137 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.343384194 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.414575451 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.708137141 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.562787961 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.359627937 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.247602645 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.432325194 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.724903194 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.278941544 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.243893904 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.405110896 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.665779229 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.429108684 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.730800537 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.280398058 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.910376564 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.323542755 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.347394088 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.267321657 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.296312623 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.827957945 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.430763995 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.576243357 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.287029339 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.3700942 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.217073622 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.304969783 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.48675697 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.587102163 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.675832952 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.351175571 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.889263285 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.294781954 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.26766898 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.291672831 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.960832268 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.381852048 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.258975404 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.419061664 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.589669906 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.433530326 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.255459634 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.507476571 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.517501299 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.256368906 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.397323112 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.621781345 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.430122668 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.614767591 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.751973523 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.626288631 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.814393316 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 7.138537362 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.923464267 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.191293502 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.340551732 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.292482253 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 7.673375285 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 6.376004354 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.632846349 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.8189596 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.38760343 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.876265766 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.284460127 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.275582667 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.587266112 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.622508482 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.998870694 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.307801481 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.426393229 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.257962909 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.57326165 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.066097631 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.350610678 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.863087352 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.269064223 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.459555182 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.749776861 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.264000539 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.599782569 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.730445548 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.334497605 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.269475063 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.563139064 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.245226395 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.383405994 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.860327099 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.658606632 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.455510843 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.265739243 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.543323666 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.268222379 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.449140672 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.269178708 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.851988161 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.779808224 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.294783988 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.613322567 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.401066004 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.263958689 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.570468908 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.468567979 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.380241954 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.619946751 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.618764656 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.415998585 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.250994037 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.624033754 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.264377006 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.511633081 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.594999657 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.42369982 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600265785 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.33733685 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.277676154 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.209193926 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.704064708 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.886351312 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.870978074 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.546402367 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.504544941 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.78194823 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.538792801 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.074987612 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.372400212 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.425836571 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.279790548 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.259128134 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.318247543 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.256741238 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.244683649 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.560913073 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.443397172 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.914116889 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.014544054 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.973225723 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.562888434 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.406537525 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.210182934 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.848306082 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.26782949 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.574407742 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.786189239 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.440249092 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.289568006 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.267649419 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.332159981 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.953409975 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.318016282 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.578102193 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.753482253 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.53800283 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.602843155 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.463480019 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.294225437 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.652287294 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.519458468 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.588306154 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.461257461 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.789083804 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.375624468 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.608692487 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.338271015 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.576748347 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.255998846 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 3.395612072 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.511485457 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.748486298 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.629800477 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.515383549 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.426324991 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.601784887 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.266092922 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.504890268 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.346123472 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.697114974 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.277660171 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.500397283 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.357655771 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.679002819 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.220117221 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.373101752 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.581426894 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.357169457 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.38485972 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.734978574 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.283137698 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.598865826 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.440504724 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.434598512 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.488154599 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.301399061 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.406469505 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.447855317 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.400395069 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.526774949 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.096704391 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.634495603 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.846287707 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.387589446 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.249368181 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.779658943 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.288980361 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.291815414 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.553452621 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.459410678 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.573394661 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.487868272 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.434725497 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.294281929 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.285443161 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.697132527 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.161693897 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.857089841 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.367036363 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.29488929 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.263645937 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.771309599 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.718276869 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.422673621 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.416840134 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.862508921 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.290391026 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.444728382 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.269272588 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.26054434 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 3.037709263 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.517391919 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.544899564 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.918799621 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.265306343 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.542211097 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.294601092 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.666429304 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.844906081 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.322479434 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.41835095 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.571851631 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.207091495 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.664191458 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.297771867 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.46187491 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.630085496 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.380434367 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.415546726 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.276729031 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.295922035 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.782486714 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.446595721 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.761130068 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.295010905 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.634984183 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.341948953 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.504128275 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.284206261 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.33696592 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.617219354 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.400463335 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.630888125 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.264108895 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.444160846 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.577547663 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.307645719 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.24503084 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.404297712 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.852086394 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.69943468 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.565732896 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.437373703 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.217653846 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.573048851 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.28764814 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.938478567 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.421377579 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.339964682 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.856501444 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.769225571 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.265411757 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.43819266 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.265432687 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.6248154 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.284998843 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.275958143 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.429606886 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.361194937 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.266653287 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.877154963 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.430156295 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.77868584 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.367977274 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.131165364 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.364951623 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.419281835 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.367133637 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.584804988 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.264703724 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.259591965 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.396928741 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.911784497 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.452980891 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.287531299 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.541292869 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.258033197 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.859096514 seconds)
  done (took 922.994591501 seconds)
done (took 924.421829362 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467642106 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.627922005 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.512802776 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 6.270853954 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.081830964 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.911553791 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.531160981 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.507065143 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.265695235 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.533073369 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.262609129 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.061054483 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.361670722 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390023956 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.582193047 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.406340699 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.471412692 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.497215524 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.354643972 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.148105628 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.620117625 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 6.252950396 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 5.682822205 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.561907438 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.619971916 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.593380787 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.470557629 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.627314272 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.625556672 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.453880716 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.482524314 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.516795019 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.110096756 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.517741175 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.37305506 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.339837223 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 6.263952269 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.555750154 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468099995 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.325924408 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.634093338 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384438927 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.982180593 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 6.256849516 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 5.616416066 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.697951942 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.153071052 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.377224178 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.423824253 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.510314625 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.517696664 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467678615 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.620984786 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 6.264704654 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.082430412 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.111818484 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.602035611 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.144108173 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.004562521 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.45772084 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.642901997 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.622162929 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.493704971 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.489499062 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.365744157 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.543358367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.682623087 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471908953 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.522944449 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.535836665 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.492950397 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.500940477 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.373487247 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.396203426 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.405097509 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.548552232 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.082053702 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.515283637 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.06242012 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378852537 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.154893101 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.171897962 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.223253531 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.33843823 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455235431 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.038251955 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 6.130687433 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.158075209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374202692 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.525957033 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 6.258660031 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.513641088 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.734141337 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478078269 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474409481 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.50936979 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.216781107 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.504983201 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 6.242215151 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.536442695 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.017194569 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479686902 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.313791258 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364771295 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.362942147 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474011441 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.486644715 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 5.653542355 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.478278614 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.435033966 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 6.264385212 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.608429423 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.494694985 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.054391403 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346781024 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 5.589279765 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.97179187 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.139862339 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502671838 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.947041358 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.575690272 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.563123051 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 6.2494337 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.534993578 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465301684 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.540612495 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.37927706 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 6.27961167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.382764514 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368834152 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.441026514 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.711211593 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.466895596 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.179511604 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.500158468 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.039377141 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.497455695 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.488564598 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.252878893 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 6.262335842 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362966218 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.210694 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.54889872 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.651454509 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.490483326 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.559040261 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.569409746 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.547552474 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.5122671 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.033669596 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.486465444 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.39827136 seconds)
done (took 338.006129114 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.618597129 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.409646757 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.548779346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.561537334 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.648037763 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.632448003 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329794863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.681454816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.369113932 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.692693411 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.534134304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.152447274 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.392913553 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.501606719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.618751816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.504250186 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.392684494 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.516079355 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.703900401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.63677482 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.032564273 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.510704961 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.409652272 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.696841039 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.247335979 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.011650618 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.608304067 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.385861452 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.535641297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.04719826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.057466024 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.543299894 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.624360557 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.98441715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.720109506 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.995564976 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.65804718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.081729382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.639977881 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.634669922 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.530461082 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.107236567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.051635799 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.066560894 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.41537112 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.599997648 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.354356995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.214607515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.251512993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.975905766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.53474443 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.081678994 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.177279774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.590750803 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.501883665 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.931745349 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.75692761 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.750694038 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.632492154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.573412835 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.630654481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.685506962 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.673249596 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.444961296 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.054584869 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.5598697 seconds)
  done (took 158.260258367 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.655502586 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.552403158 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.67500397 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.697085605 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.817196012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.710638101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.745759461 seconds)
  done (took 15.124895134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.335308646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3271667 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.524818588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.530007675 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.327677885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.442126843 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.408788305 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.054189266 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.565775976 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37979281 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.647043164 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.529507851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.948287801 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.033961695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.405915539 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.576976946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.28439294 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359224498 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378293687 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.591311313 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.048881483 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.023005428 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.510844256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.407248993 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.32155395 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368424247 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.31267395 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.294402716 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358299915 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.291395597 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33116039 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.434584571 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291736655 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.028714932 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335808529 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.617763115 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.316360859 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360874468 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.456663409 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.249625184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.274052909 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.317699182 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.472196684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.32852336 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.298999955 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.496459941 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.307006586 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335926017 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.299064598 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.315876545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.514157168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.329392737 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334487459 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.963097015 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.536159487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 3.022796169 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388991382 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.311954776 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329173036 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.386027803 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319104303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.575646489 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.531982464 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.309708753 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.527195203 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.625728932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309849417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.306792803 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.304445143 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.588864582 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.290759929 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.538024815 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.309526491 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.375367475 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348558193 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.423062116 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.502844249 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.123508273 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.073542909 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.970432279 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.264876941 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.289900319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.61044778 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.237579325 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.982410448 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303862716 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.357641303 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.927185746 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.925952456 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.29867001 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.630620082 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.308650236 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.372521855 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.365659001 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344908032 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382330752 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.517952239 seconds)
  done (took 168.484642331 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.491818803 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.892666563 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.539308988 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.332138794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.417881513 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.591193567 seconds)
  done (took 16.548117254 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.637857359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.118471015 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315488711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333045113 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.37531373 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.30207704 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.303074985 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.48928602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.466726426 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.304509075 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.298925501 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.343121479 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.311536342 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.446211469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.291898992 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.321275106 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.320488529 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328867991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.326174982 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371563516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.612714493 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361430156 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364446994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.206387165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.351283008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.308990408 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.263441374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.32997834 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313532774 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.635981442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.496048831 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.305307259 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.151637683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.640947376 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.067630348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.193953481 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.444770975 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.341257533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382283588 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.311859226 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.331581607 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379503167 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.344359616 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.339441408 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.678104133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.123172273 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.390616572 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.587515029 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.300714841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.319660269 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.330319127 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.344824468 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.322044587 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.330952334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.886622214 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.722232898 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.289689823 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.306883259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367322804 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.191472628 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.385582601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.306108788 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.651742598 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.260022133 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.976809772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.336539439 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.235475477 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.468629826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377449991 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358514811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.333547614 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.318817444 seconds)
  done (took 129.293689915 seconds)
done (took 488.951489914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.29575926 seconds)
  done (took 7.556831334 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.316151935 seconds)
  done (took 7.698971057 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.264937689 seconds)
  done (took 7.551152637 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.296484168 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.297257274 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.274885126 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.283098228 seconds)
  done (took 26.454766572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.517141873 seconds)
  done (took 7.770364285 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.255955975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.273494 seconds)
  done (took 13.898366427 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.283568558 seconds)
  done (took 7.566788829 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.72348597 seconds)
  done (took 8.026711377 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.278107381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.283953328 seconds)
  done (took 13.829109052 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.251655892 seconds)
  done (took 7.520741722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.278378799 seconds)
  done (took 9.62289036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.27784419 seconds)
  done (took 7.587096564 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.279174452 seconds)
  done (took 7.551881709 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.414872915 seconds)
  done (took 7.664078052 seconds)
done (took 141.561271166 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.281373343 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.255248184 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.266462908 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.252998924 seconds)
  done (took 26.330424955 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.586243684 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.583460793 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.586068135 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.756742625 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.62797265 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.071303258 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.599449517 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.598948031 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.597098895 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.637070077 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.595146438 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.725009227 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.746496121 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.569738315 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.554973506 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.647300575 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.635686922 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.585948888 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.61028423 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.574988283 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.636803119 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.735740293 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.254600487 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.254477405 seconds)
  done (took 42.026200121 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.531719087 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.70301491 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.44470806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.834949041 seconds)
  done (took 7.770474437 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.305746954 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.653550576 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.639213946 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.68807145 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.603293967 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.433313873 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.615577994 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.449654504 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441396867 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.431717206 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.857513846 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.435015036 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.463205293 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.683231293 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.445521296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.284802055 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.286387238 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.460755692 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.653430443 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.457555935 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.547630964 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.625436431 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.624680631 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.626405105 seconds)
  done (took 37.972905278 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.029022021 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.200418866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.641431158 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.184089448 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.000776749 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.081349097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.543587078 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.768876473 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.536857458 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.526416669 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.994343995 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.999506297 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.418324255 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.150050404 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.019078531 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.438611907 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.449643242 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.129597325 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.025419245 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.589528411 seconds)
  done (took 41.990744873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.264051131 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.271259164 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 6.257236171 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.010167357 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.258420834 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.26159003 seconds)
  done (took 34.602415972 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.353449392 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.398066461 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.580055905 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.511173109 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.400834488 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.392895151 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.916796187 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.469665446 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.031135733 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.069981267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.919719264 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.746230487 seconds)
  done (took 24.061747969 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.266068562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.31180439 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.255314512 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.499189266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.467678203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.594437825 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.249498344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.261875619 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.830935927 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.530280317 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.589309962 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.487850247 seconds)
  done (took 46.627138413 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.49215147 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.462834272 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.591746763 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.281964437 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.745006906 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.366644649 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.687546898 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.215603795 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 4.08137447 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.151485975 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.779852027 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.333650071 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.909210332 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.229409358 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.259499446 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.567453122 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.111397387 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.781293343 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.703251444 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.32627838 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.21512736 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413235814 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.271341901 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.868309663 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589240108 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.253438979 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.465328935 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.49143783 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.260092862 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.501231927 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.256688757 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.801470728 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.35791397 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.731356945 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.794085746 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.335723679 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.351138517 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.263163325 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.206448176 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.601049537 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.43508804 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.427354633 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.248025275 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.272533265 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567977299 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.049060786 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.266636223 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.914839676 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.265798046 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.397203227 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.906804904 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.516395994 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.581657361 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.086354078 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.407954519 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.574204542 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.514367934 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.253915318 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.58467442 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.298808104 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.470595668 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.354369688 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.500310762 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.255423335 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.485575614 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.615552705 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.604506358 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.708777493 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.528298604 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.562355019 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.5939602 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.405757598 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.097501989 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390853241 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.90313638 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.269625735 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.636880189 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.26708829 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.245321495 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.8094599 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.24676983 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.378745963 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.483239009 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.239167696 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.255543232 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.505867292 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.744139799 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.235198218 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348345769 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.32550851 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.647660268 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403588633 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426510657 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.537141426 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 3.71208504 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.293335826 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.268336708 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.532149901 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.232913385 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.812256147 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.243591606 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.29038952 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.25220974 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.288753587 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.654489327 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.320170731 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.010377598 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.04084318 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.553531098 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.895500616 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.491467647 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.099511113 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.629737677 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.588898647 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.277641494 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.592272891 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.254460376 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.378908182 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.707851314 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.264485319 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.239121967 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.658130253 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.456317664 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.242441289 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.545457105 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.265607481 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.47442215 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.269743444 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.133473539 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.870776538 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.511710906 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.794606042 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.370228699 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 6.321518927 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.240044138 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.470229827 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.768394512 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.350567767 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.602713355 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.688551819 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.488336375 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.718952192 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.994907087 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.261619964 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.745024206 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.530793162 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.60228936 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.938855702 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.442376003 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.351325506 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.255760265 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418041259 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.283540739 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.220112849 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.274728155 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.530229895 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.388481369 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.551359736 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.259215263 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.441777053 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.270246047 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.545408279 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.95367121 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.301698096 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.515466258 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.53293453 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.474185055 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.248651171 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.245792804 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.620270608 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.525591272 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.770907458 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.910051807 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.957958681 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.560905582 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.746319383 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.455307132 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.610199328 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.263462783 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.043918864 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.611446998 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.162142161 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.289023148 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.267511752 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.327566378 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712989643 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.495699111 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.033890041 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.093254689 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.305683013 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.298179067 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.744046802 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.215941186 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.456600228 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.732463972 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.300975131 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.837210861 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.361942777 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.464676135 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.565826079 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 6.29830326 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.85280189 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.127452429 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.654944743 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.630174386 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.598757756 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.259450575 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.333972871 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.708340261 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.766598364 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.407754281 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.533867579 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.287699079 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.320776212 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.249541623 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.592160667 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.687353617 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.031595901 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.550719078 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.006753387 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.264265516 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.485206315 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.792469451 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.271639373 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.262739553 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.430242081 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.3210207 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.206746785 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.876319887 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.527330124 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.59112312 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.263783847 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266340382 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.553383223 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.588673172 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.74157036 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.772976079 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.53860429 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.957196712 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.364942517 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.038133375 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.42705949 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 6.303601968 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.026312577 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.586891069 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.234197965 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.476762193 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.018141202 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.42818226 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.92270829 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.537742632 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.258944986 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.732495262 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.931349212 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.250022414 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.224664162 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.414883729 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.311952252 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.463097661 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 3.469463132 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.516569591 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.449456597 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.835667029 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.540785308 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.362273824 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.666896985 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.795021886 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.6303593 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.236512324 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.514513891 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.399806512 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.557816094 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.274812319 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.548023366 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.64412639 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.967153856 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.081269668 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.828321703 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.50615058 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.027959472 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.740322006 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.532207944 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.591091604 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.228720949 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969123118 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.267880592 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.43754887 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.254936312 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.091582077 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63022202 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.644916324 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.735956607 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.334384573 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.789748043 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.642780507 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.293893245 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.480643337 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.537087357 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.262472287 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.551810002 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.256526016 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.260581509 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.641586453 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.272943024 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.112947799 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.504437032 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.638175101 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.515529841 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.889360723 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.319687837 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.412248654 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.737429664 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.444217542 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411753549 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.585792707 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.164387427 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.304550752 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.308479202 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.790645745 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.899726722 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.727512208 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.286799808 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.845858905 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.91141501 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.773683999 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.260405263 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.455833828 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.515228422 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.271168506 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.50473669 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.664816153 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.338408245 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.506616479 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.602170742 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.493117158 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.262746861 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.264477342 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.909753692 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.56090305 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.778038819 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.240965566 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.045154249 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.742175332 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.302029092 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.795075288 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.271033391 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.419218261 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.540297914 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.125528236 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.358805373 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 6.322120327 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 6.269297949 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.396909953 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.708201911 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.352064749 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.1598564 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.526636358 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.516366036 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.457233057 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.403428702 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.252453403 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.935095756 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.965109461 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.73494672 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.415932672 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.780273808 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.411043894 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.468988155 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.092736063 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.56427271 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.769999875 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.756819025 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.502073079 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.265796131 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.279477836 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.533373321 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.456204341 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.352406796 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.569974085 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.696014926 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.296435987 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.294960156 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.281735665 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.519986491 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.706969642 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.998847259 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.625450852 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.785904894 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.878471802 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.26485661 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.024237428 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.465967262 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.702451077 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.674296005 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.178126249 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.663335012 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.557011548 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.504821245 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.244278983 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.487806908 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.255002431 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.328258955 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.632622938 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.608049746 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.342801686 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.241033812 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.140627945 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.259393972 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.279467934 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.501864905 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.504206438 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.468651577 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.280617007 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.927736892 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.691578794 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.431216119 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.273357641 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.328271515 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.260094838 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.447443742 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.27443737 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.496736869 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.554036859 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.359085763 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 4.356202608 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.879728356 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.361277806 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.518873965 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.241471677 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.099223134 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.278897881 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.967022902 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.830993949 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.522429532 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 4.217913272 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.771007084 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.268042952 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.591159478 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.485833128 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.610684067 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.108893931 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.756944929 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.681858972 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.636631331 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571705916 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.052843137 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.414266476 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519995394 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.232127851 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.253825771 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.32616441 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.629237929 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.628050787 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.272144592 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.212587222 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507206052 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.407633417 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.429834702 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.369611811 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.257143238 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.522052617 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.412156767 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.440777356 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.516260084 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.716476978 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.267508935 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.832127457 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.282986534 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.525849916 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.476997492 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.495911745 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.634015748 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.577200684 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.771422213 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.510096553 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.755940062 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.231577599 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.804960018 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.263791666 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.10765367 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.619821613 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.268556407 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.762077716 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.930609273 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.758159373 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.557020762 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.569256501 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.281551671 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.504315286 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 4.228744014 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.297872604 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.943891341 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.640163592 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.264319735 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.734298986 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.325452975 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.479948036 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.053655046 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.776338035 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.260569349 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.098667195 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.712484414 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.225225435 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.5657932 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.324213027 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.261568944 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.091717502 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.251448366 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.280908308 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.309218335 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.802018062 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.266440525 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.868872218 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.416449264 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.450023281 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.263977436 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4150892 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.250617783 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.466509321 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.228580349 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.522069505 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.560571831 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.746073593 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.264476489 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.962688616 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.969706147 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.367252446 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.505242274 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.265716391 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.655209411 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.031588034 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.266244149 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.98445846 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.474664526 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.462619875 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710077347 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555779599 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 6.316360506 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.481927661 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.266903299 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644780291 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 3.794424253 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.837717552 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.606854621 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.273001471 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.671413714 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.300879811 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.423406727 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.745597657 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.17921183 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.268827615 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.586248622 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.270536651 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.082076627 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.907202422 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445925335 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.410578491 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.294158261 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.92065668 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.6040364 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.387884292 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.255083067 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.53244409 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 4.220929096 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.231749579 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.119920662 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.130623341 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.487592331 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.608199657 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.253680821 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.465120495 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.297700559 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.260069754 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.789029768 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.262263503 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.57652787 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.243735904 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.892867703 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.514983544 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.369135332 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.441663235 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.611299417 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.250028534 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.250663193 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.539780362 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.237235346 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.271416016 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.60817168 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 6.320183299 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.425180025 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.747019761 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.482199186 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.599706672 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.537264021 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.125735541 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.308728074 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.583547438 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.272038273 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.836319479 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.355683014 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.790192785 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.098126101 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.291922837 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.132274596 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.508577389 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.149234713 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440732455 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.101485164 seconds)
  done (took 2160.653432639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.344561828 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.386623525 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.352154623 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.322014567 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.331287441 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.327372753 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.343315927 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.305415174 seconds)
  done (took 51.995886485 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.276615468 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.205132224 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.90645308 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.464155428 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.31780959 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.642005575 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.425931923 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.988624404 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.476664793 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.528920488 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.299830431 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.322640372 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.255851678 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.299002879 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.29220203 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.344149416 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.269935614 seconds)
  done (took 94.611183383 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.335899925 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.409718311 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288891333 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.355361861 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.37404026 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.707625248 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.253713033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.274343966 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.666232116 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.008937199 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.287477884 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.4101989 seconds)
  done (took 83.684914899 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.310503215 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.293910628 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.285404653 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.308332675 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.313218502 seconds)
  done (took 7.786021644 seconds)
done (took 2661.399047347 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.571615414 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.784886205 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.838377922 seconds)
  done (took 4.876999801 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.385648648 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.936634267 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.938999936 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.641457087 seconds)
  done (took 8.172804675 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.581386991 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.765089979 seconds)
  done (took 4.61037942 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.722922049 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.270547287 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.875081451 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.255637017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.259701626 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.261062333 seconds)
  done (took 20.070942527 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 6.243633602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 5.042671877 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 6.261257394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 5.023895952 seconds)
  done (took 23.841511825 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.273126906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.309170109 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.272196276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.276780917 seconds)
  done (took 19.399260493 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.55066387 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.536758043 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 4.333027226 seconds)
  done (took 8.670889227 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.219001833 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.820088283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.225823229 seconds)
  done (took 7.570098921 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.457154813 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.304438114 seconds)
  done (took 6.008399082 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.446949975 seconds)
  done (took 2.705638375 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.743939288 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.76820625 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.120833727 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.138612919 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.2581921 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.600766639 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.624747533 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.557603249 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.98164623 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.782249896 seconds)
  done (took 19.827557988 seconds)
done (took 138.473880992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.128857966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.649177087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417526493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.496888063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353059047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422927421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.870217933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.304681804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.559182933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.563406449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.994476004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.365976906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.304287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.641465724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.300595245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.608380873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425338594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.138935354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.70208281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.353662435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.884630128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.839977568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.726911734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.863099731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435255109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.430904695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.258784859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.647178233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.919398752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.284435136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433724113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.656180219 seconds)
  done (took 158.252918089 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.269870166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.254255262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.267784151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.288485365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.259892937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.273557224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.266559641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.257529909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.957709327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.932037796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.269761846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.245523758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.264985602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.284012293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289718442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.276541527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.174715078 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.270976168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.255597989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.280452066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.269192594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.123741857 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.266469775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.14611729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.164153366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.273993856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.283806096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.279496326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.263518533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.275211736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.270391409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.25825977 seconds)
  done (took 192.792907579 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.270619984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.299207978 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.276388151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.275691722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.290421388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.280394753 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.266783185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.260675371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.26633573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.254416277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.275747238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.256177665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.279381414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.25756257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.270579659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.252860014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.28050286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.278927078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.259892136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.282987646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.266969906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.267349276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.284720041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.27415051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.25975442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.27099188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.264150967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.278390704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.257171525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.275077612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.264858643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.269578483 seconds)
  done (took 201.937053639 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.59927094 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.31017809 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.21557619 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.019232419 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.201866576 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.28789802 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.02449624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.600425649 seconds)
  done (took 15.551314532 seconds)
done (took 569.805118222 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.959482948 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.207178934 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.432503371 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.528401325 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.855738845 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.644095933 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.479700076 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.748147297 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.007440272 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.747645601 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.744354825 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.593340394 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.116218593 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.517505947 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.470433431 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.76598518 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.687224568 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.965716542 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.467102212 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.137647165 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.469148373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.157526133 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.770269137 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.05378553 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.772077934 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.176331345 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.384159958 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.668964112 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.493420097 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.436067813 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.298715812 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.660857903 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.513220298 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503859641 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.779725366 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.73088762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.629791868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.724267109 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.439216891 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.949066738 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.140113778 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.857276666 seconds)
  done (took 81.960071703 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.290876013 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.316685498 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.478973071 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.399358579 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.95296093 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.384792166 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.552313501 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.5078999 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376972751 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.484816875 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.541076175 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.941884845 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.570655608 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925193318 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.509881715 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.551092014 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.404515802 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893502037 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.497779445 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.509917735 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.352737912 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.460862367 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.320346291 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.497455672 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.328079634 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.35267239 seconds)
  done (took 40.701090419 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.339585048 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.478090051 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.595453298 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.658542479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.54544432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.279968606 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.617550653 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.494506742 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.168085829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.387382371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.417733571 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.431989923 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.48836606 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.619741483 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.898997059 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.486158615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.536365273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.471224598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.495059469 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.504176744 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.452898289 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.448624995 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.647291944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.408335564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.225439628 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.69664633 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.599678946 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.875121571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.877117391 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.473618231 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.443071369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.605603682 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.65922367 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.57426368 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.435168787 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.328803009 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.332425928 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415263677 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.067501346 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.478623594 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.645120381 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.494226133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.709905136 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.869201495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.380572673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.603578265 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.717057905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.426420403 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.423699865 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.160339066 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.599602023 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.441786206 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447846855 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.600050354 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.419982729 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.740143675 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.496344902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.602004927 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.461983212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.954524111 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.433197464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.691173127 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.500684207 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.38175049 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.622142782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.602164015 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.482210512 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.736926879 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.722685176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.857530278 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.884973616 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.383446052 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.366986728 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.402567527 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.470528259 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.754455067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.707832993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.585664269 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.67704188 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.608768423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.859324 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.729633651 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.303322084 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.948548268 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.377558077 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.328190863 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411783206 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.663907103 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.624505928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.809498326 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.8745618 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.600496975 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.645910657 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.684871981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.686300049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.689897637 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.332273521 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.343990595 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.559537432 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87997842 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.399885384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.522454107 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.00615559 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.59689002 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.559179235 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.538271961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.729227989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.394438403 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.755642917 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.299460078 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.510402063 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.80608093 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.597457034 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.65678 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.316460217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.847037688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.418792212 seconds)
  done (took 248.616562667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.283583317 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.286168932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.299189889 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.281842963 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.280032637 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89125427 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.356780448 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.258207809 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896151476 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.350860491 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.244053513 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.270864482 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.254976892 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.278628074 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.873496863 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.870344602 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.093835315 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.287340823 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.288974404 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.269797687 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.105616462 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.280002308 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.25614804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.274105807 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.268783197 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.260573573 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.274596645 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.314340884 seconds)
  done (took 157.198984211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.332371172 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.714243257 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.3615897 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.443873984 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.355726846 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.344473417 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.838736606 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472622439 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.402179588 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.344955299 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.343720609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.569802479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.575144873 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.912950126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.456828925 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.434076255 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.973700768 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.466950475 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.391633289 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.347637073 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.475779089 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.674676828 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.632679877 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.599086346 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479224398 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.627020629 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.409014066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.337458946 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436829615 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.831023022 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.347049616 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.715466354 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463135594 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.329830396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.843752473 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.678970031 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.919072448 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.884978165 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.508788125 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.293820314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.30470969 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.56468512 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.627489568 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.360751909 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.339498079 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002885463 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.339729104 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.724894798 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.38600702 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.292893359 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44179411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43591769 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.602449341 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.300924112 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.480729753 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.494798518 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.839942944 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.297200717 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.400598858 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.646945719 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.322662413 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.823884454 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.837197358 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.39253867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367544367 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.18565979 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.419153675 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.847748076 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.939202407 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.370916375 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.674089501 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.527513498 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306718016 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.586492982 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.496920709 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.784979622 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.90956684 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.476834452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.429143083 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.404645864 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.59721721 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.321842393 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.883841723 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.413597427 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.30161899 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.823490515 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.706475719 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.300382522 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317968895 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.442568521 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.464594201 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.511143796 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.61958105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.414256695 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.218408757 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.571576225 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.632316407 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.327587037 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.455482278 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.31830235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.774396847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.50983695 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.331039116 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.621381233 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735668703 seconds)
  done (took 173.464780348 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.052558568 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.375501354 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52037559 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.850573288 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.667320154 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.787261411 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.600159283 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.394203916 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.592721221 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.550255758 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.556267965 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.414621715 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.291541071 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.060370298 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.360795536 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.557182612 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.376654087 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.95914328 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.639030644 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.291081258 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.649653291 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.09494385 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.620448224 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.738031785 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.73507791 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.846932074 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.98555693 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.466746109 seconds)
  done (took 53.307869815 seconds)
done (took 756.520035198 seconds)
SAVING RESULT...
DONE!
