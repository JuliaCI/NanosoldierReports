cset: moving following pidspec: 21054
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.763685206 seconds)
loading group "shootout"... done (took 0.794531029 seconds)
loading group "string"... done (took 0.226963182 seconds)
loading group "linalg"... done (took 3.171060702 seconds)
loading group "parallel"... done (took 0.020966944 seconds)
loading group "find"... done (took 1.170389979 seconds)
loading group "tuple"... done (took 0.704520002 seconds)
loading group "union"... done (took 3.025980678 seconds)
loading group "dates"... done (took 0.152409934 seconds)
loading group "micro"... done (took 0.056033795 seconds)
loading group "simd"... done (took 0.381891076 seconds)
loading group "io"... done (took 1.353609074 seconds)
loading group "random"... done (took 2.348427699 seconds)
loading group "problem"... done (took 1.218895048 seconds)
loading group "array"... done (took 4.556969052 seconds)
loading group "misc"... done (took 0.959815127 seconds)
loading group "scalar"... done (took 3.419598734 seconds)
loading group "sort"... done (took 0.303367483 seconds)
loading group "sparse"... done (took 3.524698264 seconds)
loading group "collection"... done (took 5.914592425 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.516974655 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.206159376 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122357929 seconds)
  done (took 0.921117941 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.137129988 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015280309 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022840461 seconds)
  done (took 0.758729496 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020294998 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.101794154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021141576 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021784454 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.02173321 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021106814 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.020914409 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020806849 seconds)
  done (took 0.813459711 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028713603 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022691585 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.02071401 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022432451 seconds)
  done (took 0.678474953 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023230073 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.086317528 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019651648 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019567006 seconds)
  done (took 0.729217231 seconds)
done (took 5.163995355 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.437719996 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.13207328 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029607175 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.147044312 seconds)
  done (took 1.362415767 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021450381 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026445319 seconds)
  done (took 0.639823478 seconds)
done (took 2.586557945 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.757140137 seconds)
  done (took 5.334340342 seconds)
done (took 5.917852232 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145199973 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029209786 seconds)
  done (took 0.757588533 seconds)
done (took 1.402302224 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.768119962 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.775473353 seconds)
    (2/2) benchmarking "String"...
    done (took 0.88364053 seconds)
  done (took 2.268713613 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.044665837 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.600811897 seconds)
    (3/3) benchmarking "different"...
    done (took 0.64881622 seconds)
  done (took 2.877986897 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.049089 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.589764939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.966296547 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.59038144 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.603094656 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.533247441 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.744680942 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.305683438 seconds)
  done (took 23.927054336 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.70572608 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.897066795 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.889908753 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.984956739 seconds)
  done (took 15.154751908 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.052176681 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.201824641 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.202328863 seconds)
    (4/4) benchmarking "different"...
    done (took 1.515024648 seconds)
  done (took 5.69857646 seconds)
done (took 58.416429993 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.590259361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.055900168 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.621726478 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.793557878 seconds)
  done (took 16.645484603 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.134929966 seconds)
    (2/2) benchmarking "read"...
    done (took 1.030353772 seconds)
  done (took 2.778499946 seconds)
done (took 20.030088392 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.127846059 seconds)
  done (took 7.711434499 seconds)
done (took 8.302591492 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.24767665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.676197319 seconds)
  done (took 5.50783238 seconds)
done (took 6.17556403 seconds)
SAVING RESULT...
DONE!
