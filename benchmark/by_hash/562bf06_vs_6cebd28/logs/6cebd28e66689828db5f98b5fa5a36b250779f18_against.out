cset: moving following pidspec: 21695
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.773484129 seconds)
loading group "shootout"... done (took 0.787625495 seconds)
loading group "string"... done (took 0.224370042 seconds)
loading group "linalg"... done (took 3.159531119 seconds)
loading group "parallel"... done (took 0.020961379 seconds)
loading group "find"... done (took 1.173164793 seconds)
loading group "tuple"... done (took 0.704585591 seconds)
loading group "union"... done (took 3.035288713 seconds)
loading group "dates"... done (took 0.152172652 seconds)
loading group "micro"... done (took 0.055947461 seconds)
loading group "simd"... done (took 0.358763547 seconds)
loading group "io"... done (took 1.381197058 seconds)
loading group "random"... done (took 2.356414577 seconds)
loading group "problem"... done (took 1.185614273 seconds)
loading group "array"... done (took 4.559606423 seconds)
loading group "misc"... done (took 0.963421327 seconds)
loading group "scalar"... done (took 3.41765887 seconds)
loading group "sort"... done (took 0.302361278 seconds)
loading group "sparse"... done (took 3.541961386 seconds)
loading group "collection"... done (took 5.943503588 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.519047303 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.2079888 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1230107 seconds)
  done (took 0.923669664 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.137700163 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015354371 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022189289 seconds)
  done (took 0.759095582 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020366358 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.098883635 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021300845 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.021875185 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.021752091 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021205328 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021044127 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.020984073 seconds)
  done (took 0.811262941 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.028510008 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.022857573 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020876319 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022300448 seconds)
  done (took 0.677550705 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022354426 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.082743896 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019897259 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019729455 seconds)
  done (took 0.724510325 seconds)
done (took 5.162249499 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.439706429 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.133081043 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.029904131 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.1478114 seconds)
  done (took 1.364542053 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021701373 seconds)
    (2/2) benchmarking "read"...
    done (took 0.026476547 seconds)
  done (took 0.639697012 seconds)
done (took 2.587967053 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.669462998 seconds)
  done (took 5.244429062 seconds)
done (took 5.826012993 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143949908 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.029380474 seconds)
  done (took 0.75402723 seconds)
done (took 1.412245574 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.823504335 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.749510182 seconds)
    (2/2) benchmarking "String"...
    done (took 0.838913601 seconds)
  done (took 2.211215168 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.032809311 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.594974077 seconds)
    (3/3) benchmarking "different"...
    done (took 0.634285584 seconds)
  done (took 2.843890312 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.916954336 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.321511427 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.881803908 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.585107348 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.598490601 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.088641978 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.770470724 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.276084937 seconds)
  done (took 23.114220093 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.583807925 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.928474578 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.863068423 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.968405161 seconds)
  done (took 15.020316421 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.039696699 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.989134811 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.989364542 seconds)
    (4/4) benchmarking "different"...
    done (took 1.449356726 seconds)
  done (took 5.190466087 seconds)
done (took 56.783775325 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.584487786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.178939855 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.63844014 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.721411591 seconds)
  done (took 16.705452606 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.104023432 seconds)
    (2/2) benchmarking "read"...
    done (took 1.024746325 seconds)
  done (took 2.741940459 seconds)
done (took 20.044807841 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.077847507 seconds)
  done (took 7.659907022 seconds)
done (took 8.242612265 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.234410424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.706418678 seconds)
  done (took 5.522810512 seconds)
done (took 6.121153638 seconds)
SAVING RESULT...
DONE!
