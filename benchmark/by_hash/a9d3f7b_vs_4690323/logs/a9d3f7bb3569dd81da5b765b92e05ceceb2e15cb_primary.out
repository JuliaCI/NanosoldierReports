cset: moving following pidspec: 2627778
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.261526964 seconds)
loading group "string"... done (took 0.280818659 seconds)
loading group "linalg"... done (took 3.64989721 seconds)
loading group "parallel"... done (took 0.025736196 seconds)
loading group "find"... done (took 1.373425636 seconds)
loading group "tuple"... done (took 0.986149592 seconds)
loading group "dates"... done (took 0.246962877 seconds)
loading group "micro"... done (took 0.062040272 seconds)
loading group "io"... done (took 1.368459557 seconds)
loading group "frontend"... done (took 0.011731999 seconds)
loading group "scalar"... done (took 4.850460619 seconds)
loading group "sparse"... done (took 3.372490962 seconds)
loading group "alloc"... done (took 0.015263325 seconds)
loading group "broadcast"... done (took 0.369686135 seconds)
loading group "union"... done (took 3.720599244 seconds)
loading group "simd"... done (took 2.838556232 seconds)
loading group "random"... done (took 3.123142124 seconds)
loading group "inference"... done (took 2.077754347 seconds)
loading group "problem"... done (took 1.234686044 seconds)
loading group "array"... done (took 4.733380671 seconds)
loading group "misc"... done (took 0.893000656 seconds)
loading group "sort"... done (took 0.356400481 seconds)
loading group "collection"... done (took 6.417332309 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.389316997 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.171305858 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113952604 seconds)
  done (took 0.940967331 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.129258768 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020544761 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020558257 seconds)
  done (took 0.820333174 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021630475 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.080868577 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022229848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.023409115 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.023488369 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022793774 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022497719 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022743689 seconds)
  done (took 0.870521393 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031694188 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.01949711 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020707899 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020285975 seconds)
  done (took 0.743309733 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.025513697 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.074000988 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019148856 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019169028 seconds)
  done (took 0.785703246 seconds)
done (took 5.343329914 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.375230033 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128084451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033627036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.160186742 seconds)
  done (took 1.373498727 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020115899 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025163454 seconds)
  done (took 0.702306031 seconds)
done (took 2.724539914 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.372800611 seconds)
  done (took 4.017876384 seconds)
done (took 4.667474865 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156895839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020170381 seconds)
  done (took 0.830133684 seconds)
done (took 1.531654545 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.749049131 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.797078337 seconds)
    (2/2) benchmarking "String"...
    done (took 0.871459869 seconds)
  done (took 2.34478685 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.960816505 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.691162611 seconds)
    (3/3) benchmarking "different"...
    done (took 0.709433523 seconds)
  done (took 3.012756345 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.702576233 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.143192525 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.940459478 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.652949045 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.662966821 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.165680911 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.306055296 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.004853059 seconds)
  done (took 22.529636043 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.961780545 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.915375868 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.892089571 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.938073191 seconds)
  done (took 8.404431408 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.964633494 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.042313224 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.042243482 seconds)
    (4/4) benchmarking "different"...
    done (took 5.656240491 seconds)
  done (took 9.417939143 seconds)
done (took 53.885428474 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.570577082 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.73854137 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.684838089 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.309607079 seconds)
  done (took 15.954860601 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.889930176 seconds)
    (2/2) benchmarking "read"...
    done (took 1.010782016 seconds)
  done (took 2.56653913 seconds)
done (took 19.173757419 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.859780057 seconds)
  done (took 7.510983332 seconds)
done (took 8.163230916 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.784997163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.023671357 seconds)
  done (took 4.459661863 seconds)
done (took 5.11721617 seconds)
SAVING RESULT...
DONE!
