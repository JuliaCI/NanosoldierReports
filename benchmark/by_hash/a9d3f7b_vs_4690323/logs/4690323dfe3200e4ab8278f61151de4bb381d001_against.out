cset: moving following pidspec: 2629370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.269912119 seconds)
loading group "string"... done (took 0.278771962 seconds)
loading group "linalg"... done (took 4.132595262 seconds)
loading group "parallel"... done (took 0.025493313 seconds)
loading group "find"... done (took 1.550788091 seconds)
loading group "tuple"... done (took 0.98273562 seconds)
loading group "dates"... done (took 0.247873441 seconds)
loading group "micro"... done (took 0.061434872 seconds)
loading group "io"... done (took 1.373767484 seconds)
loading group "frontend"... done (took 0.011783921 seconds)
loading group "scalar"... done (took 4.965490691 seconds)
loading group "sparse"... done (took 3.453573903 seconds)
loading group "alloc"... done (took 0.015214717 seconds)
loading group "broadcast"... done (took 0.365479558 seconds)
loading group "union"... done (took 3.720377161 seconds)
loading group "simd"... done (took 2.943393959 seconds)
loading group "random"... done (took 3.26044779 seconds)
loading group "inference"... done (took 2.064994136 seconds)
loading group "problem"... done (took 1.241752178 seconds)
loading group "array"... done (took 4.89613172 seconds)
loading group "misc"... done (took 0.892824047 seconds)
loading group "sort"... done (took 0.350065571 seconds)
loading group "collection"... done (took 6.403886649 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.399155623 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179846958 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122185439 seconds)
  done (took 0.980943343 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.139976276 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.020657371 seconds)
    (3/3) benchmarking "different"...
    done (took 0.020696096 seconds)
  done (took 0.855538214 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021162144 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.081491514 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022335995 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022738108 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022962356 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.022319957 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.022123962 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.022285776 seconds)
  done (took 0.892142367 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.031469954 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.019445635 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.020285598 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.020345603 seconds)
  done (took 0.764676857 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.026071691 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.08325168 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.019396253 seconds)
    (4/4) benchmarking "different"...
    done (took 0.019458111 seconds)
  done (took 0.820110153 seconds)
done (took 5.529880852 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.38419605 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.133968118 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.033260304 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166555036 seconds)
  done (took 1.419385631 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.020044554 seconds)
    (2/2) benchmarking "read"...
    done (took 0.025521914 seconds)
  done (took 0.727407725 seconds)
done (took 2.821527557 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 3.716818864 seconds)
  done (took 4.386901136 seconds)
done (took 5.062831205 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158845854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.020077529 seconds)
  done (took 0.858003757 seconds)
done (took 1.5553695 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 5.854751607 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.828274817 seconds)
    (2/2) benchmarking "String"...
    done (took 0.904599619 seconds)
  done (took 2.424179479 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.986118571 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.718329545 seconds)
    (3/3) benchmarking "different"...
    done (took 0.735955671 seconds)
  done (took 3.118197733 seconds)
  (4/7) benchmarking "replace"...
  done (took 1.730754499 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.169826409 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.967116599 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.679106185 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.690447092 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.193211731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.332826465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.037825511 seconds)
  done (took 22.750254659 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 2.973974027 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.948976479 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.950368258 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.965420142 seconds)
  done (took 8.561727069 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.989417028 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.950418 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.950154548 seconds)
    (4/4) benchmarking "different"...
    done (took 0.774189198 seconds)
  done (took 4.370960128 seconds)
done (took 49.558012444 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.6864602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.749240332 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.714950713 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359510524 seconds)
  done (took 16.188615036 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.911865011 seconds)
    (2/2) benchmarking "read"...
    done (took 1.037040879 seconds)
  done (took 2.63835395 seconds)
done (took 19.50516624 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.895096664 seconds)
  done (took 7.572620059 seconds)
done (took 8.251062464 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.951630312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.057221374 seconds)
  done (took 4.686139065 seconds)
done (took 5.392180919 seconds)
SAVING RESULT...
DONE!
