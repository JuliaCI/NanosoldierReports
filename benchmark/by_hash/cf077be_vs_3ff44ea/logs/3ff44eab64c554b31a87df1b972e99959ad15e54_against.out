cset: moving following pidspec: 2896305
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 2.531536438 seconds)
loading group "shootout"... done (took 1.201117569 seconds)
loading group "string"... done (took 0.764159465 seconds)
loading group "linalg"... done (took 9.743739026 seconds)
loading group "parallel"... done (took 0.255466809 seconds)
loading group "find"... done (took 4.020226412 seconds)
loading group "tuple"... done (took 2.519924209 seconds)
loading group "union"... done (took 15.175387999 seconds)
loading group "dates"... done (took 1.992407116 seconds)
loading group "micro"... done (took 0.261993738 seconds)
loading group "simd"... done (took 7.338773347 seconds)
loading group "io"... done (took 1.512287816 seconds)
loading group "random"... done (took 14.016733914 seconds)
loading group "problem"... done (took 1.904041709 seconds)
loading group "array"... done (took 39.958498712 seconds)
loading group "misc"... done (took 2.309158907 seconds)
loading group "scalar"... done (took 75.385710862 seconds)
loading group "sort"... done (took 6.206240464 seconds)
loading group "sparse"... done (took 21.603958919 seconds)
loading group "collection"... done (took 28.428321539 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.46665304 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.295740164 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176682369 seconds)
  done (took 1.685286881 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.098947969 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.066147265 seconds)
    (3/3) benchmarking "different"...
    done (took 0.073368394 seconds)
  done (took 1.441287122 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.075312091 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151005785 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073122101 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073301186 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073283366 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073654781 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072813475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073005874 seconds)
  done (took 1.791131349 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078513504 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073329336 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071563556 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073405129 seconds)
  done (took 1.503647609 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.070702844 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.129503839 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.070192205 seconds)
    (4/4) benchmarking "different"...
    done (took 0.070267832 seconds)
  done (took 1.533238649 seconds)
done (took 10.007203042 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.526775965 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178032852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084263403 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102553872 seconds)
  done (took 2.124979702 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070363536 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080775983 seconds)
  done (took 1.358184392 seconds)
done (took 4.676580959 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.203425829 seconds)
  done (took 6.397041279 seconds)
done (took 7.587153721 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.205555778 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084209061 seconds)
  done (took 1.483146547 seconds)
done (took 2.757589083 seconds)
RUNNING BENCHMARKS...
(1/4) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.327099982 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.438975984 seconds)
    (2/2) benchmarking "String"...
    done (took 1.522615542 seconds)
  done (took 4.23744009 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.708786496 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.256541241 seconds)
    (3/3) benchmarking "different"...
    done (took 1.304888761 seconds)
  done (took 5.475296082 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.565120381 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.091342571 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.550983181 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.254212281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.27050982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.752376073 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.406586782 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.931916013 seconds)
  done (took 28.472482703 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.248999999 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.634382892 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.585974089 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.675233763 seconds)
  done (took 18.420270926 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.703446086 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.611611069 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.616599411 seconds)
    (4/4) benchmarking "different"...
    done (took 1.725449382 seconds)
  done (took 7.98479885 seconds)
done (took 74.784252096 seconds)
(2/4) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.27729589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.932164813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.314665898 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.320422014 seconds)
  done (took 20.047745135 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.786294096 seconds)
    (2/2) benchmarking "read"...
    done (took 1.680648826 seconds)
  done (took 4.680828525 seconds)
done (took 26.031747235 seconds)
(3/4) benchmarking "problem"...
  (1/1) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.965754949 seconds)
  done (took 9.16761343 seconds)
done (took 10.397519859 seconds)
(4/4) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.897312295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.338062534 seconds)
  done (took 7.443618386 seconds)
done (took 8.748725457 seconds)
SAVING RESULT...
DONE!
