cset: moving following pidspec: 1290404
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.258707129 seconds)
loading group "shootout"... done (took 0.788695352 seconds)
loading group "string"... done (took 0.218244088 seconds)
loading group "linalg"... done (took 3.170868814 seconds)
loading group "parallel"... done (took 0.021864373 seconds)
loading group "find"... done (took 1.177745439 seconds)
loading group "tuple"... done (took 0.686104183 seconds)
loading group "union"... done (took 3.027328552 seconds)
loading group "dates"... done (took 0.157163046 seconds)
loading group "micro"... done (took 0.05904694 seconds)
loading group "simd"... done (took 0.39181123 seconds)
loading group "io"... done (took 1.389675638 seconds)
loading group "random"... done (took 2.303183399 seconds)
loading group "problem"... done (took 1.156190502 seconds)
loading group "array"... done (took 4.413604528 seconds)
loading group "misc"... done (took 1.108075513 seconds)
loading group "scalar"... done (took 3.482057136 seconds)
loading group "sort"... done (took 0.307607832 seconds)
loading group "sparse"... done (took 3.531323155 seconds)
loading group "collection"... done (took 5.955405687 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.475622218 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.072837072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.251477241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072967059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.26802072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084060522 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.086461418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.072555657 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.203253643 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160263172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.212467042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.36334293 seconds)
done (took 5.051128656 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.298396018 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.032703338 seconds)
    (2/2) benchmarking "String"...
    done (took 0.12319392 seconds)
  done (took 0.752979732 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.134406166 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015857865 seconds)
    (3/3) benchmarking "different"...
    done (took 0.022698533 seconds)
  done (took 0.765107474 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020404814 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.098036184 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021705667 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022569385 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022200845 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021594394 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021385056 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021253235 seconds)
  done (took 0.816802484 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029106571 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.02357973 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021565759 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022856632 seconds)
  done (took 0.688460726 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.022710425 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.091834792 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.0270814 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027087291 seconds)
  done (took 0.771474624 seconds)
done (took 4.718952499 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.196461479 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.779512938 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.869577216 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.175353477 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.338293217 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.284543045 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.077726964 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230491844 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.147133736 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.031523767 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186075601 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.036234057 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.505169175 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.451298445 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.026749925 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.14280594 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.578846531 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038736859 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070665453 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.2436702 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.034926148 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.038821372 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043138846 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027392104 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.105477595 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.132155107 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.586900604 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.06450208 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.024109242 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048911802 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.027836503 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032331868 seconds)
  done (took 9.205468102 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.158438386 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143729072 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.023535663 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.05916875 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.052487812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.024666136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.029894572 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.022790081 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.042590166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.087869682 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.045195934 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15273747 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.02201787 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024887488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.134404694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.11545122 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.037262027 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.036638106 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022208339 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.035896051 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.048318381 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.034402933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.032167835 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.031588542 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.067700639 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.088847679 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041412786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.063995919 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.022733124 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.033629431 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054438302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.06279257 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022986422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021241134 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.064119364 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.043990984 seconds)
  done (took 2.663553558 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.616012863 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.050693111 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.139509779 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.126754745 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067798905 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.051022065 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.173274634 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.075066314 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.053985934 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024003828 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.19535575 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.630616652 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.163922799 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.014722406 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02767285 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.167488665 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.886560681 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.962129699 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023518712 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023515962 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.130730529 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026133917 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.169933403 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.024909011 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.132706711 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.696895077 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029823647 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025306014 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.050516765 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.259058201 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021162847 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.093379609 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.046855886 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025115059 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.560549444 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.02170847 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.019729503 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041761704 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.050730462 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021900913 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023114597 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.030650861 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.020978091 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070905285 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032556562 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.480675652 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024854527 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.669105649 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.663273135 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.029637989 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026119419 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.055796718 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.01974947 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023216253 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.54522055 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.090604604 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.022778548 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.285721157 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025547588 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024089323 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024264583 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.05426464 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023640684 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024590711 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026280792 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040694771 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.975060237 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033092563 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.042332531 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021791091 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022870149 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021384319 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.393800986 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029155921 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.024887328 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020338222 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025977093 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022470268 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.021947769 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.060642776 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.048384226 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.045968678 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026174073 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023018504 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022470938 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.540733404 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.953206722 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025141321 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024592311 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.513910406 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020499607 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022608674 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.02415004 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.044340614 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024450167 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.021074442 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.059410244 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025188921 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.127410214 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346128091 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026012131 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020667015 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346148551 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024715689 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058649706 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075774174 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02269318 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.064084473 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023276849 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020381556 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026555753 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020390526 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024637296 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021362711 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022005745 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021256391 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023090155 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023997518 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022908105 seconds)
  done (took 23.019561537 seconds)
done (took 37.098059088 seconds)
(4/20) benchmarking "parallel"...
done (took 0.80814339 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.204410712 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.049723401 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.01974193 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.154441279 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.044360202 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.131042884 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.166111862 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.120315723 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.044008976 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.043805419 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.043854437 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.170935558 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.179636065 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.045535532 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.112046489 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.17998489 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.045243019 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.019708151 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.044240563 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.044620699 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.045265133 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.019923197 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.0451174 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.046462984 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.113406498 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.045669025 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019846043 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.112549789 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.045441315 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.114372329 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.047004877 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.04589715 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.047455303 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.114476824 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.047483684 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.114678856 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020006809 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.047324746 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.047471495 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.049068162 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.048119752 seconds)
  done (took 3.807740616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046179174 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038466519 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.053912343 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.0181003 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02796932 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.038387744 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018144302 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.037886208 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.056426103 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039115788 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.038698308 seconds)
  done (took 1.154739709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041340159 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038987121 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.048036671 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018616472 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030715553 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.041121367 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018690191 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039439978 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.055083548 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039140986 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039161815 seconds)
  done (took 1.104299053 seconds)
done (took 6.733430432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.147879312 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.119650423 seconds)
  done (took 0.946722988 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.566895632 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.204442467 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.127416027 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.245064532 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.120178814 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.150430362 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.716714412 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.155408615 seconds)
  done (took 7.020187709 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.074928839 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.138689906 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.025545554 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023531814 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023829236 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.024043348 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.025202756 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023535855 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022534227 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.024966517 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.024601533 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.022522702 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023415178 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025698221 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023831699 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023716327 seconds)
  done (took 1.376646953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.027752145 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.025389646 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027207239 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017005476 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.026816591 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.02592626 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.026789556 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.027800198 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026053665 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.026468517 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.024352925 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.027222384 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026050773 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.024828194 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.027321141 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.01684709 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.027605509 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.026673662 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.028738815 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027025182 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026081993 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024465081 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.027696491 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.025615648 seconds)
  done (took 1.315911181 seconds)
done (took 11.355464784 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131858105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.03008705 seconds)
  done (took 0.849404714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.124483156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125495635 seconds)
  done (took 0.951750186 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.027722788 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016050497 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.031256316 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.023698741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016214698 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.015903336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.03009695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016165107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.015936025 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016086999 seconds)
  done (took 0.912659338 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019202849 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.022479107 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.020554252 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019165251 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.020987886 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017356667 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019873271 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.018191375 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023304029 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016730931 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020638996 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.039813954 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.02031175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.04029921 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.020606013 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020336595 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021386119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019219222 seconds)
  done (took 1.105881886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.01776602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017190179 seconds)
  done (took 0.734856049 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020308047 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017031313 seconds)
    (3/7) benchmarking "month"...
    done (took 0.01845264 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018319088 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016468469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.01598272 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016456329 seconds)
  done (took 0.824995194 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395872425 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.089675813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322328962 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.02501722 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.036879162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.235041283 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020578848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024686109 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024366266 seconds)
  done (took 1.877837348 seconds)
done (took 7.957892396 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.044688207 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.140255676 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.145782751 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437145799 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034967769 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022611546 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057246583 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221632169 seconds)
done (took 1.820993396 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.270147699 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.264030363 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.18293568 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.020968577 seconds)
  done (took 2.17095977 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310133789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139506965 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.030984469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023037104 seconds)
  done (took 1.22063246 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.021987183 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027441674 seconds)
  done (took 0.762625923 seconds)
done (took 5.138926063 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.029005671 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.016569408 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.022536779 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018266061 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.01801058 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017925973 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017589524 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018377151 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016401198 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018303693 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018142606 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018265065 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.017916743 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017879527 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.017429357 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018253826 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016464899 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.017893451 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017883822 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.017941556 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016353291 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018289187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017462843 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.01784324 seconds)
  done (took 1.139695034 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.037104087 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022160366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022173486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022857224 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023606551 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.023349737 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.023192597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022386104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022508874 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021160528 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023333212 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023241987 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.02094445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023559943 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021447718 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024134835 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.023281739 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023359752 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022015765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024304951 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022779478 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022502986 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023793308 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.02285192 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023522037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023443688 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021231985 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022257412 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022275128 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023265438 seconds)
  done (took 1.417909446 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023081447 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015165687 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015292783 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025400878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.014911922 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015076547 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015525404 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.014791384 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015325339 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016095751 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015498294 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.01501583 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.015766422 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.014910505 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.014968787 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015520512 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020278395 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.035843608 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015300805 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.014993588 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.019742961 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015217235 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.014948231 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.014927614 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015388311 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.014982423 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.014802017 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015276382 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.014964062 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.01554142 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015027844 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020517072 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.022022167 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015990988 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.026364303 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.021007056 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016018298 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020466983 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.017072958 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015550972 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015525723 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015847382 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.01557351 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015353429 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.02585384 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015321144 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016133858 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.01553836 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015187139 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.014892305 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.014958363 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016406817 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.020726051 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016113975 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.014895143 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016056627 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.014861691 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.01553657 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015152166 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015025828 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015130448 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019189106 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016315066 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.015860882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037004511 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016469741 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025701365 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015087292 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015409615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019230267 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015523117 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.034800433 seconds)
  done (took 1.993219597 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.02695999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025106386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.03411045 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.024677288 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018356326 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015910119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.018969159 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01600355 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024970104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019217479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015916233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.018813466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024948559 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019211665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.01686814 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.024812628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019208798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018450213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.015816402 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019228821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.016931334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018945318 seconds)
  done (took 1.173071488 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103516774 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022389384 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.067277482 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.021973651 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020627094 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.021861491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022577133 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022300547 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022513452 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.023638489 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02393439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023208157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.02097124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0237173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023624802 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.023425737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022568139 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.023342922 seconds)
  done (took 1.250308683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.033787747 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021010105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.047772932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.020999355 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021355847 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.02064129 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024690008 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024323295 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.020503959 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.020939144 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.024678892 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021166981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.020787013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021155675 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020660613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0210125 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.020616409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021126455 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025185601 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.02537612 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025404623 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.024968113 seconds)
  done (took 1.242315689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036335813 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.02093696 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.039601316 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023191465 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.01545937 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015464003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023197705 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021820058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.02292981 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020879377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021937466 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01545716 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023943446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021959932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024241052 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02205687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020931568 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.02199672 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020910041 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015499424 seconds)
  done (took 1.16646243 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127027903 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017634683 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.01741519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.021496655 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017173928 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017189029 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.021600462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017387754 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017240056 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.041572038 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017330549 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017276354 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.021577444 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.019870421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017197186 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.021676944 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.021541979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.021582402 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017307865 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017276357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.041681523 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017400249 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.021735097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017299451 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017256474 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017191846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017226211 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.019957002 seconds)
  done (took 1.404067475 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.038656976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015180946 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015379189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019283314 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019022043 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.024679963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.018844713 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.018651967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.014728299 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.014988715 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.016920271 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.014681724 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0146526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024277296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.014694728 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017249634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024568756 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019010678 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024853338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026784863 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017043801 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023928936 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.016989645 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015155181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025342031 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017203363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018999584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.019856162 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017372038 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.016645065 seconds)
  done (took 1.306384155 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.029315466 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0264428 seconds)
  done (took 0.794365822 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018226683 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.032830194 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.01481931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028430661 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024247015 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019329316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.023680761 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024114904 seconds)
  done (took 0.903188347 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.122777264 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.147861756 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017477911 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.018035646 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.12170762 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083348208 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.132256066 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028674695 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030285444 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.019748123 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.016804438 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.131914573 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016481714 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030053846 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.017958457 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026231111 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023763672 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034348151 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.029439928 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015394021 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.028920168 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017019272 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016328587 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017159523 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017295304 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023180245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032093362 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.028836037 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.024623556 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.014787729 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035447062 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.015841115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016338881 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.024712151 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.121360386 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016393003 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.053508179 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.015825863 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.019705177 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015449354 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.027315318 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036497277 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.029884672 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.033364866 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.016977239 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017385208 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015541541 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017084485 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.019654038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.024639321 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.015689991 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023047603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015608377 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017324811 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026319382 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.015952091 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020104737 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.024868497 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029245379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.025967517 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028014973 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.030996369 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024457032 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.023641776 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016397069 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.035517893 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017090913 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.028886568 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03166675 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017707365 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.028808187 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015702157 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.014890311 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.015761233 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049449978 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.017111189 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016511941 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.015861547 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.01594292 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.01705788 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025174672 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020124794 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02307777 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018497534 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.031303647 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.024693516 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015523019 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.022391758 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.033828335 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.019938549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.015981202 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.032753525 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.019788893 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015648965 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.033538561 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026322997 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017611904 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016990406 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.02045493 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030468964 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.018088771 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015726903 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.025126795 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018194179 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.12507616 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.020828112 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024338196 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016004505 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026288364 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022922947 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017855671 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015306155 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.020983848 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.016874045 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015310876 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025529296 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016169157 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.030635915 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023392718 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031245288 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.03127794 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.026740588 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032401537 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016607729 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015516386 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.034958388 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026055354 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017505974 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034450781 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016023252 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026474987 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016114209 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.01747997 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025257265 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015686496 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017881921 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016460383 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023108806 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018122158 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0180533 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.02225418 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.024698248 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.028571614 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017324963 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025021702 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016498021 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0322846 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026027511 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021309682 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.019584884 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017140474 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028574475 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023171898 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025695335 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016773892 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017226707 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016466803 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027550056 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025776231 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018012607 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.025738233 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021321527 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.016995001 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016333111 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017469251 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020732285 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020268402 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017595241 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024872452 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025748465 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031592945 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024561269 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026380984 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016872946 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.017095118 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018508247 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016344858 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021424878 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025593248 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031789443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028282665 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.037974734 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016673545 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.02594454 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018070113 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.033511495 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030086929 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017852894 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021513686 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016009601 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.01874519 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026727769 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028698576 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031544453 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031778161 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021578203 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021272865 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016877339 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.031974431 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.016849928 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02473341 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.025507399 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.022379995 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016190574 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018028576 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.02535019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.022039806 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017506761 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032348051 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.023976958 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016389751 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.030820738 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.016623553 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027029535 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016342115 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020252203 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.021843488 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018493777 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026241591 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.031736477 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015562253 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.016748339 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032006663 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018540563 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018193677 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024722652 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.031911446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021460334 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024206739 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.026904761 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.026999336 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021202502 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.026654485 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017409353 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025549303 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019812123 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028362919 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016468128 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034826205 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015610521 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031955348 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017668433 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027921243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017001026 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025852624 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017380833 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033928335 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018111297 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.01741536 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028423961 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015731298 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025683129 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016462126 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021898262 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023492025 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.025609991 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018175527 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0258261 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018096252 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025331837 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021389928 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.02551429 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025506211 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021169885 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.016179714 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024462398 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027253477 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.178270776 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017216466 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017381185 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016575074 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025502018 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017114662 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016556312 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024031158 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.020962088 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.021996837 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.016869356 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.016887016 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.016890399 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024727383 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025159054 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033315506 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024131123 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.022985674 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024489468 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015607994 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031175261 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015999005 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023338866 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015085179 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021383158 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024676065 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015679346 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034011341 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.016667282 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023688953 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027535459 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024952262 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.02056229 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.034482114 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018934186 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024183765 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023361396 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020537968 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022482699 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.016906491 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0239702 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024895294 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.025702523 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016001787 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.022785566 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024287497 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.016867791 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.022585558 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016555568 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023660241 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.01665393 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.01473509 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020847557 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026855122 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021266468 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021506896 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016281022 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015407807 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016655261 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.02194499 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020834185 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.02396484 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030602035 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014684458 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.015942994 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.01514394 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019654905 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03417868 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025628567 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023793698 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020667795 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.014896565 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016497893 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016645663 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015341958 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.017739628 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.014705749 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015042198 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025330739 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.016499655 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.019990315 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015404653 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016215686 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025258552 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019041307 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.015665113 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.02229529 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015179848 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.020855423 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.014885972 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.01685427 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020383303 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015239822 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019528027 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.025578386 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.031470799 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0223939 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024210018 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016236821 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023206634 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.030502201 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.022734341 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016209835 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.024819955 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015149077 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.033919049 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.024897013 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024744992 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025306437 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016538878 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.032468115 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.02064764 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025427611 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030827493 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016508167 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.023285692 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015685249 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03138364 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.02067813 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015569076 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024114653 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023459151 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.021922573 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027228657 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016466798 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024084515 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020027632 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.019932402 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017287062 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.017860138 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025603552 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032627651 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.01668904 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.020934596 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.023994748 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024873743 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021180527 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028471815 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.024177113 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017065153 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.01761703 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020095927 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.016791256 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.027933266 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016436483 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021021406 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.020995775 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016080258 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023222931 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.03258514 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025318795 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026238313 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016292123 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015747342 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034251163 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020107932 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019226348 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024049715 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.025760782 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028241588 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.02536911 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033055191 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016697182 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022378045 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028183011 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.016924855 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.015902311 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020114628 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017541716 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.024958764 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025661446 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023662626 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.01809393 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023346827 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.029611422 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017362837 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021075779 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.021752938 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.016886625 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.026734098 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.023944864 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.024556277 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.017672051 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016074593 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.019921811 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025058218 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023787117 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.024976153 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017328113 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025142746 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031055489 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024168625 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020122529 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016766558 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019875918 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025719992 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023584785 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.01657336 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021436195 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020179745 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.024712698 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025578072 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021220782 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016102932 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034323362 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.025389202 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025665512 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018029277 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.017936072 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016463704 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016033757 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027104617 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016119108 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.017766103 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021200778 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018051571 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.03402237 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024131558 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031862868 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017085621 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.020934466 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016244392 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025637769 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021113566 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016097482 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027064525 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015901432 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031852717 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028127808 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.023277235 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.01611564 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.021628196 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.024699311 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.031234488 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025625795 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025107289 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019719403 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025735181 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017870825 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027011391 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016689992 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015741193 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026815256 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.025266477 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028661613 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016380117 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026404652 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018185248 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024437937 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025111199 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.018093448 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018447041 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.018117905 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025902931 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021413818 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025552477 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.02142261 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033420947 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017315791 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.027323768 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025173748 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027267933 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030210335 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.028772695 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024915508 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016833486 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023725751 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024976338 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017624183 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021775418 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.019791185 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.038942948 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018068956 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018009304 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.030962654 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.024913199 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016423704 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.024383836 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021424759 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026398174 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017211396 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.026966228 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.022087306 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017743246 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.02177677 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021437523 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015533735 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016203254 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016493943 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026021207 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021323147 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016364773 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.035965339 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.018173259 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.025521943 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.02771663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.02368036 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.018262445 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.016128254 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.017573427 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029988394 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032746212 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020702603 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024860957 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.018094366 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.182064515 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015858666 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.025156519 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.024621378 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024706753 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.016047156 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016830753 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.032066412 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032645432 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.022116093 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.034302231 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.026197658 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.018016251 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.039371713 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.027174657 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017979964 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.028443069 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018868032 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.016593875 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.016344152 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.018546018 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.02887704 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016949038 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.018740603 seconds)
  done (took 15.20786421 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.062460776 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018253969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.016973595 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.01707739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023984597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018220791 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017078265 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017907312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.017971169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.01954935 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01712674 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017117321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.022419544 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.032014134 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.024666804 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.020352849 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.01700403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017942994 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.016955207 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017841083 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.022743166 seconds)
  done (took 1.274596036 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020008984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.021532381 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020972411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021170855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.020429537 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016949376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.020979393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017650973 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021210185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017866481 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.020716276 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017020324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016952844 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.01664985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016394824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017237407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019440476 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.018815165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.01581741 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019062953 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017012496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.018915015 seconds)
  done (took 1.214539113 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018164846 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016229092 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0244906 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015206413 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.014881981 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.017505912 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.014906972 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.019684063 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.019762453 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019845206 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.023901047 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.015750926 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.014918405 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021078787 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.014876104 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015697075 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.060202613 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.015768026 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.015744199 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.01507357 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017054009 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024334149 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015731056 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015739023 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020442327 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018426534 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015674823 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.01778787 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.016501532 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020470163 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016058658 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015094265 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024155442 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023262738 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.019869702 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.019760202 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.01614166 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.015715873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015035414 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015130303 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023334314 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016214506 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015384247 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016141279 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.023998998 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015314595 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.014888679 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.023898626 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.014933145 seconds)
  done (took 1.687129343 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.027312645 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.068894169 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023289067 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050467751 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027838993 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020211703 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.022095116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.055061976 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016878585 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017341966 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.029538216 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.030516663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018424271 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019194614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022233249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017651454 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.01819094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017050908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020075706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017228264 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.01967062 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023034191 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.027507943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0285158 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.018424326 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.016877575 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017130819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.018469979 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028479807 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020545164 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019014471 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019379523 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028311033 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.023048787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017209728 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017235758 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.028405815 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.017649018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017430921 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016183384 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017209142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.01865308 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023222625 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.028794247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.01758471 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.023956135 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017488731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.134081132 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.02966064 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017455126 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.020517585 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.029513589 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018474999 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.017822327 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.018761429 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.028234613 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.017606488 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.016517447 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.017699749 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.028760334 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016109179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018311782 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029397729 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017155643 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.02039015 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.029542036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024131947 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.01842505 seconds)
  done (took 2.558827029 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.026570782 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022111294 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026112017 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.026128146 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022091051 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022137448 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022002449 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022072726 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.022332173 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.024903672 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022041807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135167852 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020056657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.022972543 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02220005 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022055431 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022100451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022086748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022026797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022058635 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022194347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026346808 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022070301 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026266268 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.054876347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019264225 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.022075477 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.02199303 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026324341 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.021900971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.028633372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022019093 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.021947288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.026436134 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.028571239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.021991323 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.015624072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02182969 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.022023276 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.022165833 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019304953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0267594 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.022129094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019186094 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.022342896 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022047263 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.027559094 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.029376118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023279232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.025268463 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.02299457 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027427978 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023665217 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.023860882 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.029529685 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.062090518 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.029221333 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.02914375 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024639443 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.029590649 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.029860416 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0365954 seconds)
  done (took 2.440858376 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.02955837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.020595869 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.025726808 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015072398 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.01497356 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.020617865 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015107557 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015134492 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.020619513 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.020625331 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021838632 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.020625565 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022615359 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021987383 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.020805072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.02239064 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.02064456 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020676135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020516605 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.020587496 seconds)
  done (took 1.196969472 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.018688721 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020023281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.015594678 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.019376918 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.015701536 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.018940697 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.015808209 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015674764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.015732352 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015740566 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020023877 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.019908816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.015713235 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.019596463 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.018974594 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019119248 seconds)
  done (took 1.059049488 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.01989594 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.025466887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123131773 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016451722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018143893 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.015909955 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016687757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015507249 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.017660254 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029170108 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016454981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018420636 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016485919 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015292685 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.015822223 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018349033 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.017841937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016486407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016482281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124977404 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.026730446 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.018258019 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019117122 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.01733533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018236028 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.024352541 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.017701402 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018163091 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016442844 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018416054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018116514 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027362288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018102709 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.016860138 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.01521902 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016644915 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016781527 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018456116 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018432823 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016541859 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015376903 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018149629 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016721574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.016988313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018009862 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019042728 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018247139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027674123 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016747457 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018753174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016747194 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017572952 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.016809124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.027371834 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018274598 seconds)
  done (took 1.999515273 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035021404 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021436656 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.014947036 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.014908483 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021063426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022437631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021248557 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.021879936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022402248 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.014912037 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022675932 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020895501 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022529676 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021492629 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022519254 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021521956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.01491245 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022294428 seconds)
  done (took 1.164900472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.023601051 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020182069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.020339446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.016850222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.016784691 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020452406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015275708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.01667387 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016536783 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.016932128 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016892897 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016551292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016383771 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016448301 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020300566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016956322 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.016472213 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015364353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.016988702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015301472 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020542368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015451914 seconds)
  done (took 1.156721703 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.183394996 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.144493735 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038804519 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.033548196 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.02530445 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051262543 seconds)
  done (took 1.243458514 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053895868 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02482591 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021729021 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047095903 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020903576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019553981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019434322 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019908053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022894519 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028268451 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019881071 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022369758 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022660783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024177583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021274768 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020743848 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019765593 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019744448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021618876 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.030834756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019895889 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022146841 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.01983164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019519036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.01966675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024088949 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022628839 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028532024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020226378 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022864689 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021313265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020644583 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023075245 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029042701 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022205959 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023186541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020301631 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030941233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020748677 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02421543 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021206215 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02124902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022615428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.022598765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022681463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020103224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022399984 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019974997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020086915 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.033214425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021064844 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024376846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021687948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022573434 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02291648 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03362037 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029674351 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025722123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023486899 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030964481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.026668483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022658829 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026917409 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.03065534 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02334632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027027584 seconds)
  done (took 2.367468127 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.029566807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049283151 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.019687588 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028116879 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023856428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019847246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019772769 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019658874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019609504 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022048298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.059344572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020798334 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024970956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025255676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020833085 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020708504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020873813 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025988753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023884601 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.035162407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021407571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025287102 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024584097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02446156 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028556832 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021608911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020129702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019815739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.019789113 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019717497 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022476877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019902262 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023944917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021918553 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024051708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019932291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.019908604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022520827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020155854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021203753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024455258 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.030373046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.019831233 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.019798065 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02839065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.019968646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.019945958 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022250369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.019986221 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02218629 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.028479256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.028447446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028529722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024580341 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020199906 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020141411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020074748 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020329473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021385313 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02251562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026300712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021127613 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.036137437 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021543651 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021466652 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.026401107 seconds)
  done (took 2.374344077 seconds)
done (took 51.452858198 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213724358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17048006 seconds)
  done (took 1.14700006 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.134157855 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.132599989 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.161945913 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023855797 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081182245 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.173966665 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.126744723 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026120569 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.023870653 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025032863 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.02346611 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025006948 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025031988 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023300166 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086191157 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.025925476 seconds)
  done (took 1.894717323 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.07201408 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.268420543 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.06654944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.022641251 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103236219 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.028740802 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.023709138 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.027816011 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.028194881 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.022929883 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.068957862 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.044020078 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027428557 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.02783128 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023929856 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.026960697 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.027626984 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028109065 seconds)
  done (took 1.71765537 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.085562557 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.031470588 seconds)
  done (took 0.89206899 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.135608377 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063665294 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.106555709 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.306206978 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.095548751 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.285814454 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.09997297 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.095624579 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.066496379 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.092749404 seconds)
  done (took 2.117271159 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059457439 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.054941041 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.273842972 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.05382389 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.03373163 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.028767831 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.029809138 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.029014106 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030070976 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.029213885 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.071363656 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028048378 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024691321 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.067462089 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.046950339 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.058101564 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023507266 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.028574474 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.03240346 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.02332074 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.027736267 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029033041 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127165477 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.028818392 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.047658646 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.026599433 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.028119619 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029017546 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029038884 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.029840493 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.029729233 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.05117018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.028837274 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037081899 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.027822897 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.047799617 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024276182 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.047066603 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027206206 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024242613 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027271386 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.03063662 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025117078 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.029746266 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030176889 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.02990283 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030814623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.024269459 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.031055003 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.028079979 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024823543 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029076226 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.029125903 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029577136 seconds)
  done (took 2.969224556 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.07457783 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.065421245 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023857321 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.072750381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064396004 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023987149 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077099665 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.059697733 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075599751 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023464969 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023271059 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023138886 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030475826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.034547222 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075019116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069101923 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025094321 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023818496 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.067163646 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.067272797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.02274738 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078836126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068200931 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.066141268 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.02231641 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.025262515 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022359846 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023050068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029545166 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.030289567 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.022884461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.031817113 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.034128382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.02962668 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022248135 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022441533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022368783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.030364866 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.031066132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03195513 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030883543 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023416827 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023631681 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024423724 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024571047 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022932231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032637754 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.03055767 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.031268558 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02331554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023277818 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022485035 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023409139 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.029653559 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.028548113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030157211 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.031930241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023039407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.022935075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024092053 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032729401 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031102152 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030675809 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023803071 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.030539198 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022742844 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.031605632 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.035678131 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022611963 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023263761 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023007413 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.022862607 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.02326246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.028898078 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029098869 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023564269 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023550896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022934456 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.030759112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.029174259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023202755 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.030420644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022398083 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022937104 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023229014 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023627392 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.031284273 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.030777875 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02342261 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023128581 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023422313 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023339329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.02263989 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.031764526 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031550295 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.031752502 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.032421401 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024182353 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.033500513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031626854 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023973477 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.030650315 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023480896 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023782569 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023713216 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.030673069 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.030168819 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.031968509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023448335 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023065749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.031365877 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033716494 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02335393 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.030563104 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032985879 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031245647 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.02340831 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034937485 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023918708 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.032914062 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02387218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032234066 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0238164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031363494 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023875482 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.022793631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.023591933 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.033660922 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.02411837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023557069 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023867926 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023484761 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.031284446 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.034522315 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024217128 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.031561359 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.031360381 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024020199 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.032627531 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023831891 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.032738191 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.023817475 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023887971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02280429 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034491572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023361601 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023896606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023544836 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.033220529 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023440807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.032999014 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.030307631 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023067271 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033871449 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032782973 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.030572494 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.033624464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024362259 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023842515 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023520901 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023726307 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032595402 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034219087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025148999 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024044162 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031549138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.033695433 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023448322 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.030923828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030882651 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.031242214 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0238903 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023788424 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034121485 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034786936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.031147367 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.033069922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.032095338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023553638 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031255254 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033342245 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023698902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.037931112 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023798412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.034147253 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.03351224 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031286247 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034028879 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.034894245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.033728961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.033320142 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.035779254 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023551191 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023620105 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.031309204 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023727163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.172974022 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029010861 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023544602 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023427148 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.034456896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023665154 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.030771218 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022658385 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.029448477 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022323867 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.02326943 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.033067297 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023372976 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024131259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029863909 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024159294 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029243264 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032342178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.028721515 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022991283 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023452755 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031936039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.030155493 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022791512 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022580111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023210203 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.029872082 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.029549076 seconds)
  done (took 7.724111534 seconds)
done (took 19.247093365 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.13446189 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.06991959 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.130255514 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.081126487 seconds)
  done (took 1.20097831 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.055863546 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019864383 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.139845143 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.151481431 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019883607 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.133512184 seconds)
  done (took 1.32097159 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.241612478 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.144606318 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.14805839 seconds)
  done (took 1.325925407 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.147474095 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.273099258 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.541848493 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.141409276 seconds)
  done (took 1.904785846 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.168156521 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.160356318 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.030546897 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175500045 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.037493597 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016083395 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.098650742 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.016843812 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.049983686 seconds)
  done (took 1.607911216 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.091522015 seconds)
done (took 8.242293964 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.196091069 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.139725979 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.035845335 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028718768 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.122519471 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.129532934 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.140819944 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030340409 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133014684 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.302009799 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.180097996 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048697943 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.150909978 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.041327236 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.26114506 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.030904588 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.02997057 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024558146 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.138046945 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.131277356 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.241595461 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028447236 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.095309525 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030616127 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.098781939 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.078550642 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.187546502 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.308880582 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.26751698 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.030911808 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.117288404 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.0405992 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.113110767 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.122018965 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.131940781 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048224958 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.02008829 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.237718842 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.099102754 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.31342066 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.162194756 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.028058214 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.13871463 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025406756 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019534063 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.142056054 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.0329456 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027197948 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.042862382 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.02711407 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.038265908 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028483685 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.129074024 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.023771204 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.091557128 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.13774115 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.179558675 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.100735021 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.025848031 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.037350279 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029777961 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.156927305 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.037376315 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025464827 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.031746184 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020135222 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.135040957 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.039966579 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020500803 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.030914051 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029108359 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.096638803 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.153840986 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.065194329 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.031970262 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.117347152 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.096034563 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046066218 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.047530231 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.02934397 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.019795438 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.18674532 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025492507 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.037602514 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027093687 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.052936533 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020041352 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.034672198 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.16518113 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.145805524 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087054246 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021632967 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.233020226 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022129928 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.04478877 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021191644 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.02057709 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.183009026 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020511339 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020607159 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031228391 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.02954366 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022213869 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.165622408 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.101003872 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.02866273 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027333912 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021006503 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026213291 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021529318 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021012967 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020353943 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.094924131 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037505543 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019912216 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.104680725 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.285625505 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031529519 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036643017 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.084168042 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023737796 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030092324 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027375165 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.134872147 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027210468 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131108059 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021703451 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.040851877 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119121699 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.095641833 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102409749 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019848035 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.137871475 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.030015702 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.01948203 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027079115 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.046372501 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029307478 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036608037 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.027850108 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.136271585 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.029582889 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025363695 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.118479911 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019048345 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.115812911 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.096888125 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.127425543 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.025222609 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.029263479 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.091034822 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.041685659 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.048489225 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.041559112 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024716023 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020207046 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019578784 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.033032415 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019117935 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020056514 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.034075093 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.02778384 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.036490352 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.237119211 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029308679 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.023764599 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.251705711 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032284243 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.089641698 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039408906 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.019938832 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.098724705 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021466458 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.039714427 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.082991257 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020075956 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095265575 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020536647 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.019958741 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.025671465 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021463209 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029507672 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033120815 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020381682 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.032741998 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027632662 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020031715 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.099455168 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.021873789 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.18447932 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.097599045 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.093296947 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.02020804 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038063283 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.019833087 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.132068049 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020259892 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.068461247 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.109526272 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034723602 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.039995949 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021095094 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.097789558 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034136602 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.02548897 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.099199319 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.129317516 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.090234279 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026338522 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.247584919 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029960243 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020453806 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.025728354 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.0287415 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020275795 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.098553917 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024670633 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.01926262 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019611093 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021459282 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.018995881 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.043341033 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.01916119 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028525996 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025849568 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.022869412 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021529153 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019032982 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028149476 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.098453115 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.117001619 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.025962323 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.039008296 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.032590258 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.030637128 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.066541479 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.027631763 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.155298904 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019285984 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.02957217 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.039762251 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019415519 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025061912 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.0255762 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037051843 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023381688 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021156484 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029086544 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020720382 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020451658 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020336383 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020286943 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.028950245 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021495136 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019569715 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019617939 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036454889 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02509806 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025027213 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.030914304 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039853715 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.470236022 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021515528 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.021975876 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032490798 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025421857 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.02049293 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021429621 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.019923193 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.021783039 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020457684 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.019865261 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.047156453 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.024752046 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.020419315 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.040117236 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.025988752 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030042781 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.116997567 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037214406 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.02550682 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019694501 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.257576161 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.092637679 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.041184907 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.039012114 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020726058 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031299215 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.0204905 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.020912598 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019427599 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.046629858 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025888953 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020652219 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019631424 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.019785531 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.067807032 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028837503 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.020221319 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028567074 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020390177 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020257576 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.046837696 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.020912419 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020164106 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.037738095 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032637486 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.105934461 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032028113 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.02343959 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.070782337 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019655608 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020199104 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020554085 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.118784152 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033445933 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022386963 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020366029 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027934881 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029676634 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.074074519 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026595232 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023765334 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028067296 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019529064 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020438943 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.046805782 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.048495075 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021546688 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.023843398 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020037584 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020291406 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.095981207 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.028398648 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025350487 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.108516146 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022217687 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028205207 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019502519 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.481875121 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.026446315 seconds)
  done (took 21.968507308 seconds)
done (took 22.776148565 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159951398 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034477974 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.042056987 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.030644469 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.033729088 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032462953 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042729836 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029386498 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032309515 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039976819 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140986715 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.019968418 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027895078 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035152541 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.029575438 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.033778859 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032961391 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.032927295 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020885349 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.032483205 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031052719 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.030913162 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029840413 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.033413493 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.022144936 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028994438 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148259254 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034545385 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.029974651 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029120549 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027349193 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.041530663 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027341894 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.026988766 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.02891644 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025192379 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.029813891 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026176916 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.147185913 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025514875 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020266992 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031476813 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.032727724 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.028266264 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028486135 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030621367 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025098118 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.032010735 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.027891907 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039433098 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146747382 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028667192 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.030053848 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.027984415 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025427762 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029060265 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029784881 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.029975422 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025077129 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.038681294 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028120158 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027426473 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019496698 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028097757 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.026969242 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.02710514 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.018763014 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028173868 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019549349 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019425937 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.028099361 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.027988374 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026311453 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024742009 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.028060891 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019956041 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027647513 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.038546771 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026575458 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028131885 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.019920217 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025083079 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024722163 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020101897 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028761736 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030691622 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028590336 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020082003 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.027807541 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.038754596 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026218545 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019504833 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.03069404 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028292399 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.027876531 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019573106 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.027989659 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028071285 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027432094 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019546505 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018809146 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028070819 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.024689853 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.027886924 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.019763997 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027876126 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.027804607 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.018846275 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.027777299 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026576392 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028363984 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030210129 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028201034 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031302205 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020053031 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.018717103 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.02914015 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.019884749 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02819718 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027497976 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.02496145 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027190807 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.019976381 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027187625 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.027937512 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025437687 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.019819392 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.019834272 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.019750041 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028148815 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026549207 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.018810081 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019900292 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.02825567 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.02788098 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.02730781 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.02764736 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.027789234 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.019925979 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025517641 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0249308 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.027950923 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.027521551 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.019782674 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.027487951 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.027366698 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028356189 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025133524 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028855928 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020184336 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.027908432 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026441534 seconds)
done (took 5.787705108 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07458384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.063041178 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.178444359 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141674263 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.033407267 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034145774 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.024955811 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.039717345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.026688993 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.044887101 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045066246 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043241211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.160328731 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.040573419 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020024568 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032094036 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.020997713 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.048472135 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146271537 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045888005 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.062243299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.018793159 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.035341522 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.038240457 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.031838026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.03803163 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.043887149 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.020927466 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.037572832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.036771763 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.046784846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022530684 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020787149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.039438805 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.035985503 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.028663729 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.01992444 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.027532539 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032831771 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020551938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064683964 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039689074 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.028530591 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027811943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021016107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.035646034 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021166128 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028176523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.033680724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027145673 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.032967995 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.036665112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022039452 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.037688785 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019026021 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.027369664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.027015012 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.019775939 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.020687067 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.019985276 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020052645 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023027985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.032416348 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.038457643 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.023802171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.027073528 seconds)
  done (took 3.555616319 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046659746 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.069367854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.036436106 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.03583582 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.019822671 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020289311 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.02019251 seconds)
  done (took 1.155667686 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091551008 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13518328 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143041988 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145757817 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.156135889 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.141991587 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0328993 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.04996319 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055280079 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.15584554 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.15150165 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146217629 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024767787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.032807292 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.052731504 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.150266446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033280927 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.027922228 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141563725 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147436243 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025440493 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.051728334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033210112 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0233747 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.144202601 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137016629 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024297439 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062230096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023256885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.020811009 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.020726739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043185783 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137444923 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.035901226 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021145964 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.019752029 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134810985 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021527471 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139348444 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.029101762 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138848073 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023519423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.02354931 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021153535 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022331663 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.141759372 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022793516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.020912108 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020391584 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139117937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.031924507 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13858215 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022683669 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.02594991 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028021176 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027444948 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.027871314 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021272238 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140254603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031100865 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022651526 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14875365 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149271606 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138716446 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149609076 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030956195 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139830264 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138123508 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.020851517 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.028714173 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.021735046 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.150986345 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025120968 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023642251 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019654064 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028708873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.156398966 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.155936097 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.156603425 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035599772 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.022886636 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.021682629 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.15365579 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.15752082 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027666385 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021917624 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021789072 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.036732189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.04566186 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024298141 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.02662189 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021449932 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.031846542 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.023704266 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.022937414 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150559665 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020691285 seconds)
  done (took 7.705549269 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.038436778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021596404 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021129111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021475741 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.02160049 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021309019 seconds)
  done (took 1.136377085 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.060892166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.02273823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.02314937 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.022569868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.04650365 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135711938 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.137261131 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023292326 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038489798 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034897157 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137468732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.13989628 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139627905 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023029499 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134404973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03339832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134242201 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026644277 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.032820061 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022943758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.03206956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022440644 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.022504842 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.15272889 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.016846646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033607448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.031633915 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033067577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032305383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022442932 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022274468 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016472635 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.031475534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022457497 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134873647 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.032083831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.021844422 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017478464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.025702877 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016387805 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138513413 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023128625 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.025981263 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017622223 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022471954 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.031844564 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017602194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.031507638 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136069833 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.018163628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017818555 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.022191603 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016554885 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.018016827 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.032228427 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022857431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017639364 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136341279 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.022906557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.031809621 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.021858126 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016505277 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.02240799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016580178 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.026796657 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017652829 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.03207726 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022870448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022952994 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.021825184 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017639863 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.021616004 seconds)
  done (took 4.092625056 seconds)
done (took 18.560107951 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.452285906 seconds)
  done (took 1.36565217 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.982717683 seconds)
  done (took 1.91120931 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.049750566 seconds)
  done (took 0.994861658 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.287680346 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.457699998 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704099518 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.090750506 seconds)
  done (took 2.466320882 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.827310119 seconds)
  done (took 1.777655579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20611423 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.172603312 seconds)
  done (took 1.342373868 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.491265241 seconds)
  done (took 1.425042327 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.30980966 seconds)
  done (took 2.258627983 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193124912 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.135255816 seconds)
  done (took 1.270421513 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.608495852 seconds)
  done (took 1.548067938 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.649895427 seconds)
  done (took 7.601803886 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.188497147 seconds)
  done (took 1.185351661 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.190058342 seconds)
  done (took 1.13921291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.685210232 seconds)
  done (took 1.630426787 seconds)
done (took 28.877946626 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043944482 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037946788 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.039149673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.035130747 seconds)
  done (took 1.08961512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.030359794 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.024905616 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.026926113 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027300529 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.02516524 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.026770153 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.027473808 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.02378814 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.02478439 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024086492 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.022652998 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024061274 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.026402256 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.023751544 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026206822 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.027567953 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024238887 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.024926971 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.025953314 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.023854661 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.026903673 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024640343 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024274432 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025387723 seconds)
  done (took 1.555076077 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034110049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025516876 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027330056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024387855 seconds)
  done (took 1.063707322 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.032314467 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.029981857 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.038247175 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.038022544 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.029796878 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.030599175 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.036612334 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.036678482 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.043379458 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.039405209 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.021719207 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021571158 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020737524 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.034091417 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.03629682 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.015775394 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017165559 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.030971201 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030123959 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.03241261 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023576354 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019267436 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.029855906 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.030271641 seconds)
  done (took 1.668030761 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.036990692 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.01941013 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.034859429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.043457548 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.044433084 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.020097169 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.034223032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.046127943 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.083804857 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.01980666 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025574583 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019534086 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.056897134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019956405 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.035067181 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.064871053 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.069329219 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.024671139 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.05141625 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019848856 seconds)
  done (took 1.722892884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028544424 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024172325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.024957099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019144173 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.03058053 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026905819 seconds)
  done (took 1.120118316 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.023993142 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021206704 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.02138852 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025474155 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021117943 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.020966316 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.02093545 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.019793496 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.019845155 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020599634 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020529263 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.020955285 seconds)
  done (took 1.205599981 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156438093 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026533468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024959474 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020010373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021558344 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020634986 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.033732264 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022631555 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.036731038 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020581998 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.020869515 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.022951162 seconds)
  done (took 1.379445195 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058797659 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.063025807 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09489875 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072318202 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078304223 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049293138 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.19804277 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033752506 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.111854175 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087712389 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075337529 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044899937 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.039288862 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023591331 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053736537 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071264719 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089151058 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.026738772 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073382367 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.23611951 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082952606 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.083495314 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100311032 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077058251 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.045284569 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099732558 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.049720857 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055621172 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074730894 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079289149 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074251409 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.056463804 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025551551 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.024871069 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113321337 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.057604086 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072793134 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.046696395 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059413412 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.04273303 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079083791 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024138158 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037076429 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.064047777 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041043775 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088275063 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.048592719 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071208559 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035535378 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094482787 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084418297 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.172046976 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.041308233 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060440205 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.097685575 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069658946 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087621006 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.062713916 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035926247 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.075592038 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.066987472 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059124211 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066824977 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037380647 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133174558 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045290718 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.235947406 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066665383 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.043993934 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.047896196 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063864398 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089065346 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079115947 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.070482579 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.081357273 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.045850568 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080401741 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.054041723 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.077711021 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057270869 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027632986 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.073569573 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08004404 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.050259699 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.052502076 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078737465 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.045549385 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029189322 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.042292348 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.071189986 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033912898 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.061532051 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038976535 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.082392007 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086697821 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050885175 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068266161 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072265653 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032602441 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116918409 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06228951 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026906612 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.071151107 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06642444 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104717972 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05075818 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029130681 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.053305117 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056665319 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.112847609 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057444958 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034912593 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070963444 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096271699 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050373472 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.252895607 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.050178117 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097530853 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070602265 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040776143 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.029809116 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.049100884 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068591 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066840907 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079976401 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050754264 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.03855915 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041750034 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076745604 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.049372955 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.034461599 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074773587 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.059361505 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029545919 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045483611 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031800906 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10868046 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.041415425 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.258331521 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084508702 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029511394 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060025625 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049887512 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05820883 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.053563061 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070323697 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090116351 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.14265062 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042976407 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.035908283 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060468016 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092998538 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077603876 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.043522579 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.037634564 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052050859 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063299821 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.052994952 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073390926 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.046343691 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062511034 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055608947 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092043989 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093794475 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053940247 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058217331 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058399997 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.075654729 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029112351 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108987101 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056941185 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076108739 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041881125 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093993702 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.069826196 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060670332 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.040458985 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057477569 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.055935719 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059636868 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09606943 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.047164678 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026168671 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047301988 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102296998 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032722904 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074842542 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.044345407 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.046285588 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070823524 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.047851839 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.036431835 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.022497859 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077791252 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112161425 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.024481034 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.0716553 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.070384299 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05920058 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.07839502 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.023829485 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083711781 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092724548 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082718332 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105815588 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154240292 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07881583 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073865626 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.082291649 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228276479 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033261347 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.077287236 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084810007 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.045496009 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.044368484 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.086914279 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07089438 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.084966172 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.064973801 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072757427 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.056953886 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060368796 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056787527 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.052508837 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092478791 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074721592 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.077194383 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037653433 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065227795 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071967712 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089738928 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035611168 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096135538 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.039929407 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095842112 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.032343813 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.079193667 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030200292 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.122421948 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033747066 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.053802705 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.023799731 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.026356368 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095434864 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.075746002 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058178361 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053447134 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.087150389 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090846829 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.031890128 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066311475 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068129054 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058015128 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068455981 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063169036 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.042367246 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.049291707 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.061164753 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.039564223 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.035076924 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08126286 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051337147 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091650625 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038253091 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.029281924 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094084001 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066432639 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.048790742 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030970812 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06342973 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082106074 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0480337 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041437312 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076772854 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060984497 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098826095 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.045821429 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.057587661 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082719248 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037689527 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.051991034 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024431653 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.045300221 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031527128 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088386644 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031255958 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.237668498 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.023183784 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080914003 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038344921 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050372701 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05860418 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062920495 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089118234 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047613669 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093394642 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042710489 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.068650998 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060152202 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064326498 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.03883309 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054083294 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055996294 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07235167 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.04600165 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.072433496 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091904552 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054456825 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092145781 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043049285 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074918047 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059618744 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.07350909 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.065240605 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148367232 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092264949 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067387789 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.064987148 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0290481 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048641186 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064116927 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.063534459 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12741622 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077651805 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.026792956 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058083159 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.04747339 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.060671605 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062384851 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.033801018 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095673505 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054739407 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.041346222 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062485127 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.043281568 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058306704 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029897728 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05596081 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.050555733 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.050910242 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052975407 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068402455 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084137536 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065223813 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100093412 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058031771 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.045954439 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.073666575 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073270211 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070867053 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038434267 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038809909 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100080603 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074987009 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.082724696 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054775527 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067701919 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069037492 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057845677 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.246268005 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059189158 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.076058389 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033079134 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030040915 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022446759 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025668379 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075065873 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062814804 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061038507 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056880564 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.025885445 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057477965 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059143161 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026204859 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.038635118 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046124304 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.050874876 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.035243404 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057436396 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.067431427 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.046784546 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054502009 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.057491971 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092633374 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.050421841 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040748045 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093366114 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100518222 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042514968 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048447159 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.027004849 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035232161 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.076824042 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098190378 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102123947 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.033024596 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040391416 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.038193092 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041068864 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025563409 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042041551 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.04293649 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059026225 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050881576 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.067477319 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057593521 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029082178 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.062216197 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054722417 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047173483 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.062679602 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071656521 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079491116 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.091818315 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066911803 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069092537 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.02996655 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.033696648 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030545778 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033962008 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060160888 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.033309901 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030723722 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.354000122 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.047033099 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066495756 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068956854 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042619591 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029944582 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089267177 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023829986 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090395951 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025423711 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035086857 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036772472 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03348547 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050978604 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098879846 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063465411 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066754234 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062835743 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06860853 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.306087673 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107307906 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038336181 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090784156 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.028866588 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.029551049 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.029435607 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059461155 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042031255 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.069398586 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093187939 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040469984 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052962618 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03154051 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09260652 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.04881384 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053075179 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.038177441 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.032302548 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091698037 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.032576604 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.037547116 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041481975 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.062591155 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.025719506 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.054443098 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037367256 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033653861 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141281195 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.664425 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051942621 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.028264207 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.049553638 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09301893 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086260581 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049401574 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063690571 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.072476744 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058326676 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047167249 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067697931 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.155024464 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027885885 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048380847 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.050787495 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.056163453 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062001481 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.049706823 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.040692406 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.048949694 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.040294103 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034095633 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069056693 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040789205 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050380358 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.060743013 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.037175252 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.042185757 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082813904 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.054806174 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.038325352 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043932633 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.065915385 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041458474 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061803468 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024095789 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.064425716 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043681554 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075405553 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.054736371 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.066176237 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081011313 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049119974 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093896568 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.064340648 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079286146 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.041593546 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.03266045 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083321693 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.046059167 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032152868 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.257683004 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.046612629 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.056960158 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058230252 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.048650694 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.061770329 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.067598849 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066070354 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.054803653 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032137359 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.050564815 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.057406098 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03836731 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032292084 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.026623509 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030188166 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061556945 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.038042949 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.039281554 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066958673 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041365121 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.054560451 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.050378173 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072947468 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.042715615 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057105795 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064691531 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.046022389 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083201129 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.055904466 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08056217 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125626979 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.085270895 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082904923 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086362652 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.031950756 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.033194215 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023041593 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.067838679 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033364992 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.040591106 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033352359 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086719944 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.0385884 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064677338 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.210129377 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.034361005 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.046832627 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049782263 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.023750311 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.03699869 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06322641 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040216144 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033629116 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065423137 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.035633679 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082233309 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062294812 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052697097 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049359264 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035113486 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062378521 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058611001 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.083736667 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052717617 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028690176 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.077679198 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059302059 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097644244 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.028910533 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035548868 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083631709 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059193924 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090360895 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03597397 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117972768 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.10052813 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.061325122 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092043451 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025947711 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044558298 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.045713057 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.079222695 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198153343 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058349999 seconds)
  done (took 40.482137907 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.098262365 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.253735126 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.136608545 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.110635328 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077627983 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.077340276 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.246025283 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 0.091292014 seconds)
  done (took 2.169266221 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.025038922 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.053432854 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035146067 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.287937207 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.05324949 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.020877267 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.027719778 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.035749449 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.020907886 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020387524 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.054375666 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02053823 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.02096771 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.435499222 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.019930253 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025076381 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.02104827 seconds)
  done (took 2.266243314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.301240364 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.577609269 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.211996916 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.488686411 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103389145 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.560558677 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.02961408 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.03400548 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.686964421 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.356536257 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.098855252 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180594297 seconds)
  done (took 17.702098353 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031030892 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.154329586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.153017378 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028005525 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027365696 seconds)
  done (took 1.536923257 seconds)
done (took 75.98216097 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040212542 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.123276146 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.020855463 seconds)
  done (took 1.25174506 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.154417393 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.152946494 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.152729628 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.153310506 seconds)
  done (took 1.683288874 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030181629 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.029515987 seconds)
  done (took 1.134525126 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.172868664 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.253575174 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044368601 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.039482352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034629453 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.034680869 seconds)
  done (took 1.183757318 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.026729241 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.024747189 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025159104 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025542352 seconds)
  done (took 1.164692679 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.134115508 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.01960725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022031604 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.023600778 seconds)
  done (took 1.26756408 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.039727065 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.038693913 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.068347413 seconds)
  done (took 1.221585504 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.038903873 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038614499 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033298147 seconds)
  done (took 1.17788529 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.056593397 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.048407634 seconds)
  done (took 1.18623368 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.03559793 seconds)
  done (took 1.114488611 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0454915 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.0502246 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.213509004 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.183831187 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.217032949 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.199340203 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.033650651 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031383985 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.03271855 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.034656202 seconds)
  done (took 2.106600044 seconds)
done (took 16.073772219 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036038266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.146370254 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.271747459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.041970989 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.608715314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267929215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.687057573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.045548942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053162664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.021979794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.037248044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.58672304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.693492606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.107393993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.672887401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.093929804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.517962975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.023918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.02149372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021827432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.664346883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023924366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022138296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022166298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513552058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.291844583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.024782941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.090303654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.024385355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026042804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.270634784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.024027954 seconds)
  done (took 12.027508675 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026192246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076282989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027362224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037302154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.024032673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024198229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.039969765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022155135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.066240098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.023008162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038507994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021640627 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026056879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.022775034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.04074767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.021816669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.023581631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022286305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021491034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022270306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.03918614 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021361888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.02234551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022395537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022030337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036142208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022813126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021604992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021784235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025457671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026392262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023050659 seconds)
  done (took 2.014745738 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077305971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076365518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027118838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.064462497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07696345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.02598968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10693258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.04525038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.068401937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022763319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038294761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021785011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058625301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023765442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043082973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022485668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024418815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022372356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022269809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0232478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.040355788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021743801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022238208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022305743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022330875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037944913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02297186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021715607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021828252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025756131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027564285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023173615 seconds)
  done (took 2.287177916 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025631832 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026097872 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.03205985 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.034964044 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.02034219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.022786475 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.023989387 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020256519 seconds)
  done (took 1.286017031 seconds)
done (took 18.702862942 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035426658 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022396221 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.02536958 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046009529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.02832587 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.141936519 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024781928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027083546 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025478464 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.024839007 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.026963406 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019397286 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024154189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024292516 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026949007 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020254454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.145169966 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.02526916 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.144841209 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.145696833 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023835267 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026578463 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029137378 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144072662 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.14359362 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.14345102 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029419784 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026185924 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026018227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023197075 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.143790145 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.145622852 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023199932 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.141689037 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020759436 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020287552 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024752433 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.021826762 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.147352572 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029733827 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022548477 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029016352 seconds)
  done (took 3.455004863 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.147727867 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155337093 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.147189255 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.032799123 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.028884702 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.031779112 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.152308488 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029257619 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028142012 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.151629899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.023953498 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.027800803 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.029827814 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.020802061 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.02745452 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.02423789 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029535798 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.021968567 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027353072 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.027636542 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.152382901 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021685708 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.028849363 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029220925 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.023758305 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.029698337 seconds)
  done (took 2.555541627 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031134259 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043094927 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045585426 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109901316 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.062812839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043512977 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.036698993 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.046920695 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.052781707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021125062 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043388954 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.049292348 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049493419 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028856218 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0597339 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.039827209 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.033988839 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.022750571 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.027389657 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.055283792 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044286305 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040145697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.053851874 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041062137 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020229115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.03002393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025283131 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037508797 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032510751 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.03323886 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.02469768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.024560512 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.021721015 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.031692898 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.024585944 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.01941799 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044065893 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.03350431 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.035939573 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.05954532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031290212 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022457928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048809142 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.080799294 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020015339 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.023922986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025539131 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.03379355 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022480807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063199414 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036195473 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.020640997 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040406441 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022530821 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022574451 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042230034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.022748615 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023013431 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041322019 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.02745127 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.042904239 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026561065 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.040975833 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020076786 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.03230572 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022370446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.022678522 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.019771474 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.054881321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028210276 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.066855329 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022525631 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019905397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.034313452 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.032579529 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.028346725 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.019896001 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03936853 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.033669856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.024884649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.039213604 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.023703551 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.024407895 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.064692187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020485629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019672646 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019477458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.02365181 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.024485024 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.021692222 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.033169225 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.020560919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.024495653 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.047544564 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.020678397 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.021545125 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.023672244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.022425677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020774544 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.03074507 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.024389831 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.022872781 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.033636002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0222458 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.02490518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.03635415 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.030708825 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020815465 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023117529 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024062778 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023047384 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023160629 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025075895 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023212487 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.026752264 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.028666071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027275206 seconds)
  done (took 4.983959776 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239204047 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22777122 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022321002 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.226401141 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030299308 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.158236573 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227592681 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.228562252 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022284299 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023020673 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021414321 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.174035355 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167760421 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178409407 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.15826159 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024242087 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.054448973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.176848563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231910421 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.229551125 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.053810816 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.028945234 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024531032 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023184259 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022443822 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030196141 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038690285 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030862415 seconds)
  done (took 4.196385007 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030035673 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.065520189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025467871 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046435677 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.038882089 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022298933 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.023585276 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.02238311 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.038781807 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.028279067 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022828131 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026739716 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.026151539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024509633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.023151474 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028752546 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028688738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.020915486 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025442489 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026718255 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.038288232 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046993179 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026147526 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021813181 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025102376 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.02165582 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.026832639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.029932196 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021537669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.02182146 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.018968516 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030383798 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.036661402 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023465952 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.022094818 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.02284651 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022599349 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022300782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022087569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020299435 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020248914 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027185747 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020718133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.026595537 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035652318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024557339 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023541852 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.02445223 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024475805 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.01902786 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.024999962 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025310664 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024883895 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.031337235 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024486491 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024711006 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023392243 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.036906492 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.027866761 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.02150903 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021367799 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020332636 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024118681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.02826597 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038610096 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024085535 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020715516 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.02230774 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023984173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035480611 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021592626 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.029322123 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019394484 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022351862 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024348449 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.024753425 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023514692 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020363158 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.021833778 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021328478 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022077908 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021685375 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021428492 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024567102 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.01997897 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020653772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022609444 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.023794485 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027105 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021064031 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025286643 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023770462 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020728031 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024552312 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.028217721 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025669713 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040228146 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.029708324 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023047502 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.019921115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.038725959 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024861232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021326314 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024008778 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030373848 seconds)
  done (took 3.873163541 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052231431 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024317825 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041780005 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057193662 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032072069 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.027782155 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.035536243 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.02322786 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.04331841 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021135516 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031155727 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020392286 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.034965362 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.03106487 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.023993774 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.031895489 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.02497889 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043037775 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.038192022 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021272666 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030804643 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.03444106 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034605877 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039437378 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.038646601 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.04019319 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034091453 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.024680391 seconds)
  done (took 2.048762241 seconds)
done (took 22.190645721 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.165405336 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.331070252 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.145544848 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.771940899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.191146145 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.251351217 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.35575266 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.119945752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.426527705 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.304793574 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.96279216 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.359924577 seconds)
done (took 60.564728978 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.123632976 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.254060599 seconds)
    (2/2) benchmarking "String"...
    done (took 1.354150692 seconds)
  done (took 3.708387817 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.538845512 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.11867697 seconds)
    (3/3) benchmarking "different"...
    done (took 1.146259417 seconds)
  done (took 4.904394109 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.446452526 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.049397302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42051916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.095292303 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.119880374 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.812213783 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.286641379 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.799907323 seconds)
  done (took 27.692624415 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205311279 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.387699268 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.509345095 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.602213529 seconds)
  done (took 17.887935248 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.565682816 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.615054897 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.617184988 seconds)
    (4/4) benchmarking "different"...
    done (took 1.732182382 seconds)
  done (took 7.754137786 seconds)
done (took 71.713516573 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.095774858 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.429418649 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.10110733 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.29028711 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.192823794 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.184377434 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.10622545 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.109647455 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.103595744 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.107555099 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.099025274 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.093813474 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.112248559 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.160602835 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.103920364 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.124209865 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.412301538 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.108221275 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.13531629 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.931569685 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.448527684 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.099451029 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.124088909 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.171199251 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.443870384 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.104785543 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.554722161 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.110951973 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.704306071 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.103246868 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.11626263 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.099881513 seconds)
  done (took 182.192579433 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.100838958 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.979512624 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.997331381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.12379247 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.475631561 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.456338636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.957561087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.495181604 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.103979264 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.146468038 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.294078324 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.096149265 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.208390581 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.667622584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.167302048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.111043972 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.029257811 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.933167235 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.165312147 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.126977051 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.098474308 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.74941074 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.759463659 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.968703084 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.106040495 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.110494509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.102168112 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.143615902 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.601841531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.981861706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.108890809 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.10850572 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.296228595 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.331221289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.094341974 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.120034746 seconds)
  done (took 153.415184302 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.342867049 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.097964879 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.132505047 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.217616249 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.054210419 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.934139127 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.104502493 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.090893078 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.086579958 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.096803208 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.09640335 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.156925827 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.101615306 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.133423094 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.123450247 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.098955228 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.096364749 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.109864027 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.10210364 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.102466024 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.095955474 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.200846133 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.443773352 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.20680407 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.111300024 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.093257472 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.198527209 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.100365978 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.090420032 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.09065564 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.202701661 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.097904242 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.229675769 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.234692779 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.099845647 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.147091482 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.101375025 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.314484838 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.098997496 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.087590034 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.117727574 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.137524051 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.097440327 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.165399454 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.208887742 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.117072002 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.107285938 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.548907357 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.692921019 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.1034098 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.095517894 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.088748656 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.113277628 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.091259302 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.434589453 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.098326223 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.122523894 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.712667725 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.100948958 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.095539161 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.091136968 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.092430979 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.095516448 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.093214604 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.122511044 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.719563058 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.886942436 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.453829499 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.829413322 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.097475411 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.0869387 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.107348891 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.191836414 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.156712294 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.102624024 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.110005442 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.262678337 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.095964738 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.092640739 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.035269396 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.013219005 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.09505686 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.1983912 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.095422619 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.094007251 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.535536551 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.136239981 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.104251465 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.113929186 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.157738795 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.110972982 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.08911891 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.093233781 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.013971006 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.095643679 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.103646267 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.459613088 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.103970737 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.094986632 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.395630059 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.459346418 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.105214767 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.205970218 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499655195 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.045016571 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.101785821 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.095801492 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.120929901 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.091579254 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.098491089 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.099665427 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.086431589 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.093820517 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.09504255 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.095350114 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.087150856 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.0970085 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.122787906 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.092077365 seconds)
  done (took 326.086455089 seconds)
done (took 664.242380899 seconds)
(4/20) benchmarking "parallel"...
done (took 1.098216538 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.354902052 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.120965236 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.33223194 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.356040927 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.314076563 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.26950745 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.31215102 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.387163715 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.324824257 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.258683453 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.325742783 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.274914542 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.383084602 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.359620499 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.353558874 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.390708773 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.293161138 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.812217943 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.312803853 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.26671457 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.313743332 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.269993693 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.251597273 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.325519866 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.369356888 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.303444929 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.508387149 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.341229281 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.303328254 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.343427757 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.365666762 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.377621671 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.309066876 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.346205284 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.36564304 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.384066613 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.318669752 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.369135116 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.279420818 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.310357518 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.337517681 seconds)
  done (took 62.999994073 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.614816855 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.294460301 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.433071424 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.416879814 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.950680971 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.457196278 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.514746856 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.293482722 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.300531069 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.419622377 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.436869222 seconds)
  done (took 18.251576896 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.356097518 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.310390496 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.433664233 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.417480596 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.576997634 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.421659055 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.464078835 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.295495738 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.312955703 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.426935181 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.438866001 seconds)
  done (took 17.571629837 seconds)
done (took 99.91530765 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.693916861 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.168978605 seconds)
  done (took 3.966093251 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.13647947 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.105699348 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.100648292 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.102505039 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.100260411 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.103640677 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.15836466 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.113682918 seconds)
  done (took 10.023603435 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.127442829 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.101312055 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.108514591 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.104239367 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.109816003 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.10495427 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.119759864 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.10096741 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.100298564 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.118406937 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.100112124 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.100644699 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.097701283 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.105615984 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.105738575 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.11078538 seconds)
  done (took 18.808737961 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.111781729 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.119397442 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.101677249 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.098606848 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.102548972 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.100093786 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.106964432 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.117216213 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.104401167 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.100796783 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.114205236 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.099659548 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.100173897 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.098985048 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.110204658 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.104280364 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.109890884 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.107612011 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.101678052 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.116066288 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.101968697 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.098520939 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.101185012 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.103602222 seconds)
  done (took 27.622657065 seconds)
done (took 61.532662807 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.744243152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.921488467 seconds)
  done (took 6.760274007 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.099034878 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.103985168 seconds)
  done (took 3.354508809 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.177334641 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.174986742 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.128364029 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.10159622 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.099141834 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.098737896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.110944185 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.106537816 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.115450538 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.107736379 seconds)
  done (took 12.328527545 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.118160744 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.100771574 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.099953994 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.096560227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.106243253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.102891085 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.109508245 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.10859983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.101126687 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.127531989 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.101331495 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.287300777 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.100877052 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.325543269 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.108615616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.107730715 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.103605787 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.108172017 seconds)
  done (took 21.406138603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.099385055 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.100154204 seconds)
  done (took 3.296949344 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.102138701 seconds)
    (2/7) benchmarking "second"...
    done (took 1.113182361 seconds)
    (3/7) benchmarking "month"...
    done (took 1.1098666 seconds)
    (4/7) benchmarking "year"...
    done (took 1.106416504 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.107190268 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.113197451 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.100059302 seconds)
  done (took 8.849416486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.552669931 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.285831315 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.325257513 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.579066063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.78960408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.043844342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.780666174 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.039821091 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.87224537 seconds)
  done (took 16.360513113 seconds)
done (took 73.458015322 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.872258461 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.122887752 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.58234752 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.205824267 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.20882061 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.455108835 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.124965282 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.672427446 seconds)
done (took 37.343552434 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.180730247 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.095048398 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.126629188 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.13089329 seconds)
  done (took 19.450001905 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.099707673 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.687851758 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.128356156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.061327468 seconds)
  done (took 19.14186508 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.506428835 seconds)
    (2/2) benchmarking "read"...
    done (took 1.499915886 seconds)
  done (took 4.125024123 seconds)
done (took 50.004821365 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.10276245 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.11665191 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.106168636 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.101016982 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.100058854 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.100179876 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.101343112 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.099597876 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.118258054 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.10219161 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.108184775 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.11304837 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.103626287 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.100231065 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.101255955 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.119543991 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.103682027 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.1082427 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.105215944 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.115757382 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.106725783 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.101748714 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.112511861 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.099812462 seconds)
  done (took 27.647174355 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.175236029 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.176758611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.182107389 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.191439221 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206755287 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.181482134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.171609121 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.143212836 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.186276801 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.157739278 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156782588 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.199918584 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.155521723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.199432259 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143217724 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.196174263 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.183295055 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146780997 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151398731 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215569245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.195404647 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149296734 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196712174 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145313237 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196910996 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145438254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.160104635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.169233482 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.143214089 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206094263 seconds)
  done (took 36.320379586 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.134431993 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.099688305 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.111815693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198479845 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.108690075 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.112324397 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.106542273 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.113634347 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.100655673 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.103371603 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.101957045 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.105293165 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.107541722 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.106646316 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.102189057 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.107075423 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.148213095 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271730693 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.102952684 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.111890135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.144818427 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.107448482 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.105305541 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.101068076 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.109790561 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.112193577 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.099644608 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.102259179 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.101502289 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.102583161 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.106875006 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.1574105 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.150928193 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.121772229 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241441085 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.172592339 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.100595609 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.134682582 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.110294659 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.101721702 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.104673524 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.139680189 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.116334531 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.116521693 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.16152164 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.100493335 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.113284589 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.103096334 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.104145352 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.105268907 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.10213705 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.115732638 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.117577512 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.099638536 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.099739249 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.104088336 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.101920506 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.102026086 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.106541158 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.11326717 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.118941942 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.181185104 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.102418248 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.100857279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.476569024 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.110970577 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.175015439 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.10695068 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.099401526 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.34052876 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.09872054 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.308298345 seconds)
  done (took 82.4819662 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.100574124 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.106670834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.188231325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.185341056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.107725124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.11586776 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.100961691 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127509581 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847277192 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.150706418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.111666269 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.10440418 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786814964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.108301341 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.103032954 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.183053159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.102738756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109982693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.109568933 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.102623041 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.102878037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.120839654 seconds)
  done (took 27.177135633 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138031164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.11410739 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.148113797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.103459945 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.111606205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.101492286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.140172151 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.131563473 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137329516 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145418696 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133538872 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138988472 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.106092987 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145732135 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149641075 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.117364187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168742104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.114573823 seconds)
  done (took 21.442996103 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.273993516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.278275333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.191169211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.152372874 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.36956563 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353901512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221749202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.280913188 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.14326808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.277684697 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.287910867 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152078666 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337627936 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165261239 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148116168 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362615705 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180564368 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146094065 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214625314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215031621 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283040061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23211996 seconds)
  done (took 28.360785549 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.135741438 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.148188104 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.17808267 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.184176278 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.106707298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.103844575 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.165007343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.165185674 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.117970061 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.13851381 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145540172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.102895421 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.131835931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.169830833 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.187861454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148809989 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.161577836 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.157264024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147051964 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.099342696 seconds)
  done (took 24.001374303 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.10674767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.115845891 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.100266353 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.106536145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.123441149 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.105207936 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.104183906 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.098239747 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.109321022 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.360314494 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.113419559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.103274903 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.108868295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.113398527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.10235255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.102744162 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.096782828 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.102923113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.115893807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.109670358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356350199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.115250124 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.112033122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.097783549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.102704577 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.098392076 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10657665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.102002166 seconds)
  done (took 32.583002865 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171950134 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.12390864 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.116857158 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.104082024 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.102137721 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.165493273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.112454298 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.100744719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.107959533 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.10212407 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.115450853 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.112564828 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.113799086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.164386097 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098095315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.105599355 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.211981995 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.11036505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169480876 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.089410137 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.124317249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.202165087 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.109439693 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.10664563 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.090704172 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.107700203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.104709841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.117414138 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.103296823 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.102155857 seconds)
  done (took 52.765147967 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.123148075 seconds)
    (2/2) benchmarking "in"...
    done (took 1.123015613 seconds)
  done (took 3.355216119 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.100555569 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206503999 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.117469469 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304589071 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.27839878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.29822949 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.27961403 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199417068 seconds)
  done (took 10.873515298 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.109015816 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.331108811 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.232895802 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.101284989 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.102254954 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.404380787 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.14152053 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.959711587 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.824132007 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.087507824 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.223635098 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.689783969 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.101878042 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.397475265 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.223563933 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.91683489 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.306860344 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.617502153 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.06870331 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.209521395 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.798629936 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.179057643 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.105610726 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.1153023 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.102793417 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.039194475 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.879789872 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.714599294 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.218326478 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.213009275 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.846087609 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.143457404 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.101401464 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.31276825 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.212076656 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.103107463 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.2338064 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.190931057 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.111212711 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.113650719 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.684187305 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.841467464 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.304261697 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.291744875 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.170349672 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.101252834 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.102602654 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.101126382 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.341966505 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.77365886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.128513744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.078580566 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241829814 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.115077674 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.618452678 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.224379049 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.101051247 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.035047109 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.674849302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.250782572 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.650817052 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.226377755 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.080330952 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.210725889 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.107738229 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.330635401 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.96149312 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.849960656 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.785618421 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.197173576 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.456186211 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254099723 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.11164807 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.111783503 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.049098149 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.414719759 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.113139954 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.108943145 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.112701267 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.105889116 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.310852437 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.202814928 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.918297579 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.240415706 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.323497686 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.566656269 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.212507448 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.101269224 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.707048147 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.957753664 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.232304359 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.600468091 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.403811981 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249423762 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.087845702 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.351577286 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.135273659 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.11018804 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.914163715 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.565927296 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.237391114 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.105068927 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.465599344 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.170941443 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.126561842 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.105955886 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.757543213 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.216339346 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.202488598 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.126950873 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.105796552 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.101514916 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.727199698 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.238891183 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.114962599 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.646801447 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.118284945 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.472561731 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.505761221 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.252963844 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.435492342 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.04526333 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.348840931 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.953444492 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.128856183 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.463812359 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.125254046 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.743424243 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.334373056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.202343733 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.958645032 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.134367139 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.102635889 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.195381483 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.138645147 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.114901355 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.116741088 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.113448073 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.102998835 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.112492916 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.214944459 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.427613689 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.727864916 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.211666558 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.327572944 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.23575913 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.767034209 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.390232523 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.760730903 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.252291588 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.110849316 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.66648157 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.500605294 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.753401219 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.207831406 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.109291117 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.099882694 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.919642339 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.080954859 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.175711148 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.104899315 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.745997312 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.240698101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.120727068 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.102449524 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.595939398 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24352711 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.109094672 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.173013593 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.822783739 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.775518068 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22558141 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.40369098 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.219137245 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.103359927 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.101104913 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.116947488 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.878154805 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.76689098 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.241638017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.721942802 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.892486974 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.146419683 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.226562285 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.176862385 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.317977042 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.279530396 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.246065144 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.105357521 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.114151205 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.103503352 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.627098311 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.970129182 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.936857073 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.036948564 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.109843981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.121669033 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.227593844 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.767421006 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.272259378 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.770222725 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.037329793 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.183686702 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.111779226 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.102777471 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.25361846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.257330862 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245926928 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.50191521 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238150157 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.125554696 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.731203173 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.207790624 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.731402791 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.186281453 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.91638125 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.154938646 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.213884235 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.222410532 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.695800771 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.163233243 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.115057955 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.750741525 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.177847048 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.102808064 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.114253553 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.599011441 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.023118389 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.831805386 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.57333939 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.147671339 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.6947812 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.347092778 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250897016 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.901120536 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.176467422 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.369574782 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.197369306 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.463639373 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228149434 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.712643722 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.281854094 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.662002732 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.206528387 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.065625559 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.205957648 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.542673849 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.196069031 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.101561517 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.235964514 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.184453696 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.732545179 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.202552164 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.209375066 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.436650232 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.949160585 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.174733844 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.379572263 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.19115608 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.019636813 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.064964422 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.433815292 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.00835181 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.096280527 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.226978152 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.867507417 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.219175737 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.38582317 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.256212376 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.105489883 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.107802969 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.271010167 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.16344111 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.103372159 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.404583401 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.016186029 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.164276622 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.222486237 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.123967722 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.122874778 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.280253797 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.21673991 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.333038997 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.481327863 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.689695493 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.887356717 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.208184452 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.713342985 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.155976559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.822039356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.253508743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.1213021 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.758788846 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.202062333 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.339031987 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.222348623 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.203325942 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.59360532 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.320686679 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.351993447 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.22826532 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.196022437 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.83187958 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.646812522 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.343252635 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.361563608 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.284313123 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.693951656 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.208974353 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.695370113 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.134190099 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.83199816 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.17154282 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.143029117 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.12377036 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.102815188 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.686872113 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.113778876 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.11979313 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.875750932 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.623104231 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.165690619 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.872863648 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.241512382 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.117588454 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.103115213 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.100853543 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.036137522 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.185528593 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.395854078 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.18989389 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.113127588 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.10279512 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.061826188 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.400624296 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.807683451 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.941929401 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.006134476 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.241436631 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.113921697 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.104234505 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.103671315 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.129026039 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.104279939 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.105431564 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.459897633 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.250310186 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.741065257 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.240205252 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.115759917 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.279904531 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.146082724 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.105059789 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.248298534 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.132761723 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.205336051 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.171968824 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.113293956 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.535782457 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24325229 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.091972784 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.389395882 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.32814789 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.294554016 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.494579476 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278709511 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.550045363 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.440270071 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.920353089 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.12046922 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.047042703 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.225566335 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.892138703 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.062951453 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.533609574 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.716599119 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.125824621 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.35189841 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.953991167 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.515794902 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.260276093 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.139091537 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.114002939 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.121601025 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.159069712 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.316175939 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.147418998 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.395932552 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.248097661 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.117309219 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.38924558 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.166703654 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.176751486 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280552836 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.119830264 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.103782852 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.11164295 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.504872994 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.93372086 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.136000949 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.10187778 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.032091499 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.978011994 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.955229647 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.774332979 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.070782558 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25028821 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.102972017 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.293184826 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.163625025 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.745290813 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228787831 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.865987912 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.424298885 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.156887464 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.248984436 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.467814014 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.832797061 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.424227724 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.18974227 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.12370694 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.444040635 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.062220304 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.245229548 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.039857822 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.404659224 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.681695321 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.614598561 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.327497798 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.191175128 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.034753195 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.739879234 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.131082372 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.122509604 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.919055407 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246579253 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.356807952 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.068175079 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.333449827 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251219451 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.771763695 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.824297466 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.241371811 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.695826315 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.248442085 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.106300732 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.748178369 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.128579532 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.273552487 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.191485195 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.10650166 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.121110163 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.751865305 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.697747549 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.313574029 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156105588 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.120606955 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.740154731 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.93592609 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.231849823 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.121574669 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.111104431 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.413194197 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.254343563 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.10221859 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.545080986 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.741859631 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.25025711 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.630745394 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.239656828 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249062164 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.326914441 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.490454166 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.259286753 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.181556972 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.119596334 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.109334907 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.105117863 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.475140301 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.234731751 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.106947071 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.693554232 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.24196402 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.710207342 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.210120631 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.34170392 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.142874469 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.547820502 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249767581 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.643811392 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.032740353 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.22488261 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.40435378 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.195676548 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.207388807 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.783907706 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.182907675 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.113540595 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.062089062 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.362753545 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.389947748 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.427764023 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.388130124 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.163659055 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.751745139 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.196166041 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.74010369 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.23396787 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.103738095 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.631166464 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.273753008 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.475022714 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.224260679 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.523824314 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.202687768 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.481543462 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.375559221 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.194220352 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.109001262 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.133177883 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.100933391 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.1211642 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.72000829 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.062636388 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.538386613 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.201708713 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.999245773 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.630776377 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.746942558 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.395625777 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.255026751 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.382198058 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273176408 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.063325127 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.440977438 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.128060675 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.252727089 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.221261534 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.904898741 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.120555497 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.103188584 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.474332105 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.23118616 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.105518801 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.117066243 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.03511561 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.864032753 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.175374887 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.292058206 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.167060581 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.101186845 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.684169984 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.387068104 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.149064111 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.115349023 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.103459754 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.939735126 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.186451008 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.104771795 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.41453842 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.235810967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.364930098 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.889041727 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.533816199 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.206726094 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.179701878 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.17594217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.680466293 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.716240362 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.236881471 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.472612463 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.160439759 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.649843264 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.100728116 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.5402544 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.634847643 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.075918727 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.200254114 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.107340284 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.101159841 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.86589599 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.137766246 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.880824422 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.531322147 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.166978546 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.908401108 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.031538465 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.133225297 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.265026279 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.123639526 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.118614892 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.1169253 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.111460111 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.640175716 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.11635505 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.120066856 seconds)
  done (took 1424.697656007 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.405600689 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.107254907 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.106632652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.114593182 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104844482 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10658666 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110549766 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.103595075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.112594418 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.115175483 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.106269863 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105580028 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.103359795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399807203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.107035958 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.113553345 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.118486468 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.126271839 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.115844438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.104701474 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.105843066 seconds)
  done (took 24.997761517 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.107426607 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.102562478 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.113246139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.104707771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.114254473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.114005486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.103714153 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10366586 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.114059932 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113656209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.103443579 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108579558 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.1046769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.111533177 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.118678887 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.107004641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.110299254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.104946228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.115591554 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.105399405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.109627779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.104952953 seconds)
  done (took 25.488663167 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.11547693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.105448329 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.786084591 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.196047853 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.1110542 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.104667473 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.109515764 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.313362911 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.098174504 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.026970324 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 4.068103651 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.159862993 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.118066668 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.274231155 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.202405486 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.105558333 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.262050418 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.113871462 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.114371351 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.10591681 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.105501022 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.293975523 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.205974361 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.120589626 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.906112416 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.249188359 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.104784438 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.115375314 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.101388409 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.099363235 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.213048097 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.122386541 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.943427376 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.855393551 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.380632781 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.016059869 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.220203372 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.119800849 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.113302252 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.105133478 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.350608201 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.893130294 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.115812403 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.120560391 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.383885504 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.189628762 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.106748179 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.47926683 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.161812755 seconds)
  done (took 88.796457202 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.130740114 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.263978409 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.17278757 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.105723197 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.235339443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.106554194 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.168241622 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.108516723 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.106097862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.119608638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.247040207 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.267643523 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.103788131 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.113910688 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.191306102 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.112420894 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.130759316 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.131003507 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.119885738 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.105876673 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.107630237 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.158721792 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.235502387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.272044821 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.114726891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.106862889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.108787932 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.114964511 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271972932 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.108974875 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.107473603 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.107983698 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.241567055 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.188225523 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.105573694 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.121962544 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.243114396 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.108770229 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.105652662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.103276152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.106221234 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.123184878 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.157856476 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.246293432 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.121991381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.206755833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.110421871 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.103606917 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.258473783 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.109021659 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.112201548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.276721922 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.112847728 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.128963437 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.126247597 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.237466942 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.105528779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.108939032 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.104961715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.256004028 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.104134001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.118494286 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262344193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.107644718 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.103015434 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272414631 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.212789268 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.119712141 seconds)
  done (took 79.590877663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.103579536 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.12028117 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.104643323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.112198939 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.103333807 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.110325776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.112173193 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.11450165 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.105734614 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.105757864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.121831244 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.160899869 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.198321665 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.153969064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.104654373 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.107523988 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.112245095 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106323611 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.107886421 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.120161685 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.105153325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.110072552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.105467764 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.101944336 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.48494575 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.123727427 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.106030703 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.112258183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.113840403 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.104416068 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.472737623 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.107351274 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.117232743 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.110926489 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.465592482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.115640054 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.12961076 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.108211223 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.120714083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.103079052 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.104306238 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.107406048 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.111312861 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.103758106 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.107547958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.113456861 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.103146538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.470295662 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.106256886 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.109347854 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.103104561 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114157598 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.113463778 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.110905892 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.119977347 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.201174626 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.112090865 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.104631556 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.117196179 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.103739654 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.11055288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.202992051 seconds)
  done (took 71.76039921 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.116153391 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.107093261 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.118762347 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.103436712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.108662254 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.103374749 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.112978381 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.106499027 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.122960555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.112461715 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.103375267 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.109555632 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.103509326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108627344 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.10407517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.112607006 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.116459341 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.11825521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.106391029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.105161425 seconds)
  done (took 23.310969108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.105543778 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.115503171 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.103996547 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.110641062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.109236586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.120934909 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.120950083 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.110196404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113476017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.112854333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.107096492 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.108399582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.111133407 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.105716297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.119520399 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.105519419 seconds)
  done (took 18.881813956 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.107898117 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.104782345 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.107204913 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.11841113 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.112540881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.122283384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.121357085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.107643942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.105220066 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.572077871 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.116326914 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.11483894 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.110725522 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.107085037 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.105638208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.122214629 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.105063589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.107987978 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.109651862 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.112881453 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.680708761 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.112980632 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.10762586 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.1192709 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.117397666 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.685326938 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.113298906 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.106329258 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.110032729 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.109852729 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.108676428 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.589411024 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.114553842 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.105784261 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.107430332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.105069593 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.112683261 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.104918036 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.113465482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.108115983 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.115096155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.122115674 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.135338355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.10991519 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.115597624 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.110504204 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.105612044 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.567709838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.107186106 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.119733863 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.104403131 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.107667299 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.107741373 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.582225975 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.115210137 seconds)
  done (took 65.246473689 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151372497 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.178568049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.118891883 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.104611257 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.160565484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.152043699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.15868146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.124595681 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152964284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.110921773 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179195253 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.121384843 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150983849 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.161405533 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.164931229 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162004169 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.116564076 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.181900102 seconds)
  done (took 21.751653549 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.127286139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.105007353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.105694731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.104410755 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.104998531 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.106679232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.118136036 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.112937208 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104556215 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.129033101 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.105164516 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.104194829 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106588934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.113029625 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.118332726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.118840003 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.106002612 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108657001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.126641069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.104887082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.11430813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.106946694 seconds)
  done (took 25.554010533 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.148184806 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.159101436 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.105056751 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.106929537 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.122773408 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.127065361 seconds)
  done (took 7.864937745 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.159700983 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.105464776 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.142006109 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176699602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.107393668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104445616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131296847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.105332582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.113614725 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416998225 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.115805745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.11031658 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.112338275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.108403584 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.109453728 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.112704159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104062032 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.115131397 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155161789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191853417 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.119480648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10991761 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.108505288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.113614366 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.118002504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.104614792 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.108040047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414191057 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.110392186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.116981793 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.108353861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107000283 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.118962982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42618662 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159337734 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10521143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114045039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.190334984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114822077 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.108081876 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.15751949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.122643131 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.104245017 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.117731814 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106999967 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104868024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.122439097 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114287823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.105226164 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428813395 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.115186462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.103301235 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10698835 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.106480162 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.108981776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412209535 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430538043 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113293387 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.121454891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426760281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.111266074 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.107685957 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.113515667 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4182943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114887294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.109658504 seconds)
  done (took 77.399895756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.106886762 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.140868869 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.105924877 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419116994 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.109850133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.123097236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.104157244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.108034137 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.12731762 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161134499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195082731 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106200769 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.110190637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130392682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189271749 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171117424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192875518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.156110146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171156409 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418310937 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.108959476 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.115970882 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.106037212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114901711 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4125993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130845987 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.11080329 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.118126358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.118475056 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.110061456 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.109242529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.11901047 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.113483798 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.142756729 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.122618279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.105552386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.106239114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1041233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.110708132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.112750914 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.112264206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191840238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.109381212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.121931722 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409756721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.123122768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.104884009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.177102992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.113162123 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170294426 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415296149 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427112893 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421202978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.108950202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104355628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.110531328 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.110644548 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.116364709 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.117352483 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.115281439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.116802766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.105612187 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422097805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.107673067 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.112549186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.10469679 seconds)
  done (took 77.699247006 seconds)
done (took 2381.15180269 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.153814054 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.170503804 seconds)
  done (took 13.4348241 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.117857241 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.104208946 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.270162145 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.116777181 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.142916392 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.202513253 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.154426764 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.112695365 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.114329309 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.190253438 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.118774672 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.244277365 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.212563358 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.107724755 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.118631626 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.127000043 seconds)
  done (took 39.612025209 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.098212034 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.275802914 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.096131044 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.878329083 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.280071869 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.979070202 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.428208438 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.353285105 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.394945924 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.564499229 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.366268282 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.607146893 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.934379042 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.228252189 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.701788125 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.757148379 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.852972024 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.922569012 seconds)
  done (took 59.812700273 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.096450078 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.251499973 seconds)
  done (took 8.457630136 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.097014577 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.114393944 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.133712157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.148873474 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.133996608 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.133973429 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.1188769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.118628828 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.152403113 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.137096795 seconds)
  done (took 62.416009726 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.065000548 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.772453217 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.435917052 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.692831061 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.666286612 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.514561849 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.266142388 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.469540059 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.185195425 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.097548358 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.966268168 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.545359024 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.829493976 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.068532476 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.61299696 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.406455045 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.672186036 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.647729499 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.426416702 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.413966245 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.340368147 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.801021802 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.586821809 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.958833136 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.116370675 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.223036106 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.211569806 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.236707973 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.190580654 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.02208248 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.938009812 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.147913957 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.050870558 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.110723997 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.059111239 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.733720973 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.804005892 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316601216 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.33851661 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.41145245 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.497661263 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.364587867 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.240495795 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.351614061 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.343589018 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.303376889 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.063628677 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.342986372 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.202152059 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.220392146 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.548735085 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.288874075 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.247499765 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.228093315 seconds)
  done (took 149.701872315 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.109012074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.50480909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.255693206 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.101351351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.52758646 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.330361943 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.831603007 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616356893 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.116277049 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.322558726 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.28859174 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.251469554 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.11799386 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.101592606 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.107601747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.108481499 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.297213899 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.622211261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.125851039 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.102850424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.322969191 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.355551828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.249321823 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.101816466 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.279394631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.353267633 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.57580113 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.240719594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.483708597 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.104712469 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.582959139 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.116377855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.104373876 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.019641936 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.523884894 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.451004783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613273548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.116005092 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.830959576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.108033882 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.732454941 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.323109843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.439590731 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.254652181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.363443001 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.343370969 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.729775934 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.097306052 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.905462647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.283307701 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.330010447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.319493056 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.390998052 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.116079196 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.652989946 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.112025431 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.1127832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.371455265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.262465367 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.2236246 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.102681613 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.103946653 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.112392069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.361917552 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.106925962 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.248017738 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.100469284 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.106394288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.227298665 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.230318511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.2836827 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.351341699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.360063652 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.390525742 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.082528843 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.343211453 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.550851079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.349103322 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.106070901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.115690625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567819368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.543522517 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.270226708 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.343617305 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.426982907 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.404476365 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.677289773 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.103932617 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.33992159 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.284214037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.49480953 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.368968257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.45648687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.027675422 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.115596441 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.103684837 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.081379525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.243857792 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.103531467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.630700546 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.375761149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.202399427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.306441232 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.591787667 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.218253123 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.100170072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.700600407 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.102441591 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.326870354 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.396465942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.128554585 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.112480585 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.261709473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.054419095 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.104397938 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.52682163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538063664 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.116903994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.271617844 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.102234633 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.36138284 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.99489813 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.355407221 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.099815985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.38780337 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.295947832 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.410638552 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.104562909 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.370343146 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.375199616 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.52378999 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.430444291 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.100468029 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.120646069 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.424078318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.111950698 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.103120386 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.282742358 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.043367696 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.286900192 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.109819389 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.526150425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.267380395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.460706902 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.124767919 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.345690523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.362412871 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.516067867 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.129856984 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.242110165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099956511 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.205932593 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.273591552 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.102109988 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.113387917 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.975059323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.103440477 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.256392926 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.337474411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760818602 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.606953675 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.461676719 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.110565686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618051589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312076102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.546463972 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.621008215 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.284050805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.817035728 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.341018093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.103105987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.361660073 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.412950629 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.101895464 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.105744181 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.822099409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.215825926 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.118930256 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.27975324 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.745424867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.514032409 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.329719654 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.118377464 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.444741705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.123745365 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.337711886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.611750624 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.396440916 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.103677843 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.114149673 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.109661616 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.104930983 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.32900488 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.375735378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.770868571 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.255294788 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.410730989 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.349623688 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.428691095 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.586136906 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.118682479 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.425395893 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.108944462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.56126804 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.124462085 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230208347 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.412132652 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.108240008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.327001025 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.459407652 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306843179 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.565680173 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.124034035 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.111376252 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.720636164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.28806408 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613936965 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.112300682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.281699579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.509963594 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.238278844 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.322977198 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.358008854 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.12125717 seconds)
  done (took 730.452463691 seconds)
done (took 1064.990717883 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.095991919 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.11205999 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.109458063 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.104223696 seconds)
  done (took 25.515487164 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.961942609 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.938656818 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.204771982 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.1108117 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.255357054 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.363388677 seconds)
  done (took 10.940806945 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.611558133 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.107029504 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.101383588 seconds)
  done (took 17.943645125 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.41895924 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.593855362 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.282156474 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.197984984 seconds)
  done (took 6.598763078 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.111220523 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.117081244 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.106758375 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.116039959 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.133566382 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.107080493 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.119052159 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.113949216 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.109350227 seconds)
  done (took 11.135871337 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.600097501 seconds)
done (took 77.841362574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.534053256 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.405385288 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.109373437 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.310217001 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.242454094 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.42991302 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.22194337 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.136817439 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.39174393 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.587565035 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.602763343 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.333863597 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.478894773 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.533428683 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.339731249 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.145273263 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.120889437 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.174105078 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.645926736 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.30073437 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.856919564 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.238044724 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.095265197 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.13784146 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.975746997 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.22109986 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.358908607 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.108894685 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.731179206 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.13089167 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.203809899 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.658280384 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.312091343 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.404236232 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.198445046 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.959180465 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.591670609 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.226866709 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.298186644 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.694540132 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.398907801 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.195600227 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.109053063 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.409143747 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.521204099 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.140169253 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.015319941 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.270797149 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.568777451 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.27433311 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.438135576 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.120023503 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.77722128 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.185660602 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.192687617 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.103111192 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.081948927 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.583007415 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.332518851 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.416259721 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.132655003 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.220961932 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.126635222 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.129789423 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 6.09786294 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 3.388872153 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.55041865 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.213253242 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.570578587 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.139972059 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.127507341 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.145689944 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.80066741 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.278688308 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.104232937 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.110838456 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.401248497 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.177428076 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.105984599 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 6.184181945 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 3.320642449 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.122849599 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.320793126 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.403789505 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.270021262 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.46705444 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.599498377 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.486056433 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.733559737 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.113136621 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 7.497769742 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.684225886 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.312472688 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.116344173 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.174940251 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.317088459 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.656601951 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.60924086 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.241985718 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.804352277 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.142509231 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.138309016 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.446831415 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.472645665 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.904517397 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.141122995 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.240878095 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.156000179 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.281119181 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.099170941 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.700716822 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.55296727 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.115737726 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.171535302 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.622122968 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.110775635 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.393270885 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.432807644 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.1862698 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.202571689 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.337150763 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.128266968 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.233687398 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.694558759 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.485183967 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.338660973 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.103725295 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.764905809 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.1118533 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.330887356 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.112396369 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.759328311 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.667161633 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.131809576 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.367929732 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.240039134 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.097601061 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.273687202 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.172792064 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.259003811 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.478128974 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.437729408 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.275571426 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.105223032 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.435824052 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.105610254 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.344492783 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.398313164 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.268900575 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.417812511 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.203395101 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.128063426 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.109654544 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.618009475 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.727339891 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.837184132 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.360633695 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.23917193 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.685659337 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.42371635 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.919055906 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.206479531 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.159009156 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.10743636 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.125276125 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.170015348 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.097624101 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.211386369 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.345155003 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.362791486 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.848133525 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.893610323 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 5.833060167 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.403109113 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.274014876 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.118500599 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.750871467 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.112469295 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.556327222 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.568538474 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.225267498 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.135660232 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.097554011 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.201655781 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.90796691 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.145869668 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.47878011 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.608364128 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.407496046 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.561440342 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.28149679 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.142210467 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.465100775 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.355006072 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.390400535 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.336983905 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.756789185 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.227732454 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.431257185 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.195058168 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.387920776 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.108759014 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.385335008 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.303545356 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.601234843 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.41418721 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.341299093 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.33359019 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.449299479 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.112507593 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.105658493 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 7.965531371 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.691208225 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.136512149 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 6.117995212 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 7.855334723 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 1.582421571 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.137525326 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.287715419 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.402514008 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.223469107 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.26041121 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.586094186 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.128464254 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.385447335 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.34030801 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.236342399 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.329368121 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.137161424 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.255647419 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.303492017 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.245264172 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.368471996 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.11125464 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426587127 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.214372657 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.03016625 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.098447816 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 1.782773942 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.142265182 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.122319702 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.457616746 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.312315477 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.417349191 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.220073912 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.270638948 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.100418004 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.20459859 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.723572266 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.052694693 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.651373945 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.221244135 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.134410869 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.097192211 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.643093252 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.593255213 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.233642182 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.250852738 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.76091736 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.138581093 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.304817604 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.111007393 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.107740312 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.913252494 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.25153391 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.354882697 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.835037359 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.118184311 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.521614414 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.111126474 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.641595435 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.633929162 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.155035856 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.248715419 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 6.107316649 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 4.954028279 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.50064582 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.13407142 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.275123275 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.42540676 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.230783772 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.234108644 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.117170289 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.150802826 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.597359018 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.367273447 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.68612816 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.143366173 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.492965141 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.111511799 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 2.566468037 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.144380392 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.195023941 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.566721633 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.23437925 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.550167091 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.327209118 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.152186792 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.366336287 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.161853417 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.127194778 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.250121488 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.164392985 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.761249394 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 2.895313113 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.282757263 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.025219917 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.34922451 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.111592845 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 2.117026341 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.286378069 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.210944604 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.691850848 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.64681109 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.111613689 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.381070534 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.118603822 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.556900395 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.133020624 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.121959957 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.24515902 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.204572253 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.103389208 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 2.108693269 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.267260383 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.707016969 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.256080199 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.965745709 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.116458864 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 2.529254188 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.244362485 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.433726584 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.106212439 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.137519275 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.30675237 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.747218098 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.234849848 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.148430657 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.328378238 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.113796841 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.760599437 seconds)
  done (took 868.53591849 seconds)
done (took 869.87500022 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.171797487 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.517960466 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.343666764 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.00963268 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.941851041 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.785143407 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.350414046 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364827767 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.2056511 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.350180526 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.087602317 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.939056775 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.232341923 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.245193511 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.204481375 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.238365746 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.310506974 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379065153 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.267466018 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.072915821 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.509682756 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.081130705 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.557080911 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.431764822 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.523149323 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.245337831 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.192642378 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.481966378 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.486194561 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.332912369 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.294398618 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.335472657 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.96470682 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.394389157 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.212177608 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.223545474 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.989312051 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.233570428 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.176063929 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.21958372 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.506554378 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.262800235 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.853746348 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.967859689 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.908623628 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.564014308 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.021812989 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.25307139 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.239637604 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.307340295 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.160628483 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.151841834 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.549352849 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.415331932 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.038739936 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.000228182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.491716406 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.983249276 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.878262031 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.314247378 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.520809083 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.229607753 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.308586708 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359744046 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.255209435 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.433432207 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.545640504 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.181992744 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.327243851 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.355574924 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373756396 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.357729182 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.260017819 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.258919064 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.268213651 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.347862752 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.755100044 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.350517985 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.923854897 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.237567658 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.104056363 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.065959945 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.088247054 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.210042606 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.176470206 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.907217887 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.964480456 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.086318912 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.254626879 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.328131744 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.069413803 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.334098236 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.600625078 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.194866258 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.17054107 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.33325576 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.960468415 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.159393203 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.282555892 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.333355656 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.917596805 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.199963581 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.172328771 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.235498877 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.23148384 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.183980324 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.192810284 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.545057168 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.356009467 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.298304619 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.517049292 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.264427033 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.355533966 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.251171367 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.205304887 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.934636501 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.422966546 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.965388776 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.162593311 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.800505798 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.409328211 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.235708007 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.509712215 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.448817636 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.17668978 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.222469242 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.235649175 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.077429031 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.24315758 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.227222567 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.319334579 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.599340739 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.307659929 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.01511256 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367081278 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.844016513 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.387621525 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.356780627 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.206773797 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.983329 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.230424707 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.269539537 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.437703473 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.522216845 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375277998 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.423336036 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.25733141 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.394091389 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.170265064 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.255398644 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.356057439 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.256072088 seconds)
done (took 245.511263425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.481745106 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 3.452722521 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.405020118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.33076712 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.507624842 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.400890646 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.176084565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.564094312 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.175367826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.526610383 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.317678164 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.309989886 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 3.468227392 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341884254 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475348397 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34498579 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.171905392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.370414234 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.561685917 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.485634475 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.194594406 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32643181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.245144975 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.503125405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.109598345 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.177506042 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.416189286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.233661311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.387085114 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.115567049 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.132472475 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.376705074 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416183543 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 3.238871496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.503503436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.106579846 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440405622 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.16876158 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.361472076 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.48226282 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.331536688 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 3.886847507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.115527085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.209667032 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.226610278 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.390260664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.173205002 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 3.390068542 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.121662156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.105542859 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.37807017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.16274137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.305461427 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.383382854 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.328745828 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 3.19176882 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.526204657 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.503875235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.495923297 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.413352223 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.365759294 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.532043302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.494561244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.248414402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.122366487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.396305617 seconds)
  done (took 125.715142633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.531187844 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.405393319 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.513033798 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.358603425 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.639400758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.5317313 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.478888208 seconds)
  done (took 13.558547368 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.174462332 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.165638431 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40923511 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.404142886 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.171853667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.291762218 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.249090827 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.121523304 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.394491265 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.278091117 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.553070526 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409677896 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.06345733 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.126900031 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.253721584 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.411640471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.148225057 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.24001998 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.219875985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412413088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.135343026 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.12464898 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.316206027 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.141168848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.166713859 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.207789598 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.158335546 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.133371569 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.166697311 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.14390214 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.164293226 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.266319167 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.150905422 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.099643523 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.155800611 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.486986264 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.173522519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.161376469 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288051386 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.114822662 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.146601514 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.163554141 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.294809656 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.167287026 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.145367367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.34466187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.150600804 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.177311918 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.162811592 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.156765757 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.352019349 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.154511829 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.152329756 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.072403886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.373145126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.115242257 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.232413707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.154496749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.164515657 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.213499548 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.163198 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.418740924 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381273728 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.160717912 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400253662 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.443712452 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.162262742 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.150252783 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.15741909 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.374182029 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.165220621 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409106443 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.164205397 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.205715372 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.15998263 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.294845184 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.351719455 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.953655529 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.951716768 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.065735021 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.483533441 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.151555545 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.484081948 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.09921422 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.072961761 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.144110679 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.159933103 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.823249512 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.078104858 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.184138041 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.466540048 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.146292377 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.210121137 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.212987288 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.145903256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.214795635 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334244282 seconds)
  done (took 144.33945289 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.248799384 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.310174076 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.504554184 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.091287518 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.163106949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.36046279 seconds)
  done (took 14.795189025 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.589145222 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.959431321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.199101576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.185887264 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.21702418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.114046723 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.114815114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.316575198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.29082589 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.184718186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.106526799 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.117477621 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.108277275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.292985755 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.13128636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.168035976 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.111582543 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.183199514 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.164439174 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.221463426 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.312257376 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.224510483 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225797389 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.832177298 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.182740365 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.176754716 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.879641899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.178187615 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.177931833 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.541188717 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.312011487 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.125399528 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826400314 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.251626154 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.892876498 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.842358793 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.310237008 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.12464489 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.156476874 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.118971748 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.118028675 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.228484312 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.177995644 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.12232976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.494676189 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.759322708 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.182014944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.408361409 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.127022402 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.134173595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.110626688 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.179058286 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.109094597 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.11411396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.437712205 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.691226891 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.092854707 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.117780404 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.221490555 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.837100451 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.259962667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.127197545 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.544307402 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.084792822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.108307539 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.121881625 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.842732886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.315396942 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.225694479 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.17964129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.11387971 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.191998319 seconds)
  done (took 113.405406542 seconds)
done (took 412.935346065 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.3678661 seconds)
  done (took 7.488290603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.243819469 seconds)
  done (took 7.450537443 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.103783676 seconds)
  done (took 7.226320673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.117926809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.155686628 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.133137409 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.127087091 seconds)
  done (took 25.680552435 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.713783576 seconds)
  done (took 7.821510745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.100816284 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.122983364 seconds)
  done (took 13.343303818 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.175138134 seconds)
  done (took 7.296315562 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.394093936 seconds)
  done (took 7.517559995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.109829951 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.12906564 seconds)
  done (took 13.377517502 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.099195555 seconds)
  done (took 7.214491429 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.374561533 seconds)
  done (took 7.519101503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.107445959 seconds)
  done (took 7.338114334 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.137585162 seconds)
  done (took 7.259504434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.157955468 seconds)
  done (took 7.263807046 seconds)
done (took 134.897257185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.100246036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.108172176 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.109864479 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.106516417 seconds)
  done (took 25.531589834 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.434715434 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.440660905 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.429387375 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.592780609 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390846021 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379556365 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.451363902 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.43719812 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.383778607 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.482873822 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.439338118 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.488000791 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.587448487 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.445073081 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.413940638 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.486333777 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.601009865 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.446239637 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386147173 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.416264393 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.597002463 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.588466271 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.869847344 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.860275343 seconds)
  done (took 37.1672382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.318491768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.498189643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.283045413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430372841 seconds)
  done (took 6.640232806 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.149485762 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.485621507 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.473018693 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.538546578 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.478999313 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.280764094 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.468345578 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.320352771 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.289596501 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.298449697 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.736235541 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.273204164 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.274822549 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.529858938 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.29584079 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.119294662 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.118924085 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.249892661 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.503844138 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.336248788 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.383305567 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.470614909 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.478109287 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.479363908 seconds)
  done (took 34.141707001 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.937009398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.057248862 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.478567144 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.038954492 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.834270824 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.931140878 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.397386636 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.613973346 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.395836635 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.363286916 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.878173514 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.851494912 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.260914181 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.028349584 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.894715855 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.293990406 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.301856999 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.000869774 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.530817472 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.416904541 seconds)
  done (took 38.617280595 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.114707401 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.108456883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.351226182 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.277407603 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.101947401 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.104747273 seconds)
  done (took 28.170148028 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.392669593 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.246620805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389706743 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.359142991 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.261530404 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.231406935 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.630487154 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.323792278 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.868377189 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.773989405 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.55062001 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.532047563 seconds)
  done (took 21.67813887 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.102521524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.146896808 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.124895932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.280705546 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.938275036 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.995720148 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.433876235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.106295064 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.238549209 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.384830531 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.974241778 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.293833103 seconds)
  done (took 40.144634185 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.307967679 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.30106488 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.420036694 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.141085549 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.494963915 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.162292996 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.47336745 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.548521589 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.699394068 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.887520917 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.649592766 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.137021023 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.642292293 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.08367795 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.850900272 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.410369723 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931384642 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.151978367 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.419469286 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.147423593 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.071753066 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.252004898 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.113625527 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.549500602 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400190236 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109599648 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.327043145 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.351335373 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.11634933 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.331142558 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.105607727 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.634134902 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.28262486 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.419501342 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.510823865 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.372942619 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.116052522 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.111997902 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.670309819 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.408697935 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.252378982 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.268132497 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.104631887 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.122237546 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368939472 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.899264418 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.329384622 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.648863005 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.108543579 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.413177208 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.877960302 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.004921918 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.571401475 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.073803217 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.250176978 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.400785728 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.279413884 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.107857048 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.441517238 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.363978187 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.129934158 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.313599225 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.30670021 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.078992656 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.564034202 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.327055548 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.236658678 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.328674671 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.421961374 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.410217501 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.474859492 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.440546459 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.801856178 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.248211806 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.647743876 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.027548219 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.465349963 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.115287137 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.830521462 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.641592173 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.106208193 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.22053905 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.80406004 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.075625211 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.109128235 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.296106083 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.985973021 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.084478048 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.120805707 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.371861146 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.372082076 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.229315511 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.250414178 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.302784739 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.815169537 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.106013416 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.116527629 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.359611819 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.077521223 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.738636421 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.168878197 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.138028109 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.111808925 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.729236567 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.485763818 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.901051572 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.885352852 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.73447016 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.419137348 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.714151652 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.276157154 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.941151144 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.469432162 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.442261099 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.111842 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.808948107 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.116288153 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.393690746 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.31808017 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.106810732 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.089306517 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.501312485 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.279627305 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.108366387 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.38855634 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107755143 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.260554136 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.118558176 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.700335827 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.08140145 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.351138348 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.564300155 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.203549227 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.260547421 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.07230892 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.261150133 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.547204757 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.185779258 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.474691265 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.415922081 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.302191065 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.565151788 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.101895823 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.961582832 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.46569347 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.327552848 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.453651823 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.745499336 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.279827349 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.115197843 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.120189235 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.236019393 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.122868073 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.656211695 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.106484375 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.850222125 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.810042184 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.373272652 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.106091351 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.267175024 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.108948182 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.333421827 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.575369065 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.276094255 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.295424143 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.389159924 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.293385298 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.122501535 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.088123975 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.394404955 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.337391056 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.571366893 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.339723366 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.571843312 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.578466245 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.598001929 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.315650349 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.488969477 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.928734616 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.541836072 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.353819479 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.925866196 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.171537526 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.139055395 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.373822536 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396721898 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.350583682 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.898322501 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.890736618 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.058116901 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.19709534 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.691070934 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.135900382 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.256788386 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.480405002 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.105366139 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.60159018 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.189361228 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.485213424 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.592733595 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.153055894 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.402566627 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.727493115 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.641945584 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.469449905 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.450448261 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.084148715 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.959163788 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.665694556 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.268944108 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.110252109 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.638461156 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.753337726 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.301957843 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.114775315 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.45993966 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.010286213 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.901032723 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.614941143 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.688764232 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.120856823 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.268734498 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.490460245 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.108067522 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.972321661 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.426264617 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.351802893 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.816170297 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.54005912 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.322754333 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.443416238 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.123978637 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110446688 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.386954911 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.422463302 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.383005279 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.552638886 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.325034136 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.778033817 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.226619947 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.732599696 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.278766233 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.140333542 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.496805116 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.240611078 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.962643404 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.282673491 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.916065183 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.459559893 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.657200249 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.389724412 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.09966038 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.482358533 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.680569751 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.122120893 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.03051995 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.23028182 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.115168022 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.343059424 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85659245 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202722127 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.240809853 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.35428101 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.33523694 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.273597971 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.489619701 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.507104375 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.422208057 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.085817131 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.30087773 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.198943073 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.414569657 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.107492125 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.395163496 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.757881625 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.562746059 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.060525833 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.584876177 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.509324803 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.157374318 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.466394721 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.315789322 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.420075856 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 1.99568779 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6777907 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.119974832 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.269109394 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.079001976 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.713566902 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559019089 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.487234793 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.476099678 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.156682576 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.507268154 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.453787718 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.385747463 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.127776266 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.378198875 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.110343647 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.466686733 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.109900525 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.101771055 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.564915176 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.11310617 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.995636551 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.344077774 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.441838333 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.26768438 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.640207182 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.2671702 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.260960086 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.886189479 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.282744034 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.242048528 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.460460468 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.767955516 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.26439096 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.12467351 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.362266332 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.755295353 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.465277014 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.665509538 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.591737617 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.411225933 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.897980396 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.106917125 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.319820532 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.268882501 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.114021833 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.334967815 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.476008802 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.141610702 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.301978498 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.41702243 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.392276685 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.690079465 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093400233 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.795492257 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.35854856 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.641282037 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.69084834 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.900257055 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.361032306 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.263140553 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.493484436 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.222903304 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.271020841 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.420116638 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.835182191 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.145535349 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981422174 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.907021519 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.215672583 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.655865656 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.162195577 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.99229779 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.279105753 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.359927862 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.321953612 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.256591355 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.079979343 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.835327815 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.90891669 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.385750558 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.276647447 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.28081311 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.179106164 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.369477757 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.630772447 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.420884047 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.884192673 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.470851619 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.29895658 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.075363413 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.10745899 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.382193754 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.466676356 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.118923285 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.40392172 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.439630187 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.128550708 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.176892108 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.113271999 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.321579564 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.971937308 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.841638993 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.346057164 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.511558454 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.6782523 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.147245952 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.887283808 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.335861577 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.472510106 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.555557281 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.971620537 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.545056102 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.425380015 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.271452657 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.080489666 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.288075923 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.108777247 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.316138339 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.91893022 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.411928894 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.14839139 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.076554506 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.72120082 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.109971468 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.192660805 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.814830595 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.389476073 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.312129682 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.106263857 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.875494635 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.485038719 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.26774688 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.098434029 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.871545229 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.084204057 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.338023025 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.105492756 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.283894625 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.954801485 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.174020571 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.894874348 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.542405284 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.150874796 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.306973076 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093176244 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.716609629 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.260528119 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.604547735 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.065484822 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.36541963 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.615970154 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.291195798 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.111202585 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.444133281 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.249075263 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.432679931 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.56667956 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.471024855 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.498211708 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.377497955 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36490903 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.831232151 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.379969138 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356830497 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.077576503 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.112353254 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.120489444 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.480759834 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.469401288 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107115787 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.675722411 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361210229 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.206919199 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.384865559 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.303910209 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.753945981 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.346648715 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.230245605 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.373123199 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.147708056 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.44040936 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.112592522 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.277265222 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.107669825 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.184899262 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.325224871 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.360925692 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.488324226 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.422834756 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.727935052 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.267969473 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.588512806 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.952555225 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.644213173 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109026588 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.774930308 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.591412679 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.108842321 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.474345369 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.713565758 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.279996456 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.374812351 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.527919959 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.148792673 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.283431179 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.619359562 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.130931459 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.787752458 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.483550316 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.11215359 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.480191174 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.151645344 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.270897285 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.906273801 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.613606155 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.120759307 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.742585462 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.504600579 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.670616764 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.387725405 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.129276563 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.285021268 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.696084302 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.094447954 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.1094815 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.19628589 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.650046524 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.136162643 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.661638428 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.19566352 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.373619346 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.114194976 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.263200645 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.110612623 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.322327042 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.299376604 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.36498488 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.388553641 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.281787469 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.104384325 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.887361233 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.820488954 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.210141166 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.390613134 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.10324781 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.519121362 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.809546508 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.110043974 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.702658433 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.30788225 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.071766264 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491762918 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375886203 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.149045961 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.300990537 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.113855346 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494472325 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.277547901 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.609226126 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.345630703 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.10991478 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.213755215 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.113498831 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.653174644 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.472175816 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950260242 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.106213997 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.431617579 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.115053397 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.747155508 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.758192543 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.265525357 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.245676211 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.027531141 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.819589804 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.897994372 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.398367335 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.115255039 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.32650264 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.59498364 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.095279793 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.727319666 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.125844584 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.311067443 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.438911422 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.08320718 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.280158333 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.123256558 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.096694886 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.608255408 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.109322219 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.429802755 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.082162779 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.650669336 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.123698153 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.249808215 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.369305229 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.486190902 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.11819979 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.832258948 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.286943576 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.115964285 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.109427348 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.472454827 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.254847982 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.356463624 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.463432998 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.283564605 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.550206378 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.007587278 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.732483164 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.263665252 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.417267564 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.954167781 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.674449637 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.181949965 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.750488295 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.726993783 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.247906836 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.656345681 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.359209654 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.851543324 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261285278 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.582624267 seconds)
  done (took 1948.663480363 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.175601062 seconds)
    (2/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.266100353 seconds)
    (3/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.168005067 seconds)
    (4/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.179408464 seconds)
    (5/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.173273856 seconds)
    (6/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.157678573 seconds)
    (7/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.26776387 seconds)
    (8/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}")...
    done (took 6.134954595 seconds)
  done (took 50.638897248 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.112926139 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.141595417 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.561173158 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.384457457 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.129280492 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.295073145 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.372966075 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.843642055 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.144975912 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.118313535 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.25566686 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.355575869 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.13079135 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.160092293 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.04045881 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.245248165 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.10788022 seconds)
  done (took 93.558742179 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.143114683 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.887297404 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.130900872 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.769436007 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.199087772 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.545709749 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.127644406 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.114136177 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.469113645 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.797250137 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.162213414 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.27292698 seconds)
  done (took 85.778315261 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.155377038 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.141812153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.144302652 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.156724742 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.147554516 seconds)
  done (took 6.867930656 seconds)
done (took 2418.831731078 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.354017592 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.637370069 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.660983279 seconds)
  done (took 4.419537254 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.187119502 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.235355682 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.329888422 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.25344442 seconds)
  done (took 6.139598429 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.418483642 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.586829412 seconds)
  done (took 4.112553962 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.484367066 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.166267465 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.674841689 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.117501054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.111945185 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.116866741 seconds)
  done (took 19.462793044 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.143281139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.161984786 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.137856569 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.129860401 seconds)
  done (took 5.681689176 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.104479413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.118210764 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.108754236 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.131829408 seconds)
  done (took 18.566872661 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.559921895 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.385897091 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.871241553 seconds)
  done (took 5.931601651 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.92676308 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.256946427 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.90495403 seconds)
  done (took 6.19691152 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.046405666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.336307469 seconds)
  done (took 5.487723416 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.284944438 seconds)
  done (took 2.409791932 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.589288179 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.611748354 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.77148224 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.827963807 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.00901931 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.399616668 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.525971841 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.357603499 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.631976268 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.682345923 seconds)
  done (took 17.510534494 seconds)
done (took 107.702760425 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.105884924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.53307188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.258694746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.899183483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.218177047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.268505277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.132644855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.732046871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.809084968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.819038444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.419299951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.215880736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.16947076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.512488904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.186716155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.461524899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517409043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.1202616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.798873995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.377562391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.151026862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.800449684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.168601397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820068013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.536956939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.274964589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.095452165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.471216853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.013588525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.108744073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.293855011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.603409217 seconds)
  done (took 155.010482287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.107556614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.125460188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.136654292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.13279059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.172006022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.135520257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.108904421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.130317429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.142490868 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.142298351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.132875446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.172398791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.132909194 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.114567478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.133295092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.124786676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.257535526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.132210549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.128169907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.127849202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.138112686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.045358822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.129322289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.06122831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.270872433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.125151018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.108201796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.135093091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.138902319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.135227312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.135239864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.124869317 seconds)
  done (took 189.463811604 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.110796849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.123617638 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.126560704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.114239837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.125427315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.13127717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.114659451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.122266116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.128768754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.126542008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.12922915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.130173783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.145084953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.113070959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.126840632 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.110711345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.128182993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.127100184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.134852062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.126014342 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.138344821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.122421065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.124544518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.125386724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.124127656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.142326448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.111504187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.125258221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.126752117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.137173466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.136768599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.117295776 seconds)
  done (took 197.160772258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.408973492 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.150702983 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.0486552 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.861448742 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.033585502 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.142031276 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.851112132 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.428154628 seconds)
  done (took 14.051416173 seconds)
done (took 556.829935681 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.789624161 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.01084338 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.287314575 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407670858 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.751523498 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423369336 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391005776 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.558446061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.846332196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.525888967 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.606725519 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.329700122 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.007535416 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.379634743 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.306776712 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.59388883 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.538800306 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.81973038 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.335648963 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.987015352 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.325462488 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.97187451 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.570429413 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.889940475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.63126095 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.01934172 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.258177396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.549328722 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.37308672 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.329162531 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.234604009 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.554343153 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.346894119 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.340608564 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.598929022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.592208785 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.502826397 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.593026364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.304699522 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.777573884 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.023009213 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.714442407 seconds)
  done (took 75.503877354 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.132356852 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.157968629 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.314853042 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.210741127 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809126606 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.221159025 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.388294575 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.356066774 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.237468842 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.352846183 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.39611848 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.833642373 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.386961003 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.784170577 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.376673562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.408422054 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.232865607 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.759989025 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.399249682 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.355792456 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.177368613 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.303139297 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.180879973 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.339969263 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.170902565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.181826881 seconds)
  done (took 36.597443422 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.202228216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.296555732 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.368481371 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.221786246 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.383386166 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.199644943 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.44320911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.280376818 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.736183545 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.493745073 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.261530131 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.267214422 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.323834733 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.398334044 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.358416846 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.315085368 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.312775044 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.321113735 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.303270388 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.32242588 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.179968699 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.226309968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.443594862 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.040516589 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.995646738 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.660179751 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.341793948 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.723297712 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.324271538 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.318140421 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.294026796 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.420666153 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.560085118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.390429245 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.276141368 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.165217582 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.172441926 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.241861969 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.106721218 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.323421359 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445663341 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.576702783 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.48308109 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.663215181 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.426429587 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378255336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.605032929 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.269198177 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.277905255 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.009233021 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.40720586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.75132874 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.366766906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356433587 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.280822239 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.495246211 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363054838 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.42611476 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.247250185 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.741057617 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.223429501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.531607234 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.315610353 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.433305917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.42501142 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433267603 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.363594915 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.655548502 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.491254161 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.298752392 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.715539449 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.229935798 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.183990123 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.251020956 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.298830052 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.651354047 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.016843678 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.47294252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.553145854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.430638585 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.396328471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.734952289 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.120139218 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.432374183 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.341785949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.160524583 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.245639496 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483919896 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.422735724 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.642511311 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.685209474 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.435700991 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.479230841 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.47106679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.753246905 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.519742698 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.148626996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.159012028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.360734938 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.680713904 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.233066352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.322403449 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.711898884 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.689379116 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.466564085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.239616196 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.493098951 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.451206706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.5571181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.145128944 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.317743018 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.208397959 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.355679844 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.462074892 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.13984603 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.650323423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.263398468 seconds)
  done (took 237.072923425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.104190064 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.120826389 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.12058402 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.124681499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.111843723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.651152232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.169094892 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.120261963 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.648954939 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.167163914 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.133468811 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.118579486 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.108636587 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.11264983 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.257843876 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.285582371 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.774664199 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.111682045 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.121530601 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.130807258 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.814511032 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.113893877 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.12746329 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.114074768 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.11226452 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.132266927 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.118475208 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.135009317 seconds)
  done (took 151.282079764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.171395052 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.542640252 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.194016181 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.257915948 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.213397969 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.189784033 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.691178605 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.307667829 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.251207925 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.176638467 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.172172003 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.390236528 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.489319944 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.768562564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.305937802 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.447039098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.828084086 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.309008203 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.18419279 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.175316667 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.333552771 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.549906861 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.436686485 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.425958417 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.309458911 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.438770225 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.24461722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.185049117 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.293697689 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.667249025 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.189006008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.529924419 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.310176827 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.17448476 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.666424809 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.527319819 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.786781255 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.875237851 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.364763058 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.137487706 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.133166841 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.414534538 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.467189232 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.243384116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.165200254 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.813516975 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.191423811 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446377389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.197932094 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.143400572 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.288050158 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.285841332 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.411768776 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.050269542 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.348686895 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.289442622 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.768020874 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.159890493 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.172299385 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.472278364 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.159449064 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.670487513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 3.123003452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.24222922 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.192262689 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.022544174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.285600906 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.683901113 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.786183442 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.215102058 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.511130637 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.371739266 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.149157265 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.443714542 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.343440534 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.602387163 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.747990025 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.30964429 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.276053753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.255424654 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.459233269 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.160278275 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.737848676 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.267424624 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.146758068 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.663701848 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.561138856 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.158459448 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.165070493 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.264246375 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.33143016 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.387548757 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.433152066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.232321325 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.085187809 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.434605686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.446454581 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.199482858 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.299455974 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.158751374 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.585479537 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.369628838 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.152427461 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.486811568 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.558345026 seconds)
  done (took 157.235743398 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.889896238 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.227084105 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.401357306 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.722319312 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.500299937 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.599481302 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.39494834 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.246049723 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.452063423 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.373563268 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.391443757 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.250515732 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.129278707 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.920103233 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.230682217 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.330993931 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.23713707 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.742353641 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.494554195 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.230910438 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.614502333 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.951611071 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.485377134 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.584155037 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.602439741 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.703696104 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.831975722 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.292831033 seconds)
  done (took 48.951509659 seconds)
done (took 707.755097018 seconds)
SAVING RESULT...
DONE!
