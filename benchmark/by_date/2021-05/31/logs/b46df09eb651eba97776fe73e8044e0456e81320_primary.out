cset: moving following pidspec: 325122
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.826080951 seconds)
loading group "shootout"... done (took 0.833384105 seconds)
loading group "string"... done (took 0.236927858 seconds)
loading group "linalg"... done (took 3.239191136 seconds)
loading group "parallel"... done (took 0.022673629 seconds)
loading group "find"... done (took 1.225483813 seconds)
loading group "tuple"... done (took 0.70370632 seconds)
loading group "union"... done (took 3.149051223 seconds)
loading group "dates"... done (took 0.157708171 seconds)
loading group "micro"... done (took 0.057803723 seconds)
loading group "simd"... done (took 0.370110818 seconds)
loading group "io"... done (took 1.430596819 seconds)
loading group "random"... done (took 2.411425067 seconds)
loading group "problem"... done (took 1.202494509 seconds)
loading group "array"... done (took 4.710970723 seconds)
loading group "misc"... done (took 0.99534745 seconds)
loading group "scalar"... done (took 3.535264051 seconds)
loading group "sort"... done (took 0.317095058 seconds)
loading group "sparse"... done (took 3.604980351 seconds)
loading group "collection"... done (took 6.196727852 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556631508 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.076483984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.261237704 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.079962844 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.290592877 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084992177 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.091182816 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.07261396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025681287 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167457191 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.221887318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.395293211 seconds)
done (took 5.088120316 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.266978017 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033839471 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130108645 seconds)
  done (took 0.793926884 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.142904456 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.01634438 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023280483 seconds)
  done (took 0.809083793 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020944764 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.097436011 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.022126196 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022633972 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022570316 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021971595 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021787929 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.02178839 seconds)
  done (took 0.857186158 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.02955464 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023486634 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021442532 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022850382 seconds)
  done (took 0.723290767 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023015696 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.085548114 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.020798099 seconds)
    (4/4) benchmarking "different"...
    done (took 0.020589174 seconds)
  done (took 0.772084336 seconds)
done (took 4.883861916 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203480941 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.795410348 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.996197165 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.18658237 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.362812263 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.310954423 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.078887659 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.248293417 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.153279643 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.032424646 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187428943 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.040811784 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.526401605 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.459819781 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029704093 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.148453101 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.581258427 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039585329 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.071548791 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.21966505 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040171193 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039695877 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.045014497 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027728861 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.151703916 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.137548603 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.590049973 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.065942353 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.026990741 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.051483071 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.114255055 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.031002854 seconds)
  done (took 9.661789921 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.154506154 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.151078085 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.024452759 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.061215501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.051735704 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025354529 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030757797 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023583285 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043941901 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.090110187 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046882729 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.165136387 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021938671 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.026429822 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144171419 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.119337277 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038687934 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.038075511 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.023093274 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.037256314 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.050686717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.036010918 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033965413 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.033447507 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.070784569 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.092941747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.045300338 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.065648348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023473408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.035547681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.052914322 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.065202533 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.023777006 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021970568 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.066899677 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.041860434 seconds)
  done (took 2.737896014 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.723768912 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.052091102 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.143990814 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.135189631 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066373323 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.05261966 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.185883053 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079787275 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056369426 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024488407 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.214458726 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.671686614 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.176753868 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.080648853 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028503936 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.187539721 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.918011858 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.958082944 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.024364376 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024642677 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.139778457 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027103987 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.182250672 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.025670303 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137782526 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.720240485 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.028688381 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.025957537 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.054718666 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.155659481 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.023956534 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.106140571 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.053660509 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.02694088 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.54896389 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.023083004 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.02121235 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.046901128 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.052786425 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023799529 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.024942819 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.036461036 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.02298002 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.081463706 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.038350706 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.551892352 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.026719443 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.733086981 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.857119975 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.032531475 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.029131228 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057822757 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020714873 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.024247049 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.609807904 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.116776626 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023273199 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.303363804 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025866835 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024667913 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024891127 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.056952226 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02373359 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.025067395 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.027088675 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.04576997 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.981507858 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.032931308 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.047655671 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022527299 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023065032 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.021753544 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.417363082 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.029706435 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025509713 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.021185645 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027769891 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023520365 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022943093 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.06897142 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.050660662 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.047893365 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.029752878 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023993166 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022902895 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.739748276 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.9458764 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025524291 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.02508484 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.512367975 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.021324275 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.02344677 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.025100238 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.045225436 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024399083 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020692612 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.059285498 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026039901 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.134338768 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.540588037 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.026041548 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.021401758 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.494092246 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.025232704 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.056006147 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.078679093 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.024191331 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.06219531 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023765179 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020886375 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.027115449 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020740431 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.025122409 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021884225 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022765041 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021905011 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023726907 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.024783126 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023667562 seconds)
  done (took 20.34525321 seconds)
done (took 35.094502912 seconds)
(4/20) benchmarking "parallel"...
done (took 0.843945386 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.22309498 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.050800431 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.020258284 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.171091709 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.045851449 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.142626063 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.184243665 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.13416817 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.047892574 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.047424782 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.047596322 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.191676101 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.200981443 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.04920442 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.126791348 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.202309058 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.049407999 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.02054307 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.048377329 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.048909313 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.049156987 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020581625 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.048346366 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.049175053 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.125609117 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047768231 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.020352095 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.125371235 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.049942585 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.128758662 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.050239987 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.049166705 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049860997 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.127218181 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050404847 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.127111454 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020962738 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.050042081 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.050077142 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.051935979 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.051276781 seconds)
  done (took 4.164935562 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.046803403 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.03917322 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041271425 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018715169 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.02871752 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039229482 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.019332707 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.040682415 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.043203874 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039289739 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039018287 seconds)
  done (took 1.189360419 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.041258855 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039849854 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041231153 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018505542 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.03044761 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039546291 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018475221 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039208119 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.04194596 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039708193 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039700544 seconds)
  done (took 1.130515521 seconds)
done (took 7.20593022 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.15713059 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.126868251 seconds)
  done (took 1.016375709 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.562346683 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.226602881 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.135836738 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.259185842 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.130214523 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.161645912 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.294035265 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.16496868 seconds)
  done (took 6.720862264 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076856232 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.146448893 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.025250298 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.02338846 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023451949 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023659695 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.025113162 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023933187 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.023167929 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025698223 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.025280119 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.02333272 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.024140263 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025290134 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.0235946 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023748604 seconds)
  done (took 1.439425138 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.0290956 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.026247937 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027312896 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017621397 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.02821529 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026915608 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027942051 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028771002 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027789222 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027634907 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025672867 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.028448869 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026960518 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025639832 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.028349736 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017687085 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028539336 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027805453 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029729246 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.028591021 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027862604 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.025469782 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029242962 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.026573976 seconds)
  done (took 1.398605752 seconds)
done (took 11.314924219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.142292235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.030495141 seconds)
  done (took 0.915888025 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.131634351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.131903989 seconds)
  done (took 1.017516518 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029046139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016505866 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.033116212 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024830022 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.01672715 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016473381 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.032393789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016848833 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016656234 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016722978 seconds)
  done (took 0.977528297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019656307 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023811639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021595954 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019746645 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021449866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017478158 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019880164 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017871151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023553257 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016865427 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020794064 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.039167473 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.020305176 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.039535914 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.020222347 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020741781 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.022139391 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.01990094 seconds)
  done (took 1.157671325 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.017963165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.01743086 seconds)
  done (took 0.789471771 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.02098833 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017490366 seconds)
    (3/7) benchmarking "month"...
    done (took 0.019230732 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018978256 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016997937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016418218 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.01696207 seconds)
  done (took 0.879161722 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397910514 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.091481523 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325001957 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.025311014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.039015903 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236369688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020346593 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.02476395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024530138 seconds)
  done (took 1.936948353 seconds)
done (took 8.427523034 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.040961326 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144920245 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.153343875 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46069464 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.035337094 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.023296492 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.062454735 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.235233922 seconds)
done (took 1.921082322 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.486103981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.285987406 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.194308796 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024531866 seconds)
  done (took 2.26751951 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.316785166 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.146367687 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031705201 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023765175 seconds)
  done (took 1.29148715 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022297305 seconds)
    (2/2) benchmarking "read"...
    done (took 0.028171422 seconds)
  done (took 0.818508167 seconds)
done (took 5.634519161 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030317333 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017326304 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023833837 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.01895254 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018578865 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017995251 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.018153498 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018854501 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.01699551 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.019072028 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.01908928 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.019065519 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018766523 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018736134 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.018227078 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.019041777 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.017050799 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018732536 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018664155 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018694509 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.017009202 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.019117311 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.018274097 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018723646 seconds)
  done (took 1.21925487 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.036561116 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.021567728 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022265264 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.021962213 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.022672508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.021974399 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.021947358 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.021151524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.021992269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.020874148 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.022706721 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.022770971 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.020898931 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.022784162 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021063959 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.02283504 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022339066 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021487953 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.020948259 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.022827666 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022180692 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021527519 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.022714227 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022192482 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.022716322 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.022636958 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021083262 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.021473954 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022229478 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.022747377 seconds)
  done (took 1.443242079 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.02346952 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.01555459 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.015890948 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.026093433 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015594558 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015599304 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016029477 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015170643 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015564349 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016370754 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015904892 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015319976 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016139535 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015326906 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015391747 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015916446 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020704947 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036760021 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015836085 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015497892 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020379292 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015832712 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015557193 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.01558464 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015997232 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015518066 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015366766 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015807109 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015551082 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.016174988 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015542058 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020253525 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021832559 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.016026378 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.026080218 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020821485 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.016033396 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.020184914 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016409715 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015306976 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015327836 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015330078 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015469691 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015448612 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026191005 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015706277 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016652385 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015981114 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015706874 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.01527449 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015440377 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016980998 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021276334 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016781829 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015454089 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016760486 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015475285 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.016273202 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015652849 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015472909 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015440849 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019697816 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016982677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.016286151 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037639999 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.017077266 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026394918 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.01585333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.016156525 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019937112 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.016195239 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035895253 seconds)
  done (took 2.064242509 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028032545 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.026152572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.035338597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025688796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019089345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.017511842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.020775163 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016983504 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.026340431 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.020269592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016557433 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.01975739 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.026085733 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.020218129 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017646391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.026061062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020166993 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019973924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016805051 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.020214139 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017654616 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019737207 seconds)
  done (took 1.24980959 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104286755 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.022155459 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.06710671 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.025353731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.024235713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.025454268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.02207438 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021977746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022147835 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022693034 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022752448 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022103329 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.024358629 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022703856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022786758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.022592133 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022168055 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.022575359 seconds)
  done (took 1.309692284 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.03434861 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021816056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049540717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021661803 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021554584 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021136282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024991461 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025151728 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021287021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021741727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.02548984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021414155 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021474545 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021865139 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021394061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021869177 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021411296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021853846 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025486486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025492769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025417545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025462013 seconds)
  done (took 1.313921854 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035490538 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020780347 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.037552555 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.022409716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015973973 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015942557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.022396895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.021114252 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.022110087 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.020471682 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021051113 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015987437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.023364347 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.021324839 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.023480616 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021318752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020792782 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021255578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.020812839 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.016181517 seconds)
  done (took 1.211027902 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136358278 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018668641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.018084566 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02245033 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017811383 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017841363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022579455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.01803324 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.018078555 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.043367095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.018344053 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.018082302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022792587 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021016563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.018041526 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022690926 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022625133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02265968 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.018047672 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017996546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.043055952 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018130507 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022977913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.018248749 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.018275993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.018240196 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.018228386 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021262817 seconds)
  done (took 1.484444104 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039749593 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015334797 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.01558168 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019564761 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019531078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.02542767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.01954783 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019282755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015091224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015632296 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017628791 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015268407 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015210359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.025098094 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.01525787 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.01758763 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.025113299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019732474 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025869134 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025764568 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017707539 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.025004711 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017652433 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.01566555 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025833268 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017688136 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019757696 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020524654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017617412 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015617803 seconds)
  done (took 1.377347333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030052182 seconds)
    (2/2) benchmarking "in"...
    done (took 0.027122905 seconds)
  done (took 0.830143875 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018795475 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033848057 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015387038 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028957338 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024504091 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019700504 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024399161 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024356186 seconds)
  done (took 0.959318116 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.130352353 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.155176099 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017831939 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017701718 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.130286154 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08643038 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139814054 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.029840926 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031821895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020436852 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017659092 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139356703 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.0174439 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.031115626 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018761786 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.02705149 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.02461874 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.035440215 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030526735 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.016187117 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029963666 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017984456 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.017001973 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.01804321 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.018212164 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.024115118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.033188946 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029960023 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025599903 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.01543381 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.03611662 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016442039 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.017072089 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025642298 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.130095778 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.017025858 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.055166173 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016813267 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.02119322 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.016233836 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.028711215 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037761383 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030956045 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034777277 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.018061524 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.018375942 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.016273541 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.01810369 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020448963 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025659164 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016551447 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023962578 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.016173459 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017978996 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.027219197 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.01666164 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.021383033 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025869394 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.030325431 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.027199073 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.029068678 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.032245531 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.025458272 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.025525138 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.017292183 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036723246 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.018252546 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029978563 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031663976 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017787192 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029887714 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.016444194 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015674868 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016547664 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.051244708 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.018119321 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.017580558 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.016690547 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016779803 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.018115529 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.026273502 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.021605253 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024044803 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019837232 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032645343 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025822938 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.016418021 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.02421844 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.035274971 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020586742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016629597 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033908139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020609764 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.016372918 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.035031009 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.02718536 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.018142687 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.017182482 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020457718 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030228536 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017993556 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015576246 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024972467 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018155435 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.130892063 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021436369 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024945693 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016426971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026961579 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022802901 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018010075 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.01565575 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.02141371 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017358593 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015553661 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025990209 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016643944 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031576812 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023655811 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.032078204 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.032559489 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027937111 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.033604135 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.01696531 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015971006 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.036176689 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.026654686 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.018344592 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.035918852 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016963512 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027660416 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.017029442 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.018566424 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.026410904 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.01650131 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018875869 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.017232675 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.02387773 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018619402 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018820963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.023064891 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025695968 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029735954 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.018180497 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025920727 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.017335935 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.033437286 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026840062 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021932959 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020622762 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017836874 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.029547732 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.024046641 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.026342698 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.01688416 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017814115 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016973119 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.028317807 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026813009 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018855348 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026875751 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.022048276 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017957716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.017130175 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.018036024 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020940478 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020524327 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017543932 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024763831 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.026076009 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031811292 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.02489007 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.026370512 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016473775 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016773255 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018747994 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016737456 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.02181682 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.026625559 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.033171218 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.029535845 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.039256322 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.017393364 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026950027 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.019011755 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.03480685 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030784153 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018369509 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022433696 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016266683 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019105102 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026809707 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028973533 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.032812898 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.034054383 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.022456791 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.022270096 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.017351897 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032866703 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017745669 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025857664 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026773744 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.024419238 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.017289731 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.019300979 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.026519656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.022233132 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.018525639 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.033725271 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.026082916 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.017255877 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.032160387 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017652636 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.028396646 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.017301442 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.021176627 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022830215 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.019552815 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.027123285 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.03318395 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.016395171 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017721407 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.033609443 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.019476487 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.019313187 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.025469163 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032985907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0223629 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.168443188 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027365502 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027510913 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021500842 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027102087 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017260214 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.025744447 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.019153906 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028140758 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016392244 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034598772 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015664736 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.031799486 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.016854408 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.027343016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.016631577 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025588255 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.016917798 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.033397941 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.01757151 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.016860835 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.027736571 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015324827 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025388762 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.015950373 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021699949 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0231964 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.02570438 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.017990306 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.02573828 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.017508834 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025038292 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021165233 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024865597 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025191184 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021045969 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015797601 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.02427433 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026676539 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024168166 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017295165 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017249102 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016300038 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.02523237 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017299617 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016820567 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02402199 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.021085143 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.022123382 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017300496 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017389895 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017220375 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02427271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025268026 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034036762 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024581894 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023414991 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.025295433 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015918514 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031438485 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015882998 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023341957 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015221156 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.022364716 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.025067871 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.016120136 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034805856 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017384985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023729678 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.02774884 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024428115 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.020104894 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033988069 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018891167 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024241786 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023783167 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020944837 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.023001629 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0176095 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024361634 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025374136 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026414623 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016589956 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0234195 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024876155 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017466553 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023930549 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.017509157 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024476368 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017749354 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015473646 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.021273635 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.02761567 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.021492906 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021765326 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.016548902 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.015412462 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.016475295 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.023704183 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.021398511 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024947499 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.032071636 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.015785825 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.017222597 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.016199416 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.020341707 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034873226 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026143392 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.024384404 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.021577256 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015759853 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.017800538 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017977612 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.016567437 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.019594704 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015878785 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.016266336 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.027000744 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.018186456 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.02136317 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016713552 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.017540797 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.026463489 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.0209829 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016857943 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.023719689 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.016365376 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.022022507 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015940507 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.018125993 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.021530832 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.016267047 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.020569729 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.027098833 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.033507846 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.023652967 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.025476386 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.017441702 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.024671326 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.032233266 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.025188342 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017423884 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.026028458 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.016093224 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.035725738 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.026167999 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.025218265 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026402484 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.017555999 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.03397367 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.021592496 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.026703187 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.032220008 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017580437 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.024756723 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.016419717 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.032567889 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.021541901 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.016399603 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.02532879 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024304702 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.023312519 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.029161595 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.017967176 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.025858498 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.022495007 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.021140248 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.018768249 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018741031 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025777335 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.033635302 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.018016068 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.023294682 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.025202931 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.025488139 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021996051 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029627901 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025308544 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.018097744 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.019139133 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.022235938 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.018751954 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.029805351 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.01746354 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021997761 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.02185877 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016870943 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.024242606 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.034177579 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.02665019 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026900751 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.017030784 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.016334805 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.035769539 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.021105314 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.020706833 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.02525437 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.027014955 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029681359 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.026482476 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.034694371 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.017615602 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.023404258 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.029616047 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.018122749 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016805275 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.021031218 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0187802 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.026357549 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026960388 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.024438513 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018963791 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.02423217 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030706016 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.018480681 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021999198 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.02359642 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.018178499 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.028063675 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.025305188 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.026010086 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018892217 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.017012915 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0209429 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.02599311 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024686392 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.026293329 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.018305568 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.026786143 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.031961098 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024858096 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.021067741 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.017133764 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.021021104 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.02644047 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.024314621 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.01706698 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.022239236 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.021056337 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.026909552 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.02685238 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.022097791 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.017114045 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.034914127 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.026046191 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.026392287 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.019078144 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.019267088 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017679786 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.017039289 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.028791197 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.017146643 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018999455 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.022524183 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.019236165 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035976318 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.025544241 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.034006116 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018482142 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.022231844 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.017201801 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.027200102 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.022299883 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.017266689 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.028048814 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016653018 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.033314592 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.029796792 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.025762888 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.017259559 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022725691 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.171426488 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032003677 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026108735 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025377741 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.019268927 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.025932843 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.017796028 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027246094 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016125623 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015424769 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026171928 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0247996 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.028246965 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.015977462 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026101367 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.01761515 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024327185 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.02457119 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.017385075 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.017532157 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.017326905 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025429943 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021016508 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.025168909 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0212335 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.033035775 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.016818299 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.026967348 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.024939845 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.026811979 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.029890236 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.027794627 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.024349687 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.016339942 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023394196 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.024353316 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.01684301 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021283666 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.018806161 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.037689172 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.017527727 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.017333992 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.029770519 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.022788629 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.015960983 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.022476974 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021035048 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026093405 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.016866069 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.02621119 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.020654379 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.016654035 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.020933454 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021027174 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015441257 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.015729021 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016017044 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.025384761 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021031207 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.015967516 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034628391 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017212202 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024484696 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026476324 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022913178 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017209481 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015106352 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016570836 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029212906 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031265594 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020248036 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024384067 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017387443 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024989594 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015197646 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024563728 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023762519 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024391335 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015800727 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016040404 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030886207 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031524109 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021048708 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032845399 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024991453 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.01737645 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.03770763 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024968134 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016863842 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.027049226 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.018285197 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015794445 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015636722 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017815189 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027814808 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.016160195 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.01830237 seconds)
  done (took 15.63912488 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061030065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017278673 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015748867 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015667775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022696511 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016885735 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.01564713 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.01688879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016829849 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017981797 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015838807 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.01578947 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021393408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.031063191 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023961372 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019642377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.01596946 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017199076 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015902782 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017111578 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.022122282 seconds)
  done (took 1.26140057 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020059091 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020218871 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019648299 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019792162 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019014163 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016018055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019370553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016017733 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.01967149 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016287158 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019968838 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016138844 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016441211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016380561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01645184 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017543565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.020093949 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019298069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.016158375 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019715522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017655652 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019936745 seconds)
  done (took 1.211393837 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018428319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016688153 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024566327 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015402483 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015330079 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.018103199 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015332177 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.02018949 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.020169409 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.020192804 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.02431806 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016189236 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015280844 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021518501 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.01524281 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.01599658 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.060815954 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016455227 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016451867 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015654205 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017802906 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024781822 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015755307 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.01588465 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.02039878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018580482 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015712199 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017893997 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.016213119 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020471064 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016431336 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015373396 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024562439 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.02380804 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020523992 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020373773 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016929461 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.01632998 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015591546 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015587156 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023880034 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016829491 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.016124614 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016724094 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024653434 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015820365 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015511074 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.02467707 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015667398 seconds)
  done (took 1.749533818 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028500869 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.069148838 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.022107959 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.051532644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.027713405 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.021108441 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.021843317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.054267055 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016909893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017395346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.028838386 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.029686795 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.019783887 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.020267031 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.022179522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018575659 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.019006463 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017661181 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.02065391 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017967188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020787722 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023254006 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028527035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.029155048 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019663192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017918319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.01810539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.01979088 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.028633593 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.021459876 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019988036 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.02041325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.028961739 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.023910195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018234598 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.018333639 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029373007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018784689 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018540977 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.017049537 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.018274563 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019742666 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023355617 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029709793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018754491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.02380584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018624914 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.01662685 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.02922232 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.018631434 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.022238724 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.030237285 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019788692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.019079311 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.020203727 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029311133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018905244 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017611339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.019017558 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029013944 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.01718247 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019641307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.029834387 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.018363291 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021901785 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.030124816 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024343074 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.01980815 seconds)
  done (took 2.544696883 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.025484355 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.052495608 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.030031116 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.029968131 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.025450586 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.025495499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.025780317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.025741318 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.025640014 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.028518313 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.025812891 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.171669013 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.023280606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.027744774 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.025987774 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.025830766 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.025893366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.025851287 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.026157079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.026257409 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.026152896 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.03083261 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.026127435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.030885473 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030628943 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.022913912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.026029275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.026072134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.03104575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.026175298 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.030739924 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.02622834 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.026218416 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.031108369 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.030798917 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.026155616 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016671986 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.026120709 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.026321177 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.026314305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.022925868 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.031166111 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.026153193 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.023002632 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.026622309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.026322121 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.031558962 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.031087374 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.028331942 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.029537964 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.026520836 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.031612878 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026465298 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.02664839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.031825612 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.034968633 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.031806526 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.031822725 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.026860601 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.031762748 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.031813087 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.035018962 seconds)
  done (took 2.711183138 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030531334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021558571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.034870711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015537286 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015423864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.024723838 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015420368 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015411296 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021480781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.021518808 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024202523 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.027433049 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02796243 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023384234 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.025259463 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.027036307 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.025175784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.025242481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021785112 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.025278491 seconds)
  done (took 1.298088843 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019216883 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021001139 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016341528 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.032311349 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016360467 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.023907444 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016362652 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016289461 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016264529 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016298477 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021067024 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0209545 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016478764 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.024617467 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020020405 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.02417915 seconds)
  done (took 1.136011741 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020606165 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.024848704 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131359037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.01737853 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018989509 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016368089 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.017212458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.016161902 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018508938 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.030428433 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.01721957 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019325622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.017310694 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015891302 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016493563 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.019347989 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018568248 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.017292942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.017270356 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132621222 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.026244212 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.018110276 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019631583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.018041227 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.019129908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025921466 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018895147 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.01929754 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.017358238 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.019685292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.019311888 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.028824998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.019304177 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.018002931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.01604869 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.017015855 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.017473136 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.019657362 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.019717956 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.017608372 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.016380636 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.019325834 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.017546265 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017970284 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018771135 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019734576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018779744 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.02792239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.017454029 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.019309729 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.017517037 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018663308 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017798178 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028968719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0194778 seconds)
  done (took 2.109050298 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.034998291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021388377 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015542146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015431371 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020950315 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.021646947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.021044405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.02117676 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021679455 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015559666 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.02178743 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.020734127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021753795 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021362796 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.021974822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021393136 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015552572 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.021584171 seconds)
  done (took 1.200329123 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024582155 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.021367615 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021456618 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017480021 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017426709 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021342963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015873342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.017011778 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.017014875 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.017562193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017588501 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.017136128 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017138703 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.017218713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021193664 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017592189 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.017227105 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.016124165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017595705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.016007483 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021822238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01615328 seconds)
  done (took 1.224092113 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.194632381 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.154543341 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.04101987 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.036056233 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.027709313 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.053285212 seconds)
  done (took 1.324878581 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.053616676 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.055117794 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02136256 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021150056 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.025266257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023642807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023626535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023660701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02665753 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02965244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024097688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.027281392 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026965567 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028816708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025518212 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02557357 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024137905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024128058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.021412727 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031411413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024189968 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02741262 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02450207 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024321095 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024391597 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029288098 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027550593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.03024226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024262801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02762568 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026002869 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02444315 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.02776369 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.03036304 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021624539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027399243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024556123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032144623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025924537 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029284702 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02145973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026202311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027679333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027521763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.027796988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024736586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02767159 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02487836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024804764 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.036290913 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026407865 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029574266 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026368304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.028174901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.027810759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.036207361 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030683464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029700196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.026381109 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030789592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029921342 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026436834 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029826653 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.030930097 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.026524867 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030036979 seconds)
  done (took 2.655320982 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061618431 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021710056 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023857501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029134982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.028090696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023678561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0239381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023951686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024023901 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021662101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061058077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024335082 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.028701446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.028908921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024397192 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024120277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024207879 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.028825603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.021882756 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034789421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02435611 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029216658 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029252026 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029304661 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.030225442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.026096381 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02443716 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024428463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02439006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024330657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153032958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025200755 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029435974 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021947971 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029282822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024535574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024368771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.027393778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.024338966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025997705 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029212006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.032260512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024438885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02439613 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.030645564 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024593119 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024609451 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022007078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024613888 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022058147 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.03063824 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.030628909 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.030581088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029610514 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024747204 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.024644449 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024586025 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024552732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024596803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.026210926 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029548011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.024504671 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.036305735 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024839652 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024824672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.029948848 seconds)
  done (took 2.770265626 seconds)
done (took 54.062652921 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214152601 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168849415 seconds)
  done (took 1.193275596 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.141794553 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.140647218 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.169584532 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.024567414 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.082425942 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174900862 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125024548 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026379101 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024365387 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025842134 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.024050936 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.0255598 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025706867 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.024069048 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.087069841 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.02635721 seconds)
  done (took 1.977578533 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073884496 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280352739 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.059455096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023371607 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105754309 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029706366 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024700311 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028984576 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029392983 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023602245 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071596047 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.037087606 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.02819424 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.02914451 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024633135 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028168382 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028950504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.029804999 seconds)
  done (took 1.782691798 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.09627931 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.035621694 seconds)
  done (took 0.957533705 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147238923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.070493878 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.112578318 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313214485 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.09872144 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.300105047 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.110210108 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.113519449 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.083777503 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.103524638 seconds)
  done (took 2.277423256 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.062493958 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.05768479 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.289358631 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.055569013 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.035273324 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.03036348 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.03083656 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030992036 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.03102912 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.03011672 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076678023 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028824595 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024881017 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.073550079 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.052094158 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.060170957 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.024227538 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.030176193 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.033390064 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.024039494 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.029002475 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030985515 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137417809 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.030918269 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.052298545 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.028857632 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.030433035 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.030323622 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.030194922 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.031579437 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031960191 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.055039866 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.03048406 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.038232367 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.030199576 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.051524728 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.025340027 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.051156717 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027941948 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.025049553 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.028631486 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.032055337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025689292 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.03130281 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.03147595 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.031164365 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.031493108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.024144353 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.031527983 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.028129844 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.025113375 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.029666434 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.029415984 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.030509176 seconds)
  done (took 3.129875336 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.07787934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.068063249 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024767854 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.072438688 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066853518 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024848028 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080543003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.061573798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07998856 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024561676 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023933105 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023991946 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031845531 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035823545 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078096419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.070697972 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.026244522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.02459553 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.069657477 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.07037114 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.02358724 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082458322 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071776635 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.069120046 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.023450999 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024662523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023408241 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024025583 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.032337097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031760528 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023968004 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034834289 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035963561 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.031853103 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023181223 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023594119 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023313389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.032264503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033953037 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.033785813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030874019 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023101092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023457626 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024074616 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02457113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022971243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033791117 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.03168634 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.033680556 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.024059349 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024072446 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.023377364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024638928 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031808192 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.030082995 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.031675386 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034677571 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.02388799 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023817188 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.025258904 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.035672779 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.032500285 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.032363998 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024896562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03353653 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023741518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034475797 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.037482904 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023837501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.024338307 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02404743 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02386949 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.02425445 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030760941 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.030768685 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024343998 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.02417729 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023538241 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.032261338 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030917168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023627205 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.033061048 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02324083 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023855548 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02423982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024573127 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.034061897 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.032284863 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024476263 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02416479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023957081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023920883 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023085134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.03323148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032225597 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032301152 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034221466 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024457288 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.034984705 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032629142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024586427 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.032063892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024448533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024866083 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024854214 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032651681 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.03239687 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.033806514 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02443753 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.02392846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.033409796 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.036327368 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.024449806 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.032332488 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034218358 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032953276 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023952321 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035590777 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024429544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035552052 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024609077 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034936663 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024655071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032825984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024565141 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023620978 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024345652 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.036371508 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024891495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024397446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024743 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024330202 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.034243773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.037842042 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02527535 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.033247719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.033040431 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024908378 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.035327489 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024565689 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.035871607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024833199 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024977448 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02373387 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.03816881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0245223 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024926497 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024495871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.035111198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024501993 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034918583 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032390938 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023872436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036440161 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.035134849 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.03257297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.035615041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025487503 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024751974 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024430297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024742224 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.03608625 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.037863365 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025620075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024856963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.032492662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.036388389 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.024208558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.032829382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.032649988 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.033145886 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.025015359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0248407 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.036289925 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.038659643 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.033424041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.036352061 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03435351 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024615076 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032955548 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036627225 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024646746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.039766709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024796329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.036871678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.036923817 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032293052 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.036888517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.039789863 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.035648448 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.035384549 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.037487854 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024222154 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.024457996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.033533714 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024638047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024784712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.033103215 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.025262446 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.025505364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.039381461 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.025174554 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.036802916 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.024238904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.03401801 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024160476 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.025339524 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038571634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024769793 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.02526449 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.033872952 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024857552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.033030759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035866497 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.03322723 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02449524 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025219287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.037590894 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.036713164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024595336 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024461627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.025364683 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.03642982 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0357518 seconds)
  done (took 8.006209384 seconds)
done (took 20.157433702 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.154988793 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.075377901 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.148445278 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.088945872 seconds)
  done (took 1.294623006 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.058557915 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.020270165 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.148238961 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.160579523 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.020816519 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.14300062 seconds)
  done (took 1.397564152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.261552359 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.156681553 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.164526213 seconds)
  done (took 1.431436647 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.153964921 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.285425622 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.558284163 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.147824916 seconds)
  done (took 2.000180179 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.175077227 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169644169 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.032491205 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187675219 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.039794957 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016844577 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.109137149 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017773855 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.054011216 seconds)
  done (took 1.715102194 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.100867092 seconds)
done (took 8.896333485 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.187304014 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.149585283 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.034493459 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028591215 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.135629762 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.137065264 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.145555 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030678384 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.136256605 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.300276305 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.1672445 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.048909662 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.162482788 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.044927019 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.270709804 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.03248546 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029974687 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.025563412 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.143463187 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.135103217 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.249074856 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.029525765 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.097823003 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.03106982 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.102373052 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.081667825 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.173004109 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.302860258 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.282564171 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031416252 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.130656598 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.044061386 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.116974669 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.135212641 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.139467698 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.049671831 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020737394 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.248280948 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.111690773 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.317016743 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.15353882 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.028028197 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.142222351 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025923943 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.020067273 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.148052657 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.03333855 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027161076 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043475966 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027599799 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042378544 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.027736219 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.142037478 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024310793 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093207396 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.142990934 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.166046615 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.097317606 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026756279 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.040379676 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.029985993 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.159921624 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.039447945 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026514648 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032628125 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020627939 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.142334982 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040907308 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.021112242 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031065392 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.02909692 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.112483202 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.15957788 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.067599326 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032677219 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.119478808 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.095838679 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.047625528 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.050347493 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.030457448 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020193331 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.174354196 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.026233238 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.039326846 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027616946 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.05311337 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020515238 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.036232451 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.156880837 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.150089038 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.089308694 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021954634 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.238968835 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022937246 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.196071063 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.022003352 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020567254 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.168150731 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020458188 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020538014 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.029966668 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.028694753 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.021966411 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.151791339 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.100806699 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.028064322 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027367654 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.020331038 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026300699 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021519288 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.020532449 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020361998 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.095725869 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.039018591 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019837727 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.109024129 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.128373033 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031694073 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036569937 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.085481181 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023516584 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.029518344 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027321563 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.125949037 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.02847763 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.137104712 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021889219 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.043547185 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.121166895 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.094664701 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.108280661 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.020463977 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.157455112 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.030523457 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019724338 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027456674 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.048335603 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.030003432 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.038586802 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028461977 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.159446021 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.031557161 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.026073397 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.120624016 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019743493 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.117913062 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.094568065 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.131129437 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02558206 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030797743 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.093621325 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.044180514 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049019246 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.043285073 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.024596989 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020255051 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.02001129 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.034825427 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019466711 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.020277279 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.033884135 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.027044847 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.019880389 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.248039269 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.030902143 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024850284 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.264782769 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.033078745 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.098943173 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.04138035 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020946145 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.102890691 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.02242595 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.041304226 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08642943 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.021065443 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.095832458 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.021196943 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020731246 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.028167196 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.022264262 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029647574 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.034298323 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.02120716 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033976838 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.028295981 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020582565 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101514807 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022481331 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.172569592 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.100062141 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.114398989 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.021089755 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039583724 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020381797 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.137985054 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020798478 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.071329252 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111911568 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035657261 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.04121699 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021917807 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.09461942 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.035215857 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.020197614 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.100054552 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.132457824 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.0980673 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.028441663 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.252273682 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029855767 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.021113876 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.027933331 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.028838941 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.021240086 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.097101456 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025613436 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.020197047 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020310739 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.022129329 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019547806 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.045062874 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.020058906 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.027897106 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.020177255 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.02327277 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.022188694 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019681808 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028074186 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.096058881 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.133834034 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026891809 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040365608 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033896411 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.032134548 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.069249942 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028154653 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.146844113 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.020319529 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030066007 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.043173876 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.020412527 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.025528703 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.020560537 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.038704949 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.024315846 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021953931 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029222257 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.021031354 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020979786 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020677399 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020919828 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029009944 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.022102073 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.020275057 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.020222534 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.020490693 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.02544468 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.025825886 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031650876 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.041274644 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.485693538 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.022915346 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.023036169 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.020808038 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.020603111 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.021064461 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022638003 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020629025 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022667391 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.020980798 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.020331543 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.050340978 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.026090373 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.021613701 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.042251442 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.020942747 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030534539 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.131325351 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.038151921 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.026174797 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.020390253 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.274527028 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.110288633 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.204827413 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.04143756 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.021020162 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.030969133 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020922798 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.021213107 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.020068636 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.048792016 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.02558419 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.021102827 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019865837 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.020170908 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.068437827 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028697636 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.020194703 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028684159 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020303842 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020711545 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.048728637 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021432828 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020219913 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038000264 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.032267413 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.104571278 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032114308 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023431064 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.072454499 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019595846 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020093642 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020467888 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.118504862 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033675222 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.021363807 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020118891 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.027604863 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.028845542 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.074498338 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026646497 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.022984306 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028072171 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019417415 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020340998 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.044968046 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.047749983 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021278556 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.02384125 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.019927987 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020261745 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.096485812 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.027964196 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.024870474 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.106972725 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022003731 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.027735971 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019375359 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.490634136 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.02510509 seconds)
  done (took 22.601925578 seconds)
done (took 23.467180343 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.173644127 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.035193713 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.033769155 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028964397 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032570625 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.032987044 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.034291979 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029822657 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032934582 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.032319176 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147019529 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020569231 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.027982811 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.035719489 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.029042982 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036822177 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.032995684 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.036028708 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020750466 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.036131075 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031368187 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.033585043 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029060692 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.036022907 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020716769 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028714393 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160849169 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.041079318 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.02426363 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.030109436 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.02821764 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.034301039 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.028328581 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027754705 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029779953 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025683932 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030540627 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026862293 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161873217 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.026438856 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020832778 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.033649373 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027820503 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.028189835 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.029004811 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.03190899 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025719859 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.03438351 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020375138 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.033472304 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161546882 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.025285553 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.02427297 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028801652 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025809455 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029818919 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.024009627 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.032450125 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.02582896 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.032914962 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028854196 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.028332065 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.020180583 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.02883761 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027768893 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.028188998 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019524629 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024941328 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.020198461 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.020095151 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019758965 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028912939 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.027231743 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025347842 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019787371 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.020112622 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019825748 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.032773258 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027542724 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.02918203 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020600447 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025836941 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.025484389 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020724637 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024983612 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031845553 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.019945486 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020707535 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019834056 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.031919691 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026938452 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.020208721 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.031656582 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.02479502 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.024460309 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.020218828 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019860998 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.024716601 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.028179524 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.020185166 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019413012 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024764425 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025508127 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.029016961 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.02057492 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024887403 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024546583 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019548296 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028923207 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027780824 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.029365658 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.033454964 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028985952 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.03170239 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020632238 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.01944474 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.031191571 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.021743628 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.025294843 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.028504374 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025738619 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.028139066 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020682875 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.01984143 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.024858367 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.026363133 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020719094 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020739365 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.02055708 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.029135171 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027758034 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019503156 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.020184359 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.029169302 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028953915 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019971884 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019808392 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.029154986 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020770251 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.026376708 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025816744 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.029257102 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.020317045 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.02056267 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019770897 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.020227114 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.019882565 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.02586268 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.024915455 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020859156 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.029184412 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027662548 seconds)
done (took 5.672515235 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.034101753 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.065572912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182864374 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146279667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.03452854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.021537557 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025879958 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.042037728 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.024341953 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046898171 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.047156827 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043493454 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.169169095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.020046033 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020603689 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.021669119 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.019233303 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.03319219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150894535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045862104 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.06538995 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.020577971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.03816626 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.041509596 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.034120083 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.04035123 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.021981306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021713456 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.023493723 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.039138061 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.048115252 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.02045131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.021780258 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.041459875 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.037854162 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.030358137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.021370529 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.028255236 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.021374666 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020478668 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.022485074 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.040209536 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.028010828 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.028159772 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.02205852 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.021349334 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021327299 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.029320115 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035691377 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027666483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033912304 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038561511 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.02277781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.021150679 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.01943051 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.029261532 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.022474723 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.022212919 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021648539 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020618337 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.021432357 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023533784 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.026789709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.03190388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.02496632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.02896093 seconds)
  done (took 3.440238819 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.040516316 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.049536871 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.035541712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035804968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.020114197 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020642501 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020624852 seconds)
  done (took 1.17117783 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067478258 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142470704 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150670984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152189673 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.16293289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.149319867 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.034238282 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.051473017 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.020412577 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1632675 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.159910855 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155308227 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.025428697 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033988048 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.054506391 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.157636401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.034639939 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028841246 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148942357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.156144322 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.02659087 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052893152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033472694 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.021981799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.152931528 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14605733 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.025469943 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.021992869 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.024290934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021403863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021390966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.045105587 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147139982 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.037242132 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.022670337 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020515024 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142475669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023013818 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145144333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.029231943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.145505975 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.024307494 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.024175808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021814434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022908714 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.148204592 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.023138287 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021689863 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.021182422 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147586998 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.021031088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146119315 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.02463998 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026911614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.02869142 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028295669 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028826736 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021977843 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148866904 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.032240551 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023476949 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.157554336 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.157089214 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.146605364 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.158314215 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.03117965 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147158037 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.146114595 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021748329 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029624704 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022162471 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157924263 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.02545803 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023936308 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.026964034 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028839557 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.161261532 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.16432256 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.165345027 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036708287 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.024334359 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022155866 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.16249264 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.165712686 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.028148909 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022163732 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.023059422 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.038424238 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.047716149 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024429638 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026853968 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.02211803 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032767541 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024487105 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.024816242 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.158536313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.022319243 seconds)
  done (took 7.956504786 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.028581853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.02204186 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021482655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021898251 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.022143162 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021995825 seconds)
  done (took 1.18346816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049374238 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022592279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.035210683 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.022285518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.045185538 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.14667554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147965139 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023854145 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.03918791 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034748745 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.147762305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.152851724 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151153124 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.02380161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.148348948 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.034718898 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.149825063 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.027833492 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033919277 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02381167 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.036466197 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.023317762 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023577745 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.15756464 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.025118561 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.03426391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.031658516 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.034081107 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.03357534 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.02333745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.023159956 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.024288956 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.029083981 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.023314162 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.150110491 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.029835474 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022741789 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.026602777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.024432242 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.024242302 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.153595059 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.024141677 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.027313006 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.026727979 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.023410901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.029296271 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.026686921 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026225934 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.150818275 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.027359037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.026655836 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.023075737 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.024352686 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.026569642 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.029229104 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02342168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.026539452 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.151100742 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023907683 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.029558352 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022708557 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.024361766 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023352957 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.024396952 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027827039 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.026491936 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.029282086 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023686761 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023808289 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022670944 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.026687256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.02269515 seconds)
  done (took 4.423238043 seconds)
done (took 19.129581427 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.504058548 seconds)
  done (took 1.463600517 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.036634445 seconds)
  done (took 2.022994288 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.052947861 seconds)
  done (took 1.043061839 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.311517701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.54068758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728912135 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.09181072 seconds)
  done (took 2.645068632 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.848966192 seconds)
  done (took 1.845576943 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216246191 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.179621522 seconds)
  done (took 1.413702117 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.50176637 seconds)
  done (took 1.485081775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.337653878 seconds)
  done (took 2.327676798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.204342578 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.138522679 seconds)
  done (took 1.336747353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.615865595 seconds)
  done (took 1.602628028 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.588902862 seconds)
  done (took 5.578814177 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.189067451 seconds)
  done (took 1.236211062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.196415106 seconds)
  done (took 1.190831965 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.698253125 seconds)
  done (took 1.688801192 seconds)
done (took 27.877166377 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043659156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.040287615 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.043232132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.037435373 seconds)
  done (took 1.143946091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031223338 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025701667 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027941089 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.028518206 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025717121 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027507535 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.028231288 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024481257 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025493816 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024748721 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.023218117 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024621953 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027166124 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024507104 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026979571 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028268874 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024848192 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025466696 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026846532 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024517546 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027333715 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024763062 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024925481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.026232042 seconds)
  done (took 1.619840784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034699293 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026386451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.029757652 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.025316498 seconds)
  done (took 1.111123118 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033594454 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031608004 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.040461477 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.045057876 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.031366353 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031976696 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.038679944 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038899184 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045602419 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041565311 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022378706 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021996114 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.021138992 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.040831132 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.038319621 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016523899 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017888327 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.032334914 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.031327913 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.034213846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.024326361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019919389 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031632276 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.032131181 seconds)
  done (took 1.756384013 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038163173 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.020149026 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036755302 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.0459398 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.046090964 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019902166 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.034143763 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.046505323 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.084344764 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.0198811 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025962001 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019799966 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.059293134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.020047505 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.035541012 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.066197794 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.070164454 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.024531676 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.051434539 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.02006635 seconds)
  done (took 1.787238409 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028923392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024879194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025690779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019696809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.031057704 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.027200632 seconds)
  done (took 1.157323716 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024548436 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021774183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021602701 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.02591629 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021492717 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021456041 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021516243 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020263533 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020256634 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020994745 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.02103793 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.02142892 seconds)
  done (took 1.256726085 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167070619 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.027097699 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.025091174 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020226744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.022836069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.022252681 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.036815044 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.023196079 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.03945939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.02099273 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021340002 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023560085 seconds)
  done (took 1.445425384 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061117013 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067200459 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101450344 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071636342 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.071459384 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051947436 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.204921641 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.034175733 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122179878 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.095021889 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073891637 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.047384835 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.041400154 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.024604461 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.056774921 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075412811 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094163686 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027741546 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070978071 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.249206624 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091307519 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095169804 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106872114 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075089255 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.049436077 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107044156 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.052141817 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.059978594 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080885548 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085247644 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076833639 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.055567359 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025931992 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.02563561 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111501235 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.064786668 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078202769 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.048996981 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.062024904 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045037486 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083781079 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024659085 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038145669 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.06880187 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0429356 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092335699 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049360573 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.073346978 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037087915 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099034268 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090038909 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.184025905 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.043617098 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064131394 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104409472 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074142735 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100713728 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066840211 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041252669 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.22428664 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.061106183 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055996276 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062691388 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035226067 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135384808 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044221598 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.073517278 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070376043 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.051015893 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.050356722 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.062745758 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092746536 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082121786 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.082382728 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092627368 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.047204451 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078491284 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.055598579 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.080909788 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05938701 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.027336853 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.079749333 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085351974 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.055876174 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.056918057 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092436538 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048808032 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031113197 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.057909752 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.077421276 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.035649253 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.071788864 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.036737128 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.088126565 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097984614 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.055807688 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068661326 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07615608 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033951121 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12600381 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06465337 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.028037891 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073986574 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071033699 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113944037 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054004573 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.030291312 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.057226074 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061338959 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.11703191 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069404729 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037612272 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071107322 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105829046 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054034811 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.266953297 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.054849943 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10838753 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.224038948 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.04134503 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030202775 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.046091994 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069298515 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062272998 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070187255 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049730202 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.038923402 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.040790299 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072416572 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.048051351 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03548523 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.069699739 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.058237774 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.02939323 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04313763 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031361883 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102314592 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.033322144 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091527791 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081841779 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.030174908 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061662135 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.051074903 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06085607 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.05300379 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07335339 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095009341 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.140868923 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045562096 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.049610831 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063254107 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104299572 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085999266 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048187987 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.032502746 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057079565 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068499105 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.057094891 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.082704665 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050661904 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065548181 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060707752 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10211939 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106369067 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059016675 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058563721 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066484821 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.082066934 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030256316 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118960216 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061759469 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077304486 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.043153768 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103526649 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.069250552 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065188464 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.042471631 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.057624243 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.064816189 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066089707 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108950886 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.053669524 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.027991493 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054254611 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114757921 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034911437 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075476479 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.048408006 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.050934524 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080684197 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.055401356 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.040118742 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.024121854 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095078229 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1296934 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.026161319 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074680227 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.076010476 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065998271 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.0873155 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.025348457 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083336489 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102043023 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080282544 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112645729 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.161241059 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084888044 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.080501457 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.079213377 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067095321 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.036064739 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.089353692 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.1005545 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057593046 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052117233 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102008907 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079408171 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.103155226 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.083510761 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087699532 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.069579773 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.068589386 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06668838 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.066918945 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112613787 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08487015 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.08853463 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.041308927 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06817239 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080236876 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102091262 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038177489 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110003701 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.045241594 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110853327 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.036458215 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08865561 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.032250675 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.130803042 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.036282494 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.060096181 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.025725482 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.031080787 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107576884 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.079692777 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070556949 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063278598 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.104052544 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.422198814 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.033538271 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065682171 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071111814 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.058407041 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073281042 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.064879132 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.045496537 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051115112 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067101582 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.042278514 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.037174767 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074609557 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051599959 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08434049 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.039072827 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030240655 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09767921 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06165761 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051758301 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032015667 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06479562 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.085389432 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.049001358 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042031456 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073782537 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062323646 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102257124 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.04630865 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.055540622 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084626938 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.037352514 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.049515382 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.024816518 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.042180062 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.031886078 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089510931 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.031804069 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076424082 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.024046148 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090919652 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044842328 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050345878 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.059580172 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068466837 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08799106 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05063144 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102389023 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047237737 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079660478 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065345454 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073716767 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043545611 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060340586 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.058541065 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081348744 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.052575131 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082349867 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105163247 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061250632 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.103419529 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047735958 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081163205 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064683778 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.083694902 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.071153257 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154693908 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102469848 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072400311 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069819665 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.031368121 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.202436617 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06116487 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067919835 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131927778 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079866134 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.027466129 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.059601625 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.048565278 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065746882 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.059513093 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037254519 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102044486 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058439888 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.042439968 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069358094 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.046822546 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059774929 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031217979 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.05843358 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.057320634 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.05078457 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053264179 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070964664 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086631726 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069657872 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.102751239 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058839546 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.04783092 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.076931743 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068937678 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067020658 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041484379 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041972525 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101931939 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07791515 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.08470817 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.054834495 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067138414 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.068566967 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057054042 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.083961917 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065717769 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.087732747 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036237527 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.032573194 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.023376764 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.02686157 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082888154 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066059941 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069080842 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062779308 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.027170978 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.060508895 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061904911 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.02727726 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042081136 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.052098636 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.055530697 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.049300359 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065404355 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.071834021 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.052585776 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.061190091 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054769832 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109048372 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.055685158 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04602278 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107703592 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116976661 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.191319428 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047967877 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.026226781 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.033825504 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071465499 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101877271 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110714138 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.033378496 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041015315 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.040632961 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041561572 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.026081448 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.044276962 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.045309258 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061066695 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052822563 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.070182212 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060651617 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030439624 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05759743 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055043041 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047933812 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.062479581 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076877938 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.084422581 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.102771758 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.070430622 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065219621 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031569279 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.036722138 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031815148 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03487696 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.057722919 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.034527475 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031609961 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106998448 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.047727333 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062453182 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.065904876 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044051983 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03104774 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094686923 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024681529 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095500432 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.026093263 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037954833 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.037284867 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034073948 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051360134 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098841697 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06741165 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.070679587 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064350605 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062361362 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147411762 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121121252 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03865275 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.102658716 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031641567 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032222379 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031634002 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068968039 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047556115 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072476827 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105520098 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045200798 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059403825 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034147501 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105283017 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.061072369 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.06171069 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042071562 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.035096486 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.249810764 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034429865 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.036371411 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044173131 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.065892846 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.027265272 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057189767 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037956754 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03423407 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145198949 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.663213414 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051981176 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030381948 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.050610042 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.097946353 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093115695 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051714166 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063167307 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.076040177 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056756771 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049436656 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064123483 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.156766983 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.02885109 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050915005 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.059713559 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053231527 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058910299 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.055040511 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.042030077 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.049346714 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.041540291 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034575147 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065299973 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042474756 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053487027 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063293984 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.039053896 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.04401784 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089924464 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.059977694 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.039162492 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045077427 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.060695752 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042315153 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063599483 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024774609 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.068753803 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.04540049 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078573111 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.057092515 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.065317393 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084825102 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.050401582 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097748024 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.066510326 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080990003 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.042615122 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.033922317 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084807373 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.047214362 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032966505 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106634703 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.055531759 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.060786209 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061738431 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.051538296 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071350703 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077770352 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072306532 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.054639996 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034682048 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061457246 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.209869135 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041661988 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03416221 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029138097 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.030279336 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062380092 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041166644 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041150431 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06883512 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043699703 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.057960897 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.054453505 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0773676 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043891799 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056831209 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066378147 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047377824 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089233555 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056696453 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085827922 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.382873054 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081852052 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087050599 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093292852 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.033430966 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.031081363 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.02374294 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070967017 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.035013992 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.04621802 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.034843361 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092948181 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.039519441 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068673648 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.212277322 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.035815476 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.051296322 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053686064 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024948135 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.039122275 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064314359 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041926895 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03568394 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075179409 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037205664 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.087673434 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06834658 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056082218 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.052131216 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03681942 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071749954 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.06113669 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.08863121 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052031358 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.03086133 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.082685045 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0608099 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102298127 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029754864 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036925832 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089569783 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06137686 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091987699 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.036998265 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119784997 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.103210752 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058262006 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095665374 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026266943 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.045113281 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.046806719 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.081916882 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.044089475 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073241627 seconds)
  done (took 42.625267559 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.14716347 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142028618 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078006563 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.090054785 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.24538893 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.253927492 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.107762017 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.079095146 seconds)
  done (took 2.318986398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024916002 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.038417651 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035854229 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.287943153 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.055568529 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021690507 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.026471356 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.03667912 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.021481827 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.021109324 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.05661927 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.021353785 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.021582887 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.456327353 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020445645 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.026577127 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021592467 seconds)
  done (took 2.337173161 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.310882368 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.575636415 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.351606516 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.386853743 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.103777754 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561046171 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029810918 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034757737 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626206458 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.356753918 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.099207412 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.183168163 seconds)
  done (took 17.750043338 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031177045 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.160025923 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160355785 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028950147 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.028308923 seconds)
  done (took 1.533746719 seconds)
done (took 78.905630095 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041028266 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.126143165 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021519873 seconds)
  done (took 1.3091 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.162592563 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.159503677 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.159901901 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.162780569 seconds)
  done (took 1.775894048 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030661076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030542359 seconds)
  done (took 1.19505181 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.169716178 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.257873364 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.045678871 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040129872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.035838081 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035806549 seconds)
  done (took 1.249396882 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027247754 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025293554 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025282995 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025847072 seconds)
  done (took 1.23713302 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.140248961 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.020342566 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022721587 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024316454 seconds)
  done (took 1.337696995 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.04107422 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040865111 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.071517012 seconds)
  done (took 1.28750225 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039842209 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.03939087 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.03415843 seconds)
  done (took 1.247876796 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064406175 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.051181392 seconds)
  done (took 1.251494526 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036435666 seconds)
  done (took 1.170836727 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048387115 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.053139965 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.22479153 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.192530908 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230796065 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.213117226 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034389456 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031457734 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.027141642 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.026013629 seconds)
  done (took 2.212603404 seconds)
done (took 16.921194332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036417926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.141192061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.271230014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.042592555 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.609732699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.268074707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.6796082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.045400995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.054802417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022492275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039473223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586998941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683870646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.101320247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.669215472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.093413909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.517546497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.023722312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022052923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022394404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.66146603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.023532207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022790981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.02280549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.514204444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.413726571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.024599433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.089265888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.023552476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026715645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.393535699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.024311999 seconds)
  done (took 12.303627634 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026450651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077221374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027531775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.038380475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.024234342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024431379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.026058595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022745838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065926106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022725607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.040012558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021949375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026650752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023577599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042958785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022424787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024612907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.023045278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022225219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022830633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041614054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.02203239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022813969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022846896 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022686381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.037326626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023515357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022229062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022449022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026354174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027477687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023829046 seconds)
  done (took 2.08501616 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078751215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.079316033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027946053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.063186946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07462209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.025022528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106152695 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.045157355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.06877156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.023018497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.040437026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02282027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.059247218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.024388452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043620762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022801236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.025047093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.023061177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022346581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.023109114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041969724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022515638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.023025265 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.023224473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.023096277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.039537178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023883237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022549955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022480603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026654875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028515539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023747544 seconds)
  done (took 2.36696698 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026118778 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026710552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032391955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035619377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020845772 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023355998 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024536807 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.020840698 seconds)
  done (took 1.353938397 seconds)
done (took 19.260884143 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.03632818 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.02290724 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025739958 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.041838308 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.029196602 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.148569302 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.019978395 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027906976 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026416765 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.02558068 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027892055 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.02070543 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024797919 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.019417472 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026701003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020780335 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.152168039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025682525 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150839673 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.152486781 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.024001815 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026638301 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029357304 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.150645943 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.151636247 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.15169539 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.030527755 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.027162998 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.021216931 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.02394934 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.148758566 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.151650136 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.024118386 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147253671 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.021455538 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.021098826 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025488821 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022429483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.154631055 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.030782295 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.023466318 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.030181213 seconds)
  done (took 3.60023543 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.153107887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.160387624 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.153957893 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033760563 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029725902 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.033013147 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1594349 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.03033147 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028866859 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.158789057 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.02473704 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028698008 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030902116 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021627656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.028432179 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024874166 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.030416971 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.023368994 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.031321869 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.030128245 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.158748568 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.022243845 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029808211 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.030009205 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024386408 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030483531 seconds)
  done (took 2.672410126 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.03065397 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043888803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.046274229 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100288975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.064482344 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.036970904 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037595011 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.048418937 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.054667871 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.022025207 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044441738 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.051067332 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.051388648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.029044711 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.061602334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.041476042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.035059738 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023630192 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028432534 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056848096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.045611701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.041481879 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.055212477 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041931253 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.021060223 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.031299916 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.02925427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038430233 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.029316673 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.03446533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025941657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025278343 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022542133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032731504 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025699071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.020086996 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.045583643 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0347678 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036976648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.061548867 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.03223851 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.023295156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048838275 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.087084576 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.021463673 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024675776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.026049629 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034676722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.023289152 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0525725 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037491043 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021484978 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.041287298 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.023421431 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.023238407 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.037631213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023495809 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023784899 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.033684389 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.028150867 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.044000834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.027713564 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.042397824 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.021445516 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.03336942 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.023178453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023372899 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020356478 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.056090792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.029426451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.071271481 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.023022486 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020338309 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.03450706 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033653309 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029173597 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.021481722 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040762661 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034625668 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025678646 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.032992092 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024689987 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.025146791 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.057986809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021144743 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020178233 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.020076547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024467008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025048332 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022270208 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034573961 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021164924 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025071985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.036200319 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.025444919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022475643 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024546107 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023353938 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.02118717 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031924892 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.027107237 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.024384367 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.03503254 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022758189 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025215142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037341605 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031510779 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.02115499 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023192397 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024642131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023470616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.026326226 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025179753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023836909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027319761 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029454354 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027770294 seconds)
  done (took 5.090805503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.246226936 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.237672921 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022877457 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.234569663 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030951584 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.164613578 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.238820434 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.238874966 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022800684 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023361522 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021613259 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178869586 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.173697134 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185616019 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.165463126 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024847342 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.048934866 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.185580686 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.241683722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.236976037 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.048360386 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029841276 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.024577077 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023694419 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022990527 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.031213724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.038892786 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031590405 seconds)
  done (took 4.348322771 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030451088 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066766858 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.02605403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.047207348 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.040061401 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022693352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0242516 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.023152409 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039388914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.028255041 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022329694 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026429623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025900577 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024730288 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022676587 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.029000256 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028955933 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.02999706 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.026080995 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.027163984 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033826418 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.047087285 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026430568 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.022265316 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025807233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.022178054 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027793127 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031329706 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.022062512 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.022002109 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019518585 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.026721053 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037403434 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023530521 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.022143052 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022856797 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022578096 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022688584 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022422429 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.02072421 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020582803 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027377803 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.021167892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027525852 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.036330371 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024859441 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.024158079 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.025127761 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024954097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019452066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0257426 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025624333 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024865528 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030911043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.026208116 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.025003675 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023745263 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037203439 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028398852 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021999316 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021608312 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020961528 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024412911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.029139764 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.039018263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.02462232 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020859885 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022609436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023965649 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.036046619 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021833624 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.027975002 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019489651 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022717696 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024808372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025270152 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023771149 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.02076361 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022049052 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021797381 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022547979 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.022297468 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021795739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.025100994 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020541339 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020891968 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022991159 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024281945 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.028016992 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021275906 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025085954 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023847282 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021115878 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.025002681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027746074 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025344134 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.042916287 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.03068284 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023225185 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020352787 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.037530002 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024297198 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021809489 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024344481 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.026915386 seconds)
  done (took 3.972357657 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052918676 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02612148 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.042873136 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.054692663 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.033028201 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028453095 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036431208 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023829648 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.044546989 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.023542707 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.033988129 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.021399357 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035866824 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031600187 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024563247 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032640615 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025532528 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.043556499 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037667525 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021524162 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031543055 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.035226322 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.035455832 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040504586 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.03975698 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.041310925 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.035226692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025515665 seconds)
  done (took 2.138592226 seconds)
done (took 22.962942765 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213340385 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.475651848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.181739407 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.948321204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244409595 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225017643 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.282688072 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.168737878 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.708048469 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.260619141 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.854373636 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.832719624 seconds)
done (took 60.639755876 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.254664747 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337995446 seconds)
    (2/2) benchmarking "String"...
    done (took 1.425108735 seconds)
  done (took 3.950719932 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.611201161 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.176047027 seconds)
    (3/3) benchmarking "different"...
    done (took 1.226208369 seconds)
  done (took 5.18288116 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.483916672 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.584612241 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446569189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.162390805 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.16848447 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.637369205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.31822142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.822253676 seconds)
  done (took 27.304866609 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.207493711 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.41148979 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.530016623 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.624686995 seconds)
  done (took 18.021630735 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.617527696 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.615758762 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.613930119 seconds)
    (4/4) benchmarking "different"...
    done (took 1.879637229 seconds)
  done (took 8.011339261 seconds)
done (took 72.379768936 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.159209853 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.488811218 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.198917523 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.34890183 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.212394263 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.267509755 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.163857859 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.16922788 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.16422457 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.168060797 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.165386545 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.164014495 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.170132184 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.210072709 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.174497219 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.197893856 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.471418872 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.170409801 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.209229799 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.031499999 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.499655642 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.165660532 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.168740155 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.237883414 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.635767708 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.195192027 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.63166658 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.171247473 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.774298907 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.172308387 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.168483749 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.167752552 seconds)
  done (took 184.454478156 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.159613554 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.082462558 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.063198496 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.174194728 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.54039708 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.518754396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.019651026 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.561921059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.165819335 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.172764934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.190629243 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.164804506 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.194350623 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.72325496 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20811793 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.201458475 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.091073927 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.978930223 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211815263 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.08841876 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.164297771 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.741811984 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.708306085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.004633712 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.167909127 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.227100278 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.183232495 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.191141264 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.677288007 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.050380064 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.188004332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.187193371 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.355102 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.401329505 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.170378504 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.175414398 seconds)
  done (took 155.269257416 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.403755619 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.167750704 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.202928378 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.272333784 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.253788291 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.080534688 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.164243753 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.158578059 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.158955107 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.169902929 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.159608683 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.229045496 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.163812921 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.245087186 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.189942467 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.160422904 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.158811658 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.229334025 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.1709975 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.15952563 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.158599517 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.265442209 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.508216927 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.273098621 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.162673665 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.167579449 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.272551629 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.169784045 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.160586365 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.158631581 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.271625277 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.163934041 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.289447564 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.274227549 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.171692179 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.217578033 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.170302236 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.43600518 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.165845495 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.159337649 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.164036559 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.208397943 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.163998016 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.293072061 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.263880083 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.1729462 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.179290688 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.613937027 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.755851824 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.166429218 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.158437957 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.157903335 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.165924338 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.159250032 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.306125376 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.166670195 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.197665784 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.924223588 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.169503163 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.159980491 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.159768003 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.161272113 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.159334017 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.16464324 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.194802819 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.786207027 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.223994101 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.516354448 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.96044517 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.163625771 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.162076065 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.159270663 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.130252771 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.224566045 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.163712556 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.160383777 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.336743231 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.165591457 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.16202438 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.090987346 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.086468021 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.164536437 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.267916693 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.169194995 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.159601638 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.583137024 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.243443184 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.172451045 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.179732079 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.214259546 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.163986287 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.161399776 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.165582934 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.096420117 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.168920221 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.170465722 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.53714373 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.164280246 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.158062303 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.169402861 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.525164747 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.162797044 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.241024163 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.571938267 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.125788086 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.167597448 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.157754172 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.179051187 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.161470574 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.176394983 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.170993312 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.160518721 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.16043003 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.167120533 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.159089515 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.160426322 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.158663501 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.177545789 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.161958479 seconds)
  done (took 333.234657403 seconds)
done (took 675.655219731 seconds)
(4/20) benchmarking "parallel"...
done (took 1.160281756 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.417798194 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.173785815 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.28646356 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.42208413 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.366834605 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.339188251 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.368167766 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.457138367 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.390428904 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.332690399 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.394032276 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.33831697 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.452407189 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.418459625 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.460218153 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.421396476 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.357554435 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.87500994 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.378968328 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.336766577 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.369110961 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.335638407 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.324250006 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.391296205 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.462543851 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.337789039 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.563874807 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.407977701 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.368656686 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.411461421 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.434051005 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.450334441 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.378674918 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.444266236 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.410547205 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.463551635 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.353667002 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.435029686 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.349724517 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.377401302 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.389782448 seconds)
  done (took 65.607589477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.547520464 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.349673028 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.469519456 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.466696095 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.121465227 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.465332073 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.552909247 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.344071428 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.352989261 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.470855341 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.473670931 seconds)
  done (took 18.80325404 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.440870552 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.351543768 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.468189116 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.49193383 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.578051517 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.462229469 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.524511223 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.350987069 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.354893886 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.472662998 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.487795794 seconds)
  done (took 18.163794835 seconds)
done (took 103.735499366 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.742827747 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.235773055 seconds)
  done (took 4.1370063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.191894242 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.178287777 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.175041392 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.177093067 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.172954429 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.172390347 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.226447415 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.184485029 seconds)
  done (took 10.639609994 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.170999734 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.174923252 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.17215075 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.171342644 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.171421633 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.170123364 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.174672118 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.171373995 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.171257198 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.171755124 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.176216384 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.171417758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.172789774 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.173602837 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.175422758 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.17141182 seconds)
  done (took 19.922064547 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.170403083 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.175280214 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.172530177 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.172221191 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.172269651 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.173416302 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.176284752 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.181267294 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.174057235 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.17170724 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.174656259 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.171557876 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.171017755 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.171948044 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.175462399 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.17111438 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.179374442 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.172773828 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.176081603 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.173491597 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.173064763 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.171453567 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.172532157 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.178673007 seconds)
  done (took 29.332094498 seconds)
done (took 65.210868141 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.792133752 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.19193616 seconds)
  done (took 7.143479757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.176499262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.172265551 seconds)
  done (took 3.619847857 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.17479264 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.172311895 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.170759455 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.170904091 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.171424664 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.175893222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.173748565 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.172834476 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.172066545 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.175756758 seconds)
  done (took 12.890120257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.172544498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.171727447 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.175857305 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.173675151 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.170524847 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.172606627 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.17526723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.171597874 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.170637221 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.172642374 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.174344139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.367800189 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.172984097 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.398705417 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.172299502 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.175901688 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.17280124 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.172995674 seconds)
  done (took 22.695174316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.172322727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.171068058 seconds)
  done (took 3.502231048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.171730577 seconds)
    (2/7) benchmarking "second"...
    done (took 1.174846017 seconds)
    (3/7) benchmarking "month"...
    done (took 1.172757037 seconds)
    (4/7) benchmarking "year"...
    done (took 1.171705683 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.173404213 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.17759373 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.173951605 seconds)
  done (took 9.374175334 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.613725484 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.341544623 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.389135474 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.643670059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.842774069 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.109906271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.841051799 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.113235977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.990203755 seconds)
  done (took 17.044728739 seconds)
done (took 77.430607893 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.84702487 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.176320492 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.848315727 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.370680262 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.180093614 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.535987356 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.178924528 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.695068579 seconds)
done (took 38.015341401 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.2035941 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.16262871 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.200591569 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.20110012 seconds)
  done (took 19.728576071 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.167694054 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.7352268 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20283401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.111471573 seconds)
  done (took 19.472543838 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.679443775 seconds)
    (2/2) benchmarking "read"...
    done (took 1.7005517 seconds)
  done (took 4.551406879 seconds)
done (took 51.123032113 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176037144 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.172019988 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.17275323 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.170851141 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.175845934 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.17149453 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.171988873 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.17257918 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.175759553 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.171632999 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.172658828 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17334586 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.175043997 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173326427 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.172431637 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172153628 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.171519413 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.176797724 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171889493 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173065576 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.17126436 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175924039 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.171630315 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.170821064 seconds)
  done (took 29.312527223 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.244682125 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.231705408 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.244097392 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234937554 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.276512156 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.236210121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236782635 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212550674 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.244177399 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22557577 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205686677 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.266175408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220855878 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.268642576 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216019723 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267671643 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247444127 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21984057 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212333227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.270163053 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240222259 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217996343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.265831215 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206646779 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.265457768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211265854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224027819 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.23200227 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208328615 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262843357 seconds)
  done (took 38.277031895 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207373352 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.174356011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.178349533 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263715025 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.174974357 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.173545427 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.177972253 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.175220465 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.173434356 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.174640146 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.177436456 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.175254438 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.173017935 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.174567952 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.176863897 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.174231061 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209518961 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.350248231 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.177494554 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.173964077 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219413067 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.177014715 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174970183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.178956564 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.17429333 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.175581603 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.173430361 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.17823416 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.174849408 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.174038067 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.174860533 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.227009545 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.213189642 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.174234277 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.297045015 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.237571403 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.174081186 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.205821081 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.174340736 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.177748794 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.17479879 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.173614547 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.174603967 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.173315905 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.243875099 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.179680777 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.17430492 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.174055939 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.177945369 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.174234796 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.174434237 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.175206938 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.193605173 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.174678828 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.174603781 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.174341984 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.17734009 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.174027739 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.174434834 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.17446852 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.174486843 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252048341 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.175368161 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.174241717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.54321791 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.177598427 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24269159 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.174496139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.173685154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.393777616 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.175571537 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.377592518 seconds)
  done (took 87.478059607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.176653368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.173522863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249982363 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250328834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176488529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.172475707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.173340952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173497349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844203669 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.174028646 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172622509 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.172060504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848077928 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.174881078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173811366 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253350485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.174464142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.172957321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.172115339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.173644488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.174100091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.173367269 seconds)
  done (took 28.561518544 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2139159 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.190293545 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213838202 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.188858365 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.187165067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191269061 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214589145 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187351799 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222330265 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212564405 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214042979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214961635 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188281705 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211889473 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20831302 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254327594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217429482 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256537372 seconds)
  done (took 22.948980749 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.348807891 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.33857067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.260205791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216130845 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.434039537 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.40848561 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283522898 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.348930094 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216121882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.33855129 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.352319966 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217073932 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.409202541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218525495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219628904 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.43698537 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.257358068 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216310539 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286732944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276692216 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351158435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288237549 seconds)
  done (took 29.885380465 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20755874 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232136578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249442215 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.259143198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.173148993 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172206877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231706197 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.212334096 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.187803718 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.215511145 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208229379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.176813144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.262552717 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23423665 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.261813945 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212019769 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227698478 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232833578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216528459 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.175599882 seconds)
  done (took 25.510764568 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171784942 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172959704 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.176425649 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171143538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171490954 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.171275925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180236964 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173069301 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173131196 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.426366556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.178469592 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.175469347 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173470191 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.172941151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.172916921 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179390628 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174078361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173621864 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.17249967 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175325986 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.427019514 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173523609 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173652008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.176047457 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.172636448 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171887888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172202937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.176698624 seconds)
  done (took 34.541722967 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231794204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173488546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.171657395 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.17587401 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.172918936 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240184331 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.17235716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.174829381 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172850203 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.172432688 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.171672657 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.17448953 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.17253744 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232856094 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172846055 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.175906361 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.263358468 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.176617181 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241065005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.162307899 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.180511327 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.263043542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.176372394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172315663 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.16125783 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.179913353 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172497672 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171813429 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172413063 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.174788665 seconds)
  done (took 54.787875315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.195833749 seconds)
    (2/2) benchmarking "in"...
    done (took 1.197011637 seconds)
  done (took 3.554547209 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.175206034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273588088 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.174528654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37121525 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.342189995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.349504768 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.339657615 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268982717 seconds)
  done (took 11.455797024 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.172830433 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.490430227 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.189118828 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.172616512 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.176737012 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.600322839 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.116131787 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.031002337 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.941950817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.197727185 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.293354924 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.731468057 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.1766478 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.474300364 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.290116354 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 3.044499445 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.414684261 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.660995617 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.237611281 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298288881 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.85303085 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275440542 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.177174019 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.17332059 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.174788422 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.097173536 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 4.064956065 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.595821687 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.321192354 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.302693639 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.90385384 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255600258 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.173088668 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.419277311 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.291324224 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.173702575 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.308991218 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.282217285 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.175060829 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.17740011 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.881741499 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.805935203 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.442529382 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.376584694 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.262144895 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.173366205 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.173001683 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.177338804 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.43659869 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.820797821 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.17964434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.153977283 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.312021778 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.174408259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.849672424 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.183836579 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.176115955 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.095330615 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.721708082 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.401821169 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.574572407 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.307087966 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.195579337 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.302383289 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173529823 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.373471442 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.021944323 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.941227062 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.932985935 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.287769299 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.662637433 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.189956734 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.176888514 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.173300414 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.117811696 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.485382269 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.176912231 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.173654042 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.174082363 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.17285479 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.428027255 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.295026959 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.996073723 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.313962699 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.367109148 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.650487951 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.308128401 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.174656223 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.838589449 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.057763618 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.30311536 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.752362543 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.392083489 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.313604266 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.166259702 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.434361513 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.21083418 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.173928363 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.008758415 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.772440454 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.184496044 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.172574686 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.531757566 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.242179953 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.177351516 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.173523791 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.86119263 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.304072048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.288163201 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.215194741 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.173358356 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.173752687 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.792835043 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.305389239 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.177036344 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.689998926 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.183481176 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.669288326 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.453982629 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.382807755 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.513885138 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.085951421 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.454081761 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.020807471 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.180231372 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.683236336 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.074009596 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.801695443 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.431227544 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.301009346 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.982055057 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241137364 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.173447089 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.269977002 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25210835 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.178160764 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.173350759 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.174116022 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.17350062 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.173190956 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.299273588 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.532394449 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.993020026 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.185340017 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.405184311 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.301300527 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.950015341 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.421712404 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.875597942 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.314823096 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.175360341 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.904859895 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.453806036 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.884330944 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.304514745 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.174894487 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.178207919 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 3.051831267 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.181328224 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.273691906 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.176084025 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.803725619 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.308780252 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.181895525 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.175170437 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.634729386 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318147654 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.174753749 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.297829007 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.958109479 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 5.016891487 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184921351 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.484190154 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.292496373 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.17461559 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.176592269 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.175775274 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.961379471 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.832975064 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.305268858 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.83488674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.914267074 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.27005468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.317122057 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.270191548 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.438825416 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.406725055 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.31783371 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.182345275 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174086153 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.17472208 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.687429292 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 4.044227899 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 5.168460452 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.051654914 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.19980921 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.174892913 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.297730238 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.976936933 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.192936216 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.871034656 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.176522436 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.279832433 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.176809224 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.174621711 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.356382413 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.3585744 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.317472431 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.716858894 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.184666724 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.175001238 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.837115814 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.305884163 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.841413594 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.283198697 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.988217408 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.250027117 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.303676185 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.309247096 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.771137954 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.306570908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.174611153 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.832001516 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.326951116 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.174740693 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.229052157 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.842523499 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.979164726 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.917266468 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.781195178 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.128409444 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.719686641 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.431060168 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.316864982 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 4.043662626 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.277765448 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.453946409 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.259798505 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.614770654 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.198813818 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.915450046 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.19053092 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.895798765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.18545166 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.165876572 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.301620865 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.627975992 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.295453114 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.177013335 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.331116425 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.27300718 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.839351746 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.305712105 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.296907289 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.472744428 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 4.099401262 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.280232758 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.439952571 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.25943039 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 3.074266127 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.162389493 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.518784978 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 4.119808374 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.194630285 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.296315818 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.940297407 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.325132558 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.437418649 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.313434485 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.179566837 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.174800083 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.36972912 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.265176967 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.176501818 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.492976867 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.177482417 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.229914926 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.297541935 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.180826989 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.174587159 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.362191784 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.318752845 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.418004216 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.651410564 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.748978539 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.983528516 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.305141806 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.76423467 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.308645214 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.881924368 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.306719299 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.177823741 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.847391749 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.305671443 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.423320132 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.322610534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.288939886 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.807774498 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.300352528 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.468398994 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.302553148 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.30379355 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.936819365 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.714383053 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.421108672 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.570309611 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.212046726 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.753341128 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.27818862 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.736502982 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.201920728 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.892007305 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.247374403 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.232028979 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.175532254 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175522378 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.746905721 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.17541627 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.181470832 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.950501116 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.842490687 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.104005698 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.930630937 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.307834899 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.181426424 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174388346 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175181395 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.094001081 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.286655778 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.478231482 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313291175 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.181640438 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175879556 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.148140311 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.46905475 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.988143839 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 3.048884166 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.177204446 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.318185989 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.176217141 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.174401435 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.175417987 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.176384972 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.178428807 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.177774477 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.64497072 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.186203275 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805368031 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.310426558 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178768993 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.366936576 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.241400126 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.176099623 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.343407965 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.261711112 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.290612556 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247540647 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.175833596 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.578103496 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.31808496 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.154148628 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.455403365 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.463651916 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.407882112 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.681753983 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228452014 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.586924395 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.498169217 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.978135082 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183076296 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.099581681 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.298257495 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.941326011 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.174164889 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.63386092 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.808532574 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.19674946 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.419422952 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.080971495 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.577788425 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.324099636 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249756328 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.174911707 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.17577718 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.221754327 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.471202883 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.224886503 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.431370426 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.372349412 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.168988863 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.47147167 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.273881562 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.394497869 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207616441 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.192191379 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.175970949 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.175701238 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.632272918 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 4.030991966 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.268606519 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.176458175 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.092909555 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 4.058893141 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.076838008 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.830273834 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.105791863 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313764389 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.17537622 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.370053507 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.226760738 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.921163111 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195742638 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.953140438 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.504733791 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.221566665 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.321896774 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.593024723 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.909134567 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.581672959 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.293034147 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.179171147 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.520537335 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.163697464 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.318180878 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.099667572 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.494002345 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.760235441 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.671776368 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.445128649 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.293482235 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.092593197 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.785427184 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.197855323 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.180051942 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.019533036 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.318173494 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.47706177 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.142877039 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.451725977 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317745293 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.832403193 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.917701822 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.316502262 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.796918633 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.319959398 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.177668233 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.943052031 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.104422761 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.368877212 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.299311203 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.181202321 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.192977113 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.844074679 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.765866388 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.402327213 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254562609 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.177563363 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.92021053 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.900950332 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.30908935 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182861181 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.176158012 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.591902156 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.225239836 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.176564424 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.577637061 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.786750344 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.316277977 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.695352852 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.326324973 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.319025558 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.413623562 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.527049296 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.377191012 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.2382749 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.179657133 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175841227 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.181588531 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.708479641 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.187632742 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.176619738 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.788626699 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.317248692 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.92114404 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.107596859 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.404598975 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246785987 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.590327099 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.316407899 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.698053951 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.092458106 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.298793351 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.46934658 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.263952114 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.255474713 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.912332247 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.282383915 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175986264 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.093748334 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.482080003 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.528415267 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.574411519 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.513538656 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.265722892 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.876328541 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.289675109 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.912081154 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.193506258 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.180445533 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.678701999 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.346395136 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.589276943 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.329413181 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.618348985 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.294232263 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.530860683 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.439661484 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267983268 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.176642995 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.176776493 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.185932241 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.219195331 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.778475149 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.110218595 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.643978559 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.310489576 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.044229089 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.730701306 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 5.000529521 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.377081014 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.481545424 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.480560414 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.21229963 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.152089288 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.516025059 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.262157129 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.337761306 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.271221229 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.930790272 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249125366 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.177406111 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.716828876 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.187786298 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.176938443 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.184131894 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.090649862 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.966300388 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.283105099 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.372361937 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.27520462 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.178427443 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.779181131 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.460328783 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.21375208 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.176780825 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.178689963 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 4.050706339 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290725142 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.180168305 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.489207165 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.332187069 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.475048168 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.996795603 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.617507563 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.26857476 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.180831956 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.176917582 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.869392418 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.685543907 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.215147055 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.536418243 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.243015845 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.703731909 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.191552358 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 4.053439709 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.697791012 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.181551256 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.302567005 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176539776 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.197681876 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 5.023984748 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.107219248 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.944481998 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.646660871 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270006416 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.927591722 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.1547905 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23783929 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.291085847 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248055462 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.177656806 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.177656767 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.179801281 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.689268172 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.195391894 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.180670753 seconds)
  done (took 1473.166037941 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.472829453 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178357307 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.17732884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.178067216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.179831042 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176518557 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177121125 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.177754491 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.182578258 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179428997 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.17845691 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177828321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.17646551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.480165612 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179113425 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.177146119 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176473619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.181311509 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.178775434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176760248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.176742218 seconds)
  done (took 26.504677756 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.176693055 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.178017921 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.177269938 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.181027884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178109528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.177866354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.177084077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179768337 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.177102115 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178836685 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.17811358 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178876602 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.177719341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.177505969 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176424545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176537782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.179310833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176955556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.176733999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.177097101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18004575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.176635344 seconds)
  done (took 27.081702258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.175990554 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.182675252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.876358832 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.304327602 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.181649529 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.182584828 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.178372073 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.372296177 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.201259302 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.077437383 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.626285855 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.248803969 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.180905307 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.357154065 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.273088324 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.17773854 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.315478985 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.180418435 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.176847039 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.17871684 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.176951297 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.371239959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316984329 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.180081255 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.997827609 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.321550023 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.177547717 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.179839859 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.177797901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.156685252 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.298068975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.181152163 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 3.038226912 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.894910754 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.521812568 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.083349125 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.310458439 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.179905769 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.177880851 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.177678421 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.390065681 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.982248897 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.182775706 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.177493992 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.464994709 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.297880656 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.177908602 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.54455702 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.246191126 seconds)
  done (took 91.998240849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.180117971 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.302317958 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.234660759 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.178162266 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.297978792 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.178332165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.234078532 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.178939492 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.179328764 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.177449693 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.311558075 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.337032625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.180384503 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.177083484 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.24488383 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.178215923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.180114332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.175966699 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.176873317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.177203768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.181125559 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.227857278 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.287865163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.337117621 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.184416774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.177084614 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.176302453 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.178627783 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.332802658 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.179522782 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.177703766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.17712997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.304588669 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286013011 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.17860738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.176603841 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.299770402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.180584154 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.177206034 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.177643173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.177358696 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.179989486 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.230722761 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.309570997 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.177686655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281547531 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.178046862 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.177989122 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.325102331 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.180614611 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.17785645 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.346191778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.177684333 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.180688169 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.176873587 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292057268 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.178363324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.179729515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.178561685 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.321642254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.178325667 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.185802612 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.336559426 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.177990268 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.176860292 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.34885718 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28010851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.179865603 seconds)
  done (took 84.14092143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.180130994 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.314725013 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354340275 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354019427 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320462369 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.311888613 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319471178 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.316099546 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318891777 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317791474 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315380216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264447011 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287837328 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266189748 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.317891623 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305205569 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31048356 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30756894 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317284469 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322045629 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.308956081 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354099116 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315855227 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.35904443 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.553102538 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287326499 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314268686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320437192 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357975992 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315428812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.548851267 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.321028752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315141514 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.357834369 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.553297656 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.313902769 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.179350905 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313766494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.320759219 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314337006 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285955696 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355256382 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316554146 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286712321 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305718609 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311920578 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.357566026 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.547723412 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270350886 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.325620282 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31381614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.35624845 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312884545 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315733534 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.356983579 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274687098 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353007971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.358969985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.320190917 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354781811 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357398369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.273575306 seconds)
  done (took 83.626042943 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175942492 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180689795 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262698653 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.17833966 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.178886645 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26280875 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.180651341 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.178006396 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.178030589 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.177529158 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181348413 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26123144 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.540551264 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182841659 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262453809 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.540954214 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267236922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264577636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180472547 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263658551 seconds)
  done (took 28.065406296 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.176935429 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.17709385 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.177428777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336405974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.178551883 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313414171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.17871651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180891105 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1780983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177028736 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.179007839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.181857503 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1784965 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332794153 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.17938771 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317144096 seconds)
  done (took 20.613217985 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.177334226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.178267887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.176589815 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.180175569 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.184085872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.179609361 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.177381358 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.180384291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.178890773 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.635427282 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.179581674 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.182143453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.178251694 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.177871373 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.178609739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.181444741 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.177358068 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.178383362 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.177989614 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.181542177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.753745374 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.182035847 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.177614566 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.181748883 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.179052408 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.74974028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.180439613 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.181577711 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.178582229 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.178538506 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.177123898 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.655339455 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.178757495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.178631642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.176502648 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.179735726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.178066832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.178206831 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.177561635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.181541984 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.177610822 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.178277356 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.177380751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.185137506 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.178810302 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.177764158 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.17802406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.634876864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.181362253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.177748391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.179644699 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.180832318 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.179124127 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.65040441 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.180388272 seconds)
  done (took 69.032132701 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222141626 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236131157 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.178086305 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.181653734 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235162156 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.223296174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220346427 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.196467964 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223456804 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.184424764 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240726591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.19341005 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225935935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242592293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238476396 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222907181 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.181255276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247324317 seconds)
  done (took 23.064400384 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.177636737 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18135765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.178771247 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176493563 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.178154055 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.180496838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177919119 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.177344887 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177507263 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.181150834 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.179436709 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.178186003 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178002859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.178314324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.179978107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178617421 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.177143795 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177298514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.18412325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177175998 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.180506512 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.179145537 seconds)
  done (took 27.100969501 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.209436774 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.222768561 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.178787591 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.182598626 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.178391593 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.201980154 seconds)
  done (took 8.340963418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233795921 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244920641 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21508872 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232249578 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247280581 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26283893 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256793354 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271034867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248872655 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.514533943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26275874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25582335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254168839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310202834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241280533 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24747436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274124246 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268539041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225778448 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261411742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272700361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253063342 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279540957 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262477221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273538638 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309661905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248125215 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498638508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259085412 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249108941 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244684323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279279652 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256147648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497190669 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231093265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24806319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264736166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262806514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244195885 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303344755 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228384567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244622813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250343673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267405431 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251918634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268627011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273380757 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274829084 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279701551 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.509360033 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251027855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306555404 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244178099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253171829 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248153059 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.513283447 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.50312997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30405772 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248280664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.517529132 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30733028 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245398239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303415317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.500658064 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244756741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305840029 seconds)
  done (took 86.401069255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304643722 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226788386 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265699144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.502387798 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304669688 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262363423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265778635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259874451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255381646 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238033596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261115578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271227694 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311185762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311999979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267562375 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262503563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264876248 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304699267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232304221 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.51102077 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26433143 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305453554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306952622 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308222385 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.51638084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251909753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269650832 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263159519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25640095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261940734 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272239639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268206618 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307178336 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216550507 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308234164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26710758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262270652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269236835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267445017 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250050753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309158083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260917758 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267087317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25798404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.498982105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25873988 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260094944 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235757808 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265751485 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2334393 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.502953995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.517918908 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.501064383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309958261 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265816241 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268739871 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265745877 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268518904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269002991 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248264426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304765202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265158726 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.512883296 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269167909 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264638405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308421057 seconds)
  done (took 86.941828841 seconds)
done (took 2503.556308368 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.199414842 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.275429721 seconds)
  done (took 13.640490865 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.178181691 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.178986027 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.33563219 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.184394371 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.208313855 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.275054756 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.175243585 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.182478667 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.177823378 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.261036675 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.187042377 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.308744659 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.281911026 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.179100026 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.202738044 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.183107691 seconds)
  done (took 40.680376524 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.288486369 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.717080442 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.103686137 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.97076267 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.20891532 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.969246386 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.51988654 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.896115826 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.487555676 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.635556906 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.439095481 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 5.094090759 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 6.099069846 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.355504525 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.62850673 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.751721139 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845811169 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.903981968 seconds)
  done (took 62.081009272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.177918708 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.332894206 seconds)
  done (took 8.703026075 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.189328108 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.21013453 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.207080934 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.178871324 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.184496295 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.217133622 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.21933878 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.211832592 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.20207387 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.197915355 seconds)
  done (took 63.198836753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.170004542 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.825174403 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.500460008 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.627916446 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.817674492 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.665071072 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330714711 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.607047879 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.276948687 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.17096661 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 5.442179782 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.577317171 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 3.03012175 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.45552716 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.834850965 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.41358642 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.911966433 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.622483181 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.506499479 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.590289264 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.446630289 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 5.351435433 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.603378442 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.099747493 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.19036557 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.7856528 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.35952428 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303989547 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.254919842 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 3.339281989 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 5.544444204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.189158567 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 5.535844021 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.185462961 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.395823602 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.721032458 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.90460676 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376814588 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.649473432 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.517676131 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.567879545 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.866506151 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.24323626 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.852067274 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334730161 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.5526875 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267724567 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404522402 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.273749967 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.301873561 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.866245837 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360547553 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.315696863 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.290762885 seconds)
  done (took 158.814796123 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.167297153 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.622740852 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347695069 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.171324541 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.55966471 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.38611924 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.944739682 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.738453499 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.192216649 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.385384738 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.35263214 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.303745895 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.169944084 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.1749772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.177871222 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.171173201 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.360950612 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.751170994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.189525113 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.171493412 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.388488573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.422190558 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.30743062 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.171859027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341173785 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.420450401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.585705618 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.303504855 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.578569352 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.171081531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.615913029 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.183165357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.172044407 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.081573373 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.564239677 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.515672056 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627622644 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.174691382 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.879771549 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.14967274 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.81969883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.37922226 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.510533231 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.316344249 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.333757859 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.40937863 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.765691674 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.171683097 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.9460263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.347707927 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.391983843 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.393243324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.456214288 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.176271655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648663218 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.176102666 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.171856425 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.465644696 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.324778262 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.307777227 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.172127578 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.172695195 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.17204611 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.426574073 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.171235718 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.296115969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.17055574 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.175087857 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.298360687 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.303978497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.322088108 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.420740266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.422388784 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.088928798 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.524092197 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.41605022 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.593475241 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.43199993 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.172667359 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.174423861 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.59110285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.635619769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.341219712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.417322312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.483854591 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.47306756 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.757447671 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.168669763 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.404323475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.349279132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.40673207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.327691312 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540179132 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.067067368 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.169904256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.171672663 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.462666157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.303718668 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.175181432 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.690187607 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.440374625 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.799893171 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.346922005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.6190247 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.284474197 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.176958048 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.726111282 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.173535881 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.39560564 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.468954536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.180783028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.175710404 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.331677023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.918336908 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.174760868 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.296270614 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.556578192 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.17555923 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.337862267 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.175599865 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.430754909 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.058331541 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.408179937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.174475952 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.452713784 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.363926638 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.329644159 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.173915482 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.527211713 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.445662521 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.583458697 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.407283282 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.027739505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.172410389 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.488630516 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.17168274 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.171450167 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.353252432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.121347678 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.354698305 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.172397954 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.442086885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.338006257 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557781637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.170800255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.414028373 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.427190449 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546924203 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.168797573 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.313157884 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.172725001 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.224097964 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.34188707 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.172525712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.174478844 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.042810653 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.172920118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.329235809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.410110286 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877916506 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.549216856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.533026121 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.170098598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.601895903 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.369568007 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.659948286 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.698878765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.349491638 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.172862286 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.178913638 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.172182536 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.413218496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.368430744 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.17413955 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.172518272 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.894827754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.290924398 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.171022702 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.367596535 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.788234486 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.593384936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.39005311 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.17425443 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.541686756 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.171388359 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.350714382 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.684824514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.439646006 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.172629546 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.176967611 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.172877627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.171721822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.3900884 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.427962871 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.731538337 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.323484941 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.478209584 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.413188062 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.488001617 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.64103398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.184117281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.436329415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.172355687 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575307188 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.175524507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.360927352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.433108463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.174918856 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.484621681 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.530415168 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288715811 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.573572569 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.173290467 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.174092528 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.17203938 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.344242276 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621962771 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.172034356 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.328145594 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.539302906 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.300569781 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.372066086 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.398155957 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.184469576 seconds)
  done (took 743.191590178 seconds)
done (took 1091.47973646 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.169582487 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.174566534 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.172872064 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.171155965 seconds)
  done (took 25.854037923 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.147817361 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.245454651 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.349630692 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.179853194 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.534006506 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.230954852 seconds)
  done (took 11.863477237 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.673515562 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.172233353 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.17346044 seconds)
  done (took 18.186519783 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.44753559 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.636748171 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.358755463 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.276847705 seconds)
  done (took 6.894303135 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.180547161 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.185084216 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.180005458 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.181097741 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.179495919 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.179237482 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.183326298 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.180687479 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.180558821 seconds)
  done (took 11.803856616 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.945471437 seconds)
done (took 80.720075975 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.527555972 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.472173524 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.177423433 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.520646262 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.300357256 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.487238778 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.294352953 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.194521317 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.50501999 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.680130754 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.702728874 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.248701335 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.456593336 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.632555153 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.416625465 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.206370873 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.188683117 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.242166732 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.702312416 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.362116721 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.841574387 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.308957847 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 6.173855502 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.200711478 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.032291774 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.290223672 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.431676324 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.171234169 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.542455577 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.198938015 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.255880371 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.745646693 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.419329308 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.474855233 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.275171334 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.970439777 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.684731626 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.240584635 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.333178779 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.612493191 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.457476337 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.308514712 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.169338872 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.345278718 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.542906309 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.192850925 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.178579246 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.332469311 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.589187691 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.364132938 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.575129478 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.185255259 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.80723823 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.250473009 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.265867015 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.169999734 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.132238381 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.694189083 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.33487642 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.482501946 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.199025017 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.209344324 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.107518002 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.211524889 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.53019024 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.633687322 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.621178083 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.278069352 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 2.29059164 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.20516287 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.189497712 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.204877125 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.85727328 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.348538385 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.168840454 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.32876929 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.444207196 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.326879333 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.172857619 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.516080973 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.396305926 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.172703373 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.317519293 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.514768461 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.336680003 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.511924716 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.695918994 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.554757613 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.60993668 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.178347454 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 9.181774094 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 6.27790722 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 7.440352247 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.179846001 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.179576633 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.217682589 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 2.563227627 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.711625093 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.307409377 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.777176652 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.204667566 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.198191756 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.495447322 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.47788945 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.921481004 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.208485854 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.315621242 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.168556422 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.481792889 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 6.170479502 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 7.452917017 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.765590152 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.178916963 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.235148754 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.691869861 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.180463765 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.487398595 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.612195451 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.27761395 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.170468692 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.477464899 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.190471438 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.300136252 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.740166376 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.565884178 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.433856356 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.172160467 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 2.638554123 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.175989457 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.373183975 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.179446496 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.752319756 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.712243687 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.209146526 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.433930865 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.304314926 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.167657231 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.457064207 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.23552825 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.309633758 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.51341597 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.48824425 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.305446232 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.16862309 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.522461723 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.179201379 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.389895619 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.487767567 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.336962091 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.505522086 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.265351888 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.194773545 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.111872161 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.617153121 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.787133564 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.787237646 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.442311151 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.305660003 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.705362847 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.523254388 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 2.001701838 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.27839763 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.231701612 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.175869851 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.191430468 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.241129045 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.171434487 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.173859056 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.480019953 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.304896367 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.714191734 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.936569303 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.088729239 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.440501513 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.326266401 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.120950472 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.751942171 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.180375794 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.485278306 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.668042821 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.256197321 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.212034386 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.171066893 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.23207522 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.89833963 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.216955805 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.514312645 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.688740181 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.396440422 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.583973488 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.422286 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.211936601 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.556517977 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.440370441 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.427440757 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.405846279 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.60232406 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.295752795 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.49280632 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.256065035 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.432147513 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.174950255 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.349150749 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.44321943 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.666185619 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.548115724 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.39835571 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.341490937 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.493144513 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.175472772 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 7.548374824 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.276636585 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.561048432 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.198365545 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.548413451 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.271882088 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.522294023 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.102932255 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.293346382 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.407251951 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.279940862 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.238143526 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.623605534 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.195905135 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.511465973 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.339375357 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.347427146 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.380519768 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.207787933 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.308199849 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.356956453 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.314282974 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.437325551 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.00464672 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.574800385 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 7.882651638 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 1.302420429 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.17203437 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.546516891 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.205465432 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.194581374 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.455811989 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.355712831 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.490180944 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.346839221 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.34108004 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.186952341 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.206808644 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.605493432 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.039997902 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.74126198 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.241314854 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.202772947 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.168008972 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.704677574 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.539128596 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.241334393 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.309995393 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.753393958 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.211800775 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.376372984 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.179599575 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.177492088 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.997026936 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.307643409 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.419761686 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.726291454 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.176359907 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.474267609 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.179876241 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.602063645 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.723329042 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.229897332 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.302234037 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.556681097 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.20782602 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.558173409 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.204567223 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.336921926 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.546040876 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.296937694 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.288137191 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.174511997 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.209997116 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.59437741 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.312956829 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.713368502 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.205871733 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.55683069 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.296126654 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.397522729 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.197830131 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.267219779 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.598685411 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.316898224 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.578499036 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.180991721 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.339900581 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.43124839 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.201734756 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.173086789 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.320179732 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 7.901377772 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 7.705376585 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 1.495095034 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.30511164 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.120165611 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.419023406 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.175344492 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.623542644 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.33761587 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.277722094 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.79657864 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.745385241 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.17647351 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.360292326 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.174995452 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.528173011 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.201778217 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.194835577 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.305212626 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.271635123 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.16982173 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.610625568 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.333193858 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.713766344 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.240404677 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.002572155 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 7.34531109 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 1.353017831 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.303309097 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.489547751 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.176614646 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.191186689 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.32215304 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.78086494 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.364010228 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.208570631 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.450066032 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.178331945 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.775730829 seconds)
  done (took 888.839797083 seconds)
done (took 890.174058732 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430947983 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.555369038 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.423570447 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.036948213 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.978036203 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.825406885 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.436332643 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.413305522 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.254849641 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.436834751 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.111834523 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.98393231 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.276266583 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29480328 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.257669164 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286887879 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.372420979 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.421845803 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.300797004 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.985859121 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.548931807 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.99345786 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.600133846 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.475765706 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.557084897 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.277055305 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429047919 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.537903074 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.533735424 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.159477134 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.386962026 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.404497616 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.015809298 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.421483785 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.260625668 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.265743572 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.034191334 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.273913769 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432468297 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.264325814 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.553136484 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.306623635 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.898807921 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.0315932 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.961260061 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.599644869 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.053778543 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.285869324 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.286666497 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.385530505 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378752072 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428564396 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.534553073 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.18081429 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.015472248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.015495769 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.538194168 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.031519688 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.922338413 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.388838284 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.552362005 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.277258642 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.39029891 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.416481084 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.300354565 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.477142335 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.599814267 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.42814833 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.404646308 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.446560832 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.42598321 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.403580753 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.297619683 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.375879388 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.301570373 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.438345629 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.909592967 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.422403096 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.972760874 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.278180272 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.133182284 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.107861935 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.135578685 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.261389268 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430739048 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.95864108 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.140627495 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.13411949 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.298556845 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.410016291 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.088551543 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.420551373 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.638565809 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430044281 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430700995 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.422791362 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.149483946 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371426035 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.144993721 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.404289362 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.965422851 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434047819 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.202648418 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.278852641 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.285070268 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430460735 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430106129 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.599274728 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.41170415 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.337447057 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.555742394 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.303051592 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.403836878 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.296497486 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.256806242 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.959572252 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.468951087 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.039010336 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369248125 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.85565571 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.461028963 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.277867302 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.552873978 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.477878213 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428825024 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.278630288 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.281458975 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.095156026 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.285319384 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.279328271 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.360461976 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.630012394 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.388012983 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.039937369 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.405740179 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.971784533 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.418019566 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.403901106 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.256062321 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.033661383 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275131279 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.139550691 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.476878392 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.556794338 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.421913342 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.475800147 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.296863374 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.436792914 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370572121 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.29460744 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.407272714 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.306844467 seconds)
done (took 255.240153302 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.505936801 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.188228458 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462711282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.450098726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.556216026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.540973141 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.249031983 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.63542772 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.29013111 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.612280324 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.427200921 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.997958807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.179839619 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.405904425 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.532693569 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.413728381 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.29137206 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.440207339 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.627636282 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.581203535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.911351237 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.426552962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.321644933 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.597078752 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.169759518 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.894924 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.585392079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.292711582 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.444341057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.869160774 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.91205614 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.447105789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.583968097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.786673377 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.547461382 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.838140943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.559230202 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.934477462 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514037984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.50761649 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459528421 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.817616516 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.886410316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.904690691 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.321854352 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.522118224 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.246613011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 4.910720495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.176505528 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.839174904 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.442074276 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.92261173 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.998580348 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.513153965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.395603015 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.745409968 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.657889783 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.664150628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.582363339 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.482768244 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.510686599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.596671064 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.596070021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372982439 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.894802305 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.469150085 seconds)
  done (took 150.63562715 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.619499473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.464331885 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.585221887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.568723929 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.760840232 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.602207029 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.677753044 seconds)
  done (took 14.448175914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.243041161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.228809256 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.474994 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472124803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.234799752 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.360946425 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.315510709 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.02014861 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.456606215 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.270228904 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.549201062 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.473471727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.789344859 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.879050755 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.319201159 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.467685824 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.215504348 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.295036148 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.287308859 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.484464514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.87468798 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.852660969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422301998 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.316022561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.236475959 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.27402811 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.227875444 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.199780213 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.266818515 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.213213809 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.235341498 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.338973722 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.223991117 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.853217789 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244117016 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.558797765 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.235335055 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.267761422 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3646156 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.170655306 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.212027447 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.23189833 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369846053 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.237858785 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.20959275 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417519944 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.217706348 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.23793581 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.209339179 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.226175854 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.420780605 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.226707991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.242150526 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.797951151 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440989952 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.843900733 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.297747521 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.220546522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.225290204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.286403859 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.224588331 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486883203 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.471409349 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.211090953 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.444809209 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.540439668 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.22836284 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.209387091 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.20623548 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.470953293 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.22359727 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42634924 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.228717235 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.27566472 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.277981255 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.366273352 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.417495611 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.020182994 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.994616123 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.805815561 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.201635081 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.213134477 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.568343725 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.165882136 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.792908651 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.214472594 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.266387883 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.892000726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.137369413 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.225804652 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.54127328 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.209026303 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.284256586 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.27766824 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.257093113 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.287000731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.452676207 seconds)
  done (took 158.652784054 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.405243025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.779394992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.43686582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.246124031 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.352927945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.507886723 seconds)
  done (took 15.898307058 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.541258482 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.031108435 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.26749999 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321501672 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.300457243 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.24444525 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.239935048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.450808188 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.356181979 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.23754557 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.224669482 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.251325482 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.227663512 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36057869 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.224793841 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.233876219 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.224474479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.250262462 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.238811707 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297510254 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.521481345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284774571 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293970566 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.119969834 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.281301977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.234007527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.170672043 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.237049463 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.239485889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.575614832 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.415198218 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.225251023 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.057203783 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.571735334 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.98621198 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.115957188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.372369112 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.250550776 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279711376 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.228354927 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.249205251 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295603322 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.245589352 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.25148112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.577767996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.036364017 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.299709541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.486401483 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.227284547 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.247144558 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.248231131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.257869291 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.233298566 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.256291135 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.766922619 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.651598127 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.195577668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.227412371 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.283423955 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.120024714 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.296552168 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.227771253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.568289894 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.165504117 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.869145209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250660214 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.120940001 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.356509912 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297417459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.250545305 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.248871385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.249523329 seconds)
  done (took 123.273241732 seconds)
done (took 464.082404389 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.578304419 seconds)
  done (took 7.753211741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.309316736 seconds)
  done (took 7.644689991 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.174820835 seconds)
  done (took 7.355776448 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.172449464 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.226045089 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.189282784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.191417157 seconds)
  done (took 25.986587255 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.330532074 seconds)
  done (took 7.506988773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.172746315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.187947424 seconds)
  done (took 13.638249456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.363170217 seconds)
  done (took 7.555344051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.534989248 seconds)
  done (took 7.714233548 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.186113398 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.203787326 seconds)
  done (took 13.596887315 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.175206917 seconds)
  done (took 7.351028105 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.664356778 seconds)
  done (took 8.937549438 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.17637263 seconds)
  done (took 7.388536182 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.223467576 seconds)
  done (took 7.401281066 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.219242078 seconds)
  done (took 7.397009823 seconds)
done (took 138.401524988 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.171715967 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.18182285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.179184824 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.17876351 seconds)
  done (took 25.882970707 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.513934501 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.512191298 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.490868697 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.667386471 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.45675735 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.456335809 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.512444498 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.516450484 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.456230459 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.556735876 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.514449579 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.556971744 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.663249033 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.493538137 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.490652684 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.55819668 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.665570031 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.514488749 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.457321354 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.489967534 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.665812244 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.663270902 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.950906277 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.927067266 seconds)
  done (took 38.927978822 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.392273617 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.552385098 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.354342738 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.503677221 seconds)
  done (took 6.977533408 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.216929757 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.561367842 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.545582941 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.605364325 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.545686499 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.358647199 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.548612831 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.396197588 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.365889227 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.36749926 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.81668214 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.340489296 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.351883487 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.607737218 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.360378039 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.188253597 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.187074976 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.369544553 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.56313492 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.387781606 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.453698638 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.546665496 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.545783493 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.544607473 seconds)
  done (took 35.956188485 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.944184953 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.115128599 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.546040364 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.101636919 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.889955792 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.982148375 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.469111651 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.716845532 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.453114088 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.433957248 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.909925924 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.926270769 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.332849081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.079343413 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.949601239 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.363527315 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.362678048 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.041489778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.605257363 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.485694993 seconds)
  done (took 39.885905179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.171760139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.177501907 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.414960311 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.351155909 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.174355746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.178261118 seconds)
  done (took 28.64447075 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.244002421 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.321007867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.499829605 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.459162717 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.33112954 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.310501364 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.847300409 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.403340361 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.938364364 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.98272296 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.826992125 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.632295688 seconds)
  done (took 22.973083358 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.173463723 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.212735115 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.177259921 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.4028445 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.222021775 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.84706904 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.191605813 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.177276639 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.703208941 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436192794 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.317616108 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.414259683 seconds)
  done (took 44.46284029 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.383165657 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.44155139 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.513570267 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.219905248 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.707640038 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.267319427 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.570066009 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 6.117806272 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.985384697 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.039915097 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.710960308 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.229244849 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.710078144 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.149551144 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.913885348 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.49690383 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.996896851 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.099080129 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.62128611 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.255449237 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.143406814 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.329782639 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.183707202 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.72403838 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498767502 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.176788635 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.376775434 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.424569822 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.175098199 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.425232276 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.177695083 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.67224317 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.37011283 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.488072738 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.709994679 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.261252148 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.279539807 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.178530777 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.789004775 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.478593364 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.325395982 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.341344944 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.174582792 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.18536848 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435964437 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95945998 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.196889062 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.812741833 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.161289123 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.303749498 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.072007457 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.057267584 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.505500929 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.955110946 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.320151748 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.496414351 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.339004861 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.179002073 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.43623508 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.220233633 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.358040746 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.275544846 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.389027082 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.148863254 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.401248509 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.519520615 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.527177369 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.50905171 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.47676344 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.506761429 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.566134914 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.309666275 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.00183305 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.320515315 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.734526036 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.093279206 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.543425942 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.182731789 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.886836341 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.711348133 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.156868581 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.29219414 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.803506569 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.145476227 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.17610251 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.353226103 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.048058653 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.147368165 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.273920115 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.239455778 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.561363267 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.316736616 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.328898451 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.37014343 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.885692258 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.157355833 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.179369453 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.466438142 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.145968146 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.738789267 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.181968423 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.156163659 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.24148382 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.739934658 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.586348442 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.970410822 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.956249215 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.864676729 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.521457872 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.784697525 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.349405803 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.176197921 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.559759585 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.509719534 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.175127774 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.877720759 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.178495028 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.283045488 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.524018325 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.178257126 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.147668494 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.609774643 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.371733975 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.175248151 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.410560755 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.177357501 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.328025795 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.179280835 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.730371353 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.602460267 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.424016771 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.712300269 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.28078491 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.268471266 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.145045726 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.322790826 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.691588317 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.263631445 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.515394555 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.623845294 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.409046433 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.625206161 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.171939921 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.003662537 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.670451831 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.438784679 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.514034671 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.838265048 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.347824577 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.270199322 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.178629087 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351183243 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.187746723 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.718570509 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.177827936 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.826145623 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.15160358 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.474986859 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.178140972 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.340162597 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.177924875 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.376729051 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.843414618 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.227977333 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.345633532 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.458910591 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.443227351 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.182401466 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.149417002 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.576584537 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.409066723 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.718429899 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.457751358 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.858711036 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.549705084 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.677691217 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.413358789 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.574704177 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.007427561 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.619697154 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.516923313 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.217366677 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.204289752 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.713099055 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.277885856 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629454069 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.391906034 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.913038635 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.846050906 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.814071195 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.198278305 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.139961066 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.117361175 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.298109069 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.614115352 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.170633619 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.706820098 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.236181752 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.385780781 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.423697726 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.168040898 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.484485431 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.98184706 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.557529276 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.494091274 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.467271655 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.123383234 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.926823331 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.659901604 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.651159998 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.28277051 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.373671092 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.135436753 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.197846122 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.143575077 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.491614573 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.155757416 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.86558514 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.429889257 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.667074324 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.070568061 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.301777403 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.529242025 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.162090646 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.093443097 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.318235555 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.193161019 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.998600308 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.691560844 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.407072535 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.465097244 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.139034454 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.149553031 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.428757461 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.45065343 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.417311265 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.660762641 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.39012786 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.840986729 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.248617682 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.849029714 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.312397107 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.180142393 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.71822501 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.460749937 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.087530947 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.327175091 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.85803013 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.281502808 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.763507436 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.45224765 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.138538765 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.64073414 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.759526658 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.147258134 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.123876447 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.282891873 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.14445664 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.424941628 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908627081 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381296637 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.883327666 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.573866233 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.38560875 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.324062701 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.547228677 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.669681354 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.927460904 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.115502617 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.309978122 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.233914275 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.485027349 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.140669258 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.432800026 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.779084848 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.801893702 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.969418896 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.693238445 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.384945662 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.901863208 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.618541642 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.392320944 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.462254916 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.119950658 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804756928 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.133216479 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.283586349 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.109031221 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.959777681 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46650022 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.522111569 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.632976762 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.209571933 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.677649494 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.568436961 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.203889886 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.323791762 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.403585936 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.134432539 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.408878121 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.135617823 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.099822383 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.575049227 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.139042485 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.009577091 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.342393745 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.46950591 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.300403882 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.882461704 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.187094954 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.280071812 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.692942833 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.319355353 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.275811807 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.486953796 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.993193853 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.18620021 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.20721485 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.092356303 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.777704692 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.634705513 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.759571803 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.728971456 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.482542355 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.917454762 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.144414218 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.341051345 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.294959747 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.141076574 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.319608293 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.540756458 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.176391835 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.35517754 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.475130442 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.324078996 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.704853942 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.124965599 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.825450899 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.305636753 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.660980015 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.708884032 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.924994378 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.616521536 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.180523087 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.694073687 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.121068959 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.301584766 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.39366661 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.871758118 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.220432226 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987305404 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936035712 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.285909655 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.574432929 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.224869196 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.944430504 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.302395141 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.38188933 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.332758379 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.279122245 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.103912865 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.737553195 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.92059439 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.413119037 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.307903688 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.324148054 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.268524066 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.30980882 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.649655768 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.454191129 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.916026827 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.630001147 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.384385482 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.107694846 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.143808734 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.852211054 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.495281997 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.243314045 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.464898077 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.559918813 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.194538896 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.150810463 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.164952989 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.413237098 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.88110942 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.862247164 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.479694234 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.67615494 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.746690695 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.168366851 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.918519694 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.341018624 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.505813298 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.546239452 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.055100932 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.519035284 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.485637631 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.292721109 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.116163692 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.332160044 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.152585461 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.234426936 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.844844431 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.444399646 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.209611475 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.30535543 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.782126037 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.151511616 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.145121146 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.571050448 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.363372289 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.337602156 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.136349095 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.764951017 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.504327711 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.306358465 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.121186464 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.90732939 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.108061945 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.339848387 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.162269546 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.303956986 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.974300034 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.242739552 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.791628476 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.693500166 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.261261265 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.31590156 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.109135474 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.94618044 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.161554325 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.823209301 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.968234387 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.388526286 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.656299205 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.330609943 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.139625978 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.471538575 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.275691614 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.475354919 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.842396386 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.638205298 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.577488975 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.503977041 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434587854 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.603079064 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.289833402 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387698705 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.109579098 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.143369444 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.221312347 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.519566366 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.504742105 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.1397036 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.693826446 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393787574 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.274453814 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.320870816 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.233288043 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.691931265 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.355730626 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.272703824 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.308271149 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.391102073 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.507584343 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.144398608 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.350601165 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.157529324 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.155761665 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.341346915 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.38582159 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.499396306 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.453693023 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.034451128 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.302870691 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.881529061 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.830082881 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.674285631 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.143231959 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 4.016101749 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.517390594 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.141791513 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.628042028 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.796138571 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.332561668 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.841056666 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.221704631 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.155038549 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.317332059 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.634462855 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.152699698 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.787953519 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.57134099 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.138780832 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.630091974 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.22479607 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.304816334 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.909229438 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.640100275 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.142270729 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.994818684 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.263454984 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.695120217 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.412608805 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.177127558 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.149337943 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.707665231 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.117940599 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.143898327 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.233208863 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.678637412 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.158824242 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.711819253 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.289387873 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.30712593 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.15513464 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.291843562 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.141181695 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.342625228 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.741045092 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.389092022 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.410224681 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.333027298 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.141090586 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.738820107 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.844958205 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.247697157 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.330748592 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.140209807 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.484416034 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.934207868 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.14500421 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.698281854 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.406027385 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.346270651 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572650794 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39658097 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.183135845 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.347408697 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.138465986 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425249069 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.301915713 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.703117888 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.404974658 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.550885568 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.258714504 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.158872559 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.680023183 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.613393618 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.024608446 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.141371756 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.456263081 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.140279329 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.97015812 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.789405324 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.343277601 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.279976285 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.13835917 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.731119857 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.486324304 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.276714658 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.144293623 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.360371586 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.648161627 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.108777478 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.967110347 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.026200188 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.34770132 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.47524935 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.1093686 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.331849887 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.155257978 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.125026838 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.64273781 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.138708341 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.532659951 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.110485016 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.705472831 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.159439987 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.240254052 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.303358311 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.503752912 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.140282665 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.865572003 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.317172974 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.138126802 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.148768433 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.50241959 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.224841563 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.388033166 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.616683949 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.378733133 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.486297783 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.023436517 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.959536462 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.159539896 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.452099202 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.141831416 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.699312739 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.228380577 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.663209733 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.950743442 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.16131681 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.677299275 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.389430201 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.861873466 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292848501 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.641798779 seconds)
  done (took 1981.873045689 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.228590949 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.218352265 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.185808069 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.202176465 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.210771514 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.22273585 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.196966532 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.21395204 seconds)
  done (took 50.818291508 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.143019505 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.107037124 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.587461779 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.323623628 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.166718519 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.338777001 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.299467053 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.645327479 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.341801257 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.16469341 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.204056682 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.187895637 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.156104412 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.175449619 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.036036103 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.228310637 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.148185721 seconds)
  done (took 91.40560904 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.173357938 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.051087905 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.149686619 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.069311578 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.223274561 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.555263986 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.15379971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.144368237 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.490516261 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.810183631 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.15164936 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.296846896 seconds)
  done (took 86.443930255 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.177251769 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.177331841 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.177081891 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.174461729 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.175098638 seconds)
  done (took 7.026814206 seconds)
done (took 2462.477074329 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.381085021 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.604531826 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.686428782 seconds)
  done (took 4.425696181 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.206471659 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.272143142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.34011012 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.285581609 seconds)
  done (took 6.265900937 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.416214627 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.631101073 seconds)
  done (took 4.18261542 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.529161475 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.157253499 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.682444744 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.13540052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.14692112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.148365904 seconds)
  done (took 19.585178976 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.169444612 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.169180428 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.173344944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.169404333 seconds)
  done (took 5.828109754 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.134881798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.162908341 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.145390642 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.114062396 seconds)
  done (took 18.694368724 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.405717664 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.403444785 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.900201796 seconds)
  done (took 5.863710882 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.958093298 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.27700648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.942057216 seconds)
  done (took 6.31806907 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.092227728 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.080145199 seconds)
  done (took 5.308526278 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.307419481 seconds)
  done (took 2.443527917 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.62450877 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.627961681 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.002911585 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.011499489 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.167412407 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.456431893 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.484917898 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.415636002 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.833872535 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.721316152 seconds)
  done (took 18.485331372 seconds)
done (took 109.287606813 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.024884648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.556652721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.300103419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.841053558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.24316054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295964468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.146091309 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.640361769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.74664756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.745502594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.846073224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.238182488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.180830581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.550691776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.178600823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.520921052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.553673289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.048921889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.190892522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.379656093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.774089074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444133136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.569774388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.450096946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.559519256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.308884288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.149763541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.527391289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.441634354 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.151378884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.312934969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.623743258 seconds)
  done (took 152.683891328 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.135555275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.15736122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.153247123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.147045919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.080354992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.153573974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.14654093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.148334856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.083811029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.078865523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.152142421 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.086187558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.152217482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.149997841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.155325454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.148400112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.292358013 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.152325056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.152299094 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.156023879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.152815729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.845864641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.152488689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.84548279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.313087713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.153320292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.151851255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.152299625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.152430308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.153952161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.154462683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.147165281 seconds)
  done (took 189.409763012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.136223397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.152310532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.158944951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.148512436 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.151722741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.153524021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.156360896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.148892828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.151044236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.151651633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.154730412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.151762464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.153615293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.147395743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.152885664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.155236356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.151578924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.152425835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.150864768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.154169718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.152791788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.16037597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.147434605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.16386599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.147411675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.153074902 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.147122888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.152777674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.156897689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.150731059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.153353415 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.148984798 seconds)
  done (took 198.021080042 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.448059595 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.183632846 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.086505775 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.896341774 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.081523614 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.180013702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.889235857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.449512593 seconds)
  done (took 14.370302123 seconds)
done (took 555.63963721 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.859884809 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.078015974 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.324104333 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403390999 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.764046661 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442695499 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.401681027 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622271803 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.886805805 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.60759493 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.627815736 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.358548203 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.963109807 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.418093185 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.322474342 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.599653128 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.54898594 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.845645751 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.344128687 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.023636379 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.360574814 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.9948449 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.634320282 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.944090333 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.627385532 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.050861043 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.235332481 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.549728792 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.40673158 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.33512738 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.132346841 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.526361783 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.401855223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.399887579 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.605272638 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.608509125 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.474301112 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.592192038 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.32576622 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.801265505 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.046447905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.756838465 seconds)
  done (took 76.393366962 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.166811115 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.183501944 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.339093851 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.244656228 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.794594719 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.25094798 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.405789764 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.386206698 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.26394967 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.391852554 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.417373165 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.86267306 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.4203989 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.791591062 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.39857266 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.42586708 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.254133744 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.773104454 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.402187745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.386204768 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.212430592 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.330877867 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.210495793 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.364680639 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.205304355 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.218849247 seconds)
  done (took 37.268817171 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.221658158 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.321849201 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.436733578 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.510474331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404348571 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.163822591 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519019435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.338378648 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.158781499 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.61339994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.275824729 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.333732467 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343228046 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.46769753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.751622776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.345895657 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.385123391 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.337383366 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.328008777 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.390244754 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.300653332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.278443924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.516017446 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.315851112 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.88260798 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.537826748 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.621914891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.752443289 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.709930509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.33495664 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.301058683 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.495993934 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.549804006 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.444354765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.311745292 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.19284947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.207241467 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.27662139 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.080338224 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.352254235 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.509752361 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 3.356480998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.577080442 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.754920481 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 3.23631122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.440646566 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.614434332 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.290850175 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.304532106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.957826082 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.488984254 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.129805645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.36590462 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366770378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.305639112 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.587653985 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378354777 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.492648808 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.347319788 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.897026081 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.293485245 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.568356855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.336553405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 3.238890846 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.477411915 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381763581 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.356345264 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 3.596139983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.578715129 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.678116186 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.780831153 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.266829717 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.216162481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.274405399 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.333705344 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.645847281 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 3.594689194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.421457697 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.562065103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.506821218 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.697971321 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.616930593 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.155431301 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.875560666 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.240922401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.181433806 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.288440435 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489349152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.494439627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.709039409 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.771516461 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.506351484 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.625918079 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.578058032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 3.565130506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.618038133 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.182515384 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.19375624 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.432469018 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.766443599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.273096147 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.458445206 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.882354964 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 3.568310516 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.511788697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.442047281 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.589567121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 3.240337722 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.594862611 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.176365538 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.376706409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.432115355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.446824946 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.500219259 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.174110375 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.735719052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.299097966 seconds)
  done (took 233.454897843 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.155739641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.223896841 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.202592367 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.156804212 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.150685487 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.805369865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.220660931 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.147193338 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.767369427 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.217928496 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.147657604 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.150172177 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.148783502 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.158768335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.758583279 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.72272456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.789414568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.144282532 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.146414064 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.149906067 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.991063064 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.145927195 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.147487148 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.158086862 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.160025358 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.161635251 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.151304457 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.217421921 seconds)
  done (took 153.69116901 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.197929159 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.584723201 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.238128835 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.291846945 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.247871095 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.228205432 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.710264066 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.343669984 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.272504696 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.213231036 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.219970941 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.431115087 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444284417 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.794029797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.329947156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.300537877 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.86805176 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.349488495 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.211258687 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.213716955 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.362059624 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.563150662 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.463096397 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.480057322 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.358338053 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.474159193 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.279634212 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.211455558 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.324581421 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.688135889 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.227531176 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.563826417 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.345705414 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.206885005 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.704880535 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.555146422 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.774660722 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.75564414 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.394750804 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.165312968 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.172847197 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436034924 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.542012695 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.262247598 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.204367737 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.858798086 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.224535714 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.608274962 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.247550531 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.165161239 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.312571217 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.318128941 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.444475296 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.277633509 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.377545963 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.356218952 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.700608822 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.193637761 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.283864881 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.562618954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.181417203 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.690221934 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.692908727 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.259882371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.214495077 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.358471332 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.300395717 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.721926661 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.819583696 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.253713503 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.546476454 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.387876445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.182222941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.465462426 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.381753833 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.656550995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.779123738 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.342087493 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.30740051 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.281268075 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.479002965 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.194367793 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.754809325 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.305274932 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.18013888 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.690421611 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.595706241 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.185569209 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.200249909 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31160854 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.362458819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.408754618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.507764561 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.271625893 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.099140048 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.470613747 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.533920421 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.229592924 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.33354217 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.196017582 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.661864759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.386889026 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.187216827 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.507784637 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.610278874 seconds)
  done (took 160.579449742 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.885647927 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.261901844 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.445746641 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.749271573 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.525950761 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.721375081 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.475004161 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.273930853 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.500601937 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.411672757 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.384685735 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.29895078 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.162715558 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961291081 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.253928697 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.377165999 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.274058446 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.818749219 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.52615004 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.291867344 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.487294639 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.930618991 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.507995147 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.599258855 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.61053585 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.690921912 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.883862533 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.349517171 seconds)
  done (took 49.81107814 seconds)
done (took 712.336343422 seconds)
SAVING RESULT...
DONE!
