cset: moving following pidspec: 21565
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.98549075 seconds)
loading group "shootout"... done (took 1.12375901 seconds)
loading group "string"... done (took 0.670075202 seconds)
loading group "linalg"... done (took 8.616561232 seconds)
loading group "parallel"... done (took 0.171103225 seconds)
loading group "find"... done (took 2.983385053 seconds)
loading group "tuple"... done (took 2.185285551 seconds)
loading group "union"... done (took 15.078899813 seconds)
loading group "dates"... done (took 1.486956884 seconds)
loading group "micro"... done (took 0.221663445 seconds)
loading group "simd"... done (took 4.803582646 seconds)
loading group "io"... done (took 1.078138181 seconds)
loading group "random"... done (took 9.593677637 seconds)
loading group "problem"... done (took 1.521891498 seconds)
loading group "array"... done (took 25.331330239 seconds)
loading group "misc"... done (took 1.894255286 seconds)
loading group "scalar"... done (took 43.510519187 seconds)
loading group "sort"... done (took 3.331492385 seconds)
loading group "sparse"... done (took 12.741490786 seconds)
loading group "collection"... done (took 18.328523569 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535421456 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124831135 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.129156961 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122839559 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189275791 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120979813 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131849442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086672509 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86220815 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140296359 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116600514 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439581966 seconds)
done (took 5.412178422 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.167170239 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093373578 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084724815 seconds)
  done (took 1.367679671 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.072204501 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.061295654 seconds)
    (3/3) benchmarking "different"...
    done (took 0.068638748 seconds)
  done (took 1.391599415 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.066192073 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136038051 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067385481 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067512391 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067191445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067036324 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066595649 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069839391 seconds)
  done (took 1.7354016 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072595525 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068454496 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066474672 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068163834 seconds)
  done (took 1.467936408 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.066632569 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.122920625 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.066257426 seconds)
    (4/4) benchmarking "different"...
    done (took 0.06556454 seconds)
  done (took 1.512350027 seconds)
done (took 8.916980913 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141177566 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.831380655 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.757867264 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.124297519 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.249600863 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.448303252 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.125002219 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184846135 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090258105 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07570298 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.122749093 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.078980911 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.604717731 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.399424558 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071814024 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.17232668 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.655780078 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087282268 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133569613 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.472821713 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074185721 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.088284949 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085475524 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.071895288 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350719547 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.157769842 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676492624 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.181402883 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.069407336 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095888754 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.071511729 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078759874 seconds)
  done (took 11.056572 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093858155 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090696607 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069801669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124745765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09487176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070227811 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076108893 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068704824 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089577222 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125221105 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091243686 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099212015 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066876704 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070016584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074673383 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202869355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081078582 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082664683 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068599219 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081620125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105893925 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079018117 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079304862 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079257915 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130708297 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172016772 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097063934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09851492 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066886866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079453782 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11585993 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125811229 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067239651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069251817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120406182 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095920415 seconds)
  done (took 4.64862446 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.89551416 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09763307 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083725523 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.0752837 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106565456 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114052673 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.122543952 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.124063103 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100950691 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069959797 seconds)
    (10/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095696082 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.153746114 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.649236669 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.136238848 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071894295 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.120866888 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.363191561 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.044660014 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070496362 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068761204 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071895497 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070049219 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.112763008 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066700791 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.176116772 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.583471944 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070824591 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070161074 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097369301 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066196782 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141366292 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.092681315 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070804596 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.552868495 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066093977 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064617739 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.088805552 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.092675307 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066035141 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.177424892 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080713952 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067380973 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.110241744 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083162605 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.494900024 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070894105 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.566865731 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.22611449 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074394413 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072737788 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.103185983 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064922248 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068339237 seconds)
    (53/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.83802922 seconds)
    (54/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.124117311 seconds)
    (55/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067413179 seconds)
    (56/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.27445795 seconds)
    (57/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07003793 seconds)
    (58/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069525533 seconds)
    (59/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06945619 seconds)
    (60/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.099941145 seconds)
    (61/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068165662 seconds)
    (62/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069323178 seconds)
    (63/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07343446 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09683938 seconds)
    (65/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.78978095 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090430458 seconds)
    (67/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096955422 seconds)
    (68/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068979071 seconds)
    (69/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.482588749 seconds)
    (70/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068364209 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073998276 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069828091 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069823791 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083831459 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111842024 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067249007 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066846635 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.10779392 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.089720593 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.090233606 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070752245 seconds)
    (82/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067459654 seconds)
    (83/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067196084 seconds)
    (84/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.322018597 seconds)
    (85/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.15774457 seconds)
    (86/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067315655 seconds)
    (87/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06809354 seconds)
    (88/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.479878917 seconds)
    (89/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.064232092 seconds)
    (90/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06643028 seconds)
    (91/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068623826 seconds)
    (92/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084561241 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.089624976 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06708503 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064002703 seconds)
    (96/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064056426 seconds)
    (97/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099298813 seconds)
    (98/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067132193 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.833550598 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.07090644 seconds)
    (101/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.479730746 seconds)
    (102/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.07058759 seconds)
    (103/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103530048 seconds)
    (104/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.121687105 seconds)
    (105/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066239654 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068198256 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.099056221 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.068920365 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065762561 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074598478 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065934276 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065551641 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069995222 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066422244 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067428822 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069659268 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06889297 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068432773 seconds)
  done (took 23.041566445 seconds)
done (took 40.838696392 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.313111242 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.0794579 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.079298532 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.079287405 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.079430075 seconds)
  done (took 1.874340858 seconds)
done (took 3.209193123 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.133191176 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.095990958 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.064890656 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101607496 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.069189123 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.102807262 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.10905909 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.10499151 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.069533218 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.069060354 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.069502485 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.103605525 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.105392435 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.069321709 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098473019 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.104024788 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.069820478 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065208074 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.069777671 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.069366292 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.072641335 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064948902 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.069872679 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.069176874 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099691375 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.069627894 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.065464527 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099343776 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.069199645 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099051572 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.069489894 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.06921345 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.069600837 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100393001 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.06961432 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100113955 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.065131809 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.069403076 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.069753307 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.069342366 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.069478815 seconds)
  done (took 4.634664991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071585656 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082610321 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084915324 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063067172 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072332485 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083581236 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063167383 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082187925 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088509892 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082814897 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082879937 seconds)
  done (took 2.145967705 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070712683 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.084141503 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085110935 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063230194 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.074144377 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.087473523 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062997757 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.084040501 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086361137 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084331547 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084947243 seconds)
  done (took 2.135922919 seconds)
done (took 10.179398783 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.097031806 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.066451039 seconds)
  done (took 1.418261422 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221054575 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.624371597 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.361633395 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094103574 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.073035183 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086022894 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.203856253 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067825667 seconds)
  done (took 8.172947501 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103101766 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068784425 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06843273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068595918 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068544333 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069859021 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068433812 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070486404 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068821951 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06834454 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069412431 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070102059 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070120649 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069272409 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069686937 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070062191 seconds)
  done (took 2.50402726 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.104305657 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.069913973 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099965792 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.062688149 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.072721859 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.063053493 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.071412529 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073600548 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.071168022 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.07182963 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072766158 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.071577817 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07236101 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.072715737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073304447 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.073096664 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.073597407 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07090034 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07378204 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.074502886 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.073178369 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.073266063 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073645528 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.072653808 seconds)
  done (took 3.166387369 seconds)
done (took 16.532883145 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175643971 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075412873 seconds)
  done (took 1.516259258 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.06946777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069419408 seconds)
  done (took 1.421369099 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074479371 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06172353 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079268781 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071130138 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062197171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061577218 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078642771 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061888726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061896097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062349712 seconds)
  done (took 1.957047359 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063648398 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070108956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06791516 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065227068 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067813582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063810578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066525088 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063868191 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070318874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062840719 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067238122 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08446929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066242327 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084606066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065667145 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067116387 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068510419 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065914115 seconds)
  done (took 2.513104408 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061845474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063139873 seconds)
  done (took 1.413314259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065202105 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062808221 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065432857 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064892553 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062617734 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061851511 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062859211 seconds)
  done (took 1.728922523 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422229179 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122773512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342459567 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069657302 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07691696 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255677114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064318681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06868442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068793214 seconds)
  done (took 2.81891114 seconds)
done (took 14.6623584 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083030474 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.183586908 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088943418 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.408457915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091884171 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067992504 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113644895 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176968552 seconds)
done (took 2.520506515 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214997133 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.170824322 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.371934306 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.125639557 seconds)
  done (took 2.961352584 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333493763 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079187854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077371531 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067955826 seconds)
  done (took 1.858577779 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065512242 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072179436 seconds)
  done (took 1.433170391 seconds)
done (took 7.773837176 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073000176 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063054601 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068763899 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065415694 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064719171 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064140819 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064829048 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062817512 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.075666449 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.065012993 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0647961 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092424861 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06499495 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064482429 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063913882 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065231879 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064742327 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064340785 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06497115 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06243426 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064518033 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06560134 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064194664 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06524855 seconds)
  done (took 2.923420356 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080792034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066779921 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067782238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06762901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068154944 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067985682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067872989 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066061063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067400239 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065958204 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067877519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067812566 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066117419 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06782825 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065899508 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068380366 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067864192 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066529841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066240841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067780694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067328946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066773948 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068430011 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067793203 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067601363 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067788703 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06642947 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066329451 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067142472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068350545 seconds)
  done (took 3.342670934 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066492701 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060371817 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061195705 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07133101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060654666 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061366521 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061540978 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06084267 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061243663 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062279168 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061375252 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060954953 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06164624 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060328243 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060745151 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061774411 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065427995 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079491096 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061128642 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060833957 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065286477 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.0614095 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061411617 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061076576 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061493822 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061170856 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060715567 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060960043 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060820343 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062149128 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060745022 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064841258 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066234923 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060741767 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071124528 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065376969 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060300736 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064811191 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061983225 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060753709 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060737615 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060375327 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060813848 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060843434 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070756212 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.061641323 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061673437 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.063795706 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061162225 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.06077721 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061286616 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062540339 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066175723 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062262057 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060315608 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061904091 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060368574 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061422258 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060277212 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060415009 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060798601 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064485337 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061938704 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061453762 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080569243 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062171541 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07124344 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060839779 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061620995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064420752 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061346088 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078549431 seconds)
  done (took 5.852380892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.072672488 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072877754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079524262 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07120724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065831935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062283404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065784119 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062278008 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07098445 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.065885972 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062367547 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0656831 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071355025 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06624464 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063087285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071048742 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066223054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064952913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061658157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065812557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063215745 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06594893 seconds)
  done (took 2.799328751 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13647942 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067438467 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105726483 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075354015 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069284011 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076068006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066696647 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066854321 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066984194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067550179 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067417634 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066945915 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069075032 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067300839 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067550002 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067244509 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06664166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06711175 seconds)
  done (took 2.649195164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077924114 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066678016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09078666 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066663642 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066592101 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066368672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069664926 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071161065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066339853 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067383885 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070998095 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067416105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066425253 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066869831 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066249059 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066293135 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066209473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066235417 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070091785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070453378 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069580487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070297514 seconds)
  done (took 2.840498027 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077575538 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065102989 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080822168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066867379 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061592363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061007231 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067083769 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065727846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066932185 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065605128 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065638966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061324512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067301999 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065675983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067769505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066183845 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065825076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066586767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065439272 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06196604 seconds)
  done (took 2.647106043 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087117417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064009316 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06401383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083233418 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063593479 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063846133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083459375 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064530087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063710752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084971956 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06352022 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064073684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083165991 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083579754 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063985911 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083745019 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083630372 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083446534 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064423009 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064606046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085309064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063824398 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083066479 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064087422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063667755 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064017926 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064054017 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083186498 seconds)
  done (took 3.347571207 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065230568 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064426692 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064249458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064431401 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064543111 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064697497 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064588231 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064896011 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067360372 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065331713 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064510985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064218111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064229976 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063976081 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06424865 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064405187 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064615717 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065259351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06498629 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065022003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064530225 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064732182 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064201756 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06451912 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064944396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064281471 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06496709 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064731013 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063884538 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064676867 seconds)
  done (took 3.261925534 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074476104 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072641694 seconds)
  done (took 1.466438934 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063523355 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078812484 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060550731 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073271546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069695778 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064766384 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070041123 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069482154 seconds)
  done (took 1.866936205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067184429 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091574291 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.063365737 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063463753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066450781 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132470884 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075271785 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074298147 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077138003 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065341727 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.063329754 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074782807 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062473613 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076253773 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064560403 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071327891 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070057473 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08005186 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075536533 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06137987 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075537123 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064201627 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061386007 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063447386 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063773571 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070396333 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07799214 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075053052 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071037399 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060486564 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081275801 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061499984 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062463538 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071338957 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.066478244 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.06157113 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098309377 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.0619181 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067012841 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060822065 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073705928 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082019379 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075882973 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079741544 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063574549 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063940562 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061500253 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063909512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065364128 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071304615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061190434 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069274609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060897289 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063240051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07177507 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062146493 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066774127 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070731201 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075535652 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071987991 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070577388 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077110145 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070590595 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069845754 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062729243 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081371194 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063671463 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07484866 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07657008 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062861434 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075269142 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061366171 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060380437 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061377862 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095002654 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063348034 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062819786 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061848891 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06155833 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062838935 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070763439 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067145531 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068521192 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064557705 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076818753 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070776962 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.061598226 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068373338 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079139786 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065058197 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061880298 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077421556 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064806018 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060742718 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079464526 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071076652 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062542989 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062078772 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064725277 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074287267 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062252758 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059917024 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069215793 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062795755 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063298375 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065310594 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069324001 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060409759 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070650705 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065458449 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062563641 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058988561 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064567852 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061339024 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059399958 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06970723 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060561522 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075204301 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067380152 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074793694 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075041153 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.071323923 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075712053 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.06005743 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058815943 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078351038 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072495214 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.06158903 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077800525 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059654066 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071126774 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059697834 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061653407 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069453106 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059442965 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061689526 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060383501 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064953644 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061218159 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062229028 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066087438 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068720473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072696006 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061448993 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069535922 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061058625 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075751678 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070220735 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064508545 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0632829 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060406249 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071741607 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066376026 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069397744 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059718236 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061362033 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060378685 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070848439 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06984818 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062280987 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067185282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064849646 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061377311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060377042 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061417648 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064240584 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063189868 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060737189 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067930465 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069409737 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07336301 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066706698 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0698037 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059081608 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059469314 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062320657 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059908061 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064413557 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068806518 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075063258 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070731721 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081082613 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.06035656 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069813843 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061152099 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075834651 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073134313 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060941413 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063902942 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058699973 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061187706 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0689855 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070430554 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072745963 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07513497 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064839749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064659485 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060522839 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074875649 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.06075613 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069090105 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069102015 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06358555 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060168897 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061231925 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069511134 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064816933 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059841816 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075046451 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065321749 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059325901 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073790984 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060134534 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070449553 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059553256 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063224914 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065330638 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06108995 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0694298 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0746821 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059022281 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06039747 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074752807 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061861252 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061841861 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068669602 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075661253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065101872 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067903335 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070469715 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069280073 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064461716 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069088749 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060898245 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069042984 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062251767 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071678569 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059890258 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076850487 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059482038 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07451122 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060861472 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070395638 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06083798 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069018443 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061388186 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076194987 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061063315 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060266696 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071079891 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058729196 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068454624 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059573231 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065187513 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066117069 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069670018 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061441264 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069522805 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061413164 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068454737 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06514067 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068434168 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069387691 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06450659 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059123042 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068719986 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070217289 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06792094 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061362342 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061082392 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060513927 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068790151 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061279688 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060881942 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068080015 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064240711 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06611544 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060768241 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062212609 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061124448 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068294966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06891471 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076901677 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06854225 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06780792 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072469051 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05914572 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074530622 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059935794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067166575 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059238177 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064825551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068612911 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059927522 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078818259 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060916014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067614254 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071527833 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068468686 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063295067 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078898899 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062681018 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068115852 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068452688 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064968354 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066481445 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062049661 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068718858 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069936138 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070586521 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061194603 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06826337 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06953933 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061359 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066870655 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061490163 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068173827 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062046594 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059134178 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06461874 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071133433 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064654615 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064528384 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060230422 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059128342 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060329143 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065762002 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064592446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069393119 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074721514 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059604338 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.06104539 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059186213 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063512247 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077918779 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069482351 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067637571 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064566088 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059273818 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06140158 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06154538 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060323642 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063284845 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059221401 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059261325 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069573795 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061049921 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064047645 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060371136 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060531993 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070052533 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063755859 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060265373 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066156315 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059418917 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065406415 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059591766 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061646332 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06501603 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059874461 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063608712 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070343241 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075439469 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066743466 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068816811 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060631713 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067242562 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074213022 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065840845 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061517896 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069417689 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058926286 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077177479 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069143065 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068764297 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069870994 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061025629 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076027486 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064180406 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069356556 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074947224 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060855398 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065818336 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059390686 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075045237 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064629236 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05977742 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06759831 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068691263 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065429177 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070983294 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.409820252 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07239957 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069793169 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068273619 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.065865245 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.066030799 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073847202 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08070691 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.065276693 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068499976 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073618425 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073862598 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069180327 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076781945 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072488004 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06522988 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066755426 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068559306 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066591838 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077121407 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065369438 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069731753 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069544399 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064580165 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072144939 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082607795 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075063345 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074889817 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064563038 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063961006 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.08344359 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068343966 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.067706894 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07295265 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073891181 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076998035 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0736761 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080626786 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064898416 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070059781 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077272859 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.064745409 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.064172887 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067358697 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066316709 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073092284 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074054211 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071524239 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065855265 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070476546 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078092742 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06509083 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068413397 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.072100386 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.064540413 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075181676 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071920645 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07257248 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065571069 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063727776 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06686186 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072764312 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071090464 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073020726 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06417769 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.069684387 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.077004967 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070807391 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066827323 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062502232 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06672144 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072965464 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.068200497 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062957561 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068256195 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067469742 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070366743 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073064412 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067507557 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062765301 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080085574 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071710704 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.072123095 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.064370414 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.065054445 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063424396 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062370386 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074103414 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062500988 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.064324851 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066964614 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064603952 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.0805392 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071767888 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078751986 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064018904 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067299881 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062077686 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072576351 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067093395 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.063014589 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072867835 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061854756 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078027287 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.074619032 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068345483 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061923894 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067245489 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090209048 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077216489 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071739586 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071449288 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066009846 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072195858 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.064184949 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.074341082 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062328552 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061590857 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072420724 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071237466 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074881251 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062002069 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.072562404 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.064490267 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070651374 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070484788 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064079385 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063488678 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063375203 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071497521 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066491134 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071010747 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.215160034 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079172789 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.063806225 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073150196 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071027341 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073435424 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076482635 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074625344 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069924824 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0642557 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071090283 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07004862 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.063585636 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067319676 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.066030546 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.086194051 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06472462 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064453154 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076667222 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069241072 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062501649 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068925811 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066852807 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072336762 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06305629 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072934305 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.067304929 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.063096873 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066771298 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06617894 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061478479 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061439951 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061424891 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071539335 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066797629 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063027903 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081426614 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063746275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071058369 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073468235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068868069 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063903463 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061158892 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06282548 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075243942 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077799793 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065473959 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070932607 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064193207 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072265328 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061376692 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070697153 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070523748 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070949764 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061694474 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063016379 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076931928 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078014979 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066730354 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071668052 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071285112 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063735035 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084152196 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071331666 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06356636 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.073140088 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065085549 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061822352 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061581214 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064112926 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07413156 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062170504 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.065444151 seconds)
  done (took 42.18353753 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10196586 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064199367 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062485207 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062685538 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07433867 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063941946 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062924999 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066793271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063694013 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066007217 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063391678 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062887862 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074052241 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076058811 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073116894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066665641 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062864157 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06464618 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063291232 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064473887 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073499292 seconds)
  done (took 2.975122587 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066522389 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067530779 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06698689 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06784583 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066174063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062714275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067389992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063211814 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067673834 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063732941 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067599273 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063407511 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063759894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063398422 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063245401 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06485868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067585681 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066891556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063104724 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067200453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065057244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066660044 seconds)
  done (took 2.936127108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064766344 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063517507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071558851 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062027786 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.062103324 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065933105 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.062483936 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.066659606 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.066864105 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.067244426 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071715629 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.063560572 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.062138075 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06821088 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.062415594 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.063597443 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106615184 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.064414642 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06469798 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.063062643 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.0665292 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073171534 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063081399 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0629676 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068030727 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066917092 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.063143041 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.065815094 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.064490441 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067586995 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064363746 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062468003 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072461323 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071332812 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067184213 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067477911 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.064325184 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064057619 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062697755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062759963 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071231888 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.063967014 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.063080329 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064425998 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07205187 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.062668418 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.062012215 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071613337 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062631713 seconds)
  done (took 4.755701999 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073694036 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115302842 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068415788 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096607271 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075745362 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068856188 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068294016 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09792801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063596586 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064556204 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076417643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076865838 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065583933 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066931377 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070123261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065090766 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066253171 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06476349 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06875313 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065385031 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068898875 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069937625 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075509696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076438847 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06622244 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064350496 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064786292 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067125301 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076029458 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068372067 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06722289 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067816198 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075723021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070619136 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065263351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064961346 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076854405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066029099 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065572269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064237118 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065487138 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066944282 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070081214 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077049092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065356578 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070294934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065739916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06318344 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076350602 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065162139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070452339 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077198549 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067070827 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065986443 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066783092 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076072681 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065961043 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06445565 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069191639 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076071197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063610005 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066625044 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076963672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064817401 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068934484 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076639195 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070097308 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066992115 seconds)
  done (took 6.445469979 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072275868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098232992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074172386 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07433834 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073525966 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073253821 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073982003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073408617 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073634993 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073862964 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073108451 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113498272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070245451 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078177333 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074004349 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073347825 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073349698 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073539371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073345721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073505053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073351435 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074134989 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073489796 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074176247 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07583541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069378182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072781855 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073121448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073577166 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076241729 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076804821 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073431223 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073221184 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073491313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075821767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072887452 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063630426 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074200707 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072933039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073021146 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069521713 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073538366 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072825096 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069043904 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073143617 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072940943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073384088 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075692674 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079871352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073246295 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073409584 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0735988 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072964374 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073406656 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073944314 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079895052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073717007 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073297022 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07346429 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073841391 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07323061 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079885215 seconds)
  done (took 6.169199773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076226326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069191284 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081846154 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062439471 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0621121 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071709563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062610446 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06217965 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069808122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069545392 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071445806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072028234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074097691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07147746 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072067089 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074398733 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072333288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071880693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069787884 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071662609 seconds)
  done (took 2.944508677 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077598495 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081991644 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068385928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071993443 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067972917 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07154662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067283009 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068373389 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068851205 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068226372 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072920029 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072635058 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068602526 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072327256 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072991889 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072479222 seconds)
  done (took 2.668045678 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06582079 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071053723 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069930224 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064266881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066042896 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062960433 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064031482 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062779159 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065304526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07676804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064049036 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066328486 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063816414 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063046724 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062685792 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066445943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064963984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063866008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0636965 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067778552 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072290804 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064332328 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06604588 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063487892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065412803 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07244912 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064743976 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065883531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063217746 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066186414 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065825534 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070333283 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066291052 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064307076 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062882996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063535389 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063970423 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069065169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066406174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063475201 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062713956 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065717775 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064067515 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06406743 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064986767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066457552 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065020096 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069160805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063832581 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065790768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063541741 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065010903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064096502 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070828352 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066615835 seconds)
  done (took 5.142417934 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080258805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067642392 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062558621 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062261547 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068048291 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068014781 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067857639 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067675177 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068283534 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06268996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068205147 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067256357 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068242537 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067736336 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068924368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067806813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062292041 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068054979 seconds)
  done (took 2.752643174 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075515591 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067823467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073132534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067929924 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067824674 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067478785 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06343911 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063027166 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063238692 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067819198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067254688 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066984463 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063254677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06735722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067174744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067500442 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067211278 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062752454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06715088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062589877 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066709498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062899954 seconds)
  done (took 2.997412849 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089827805 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085892141 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.129901246 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081782248 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090596774 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073511312 seconds)
  done (took 2.083912129 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096734516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106707985 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067451354 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067495014 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075982575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070975829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070945694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0708308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075972917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074532771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070809693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076591956 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075867969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072401747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076305915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079019546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070826264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070743598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067833641 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078258786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070866062 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076531719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07071178 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070531554 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070656149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072350005 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078809482 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074870281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070755305 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076457749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0791398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070461389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076420787 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07472652 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067845914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076095239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070856111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078632144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076369076 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072618398 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067366789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076674891 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076262552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072577759 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079079341 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070963362 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072646967 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071221974 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0707403 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080878499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076730906 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072962115 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076283309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078896383 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0788699 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081259137 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075216566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072471555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076297216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074755209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072589792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076974735 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073013441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075009065 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079310291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07388267 seconds)
  done (took 6.479673833 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103642553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068409854 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071356744 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074782838 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072750066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07134673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071823733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071167648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071446746 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068373682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107232963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071989205 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072763884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072683176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071351002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071124781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071340734 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072938163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068568827 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081048132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071209183 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072862812 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073014307 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072888948 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077758907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079008602 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071068113 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070666783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070868343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070708932 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072485437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071428594 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07273618 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068513406 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072751892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070855794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070578749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072115431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071288378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07619729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072135422 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078732019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070758009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071061382 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074473151 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071171323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071217987 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067953488 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07050883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068066673 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075072152 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07486185 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074941378 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072369214 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070827445 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070933873 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070663843 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070849779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070786221 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078974394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072290519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070563575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081273067 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071352102 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071177562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072620021 seconds)
  done (took 6.396901067 seconds)
done (took 131.228741519 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220551699 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190833909 seconds)
  done (took 1.930214654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076678837 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169088874 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076893545 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.076231981 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.110121429 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.109309543 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.077824453 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074264963 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076616856 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07437224 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.140858092 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.078871812 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073530303 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073907379 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073679555 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073790429 seconds)
  done (took 2.975367573 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.110694385 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.188315796 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.083886971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07146339 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.117549074 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078238203 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.073877974 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076666113 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079031268 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.071699208 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109065732 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.082887404 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.075340045 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.078290054 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.073638315 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075128582 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07719029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07809549 seconds)
  done (took 3.145580601 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100505912 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.087588843 seconds)
  done (took 1.741442782 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164778589 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108206932 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14749945 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.335679842 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.132872184 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.129468464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.133658758 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129698066 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117236911 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12403163 seconds)
  done (took 3.071188949 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108260332 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107259195 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.315588341 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104791037 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.085369203 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079421771 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076718987 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081223122 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077001795 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078082259 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.124754923 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076687553 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074304755 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126902826 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100599416 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108106991 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072561397 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080180367 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081006365 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072470994 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077513116 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081240198 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.181633357 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079662253 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101602091 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.076739516 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079554598 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076303726 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076155276 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079643121 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080676494 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101440122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080196573 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084340536 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.078161286 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.098687238 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072683826 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100773507 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0755437 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074354283 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076490436 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080569379 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073683839 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.079666768 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076697129 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079077227 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081542919 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072437683 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076877375 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076008316 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073953981 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077637545 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077333076 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.078702236 seconds)
  done (took 6.427853017 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111266049 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108697222 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072500157 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116396221 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108009 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072191519 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106776166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102534336 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111051696 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071664097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070658052 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071417164 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082151908 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080720542 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118878369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11084664 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073268456 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071836351 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110099226 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109216651 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071228129 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103965034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1021593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108565073 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070388184 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072168232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069496604 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070455992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075392966 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076606316 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070537372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077464337 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082563963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076953845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069452316 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070179198 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070316205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077188291 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077993167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077599629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076345298 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069623246 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06982306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070585575 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070966552 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069805765 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076252374 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076959816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076086582 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070239433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070289513 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069924488 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070698096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076894173 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07602336 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077821454 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077459988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070365938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070559424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072204542 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078216526 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077845523 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077369057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071277852 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078772407 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070074552 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079223094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08328079 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069987762 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070367241 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070284529 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069936585 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070365536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076023012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0760165 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070714509 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070244774 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070089122 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078238228 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076535076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070294634 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076044214 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069545581 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070728718 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070783684 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070679732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075354039 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076904397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07075317 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070172296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070044851 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070415024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069739125 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07570994 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07685743 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077665735 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077082054 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07059049 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077097258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076552652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070985622 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076774662 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070389144 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070768177 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070102986 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075973553 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076001993 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078208821 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070731124 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069616485 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076508195 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.216302229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071546623 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077004091 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079419629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077426095 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070515755 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079926608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071125337 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078908497 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070919258 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07912204 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071207246 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076731803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070553689 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070131859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070880821 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077258868 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071573031 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070673712 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071336545 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071067716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077195529 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080586667 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071734265 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076725978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076647072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071463309 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076660577 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070385759 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077528974 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070378176 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070898009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070308289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079432527 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070824279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070816111 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07023645 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078718366 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070984599 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07924683 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076249806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070164568 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080713506 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07909896 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076222646 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07899634 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071344158 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070546101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07027182 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070721139 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076523076 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076475879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071206646 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070344958 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075681159 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078397061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069841223 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076116103 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075884705 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076185553 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073821071 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070570566 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079176906 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.318685498 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076212066 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076049437 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076380847 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070080393 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075564369 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076167853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070598571 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082198974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069968281 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08003213 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076515476 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075459738 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07690227 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077840674 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078504312 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078586512 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080620212 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070062862 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070350873 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077017418 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070578888 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070579476 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075875378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070698354 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070399911 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081274326 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070650533 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07824863 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070554545 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077108228 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069702041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070795843 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08107061 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070278188 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070553738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075956807 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070008919 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076252503 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078941111 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076179344 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070030439 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070369223 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076682075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076879731 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069803409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069987417 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070379549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076021982 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075475126 seconds)
  done (took 19.028338849 seconds)
done (took 39.879624648 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173054794 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116962549 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209735224 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200310103 seconds)
  done (took 2.354228547 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.102800777 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.06676115 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.082727548 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.092220302 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.066477109 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.077102329 seconds)
  done (took 2.082924314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204029256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176376302 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.242537863 seconds)
  done (took 2.210122134 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.370956963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.151057807 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21864932 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.508767955 seconds)
  done (took 2.943710823 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.112204685 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.103391911 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.079107113 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113236154 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.086945856 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.064668719 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.13522765 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.071248661 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.101820171 seconds)
  done (took 2.522857244 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.131467494 seconds)
done (took 13.861505143 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.185377907 seconds)
    (2/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.288922287 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.222415565 seconds)
    (4/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.185395646 seconds)
    (5/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.225353869 seconds)
    (6/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.179292318 seconds)
    (7/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.2560003 seconds)
    (8/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.154108909 seconds)
    (9/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100862167 seconds)
    (10/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.16711384 seconds)
    (11/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075550497 seconds)
    (12/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.145421065 seconds)
    (13/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077711282 seconds)
    (14/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.201760579 seconds)
    (15/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079445585 seconds)
    (16/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070999803 seconds)
    (17/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078929157 seconds)
    (18/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.077789638 seconds)
    (19/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.193424297 seconds)
    (20/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093123083 seconds)
    (21/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.179385291 seconds)
    (22/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.216635359 seconds)
    (23/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080070568 seconds)
    (24/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.070468258 seconds)
    (25/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.278301737 seconds)
    (26/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092941119 seconds)
    (27/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.128686304 seconds)
    (28/341) benchmarking ("sort", Float64, false)...
    done (took 0.138883589 seconds)
    (29/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096204855 seconds)
    (30/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172715329 seconds)
    (31/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.190989696 seconds)
    (32/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.20175711 seconds)
    (33/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067765756 seconds)
    (34/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076061871 seconds)
    (35/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.154094699 seconds)
    (36/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.120276269 seconds)
    (37/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089535834 seconds)
    (38/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.184104599 seconds)
    (39/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.210537518 seconds)
    (40/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195933208 seconds)
    (41/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.212209324 seconds)
    (42/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080609978 seconds)
    (43/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078263338 seconds)
    (44/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.242649353 seconds)
    (45/341) benchmarking ("sort", Int8, false)...
    done (took 0.155787302 seconds)
    (46/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078572702 seconds)
    (47/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076335955 seconds)
    (48/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078292013 seconds)
    (49/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076431983 seconds)
    (50/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067173299 seconds)
    (51/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185435906 seconds)
    (52/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074882352 seconds)
    (53/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076077957 seconds)
    (54/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.079506496 seconds)
    (55/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.193225421 seconds)
    (56/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070183925 seconds)
    (57/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.202921391 seconds)
    (58/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084589962 seconds)
    (59/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080292612 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.08794843 seconds)
    (61/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187147827 seconds)
    (62/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067504231 seconds)
    (63/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.085085125 seconds)
    (64/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.222958698 seconds)
    (65/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076531335 seconds)
    (66/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093512162 seconds)
    (67/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.157368182 seconds)
    (68/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199905973 seconds)
    (69/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096423096 seconds)
    (70/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074552256 seconds)
    (71/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076984642 seconds)
    (72/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092147435 seconds)
    (73/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.337136737 seconds)
    (74/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128984717 seconds)
    (75/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072091603 seconds)
    (76/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087321627 seconds)
    (77/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184683347 seconds)
    (78/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.070174905 seconds)
    (79/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085803699 seconds)
    (80/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151228714 seconds)
    (81/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07269545 seconds)
    (82/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068827102 seconds)
    (83/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.069574642 seconds)
    (84/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094425575 seconds)
    (85/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.067429052 seconds)
    (86/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075816851 seconds)
    (87/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075811088 seconds)
    (88/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.14512738 seconds)
    (89/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075849015 seconds)
    (90/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088939745 seconds)
    (91/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.148887637 seconds)
    (92/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.232658025 seconds)
    (93/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.08545249 seconds)
    (94/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175200355 seconds)
    (95/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094118126 seconds)
    (96/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.084924102 seconds)
    (97/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180696678 seconds)
    (98/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182977708 seconds)
    (99/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202095407 seconds)
    (100/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094101433 seconds)
    (101/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.090298544 seconds)
    (102/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067861355 seconds)
    (103/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154968624 seconds)
    (104/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.067609317 seconds)
    (105/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066775361 seconds)
    (106/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081562612 seconds)
    (107/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109350134 seconds)
    (108/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.141794019 seconds)
    (109/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.067460274 seconds)
    (110/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067618423 seconds)
    (111/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067271868 seconds)
    (112/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075371652 seconds)
    (113/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066865739 seconds)
    (114/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072596188 seconds)
    (115/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.067196218 seconds)
    (116/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.216644727 seconds)
    (117/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.223945944 seconds)
    (118/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16561428 seconds)
    (119/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11491785 seconds)
    (120/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074927956 seconds)
    (121/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075450626 seconds)
    (122/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067671174 seconds)
    (123/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06766584 seconds)
    (124/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077827308 seconds)
    (125/341) benchmarking ("sort", BigInt, false)...
    done (took 0.269164089 seconds)
    (126/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193619857 seconds)
    (127/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067283521 seconds)
    (128/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089969466 seconds)
    (129/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067535867 seconds)
    (130/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.14513997 seconds)
    (131/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.085502177 seconds)
    (132/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077399692 seconds)
    (133/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.070723154 seconds)
    (134/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067929027 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094356355 seconds)
    (136/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153675802 seconds)
    (137/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068758353 seconds)
    (138/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164036448 seconds)
    (139/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066931168 seconds)
    (140/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.067724131 seconds)
    (141/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067200249 seconds)
    (142/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076217708 seconds)
    (143/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.067208773 seconds)
    (144/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066824378 seconds)
    (145/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067872123 seconds)
    (146/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067444148 seconds)
    (147/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076241971 seconds)
    (148/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.141796045 seconds)
    (149/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073480527 seconds)
    (150/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119050911 seconds)
    (151/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075221651 seconds)
    (152/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084353193 seconds)
    (153/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069985507 seconds)
    (154/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066173864 seconds)
    (155/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074882598 seconds)
    (156/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07819787 seconds)
    (157/341) benchmarking ("sort", Bool, false)...
    done (took 0.149528078 seconds)
    (158/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075670895 seconds)
    (159/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.070941558 seconds)
    (160/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.066968451 seconds)
    (161/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074887976 seconds)
    (162/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.084708637 seconds)
    (163/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087269889 seconds)
    (164/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0781609 seconds)
    (165/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.148408116 seconds)
    (166/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.099757373 seconds)
    (167/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068066959 seconds)
    (168/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07476744 seconds)
    (169/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070760126 seconds)
    (170/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090728711 seconds)
    (171/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.067665344 seconds)
    (172/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.239192056 seconds)
    (173/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07496747 seconds)
    (174/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076756475 seconds)
    (175/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068378143 seconds)
    (176/341) benchmarking ("sort", Int64, false)...
    done (took 0.068113648 seconds)
    (177/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067874466 seconds)
    (178/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.070746335 seconds)
    (179/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.084369082 seconds)
    (180/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.157024663 seconds)
    (181/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157182687 seconds)
    (182/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065847401 seconds)
    (183/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.328131879 seconds)
    (184/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.144433071 seconds)
    (185/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078914883 seconds)
    (186/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068691979 seconds)
    (187/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069402692 seconds)
    (188/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.143318625 seconds)
    (189/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076920457 seconds)
    (190/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074743567 seconds)
    (191/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.200240981 seconds)
    (192/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066513681 seconds)
    (193/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068416209 seconds)
    (194/341) benchmarking ("sort", Float32, false)...
    done (took 0.141308604 seconds)
    (195/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.067806008 seconds)
    (196/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067236894 seconds)
    (197/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.155551372 seconds)
    (198/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067578821 seconds)
    (199/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067667583 seconds)
    (200/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.144937718 seconds)
    (201/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086621783 seconds)
    (202/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067428346 seconds)
    (203/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.165801189 seconds)
    (204/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069502182 seconds)
    (205/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.141465143 seconds)
    (206/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149716848 seconds)
    (207/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068595102 seconds)
    (208/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.0807785 seconds)
    (209/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.069653162 seconds)
    (210/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067785646 seconds)
    (211/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07502974 seconds)
    (212/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067921003 seconds)
    (213/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082322884 seconds)
    (214/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068537585 seconds)
    (215/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095563994 seconds)
    (216/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.076329191 seconds)
    (217/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066268655 seconds)
    (218/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076841343 seconds)
    (219/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066828825 seconds)
    (220/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079200282 seconds)
    (221/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150891368 seconds)
    (222/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066526726 seconds)
    (223/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067703392 seconds)
    (224/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07495535 seconds)
    (225/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.085380326 seconds)
    (226/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067560655 seconds)
    (227/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074977183 seconds)
    (228/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.069315939 seconds)
    (229/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068600272 seconds)
    (230/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.173159801 seconds)
    (231/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.067857621 seconds)
    (232/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066728467 seconds)
    (233/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.074722859 seconds)
    (234/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081959463 seconds)
    (235/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067586446 seconds)
    (236/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124847157 seconds)
    (237/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.068910374 seconds)
    (238/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066887596 seconds)
    (239/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077810158 seconds)
    (240/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079507263 seconds)
    (241/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06588727 seconds)
    (242/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073601553 seconds)
    (243/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076087991 seconds)
    (244/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173993183 seconds)
    (245/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074571471 seconds)
    (246/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066575214 seconds)
    (247/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078869981 seconds)
    (248/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182541885 seconds)
    (249/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.067344685 seconds)
    (250/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.069306412 seconds)
    (251/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066011192 seconds)
    (252/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074348015 seconds)
    (253/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.070658584 seconds)
    (254/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.133618448 seconds)
    (255/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.144241855 seconds)
    (256/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067741688 seconds)
    (257/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075216174 seconds)
    (258/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.067295445 seconds)
    (259/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065273015 seconds)
    (260/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07398101 seconds)
    (261/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066707875 seconds)
    (262/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.067515349 seconds)
    (263/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153998231 seconds)
    (264/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089700511 seconds)
    (265/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067055357 seconds)
    (266/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.070385125 seconds)
    (267/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091494837 seconds)
    (268/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094455997 seconds)
    (269/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086416706 seconds)
    (270/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.068831389 seconds)
    (271/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.070904856 seconds)
    (272/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203387828 seconds)
    (273/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134828447 seconds)
    (274/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132061928 seconds)
    (275/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06794759 seconds)
    (276/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13516176 seconds)
    (277/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086077551 seconds)
    (278/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166571098 seconds)
    (279/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067560655 seconds)
    (280/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066497141 seconds)
    (281/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067786275 seconds)
    (282/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067963247 seconds)
    (283/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067292847 seconds)
    (284/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067798046 seconds)
    (285/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.069161486 seconds)
    (286/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070772915 seconds)
    (287/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.067112674 seconds)
    (288/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15323454 seconds)
    (289/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149137563 seconds)
    (290/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067064522 seconds)
    (291/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15118146 seconds)
    (292/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067233091 seconds)
    (293/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066988394 seconds)
    (294/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.066825487 seconds)
    (295/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074329157 seconds)
    (296/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066778949 seconds)
    (297/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065671721 seconds)
    (298/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065158642 seconds)
    (299/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078567745 seconds)
    (300/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067059441 seconds)
    (301/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.067305427 seconds)
    (302/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.220103816 seconds)
    (303/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.070206594 seconds)
    (304/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074037377 seconds)
    (305/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066030437 seconds)
    (306/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078047707 seconds)
    (307/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.066256675 seconds)
    (308/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.236911045 seconds)
    (309/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069424269 seconds)
    (310/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077074494 seconds)
    (311/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076949309 seconds)
    (312/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073684358 seconds)
    (313/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080549144 seconds)
    (314/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.068884841 seconds)
    (315/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068408254 seconds)
    (316/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069006469 seconds)
    (317/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.129396665 seconds)
    (318/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126311823 seconds)
    (319/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094027452 seconds)
    (320/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.068705624 seconds)
    (321/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067366037 seconds)
    (322/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06740489 seconds)
    (323/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082205875 seconds)
    (324/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091378518 seconds)
    (325/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072406811 seconds)
    (326/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06774496 seconds)
    (327/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067845427 seconds)
    (328/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.068074645 seconds)
    (329/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06737659 seconds)
    (330/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072533981 seconds)
    (331/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079378327 seconds)
    (332/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.067879146 seconds)
    (333/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067816954 seconds)
    (334/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067994157 seconds)
    (335/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069200095 seconds)
    (336/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068158005 seconds)
    (337/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069773391 seconds)
    (338/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.067972457 seconds)
    (339/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067943359 seconds)
    (340/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068506413 seconds)
    (341/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127768049 seconds)
  done (took 37.415832313 seconds)
done (took 39.027174858 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093829144 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.080125399 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07887271 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075742463 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078895275 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078188394 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078954741 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077336065 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.079104507 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078109471 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078524606 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066452832 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074978302 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082154946 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075891585 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082485995 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079272492 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082936603 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068362394 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081379244 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.093090292 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.079223382 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075969392 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081147031 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066762377 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076292522 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091290708 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08842985 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073977954 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077276335 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074777851 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082673776 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074878908 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073352561 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076883355 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07334201 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.076859421 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074510113 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090331802 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073373327 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067519045 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079994992 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07775937 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075133355 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075273563 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078924693 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072516376 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.080626058 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066866506 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078143605 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090074619 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071896623 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.073344149 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075297319 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072535107 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07638944 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073388879 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.078039844 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072348266 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.078287395 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077948815 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075294033 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066454919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075799606 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074192814 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074517505 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065822264 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07207925 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066919513 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066792884 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.066156019 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075398177 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073866583 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071896338 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065774894 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066350977 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06590409 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078727365 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07287498 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076216679 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067077338 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072135607 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071983947 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067097068 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07138342 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078311947 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.065985504 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067376005 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066297592 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080692306 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072960457 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066567287 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.077707982 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071950673 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071148843 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066560346 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066499273 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071682195 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074844024 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.066751497 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065983828 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072046154 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071887083 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07571644 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.067188594 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071719303 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071470486 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065572219 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075640577 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074280659 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.075591361 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080042468 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075627356 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.078913241 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.066767415 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065946008 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076317818 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.066844916 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071643911 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074717874 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072464238 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074585287 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.067005 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066193624 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07146101 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073525898 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067033618 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.06733848 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067134629 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076343191 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074043306 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.066018476 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.066966047 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07566852 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075946663 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065896664 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066011995 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075573279 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.067169939 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073346064 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072415148 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074971484 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.065958731 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.06624132 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.211681804 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067378003 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066832255 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073041532 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072186565 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.067488755 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076253559 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073217203 seconds)
done (took 13.067257422 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068224015 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106418416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07427779 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.083108469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07921144 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068568763 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.070697753 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083977878 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071837218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.087233745 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095303891 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089226348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.094880203 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066404663 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068050792 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068862562 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066157647 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075285139 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082015069 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090874528 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095975046 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067325415 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.076660373 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083982663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077745925 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083514351 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068457714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068382504 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070437131 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12688749 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093299521 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067554021 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068312565 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080925301 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081626421 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074571686 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068427981 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07177671 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068083242 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067233074 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069985497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081507379 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071137055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071525127 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068710006 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069140352 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068428557 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0707198 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080331357 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074252536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.075296296 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.079941207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069495005 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067727272 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065645705 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.071420534 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067280238 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068394697 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067827709 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067760003 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067625493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070005762 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.068546285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06817139 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070699553 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069989182 seconds)
  done (took 6.662082624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08469432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094075772 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082775703 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082698064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067669503 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068237374 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067675709 seconds)
  done (took 2.271316398 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068616017 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075567306 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080030607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080062302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.09047669 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.077816834 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068537418 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099500813 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06706009 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07745358 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.083777908 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081720582 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071238598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08021138 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068369248 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.079728581 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068313212 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074981665 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075742149 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081443121 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072492621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098121934 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081346091 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068580055 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081149641 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.075313798 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.070301947 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068204729 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068963237 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067792281 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067196892 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.089925521 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.074073454 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080112454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06847074 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.067279302 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072261653 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068398773 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.071926086 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076805749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071537793 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068418639 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068192602 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067760761 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068947523 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.072430456 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068946453 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068118113 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067651484 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075188118 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067415217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.074224038 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070272124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072692526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072511943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072723691 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075403553 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068374638 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075309527 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.074619004 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067368565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080693705 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079554985 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071266678 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079530603 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.076310594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.074062257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071423379 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06761789 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067661257 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068235397 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079469238 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.070919276 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069963277 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068807084 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072360628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.071470708 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.083231531 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083419101 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080731373 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070019649 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067929118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071750579 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082904164 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072730331 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067757351 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068672474 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067302345 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072650587 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068191834 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072493132 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068297759 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074827176 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070160856 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07015658 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075721104 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067991281 seconds)
  done (took 8.861340344 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071257532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070470354 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068656366 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069291793 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069572988 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069183786 seconds)
  done (took 2.176875973 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092119591 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068797623 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080557304 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068613062 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.090676424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075225408 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075293448 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070193275 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084397677 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078727067 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.075148141 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077391383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074797328 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070372033 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074285736 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069272563 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074650227 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07160177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078204701 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070859262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081566802 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070768553 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070505657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080609486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072044344 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069704235 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069122594 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078837929 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078401947 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069693798 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072746559 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071644246 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076591539 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070144484 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07503336 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077258238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068161324 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074083483 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07090285 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071531038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076911649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070220463 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070560261 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073772785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070227642 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076825605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073782613 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072250825 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074350437 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073702632 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074029739 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068521487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071568735 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073914813 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.0766394 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070015029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07395257 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.074483344 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069823831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077132052 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068787643 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071189782 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070020451 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071141732 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073448968 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074099295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076653084 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070343441 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070522737 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068696898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073928873 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06813117 seconds)
  done (took 7.033733411 seconds)
done (took 28.715776395 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.55140561 seconds)
  done (took 2.252723961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.588821944 seconds)
  done (took 2.33120955 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.441198406 seconds)
  done (took 10.183521147 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.297625612 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.320786625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.733726936 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134829305 seconds)
  done (took 3.267219493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.743437071 seconds)
  done (took 2.49462931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230226346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220276135 seconds)
  done (took 2.205504573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.337424662 seconds)
  done (took 2.0797857 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.14461995 seconds)
  done (took 2.881701707 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230947093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161178554 seconds)
  done (took 2.143347343 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535334349 seconds)
  done (took 2.282288024 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.302098491 seconds)
  done (took 6.051629791 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235149003 seconds)
  done (took 2.021595314 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233188464 seconds)
  done (took 1.983773528 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.057711343 seconds)
  done (took 3.804974593 seconds)
done (took 47.734543781 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085174711 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087323561 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087506385 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08263986 seconds)
  done (took 2.069500437 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075613102 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.07126331 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074754265 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075074219 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072622221 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073740427 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074592999 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069594189 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072559102 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.0714968 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06988569 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.071282785 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074292037 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070886352 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.074171782 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075253688 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.071402316 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071123521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073850975 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071417645 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07423217 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.071502205 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.069611986 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071452356 seconds)
  done (took 3.49426975 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079663888 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073589233 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076423681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071878586 seconds)
  done (took 2.059611052 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077901614 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078368068 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087062399 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092334362 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07862826 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07869693 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085622606 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086191254 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066905876 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088470427 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068969148 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.068031827 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06777568 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087105409 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084715253 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063861348 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06516228 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07830378 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.078263159 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.081271184 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070123082 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06679637 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07801519 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.078256176 seconds)
  done (took 3.61841742 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080447072 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066927731 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079933036 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092921988 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093088456 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066523221 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08013197 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094146379 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12871476 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066784652 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072962729 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066227706 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105827666 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067039685 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081721035 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109662169 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112504221 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070749339 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099934248 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067115482 seconds)
  done (took 3.471017686 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077348916 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070480759 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071488807 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066984645 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077941126 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074517732 seconds)
  done (took 2.206888752 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069176545 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.069435231 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06790327 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073081464 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.069022486 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.069223222 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.068674011 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067165329 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067317757 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.067812222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067825018 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.068179108 seconds)
  done (took 2.585532409 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159338218 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070640887 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07169066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067176725 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072540853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067898094 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082674338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069936061 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085795472 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067927316 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068134901 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070448614 seconds)
  done (took 2.717355362 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101500121 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102587927 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14798296 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118606544 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.1177312 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097774928 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120720983 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095512871 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.162139583 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.138625827 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11865218 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095823835 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088076522 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.071656441 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101350558 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103002595 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137769419 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074259958 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115058133 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.166344014 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116337536 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.113616072 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123479658 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117509422 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08212594 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122977015 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095859193 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104357331 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.125686969 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111271085 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120206569 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.098892379 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.073117051 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072457568 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150739937 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.101727145 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108507002 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.094461938 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101594445 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.089592068 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108893863 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.070873737 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.088313449 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.10722648 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085959344 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117872985 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08921551 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105369024 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082397831 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.132092563 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107953657 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100464958 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.086684442 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105566435 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131776823 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096563842 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112220473 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108376406 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083592559 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.120109172 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.101994719 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.25394256 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095845904 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082743408 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.161845131 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091192181 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114696183 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115006548 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.084671818 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091203931 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104144301 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.132173458 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108722822 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.108639311 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116628397 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097059197 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112124087 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.093660171 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.130577505 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095158877 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.074499486 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.106119082 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130202694 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086617246 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101821948 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13181669 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.094121724 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078699266 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093568144 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.119805545 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082142793 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.097277932 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070846788 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.098998139 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108731395 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098797123 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113747602 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108099009 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079171271 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126604622 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110409919 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074034506 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119242548 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099996608 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154510294 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097035776 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.07760602 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10111266 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095050538 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.151175673 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086426852 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081327971 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099659915 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143304305 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095530569 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.171255103 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097293797 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12997872 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097926877 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088169282 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076695196 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.09049074 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103324779 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109182782 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102611482 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089144134 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.077940098 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086635029 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.253566621 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094557724 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083126976 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.115654623 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.1037742 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076739887 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090392745 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.078513801 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127558948 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.079680759 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110915174 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12644408 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.080036632 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107138363 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09977974 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109787823 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.099880826 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10882248 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144894429 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117965256 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081585327 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086405459 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110597696 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144954482 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115434593 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086390296 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.078316098 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10110172 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113280089 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.098865818 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.108545759 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101541472 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110876651 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098777918 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.143249329 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119226075 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092215025 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096786727 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098399352 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.125332755 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078065402 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157509921 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095600012 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119999383 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.085850477 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.142303688 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115853794 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091634192 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086454712 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.0968737 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106363391 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107308652 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145250434 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.097876353 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.074268874 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094776325 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133658875 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077955802 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1018155 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.092016443 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094374561 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120316643 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085315966 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083365 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069698962 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103266358 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13679941 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.070116885 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.276343283 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.115453416 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105271279 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.10668299 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.071036677 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101624297 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.140527283 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107599163 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14317145 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118679937 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102930445 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120123329 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.100874706 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107638818 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081546855 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.12752331 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.137027857 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098877079 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092321614 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137611376 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.119845835 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137102235 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.098095144 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116923134 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.107205433 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102804556 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105751634 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.102941796 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146132353 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121432072 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.126015219 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.087745634 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107739883 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.110700466 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138436761 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083603637 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118069126 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.076739634 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11407062 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07941893 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109085116 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.081181527 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.114220767 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081870574 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101589017 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.071063726 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.075556752 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.14354507 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.11425233 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091086777 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088404467 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.138717495 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132941859 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081876348 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103339575 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.105631846 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102738026 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103046855 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.110138652 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08571968 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094744898 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.27381214 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081867121 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084233391 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101035276 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096678597 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109290611 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085858388 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076402248 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1383649 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106437532 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097444265 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079870668 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097343243 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.123072006 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091582093 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089913197 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106914435 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105711975 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.143281794 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.091959592 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.098797989 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119448401 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081608187 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.093876996 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.071570374 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.087508531 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.078211308 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110425904 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078369268 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109934349 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.07057171 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132449557 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088949796 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.093991801 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104918871 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099203187 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129488317 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093771633 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129918947 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091931963 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.10349995 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110114314 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096470336 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081590936 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105427173 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097228643 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.113889409 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.097354084 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106962385 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111919613 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0956121 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.143681638 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091902259 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121554185 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107275092 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109207547 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105629695 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118909053 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139677023 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114860026 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113923435 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076360163 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084709466 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107728849 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101710779 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147702659 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103591017 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.073293687 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.087126641 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091731236 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.256483251 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107835702 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084881434 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143762091 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088941094 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.089079051 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115684855 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092063576 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099218385 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077867713 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096947211 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103017813 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09629952 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096446467 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109585466 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119703564 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115498791 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.134639904 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.101697848 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.095052774 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.121350787 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112877706 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1136586 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08779264 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088665488 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126009553 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103653419 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.130761284 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102348185 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096383211 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103970353 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092217648 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100906509 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098625035 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111843954 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081664753 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07791495 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.06993521 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.07345065 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.120390629 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110331732 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100437449 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100807961 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.074397134 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105726829 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10126989 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073232611 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088973049 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096278448 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.101381226 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085699915 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094071279 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.116032157 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.09349687 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105484629 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100869498 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130823848 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102089468 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090873959 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145771139 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130366627 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090521861 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09536504 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.073317831 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080472809 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103995882 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148263725 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118876794 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078757744 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.245227851 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.080174891 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088890438 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.073669786 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.090470041 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.091591461 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106136462 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094645668 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.114072737 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10565018 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07766314 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105553677 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099666586 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.094677224 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.09808899 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104220883 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107817186 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.125886769 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103075898 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099842098 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077983139 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082771261 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077845128 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081076856 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104226179 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078906534 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077809368 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132034978 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.093121636 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106565768 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111046116 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086624263 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077511047 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135667682 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.070553898 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136299266 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.073108246 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08432867 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082664924 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081225778 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095736359 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106486365 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098325114 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11525013 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10760801 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106664723 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112227262 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15783426 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072975387 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.146062455 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077730824 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077438901 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078225091 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113584431 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091742455 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.106967317 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143060356 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090832221 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094174574 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078765129 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130948335 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.100339659 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105473696 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087033528 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.080528748 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13092501 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081391893 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072979747 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088179394 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.113531517 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073567124 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104982201 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.247317192 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082417624 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115739718 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.632901387 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092556665 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07849343 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091055139 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.14534947 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130856066 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085235746 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110464355 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121620927 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092029591 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.085352301 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109630503 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.185688926 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076867158 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097041194 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.105843407 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100002315 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094536565 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.094113089 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08899188 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.094153266 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.08775312 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081813832 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109289899 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089953749 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093075677 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.099458582 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08487738 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082008749 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.13279574 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106538914 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083829812 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09044797 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102130953 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089426233 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092504867 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.071013429 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115404825 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092944874 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103941369 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.09239054 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109589688 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122028962 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090219461 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114377019 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.090481897 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111250905 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086238928 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079716358 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10407976 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079980504 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079002901 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118556995 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085830169 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09440475 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106567546 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.097562178 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115844454 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120517395 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113454321 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099305791 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081269209 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08750197 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08921635 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076581529 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079619026 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07561519 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.077257849 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.271472641 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088625337 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.086346715 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117259915 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084791513 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.105210652 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103078597 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11131365 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084903742 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103140789 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111130401 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092596387 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106006631 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102302876 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.13112105 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147772474 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101116347 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.12544882 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136089541 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078974989 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077284582 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.070789134 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117226087 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.085139945 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.082903609 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083226259 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135645193 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.084153565 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096991469 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.234906491 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082719819 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083980743 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098953981 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.071317739 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.085009281 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11035149 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086603279 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08281451 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100548515 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.085951309 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.119983376 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113732234 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091483465 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.084817124 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0827736 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095191112 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105735604 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129827394 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091795871 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077291024 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108643525 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104668986 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125070184 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074464618 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082062294 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.132507205 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093982159 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105366615 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082251371 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122249841 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.134384961 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.091777067 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136128934 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072904319 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084845109 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091633245 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.127632376 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076530125 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089937068 seconds)
  done (took 65.854252768 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150700341 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143549488 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.083967366 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.098837145 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.189776448 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.199051651 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.121114092 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.154220159 seconds)
  done (took 3.087922682 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.069761919 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.084080863 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.08485915 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.209977644 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.110309196 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.068870869 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.074207012 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.083365833 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.068857227 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.068469841 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.103790215 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.068629926 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.069252023 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.367556838 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.067685744 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.073529976 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.068489656 seconds)
  done (took 3.649379822 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.329813611 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.480233644 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.22986947 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.793432323 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140689826 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487142068 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077862522 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.083787766 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630602824 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370559831 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134689435 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089512263 seconds)
  done (took 18.756272193 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.077450999 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.079821193 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079731077 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.07634465 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.076116966 seconds)
  done (took 2.319595343 seconds)
done (took 117.663570876 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.085501162 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.173643386 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.068721835 seconds)
  done (took 2.188305089 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084915372 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081853139 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083125687 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079806433 seconds)
  done (took 2.244741718 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076053473 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077806732 seconds)
  done (took 2.059775998 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.226499007 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.178027985 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.091411612 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085041151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081968229 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081525167 seconds)
  done (took 2.170255246 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07424454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073339697 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07372847 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074163297 seconds)
  done (took 2.202279084 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069072406 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067503477 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070174844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072183243 seconds)
  done (took 2.189642355 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.0886065 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.084604284 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.114047097 seconds)
  done (took 2.196267152 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084760306 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084742575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079917068 seconds)
  done (took 2.159521732 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11107801 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098442139 seconds)
  done (took 2.117403097 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082701511 seconds)
  done (took 1.998087178 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091749516 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099881411 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143308236 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109555591 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142344023 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128761867 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078808835 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.080269265 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075658121 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074562933 seconds)
  done (took 2.939045372 seconds)
done (took 26.954140007 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080737612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374759048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360984545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088299748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673269466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357870989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004348594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092318033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101577357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069629256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086687437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650384761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.998738102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326380757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983390754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330959849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652213245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070407512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069432868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069486449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988595787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069170816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070505385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070316873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651337715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37528782 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070273459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325699245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069825636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071990133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357558937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070530497 seconds)
  done (took 16.515622668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071775607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124642198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073872928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085814863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071875589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071575442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072987002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070458841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112345227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069958764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08668713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069068199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073978016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070860181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089462398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069863611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071221866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07102589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070084712 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070601258 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088059482 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069224977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070694425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070450951 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070247629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083198773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07069143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069353328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072708063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072130532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073427411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071158506 seconds)
  done (took 4.380284266 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123979545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128133326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074774858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11096802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119989207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071619928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153381262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093605558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115848685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070342412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08752093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069640269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105802309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071314079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08993429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070354795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071496396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070496524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069724029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070328013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088859786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069057288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070409281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070829905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070468071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084915433 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071053162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069652461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069710965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07201108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074066717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070879719 seconds)
  done (took 4.653986388 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071711237 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073624134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08175689 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083143743 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06857219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071140304 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071580966 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068704009 seconds)
  done (took 2.524428966 seconds)
done (took 30.002222281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080917316 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069455964 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07334428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08926606 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.0761674 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.072029841 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066615963 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076252395 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073012401 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072733377 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075341755 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068294716 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071427266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066143528 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073869782 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067589889 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074145382 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072227623 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.072090839 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073371788 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070410604 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072969813 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076189482 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072047781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072548864 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072464411 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076589822 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073642778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068869648 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071021566 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069806318 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082241382 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073954015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074567446 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067588596 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067467839 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072361816 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069712084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074094273 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076837754 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069754781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076310969 seconds)
  done (took 4.961004659 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090599086 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095359978 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088063352 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083621366 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.108592898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084045257 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092310805 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081066233 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079374009 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091372629 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075355026 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080599288 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082943013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076775097 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080360235 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07619421 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081049362 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074890813 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.08032498 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079749942 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092003713 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073636359 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080723246 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081591553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075066034 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081943354 seconds)
  done (took 4.112697252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07434637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090187179 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094120888 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143993883 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111631162 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08437372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084042404 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105535093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103164696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069508646 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07370265 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096080109 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098287762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076574097 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109032878 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088143364 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082076156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071250292 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075930666 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104315331 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09259237 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088801217 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102624953 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089528762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068569281 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079414385 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076165937 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084724114 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076746051 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081856802 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073544411 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07316782 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070743922 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082266581 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074070748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068006679 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09201556 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081989411 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085212827 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108111608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079420157 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071464628 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100230711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135428496 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07263166 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072123315 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073364385 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082027444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070711481 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099770247 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087837834 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06999242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088443941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070765842 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071127125 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086130351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070946975 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071178095 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08181846 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076170976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090384114 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074770529 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090373927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068906975 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080530007 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070733833 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07076723 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068158009 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.105806516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077029343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.122096652 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070687537 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067522509 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081480905 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081394102 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076054172 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069322471 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089326526 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0815925 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072882335 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081191398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072107824 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072028384 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104745551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068264735 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067627845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06772668 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071942082 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072710791 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069990471 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082892271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068681777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073090161 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084724475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06944294 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069728922 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071904441 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07099694 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068666555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0803946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073370657 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071085285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082070588 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070240606 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072530299 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083927546 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079110879 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068653023 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070352731 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071816217 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071740156 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073859464 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072361837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071116575 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076271314 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076366475 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074852996 seconds)
  done (took 11.420967979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163649043 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153268676 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070609864 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149083519 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078009864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.074334103 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150242207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.090084679 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069829243 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070795275 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068803368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097301673 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.093890815 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.104893575 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.074264021 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070200565 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095939316 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103779995 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152079889 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146616849 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093502803 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07774078 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072241798 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071431291 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071222217 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078183825 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086528906 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078595586 seconds)
  done (took 4.691609481 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078086038 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.085568588 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074324103 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093771352 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08862064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070206092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071841404 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071292338 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08701321 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077376924 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06985568 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074268576 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073786192 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070627071 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070373491 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076323374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076249722 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069287432 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073677641 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075078372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080906109 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095677776 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074720135 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069768981 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072501537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070561041 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076600308 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079730629 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069437696 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100209249 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067220088 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074325801 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084009917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071208714 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069569914 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070534379 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070489958 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069990735 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070142768 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068376354 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067809817 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07545196 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069000844 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076683018 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084825658 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077449544 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071617759 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072446344 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073072 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067149106 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073349485 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0728703 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072578598 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078371934 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073209531 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072491771 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071325479 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101979846 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075951321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069290683 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068655137 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068475419 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071627599 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077173395 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086503596 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07142147 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068202315 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069803076 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075007557 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084398526 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069440002 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075427835 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067388695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070103554 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072366542 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073095121 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071249621 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068153331 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069900309 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070549847 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070088781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069674018 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069618764 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072362231 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06767449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068191235 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069974059 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071159864 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076435801 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068885882 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073116215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071429039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068762176 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072622258 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07500302 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072636352 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089728213 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07890085 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07068916 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067759497 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084371439 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071561118 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069272416 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075658255 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074197732 seconds)
  done (took 9.780909818 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092740901 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07124294 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089617264 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09607538 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08026035 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075134237 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084578157 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071757618 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085801703 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069010723 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079157375 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068527017 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083414812 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079386804 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071555913 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080463739 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073086983 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090299344 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084632202 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068743927 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078784029 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082116157 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082456939 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087908974 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087596679 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088568833 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082502508 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072168058 seconds)
  done (took 4.253153127 seconds)
done (took 41.14564818 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 7.031539612 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.185232229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 7.016478662 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.207466281 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.307177161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.02445479 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.134149479 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 7.004405787 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.0263091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.058754523 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.335482688 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.4323405 seconds)
done (took 68.772117364 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.026898133 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.151254378 seconds)
    (2/2) benchmarking "String"...
    done (took 2.224982724 seconds)
  done (took 6.312195663 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.597935509 seconds)
    (2/3) benchmarking "different length"...
    done (took 2.001905819 seconds)
    (3/3) benchmarking "different"...
    done (took 2.051359495 seconds)
  done (took 8.583111029 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.120694544 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.010160837 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.259596973 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 7.001491907 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 7.005301434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.393367076 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.846849988 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.465570625 seconds)
  done (took 32.916155958 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.280612788 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.250499904 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.73785779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.771035493 seconds)
  done (took 17.026472689 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.624546335 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.26370522 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.265062372 seconds)
    (4/4) benchmarking "different"...
    done (took 2.261496085 seconds)
  done (took 11.40753364 seconds)
done (took 88.424475024 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 7.002628785 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.145129695 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.042777187 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.155455572 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.017614074 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.034829686 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 7.013862661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 7.024462459 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 7.004344862 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 7.002722992 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.431227273 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 7.003909474 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.003537306 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 7.043224534 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 7.012099432 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 7.041207461 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.577582201 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 7.019904674 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.010521512 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.775829274 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.484602294 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 7.02203148 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 7.010242822 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.243507197 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.171785579 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.051562073 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.043844097 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 7.013737934 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.715225455 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 7.036304113 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.015262216 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.016551974 seconds)
  done (took 212.122257895 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 7.013531964 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.026220621 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.129957176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 7.040961222 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.547741364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.208272788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.160229473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.588997217 seconds)
    (9/36) benchmarking "syr!"...
    done (took 7.016266114 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 7.040636965 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.167621269 seconds)
    (12/36) benchmarking "her!"...
    done (took 7.011514975 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.168340517 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.969610476 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.00672046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.107934649 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.291658799 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.188372412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.013304193 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.201724055 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 7.02955172 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.997113623 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.958975027 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.138664511 seconds)
    (25/36) benchmarking "symm"...
    done (took 7.058260547 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.085069579 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.038585256 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.043684671 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.200190917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.258088306 seconds)
    (31/36) benchmarking "gemm"...
    done (took 7.058487884 seconds)
    (32/36) benchmarking "symm!"...
    done (took 7.055643014 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.224217659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.88163289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 7.036714802 seconds)
    (36/36) benchmarking "trmm"...
    done (took 7.025375699 seconds)
  done (took 178.932271833 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.197226379 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 2.031397815 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.084590608 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.156801924 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.788640425 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.764947487 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.023268315 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.020483578 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 2.020775492 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.029907323 seconds)
    (10/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 2.023278573 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.023640013 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.089737557 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.604108665 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.037056136 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.019623025 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 2.018472379 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.354732925 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.027894931 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.025532618 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.023585079 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.087885768 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.392989587 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.158926762 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 2.023530212 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.036349078 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.158224011 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.032171788 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.024496536 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.157888289 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.024233871 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.099535791 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.156773459 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.033680733 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.103976461 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 2.025892055 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.527294578 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 2.024594495 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.02227825 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 2.023681785 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.086652039 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 2.020739092 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.12252306 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.118771499 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 2.019704564 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 2.036130043 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.09082612 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.705956188 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 2.020487552 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.023983344 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 2.023295407 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 2.022639849 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.023214036 seconds)
    (53/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.296631127 seconds)
    (54/118) benchmarking ("5-arg mul!", 2)...
    done (took 2.025840507 seconds)
    (55/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 2.050126362 seconds)
    (56/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.649971991 seconds)
    (57/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.026495745 seconds)
    (58/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 2.024470184 seconds)
    (59/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.026036744 seconds)
    (60/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 2.024350237 seconds)
    (61/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.027120065 seconds)
    (62/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.029876796 seconds)
    (63/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.063630467 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.833230331 seconds)
    (65/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.15671999 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.414477304 seconds)
    (67/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.821056865 seconds)
    (68/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.027807679 seconds)
    (69/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.631187669 seconds)
    (70/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 2.027087318 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.082685626 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.025529907 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.101343032 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 2.025181253 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 2.027504322 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.024428537 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.022717579 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.11330523 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.105256852 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 2.026567706 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.161273785 seconds)
    (82/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 2.027636929 seconds)
    (83/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.026034972 seconds)
    (84/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.031865124 seconds)
    (85/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.442970041 seconds)
    (86/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.223556717 seconds)
    (87/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.038153905 seconds)
    (88/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.081136662 seconds)
    (89/118) benchmarking ("3-arg mul!", 3)...
    done (took 2.022175317 seconds)
    (90/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.02804697 seconds)
    (91/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.040722407 seconds)
    (92/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 2.020940477 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.186431019 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 2.022828029 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 2.024658285 seconds)
    (96/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 2.023712565 seconds)
    (97/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.21562774 seconds)
    (98/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 2.029525908 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.110108494 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.253394165 seconds)
    (101/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.096910245 seconds)
    (102/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.275222522 seconds)
    (103/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.286848101 seconds)
    (104/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.028641756 seconds)
    (105/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 2.02630307 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.02611161 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.039575566 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 2.026570136 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 2.024302057 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.037789671 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.027189377 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 2.024770478 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.025813718 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 2.026126399 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.024755739 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.028000686 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 2.039905383 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.030034541 seconds)
  done (took 437.385526478 seconds)
done (took 832.625960961 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.697252747 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.774223928 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.613347595 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.651077478 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.615964662 seconds)
  done (took 15.305199536 seconds)
done (took 17.258651355 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.058471816 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.042457986 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 2.029280421 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.085172933 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.047424035 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.038201656 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.071960083 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.070228908 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.060050299 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.041368586 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.083391981 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.042240384 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.060069152 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.061141047 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.105172451 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.063314644 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.044037782 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.036705734 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.085326789 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.042001601 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.045202959 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.042958388 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.040883882 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.079447278 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.111692187 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.048418185 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.03949682 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.076420105 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.048716986 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.07565627 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.093227101 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.065046491 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.075118327 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.10818114 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.087925102 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.112491536 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.047296725 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.100936194 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.046272547 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.11511923 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.0886035 seconds)
  done (took 86.673440322 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.037688142 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.188810896 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.249486089 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.072425289 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.03750134 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.273029946 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.093469708 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.164937014 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.176663762 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.253474015 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.263910064 seconds)
  done (took 25.775083324 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.037094192 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.170985179 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.258763652 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.0721818 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.059332151 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.251056436 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.100543163 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.171659145 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.172710133 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.253982741 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.25989937 seconds)
  done (took 25.775599715 seconds)
done (took 140.18105964 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.406615808 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.059713611 seconds)
  done (took 6.422434478 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 2.031896506 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.050878257 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.183804327 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 2.032833687 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 2.032722797 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 2.033879305 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 2.033466982 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 2.034922738 seconds)
  done (took 18.392353477 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 2.029938636 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 2.031325145 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 2.030702671 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 2.031324688 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 2.030954345 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 2.030733559 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 2.032851502 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 2.031640832 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 2.031431435 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 2.032635338 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 2.032300809 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 2.032032889 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 2.03120406 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 2.030876589 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 2.031794706 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 2.031266629 seconds)
  done (took 34.45949614 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 2.03381931 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 2.030674122 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 2.031379604 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 2.030303304 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 2.031438268 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 2.032366828 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 2.036837384 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 2.032509528 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 2.032985847 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 2.032464256 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 2.032118855 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 2.033203874 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 2.033750871 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 2.033320469 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 2.036581835 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 2.039934801 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 2.033407108 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 2.032329386 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 2.033229967 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 2.033718523 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 2.033771818 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 2.033755639 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 2.038889509 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 2.033095673 seconds)
  done (took 50.76402374 seconds)
done (took 112.007187027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.220683551 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.580029589 seconds)
  done (took 8.759393773 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 2.037583334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.032803561 seconds)
  done (took 6.096635347 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 2.036775468 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 2.033979617 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 2.03493396 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 2.037398767 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 2.034619161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 2.03540252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 2.035218263 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 2.031599653 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 2.034512559 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 2.035483048 seconds)
  done (took 22.31078298 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 2.035959944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 2.03240081 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 2.035932561 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 2.037763779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 2.036890349 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 2.035903117 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 2.035285407 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 2.037910577 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 2.035851209 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 2.037424906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 2.03809626 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.03725345 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 2.036569731 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.036668784 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 2.025425587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 2.037897351 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 2.036801193 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 2.037140858 seconds)
  done (took 38.606288489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 2.03806006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 2.038262462 seconds)
  done (took 6.036350235 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 2.037424873 seconds)
    (2/7) benchmarking "second"...
    done (took 2.037233557 seconds)
    (3/7) benchmarking "month"...
    done (took 2.03880311 seconds)
    (4/7) benchmarking "year"...
    done (took 2.039467724 seconds)
    (5/7) benchmarking "hour"...
    done (took 2.039579477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 2.040761966 seconds)
    (7/7) benchmarking "minute"...
    done (took 2.038964099 seconds)
  done (took 16.233713195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.038077109 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.163795948 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.225273418 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.640928737 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.041131804 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.039293465 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.918317854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.040330655 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.040403486 seconds)
  done (took 22.110465646 seconds)
done (took 122.114724463 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.878945301 seconds)
  (2/8) benchmarking "printfd"...
  done (took 7.039920844 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.268096051 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.181054852 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.061961683 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.379370863 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 7.083807904 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.59324634 seconds)
done (took 44.449315573 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.124345362 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 7.037585962 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.066877529 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.068243505 seconds)
  done (took 23.13608049 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 7.043912953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.366810144 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.057736846 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.034216627 seconds)
  done (took 23.484444219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.419512187 seconds)
    (2/2) benchmarking "read"...
    done (took 2.392152368 seconds)
  done (took 6.779073474 seconds)
done (took 62.492904575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.039548607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 2.042525424 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 2.041397052 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 2.042387904 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 2.043028011 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 2.041656271 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 2.040023334 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 2.04216928 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 2.039543023 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 2.041575496 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.039736494 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 2.038863423 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.038865019 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.041236124 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 2.039404045 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.04074069 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 2.039918822 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 2.040558966 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.041395479 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 2.04014005 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.038826508 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.040064933 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 2.040567242 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 2.039504112 seconds)
  done (took 50.939393514 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 2.041490453 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 2.040640652 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 2.039115432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 2.039139218 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 2.041685632 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 2.042769013 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 2.040862625 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 2.0410149 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.040873305 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 2.039748328 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.040795024 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 2.042095991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 2.039956092 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 2.042196079 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.040476192 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 2.04102207 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 2.040510731 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.042993392 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.042312943 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.042190845 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 2.041106696 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.04220473 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 2.041164235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.042983784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.039921935 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.042815229 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 2.044657042 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 2.040254886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.040887752 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 2.041202615 seconds)
  done (took 63.205094612 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.048123455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 2.04452627 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 2.042379811 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 2.043040756 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 2.042614367 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 2.042988847 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 2.042518251 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 2.043979332 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 2.041237687 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 2.040280097 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 2.044501633 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 2.042163627 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 2.028947574 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 2.032571872 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 2.043988784 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 2.043540029 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 2.044288417 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.045670318 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 2.042765095 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 2.042962724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 2.041363036 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 2.044898361 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 2.044643637 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 2.044281673 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 2.043372097 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 2.045654849 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 2.043743148 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 2.044409158 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 2.042637379 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 2.04426064 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 2.045139868 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 2.045123939 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 2.042960759 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 2.044609413 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.042660106 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 2.041972139 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 2.043803794 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.04270643 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 2.044344884 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.044997401 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 2.044976644 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 2.044860106 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 2.046440636 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 2.035465954 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.045295695 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 2.04448559 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 2.047669932 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 2.043294905 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 2.046450398 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 2.047534683 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 2.045558554 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 2.046512 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 2.044545155 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 2.04540847 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 2.044814604 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 2.046979006 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 2.046352767 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 2.04635038 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 2.044026558 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 2.044500713 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 2.047611912 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 2.044264165 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 2.044251356 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 2.047854731 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.046565036 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 2.026933807 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 2.043045762 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 2.045474372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 2.045569808 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.046788089 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 2.046535995 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.045669081 seconds)
  done (took 149.120744996 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 2.046985163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.047651379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.045521594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.044682885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.045313174 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.044905265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.045072472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.047174148 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.045252493 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.045519841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.04653993 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.047580636 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.046330316 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.047061554 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.048820608 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.046667202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.047002982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.047593406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 2.047121524 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.048588923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.046595822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.046396027 seconds)
  done (took 46.99713646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.048039688 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.047379505 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 2.0452835 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.047783314 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.044079848 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.050024159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.045918158 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.046490704 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.046421313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.049222602 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.046399943 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.048174419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.048532597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.048627277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.047512835 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.044845024 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.046727972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.047285644 seconds)
  done (took 38.819415073 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.047537131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.04731727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 2.047783109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.048479086 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.046355937 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.049227368 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.047203315 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.046626318 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 2.049148153 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.046300067 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.04847141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.048646616 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.047364205 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.050504322 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.047524157 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.048851004 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 2.047032408 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.048985566 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.047659753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.050254711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.050587428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.048269771 seconds)
  done (took 47.034467111 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.048076087 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.049926387 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.050485835 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.048204716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.051133885 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.050509276 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 2.048526919 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 2.047135669 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 2.04598966 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 2.048814774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.049055387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.048744931 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.04978793 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.050128109 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 2.047648612 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.04779187 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.05025082 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.05019029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.049544259 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.048332301 seconds)
  done (took 42.953429079 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.048904543 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.051558211 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.050224015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.050722195 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.03909162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.051503146 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.05046714 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.051012282 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.052233331 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.051584335 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.05076448 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.052800967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.05071815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.052065699 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.051873485 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.053026488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.049794455 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.050790804 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.053022395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.051255607 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.053079594 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.050426087 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.052037128 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.052766422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.054065085 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.052382339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.051846763 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.050962319 seconds)
  done (took 59.406443368 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.052403866 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.049648729 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 2.051869525 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.052714021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.051826339 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 2.051692107 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.049976694 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.04976654 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.053009615 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.052862708 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 2.052289148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 2.049958331 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.052603419 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 2.053843104 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.052218333 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.050851555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.053535863 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.049357499 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.051171048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.050770739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.051572102 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.051885625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 2.053424307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.054114685 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.049449216 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.052350949 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.053165127 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.052654371 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.052784497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.052472286 seconds)
  done (took 63.532931473 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.07059178 seconds)
    (2/2) benchmarking "in"...
    done (took 2.073391688 seconds)
  done (took 6.120825929 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 2.055199486 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.05430418 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 2.053245812 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.053422285 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.056085819 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.0537769 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.055763563 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.053987241 seconds)
  done (took 18.413310432 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 2.05383702 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 2.059547166 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.053858641 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 2.053579361 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 2.055958073 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.064393622 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.052499388 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.055108115 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.05766048 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.055322547 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.06086067 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.059768605 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 2.065290336 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.06274159 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.052352232 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.05641284 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 2.058845155 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.057879802 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.055383868 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.055351574 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.059926394 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.054693745 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 2.055342719 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 2.05414554 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 2.053601232 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.05858393 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 2.067113471 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.055273223 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.05852871 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.056790012 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 2.06544519 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 2.056090329 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 2.055184221 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.056957453 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.055699434 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 2.056122525 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 2.063436715 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.055965452 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 2.057132816 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 2.056639303 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 2.059448405 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.060895883 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.06132045 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 2.066027984 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.056661599 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 2.05950732 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 2.057273566 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 2.059010062 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.059019052 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.063170945 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 2.065339577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.058223245 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.057030889 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 2.058938745 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 2.061682748 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.058336097 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 2.059215527 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.061567356 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.067235965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 2.0665349 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.062741443 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.080170714 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.069112361 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.058989486 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 2.058265657 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.069773783 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.086479501 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.062592636 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.061436972 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.05850472 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.067893835 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 2.060628223 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 2.058500913 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 2.056112277 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.07403778 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.069350173 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 2.058751696 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 2.060882482 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 2.060703236 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 2.06026711 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.060390522 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.058030562 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.060731886 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.061269269 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.069906552 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.087994683 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.06059575 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 2.059778679 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 2.062002656 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.061595912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.066118452 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 2.065212263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.060448682 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.06301299 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.066041356 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.062063856 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.061923581 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 2.063865815 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.061062629 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 2.07357282 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.057234254 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 2.061041832 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.066999956 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 2.069669739 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.063709723 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 2.059781231 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.061569022 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.0637904 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.071673719 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.061637415 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 2.06618342 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.061431486 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.062362236 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.067762972 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.060449291 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.064119673 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 2.071907348 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.068750165 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.06319141 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.066658268 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.057157006 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 2.064500799 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.072849866 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.08968081 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.06186366 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 2.066326354 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.070572649 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 2.077534594 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.067400022 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.059858681 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 2.063867757 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.062671709 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 2.064187148 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 2.064256769 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.062271451 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 2.061905558 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 2.062784717 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 2.062229896 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 2.063347494 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 2.063558199 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.065672834 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 2.064502559 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.065365566 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.06132768 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.067869405 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.063977719 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 2.066842945 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.068222008 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.065916601 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.062798833 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.062565471 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.06547376 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 2.064285074 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.066141152 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.063592042 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.063079871 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.064396803 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.068173102 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.067312498 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.064319368 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.066477447 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.070140796 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.071534292 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.069056817 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.063771137 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.068474985 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.060571995 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.064629979 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.066819666 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.068669564 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 2.068355649 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.064690815 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.070311758 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.066376267 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.066395668 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.064869964 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.0648062 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.064431907 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.07073445 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 2.07743148 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.068762387 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.075602618 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.065109096 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.074328101 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.065188251 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.066395816 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.066190719 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.065604378 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.065075939 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.066466028 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 2.064731366 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.069022197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.089611651 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 2.078230288 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.068750842 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.068025966 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.075008343 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.072361879 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.074457954 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.06709757 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.068357069 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 2.068708513 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.06896489 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.066627876 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.06684347 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.070804153 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.066217584 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.067060098 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 2.071773862 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.065696205 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.065679285 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.067884619 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.066547766 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 2.071048698 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.067384202 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.068235942 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.069549234 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.066891589 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.077734489 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.070060451 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.064396603 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.068237041 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.072121011 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.067649332 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.068595623 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.068040345 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 2.071623046 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.066583058 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.068567542 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.074706701 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.06731049 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.069291794 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.066863225 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.065752007 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 2.070585666 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.067489189 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.071301994 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 2.078294666 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 2.072556342 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.067972382 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.074469144 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.066728382 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 2.072264994 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.068566131 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.070530311 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.066494271 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 2.070187768 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.070407733 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.067222202 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.076631062 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.067509487 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.071207375 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.067138252 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.07396364 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.071315915 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 2.073228641 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.068869045 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.073065967 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.07707165 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.073772468 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.069437084 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.072922087 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 2.050579553 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.070743364 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.074212228 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.069818259 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.083418295 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.08422637 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.069201776 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.069799133 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.070393917 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.07450286 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.067960205 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.071062797 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.078007728 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.071902753 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.072823422 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.074946516 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.061409513 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.07210333 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.080881252 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.07260914 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 2.072499561 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.071437182 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.070879975 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.071378184 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.069613503 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.07376447 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.069366274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.072259738 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.075679417 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.07290109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.072615851 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.070421855 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 2.081767152 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.070716132 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.074529108 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.082406262 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.071179117 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.071530401 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.071660068 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.070389164 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.072468192 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.071924506 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.070641997 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.07146188 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.070527183 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.075221584 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.084488778 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.076511113 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.080809215 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.073113608 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.082498031 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.071763546 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.069992202 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.071783489 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.074829245 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.081774363 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.070054278 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.073039603 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.078600916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.072478905 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.075355803 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.077008183 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.071947145 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.072824822 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.07492434 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.073285886 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.080390341 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 2.075803835 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.071982616 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.073392144 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.074134595 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.07352494 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.075384751 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.075916734 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.073901166 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.073690125 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.074297 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.072243558 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.071480733 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.071803371 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.0744834 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.07456817 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.072975879 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.082078484 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.076395547 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.074886602 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.077367369 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.073459068 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.084011605 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.073525319 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.075166491 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.075424127 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.074057064 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.079302612 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.07387318 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.07369887 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.073579108 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.076624372 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.077526518 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.089690659 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.085602978 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.081083529 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.079693101 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.076391653 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.07818572 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.083520058 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.106493796 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.075119826 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.078156226 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.079235831 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.083626291 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.076122545 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.082015586 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.080094025 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.085826614 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.078477479 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.075270684 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.078838663 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.091479001 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.077874662 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.075207615 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.075582847 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.080552479 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.081529425 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.073569602 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.077617971 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.078398247 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.078257369 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.08926029 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.077646076 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.07866733 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.080679917 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.07742738 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.077726205 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.076708493 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.078261147 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.078523384 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.074643633 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.079606974 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.079409017 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.085192697 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.078100807 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.080733976 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.089753279 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.077824617 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.080620616 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.081509691 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.079096962 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.081727804 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.076872366 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.078536426 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.080351776 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.077981445 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.079506734 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.080960355 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.090274854 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.080287895 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.077305128 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.079057189 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 2.084046863 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.079837886 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.079111121 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.080597215 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.085743706 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.082105078 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.093165561 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.090197239 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.077084831 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.081507488 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.087241004 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.088510056 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.078156687 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.079281467 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.080074076 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.083769471 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.08322812 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.077893231 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.079005083 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.079509462 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.086241258 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.080105132 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.08010002 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.081072977 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.081024367 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.079671934 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.080447435 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.085226055 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.080569649 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.079749956 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.079021596 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.082086043 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.080775728 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.080364271 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.079846551 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.078861542 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 2.081673148 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.079942743 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.085340404 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.07808653 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.081808169 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.081632592 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.07703954 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.080898241 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.081372505 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.084649512 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.080883923 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.084417505 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.085940694 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.080994239 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.084201901 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.080620661 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.086294738 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.081200267 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.08198485 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.080241062 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.080969429 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.088904246 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.080499062 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.080810573 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.084811944 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.080015483 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.089184501 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.081452159 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.087206171 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.081049123 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.08070356 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.08259596 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.086592594 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.090346134 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.087588098 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.087811438 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.09281831 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.088546825 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.083842696 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.084454881 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.08312543 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.084268122 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.085485352 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.086480373 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.082862527 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.088421444 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.083892391 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.084605483 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.08545489 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.08640686 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.080745589 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.084202872 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.090121647 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.095215099 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.092375185 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.084334686 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.085955579 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.08152282 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.087024177 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.096599182 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.084940968 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.082739698 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.084993588 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.086539373 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.085893394 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.09296122 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.094856498 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.08918777 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.082324402 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.092107204 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.106861883 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.088184548 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.094943962 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.122080934 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.088324116 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.085407418 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.084818429 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.087773001 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.084968576 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.090734403 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.085631367 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.095042263 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.083650325 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.083982338 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.092388663 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.085745606 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.087073359 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.085377061 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.083415305 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.095492339 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.08632019 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.097901957 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.082007687 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.079564527 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.081222907 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.084548878 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.083681077 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.083936304 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.081174939 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.08349528 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.08543312 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.083295552 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.090799449 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.080728075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.086158097 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.589534911 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.09735105 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.07980756 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.081233982 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.081919287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.087809256 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.08401732 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.08402883 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.087716891 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.092881525 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.085477339 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.086996291 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.081612946 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.08174047 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.080734419 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.077524238 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.079323699 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.088119863 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.089540512 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.078351377 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.079111162 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.084554372 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.076779359 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.085623803 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.082895379 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.074010577 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.077455632 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.077764598 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.076598074 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.076785836 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.079256191 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.082429234 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.088222997 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.07631176 seconds)
  done (took 1238.51551618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.077838851 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.080583529 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.078357419 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.078015494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.07724195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.07885104 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.080060455 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.079624582 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.078020998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.081402454 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.078073532 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.076610256 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.076311625 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.072590177 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.073047608 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.077306053 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.076683836 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.077027507 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.078673452 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.076715929 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.075036019 seconds)
  done (took 45.629564411 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.079423897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.077910549 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.080341552 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.080736711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.080878047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.080129755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.079420866 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.07750909 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.077892034 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.078831287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.079790929 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.079596141 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.079701102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.080360923 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.081156072 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.0805954 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.079889757 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.080826758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.079897079 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.078578289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.083522606 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.077989189 seconds)
  done (took 47.756446084 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.080104084 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.078087893 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.083494348 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.078596516 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.0800729 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.081048378 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.080142747 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.082810255 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.079991664 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.081495458 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.08931299 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.090101411 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.080172457 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.084207444 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.080165515 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.079538398 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.224689017 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.082190315 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.084359752 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.08263081 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.081073722 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.090295629 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.077710095 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.078718651 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.084162837 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.079331149 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.082302453 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.08125951 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.078988557 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.082184034 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.084743754 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.081102579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.081281467 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.08325528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.080561612 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.083890237 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.085555506 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.080948309 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.08126012 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.080558202 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.093273413 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.109722022 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.080290493 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.080934431 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.089505814 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.078272267 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.07700337 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.086052185 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.091661032 seconds)
  done (took 104.210363656 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.082115136 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.081546201 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.078971145 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.081706466 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.079801543 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.080187062 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.080710134 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.081217309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.080716958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.083062681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.080248826 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.078045399 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.081132091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.079537772 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.078917229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.076041227 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.04559669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.076419116 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.07952387 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.079304117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.072599153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.061898635 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.069548423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.071542603 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.073186172 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.066877293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.069860462 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.072832186 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.06816295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.070104951 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.068252196 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.066458072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.066816458 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.073575188 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.070328059 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.065609776 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.066215718 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.067428301 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.067851646 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.070511089 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.066498566 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.066273137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.06492734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.067164043 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.068235512 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.070379847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.068450673 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.065485727 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.069695068 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.066028465 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.063679791 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.064085805 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.06427408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.063672962 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.060388576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.06091012 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.066597715 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.061322191 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.068265812 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.062655428 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.064404162 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.063181553 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.063246592 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.065271292 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.062213269 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.061370566 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.058192851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.060025441 seconds)
  done (took 142.755384846 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.05805699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.058224421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.058871521 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.058657213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.060477634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.024621128 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.05588353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.056392315 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.053417308 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.055763714 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.054712334 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.05551097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.04963116 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.038764242 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.055180857 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.052594889 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.05517135 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.054878533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.055587954 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.053155257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.043700511 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.043513409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.054983219 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.053525686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.052163525 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.05368158 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.054247714 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.053724621 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.053748467 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.054887581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.05254118 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.0538034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.055085206 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.055904669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.052018602 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.052969086 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.051951257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.053998511 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.055643488 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.053169782 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.052166697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.054699487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.021595135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.049965396 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.052492188 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.049781621 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.056253536 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.052270554 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.052900312 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.052603092 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.053882887 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.051768212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.048396012 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.050357543 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.053489259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.050952517 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.052515432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.04993853 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.048401915 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.05110248 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.05341634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.04918259 seconds)
  done (took 129.2173204 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.047498481 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.050370164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.050796688 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.050327282 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.054922808 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.047852247 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.049561905 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.046966282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.052243985 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.052254875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.048282659 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.051664987 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.048191427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.048377535 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.049446733 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.04705096 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.049995871 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.048563886 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.048807078 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.048931102 seconds)
  done (took 42.969428389 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.046835632 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.047113648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.049020439 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.049718388 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.04605847 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.047045698 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.046692119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.049609478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.047411575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.048490856 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.04811373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.048632001 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.046633208 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.049831005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.047388768 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.047132835 seconds)
  done (took 34.736639628 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.047888947 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.046737782 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.046496274 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.04879815 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.046818371 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.047678239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.045867956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.046779953 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.046223678 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.046063852 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.05062694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.047383492 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.043041147 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.046818887 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.047190781 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.045477611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.04535442 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.045283635 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.045596749 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.042643568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.046435053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.045679567 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.045252651 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.04402808 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.046570398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.045130875 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.04519494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.047113617 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.045750853 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.044831092 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.045809927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.047013637 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.045359333 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.044262067 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.04663744 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.046267146 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.044945813 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.042944163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.044868031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.044513722 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.046651005 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.044557006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.046175776 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.047820485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.044254136 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.04192718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.043955379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.044737829 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.045657282 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.041878702 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.044034068 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.047694902 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.044535021 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.045403449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.046404392 seconds)
  done (took 114.485554707 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.043498663 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.044835579 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.048161674 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.045972191 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.043989332 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.044064536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.045214674 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.044440033 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.043767628 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.043510823 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.046112474 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.045246143 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.044424361 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.047150733 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.04335489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.044769848 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.04527037 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.045050183 seconds)
  done (took 38.775606669 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.045819339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.047671045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.047248971 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.045976907 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.049982783 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.047372055 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.045115046 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.044973313 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.044482421 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.047475112 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.044056761 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.043790158 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.047088533 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.046637936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.045172667 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.044448952 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.045572276 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.047601095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.04659736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.044324578 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.047006489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.049919078 seconds)
  done (took 46.984922088 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.045253786 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.044374017 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.064306967 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.064122656 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.065754179 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.081886909 seconds)
  done (took 14.335146465 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.047822755 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.04796042 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.047118018 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.051198334 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.0493481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.047708897 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.048017047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.045476238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.047206306 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.049723183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.047943999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.046072989 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.049979689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.047459282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.047291226 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.048870915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.046439406 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.048755332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.049575836 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.048099724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.047621984 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.047026338 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.048840831 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.051979979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.052161163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.051091779 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.047163774 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.049578078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.049700752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.050754945 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.048034317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.045817826 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.050477377 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.047693348 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.048277224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.050288403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.050382679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.048993105 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.04810958 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.048993395 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.048540669 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.05121373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.049535878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.050629268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.050445833 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.050628108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.049484211 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.050262043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.048283998 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.050223808 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.051136653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.051390936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.050727175 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.049786691 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.052048836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.051786906 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.048789847 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.050050323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.049180545 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.051280555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.048974591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.05119313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.048682731 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.050338248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.052315076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.049933131 seconds)
  done (took 137.223761951 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.050264553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.049825946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.051452399 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.05064248 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.05261314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053585462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.049664425 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.053613409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.049840501 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.05167199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.05174016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053882265 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.051607151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053883913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.053263967 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.051972669 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.050782107 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.051491691 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.050174843 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.053092158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.051893613 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.049391761 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.052792709 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.050903633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053464823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.049513459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.049636684 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.049614183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.04852187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.051837498 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.054315146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.055377604 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.051738892 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.051498967 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.054161929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.053435842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.053151107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.05328962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.052348142 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.055173887 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.053096387 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.054018119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.054020606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.055107927 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.051394317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.050885448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.051676987 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.051646721 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.055291451 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.051591364 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.052078173 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.051821636 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.053909116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.056562704 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.056346257 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.057164029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.054654447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.05529185 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.057787671 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.056446082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.057430273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.056709131 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.056542983 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.05953457 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.058646349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.056318179 seconds)
  done (took 137.476505105 seconds)
done (took 2863.590095634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.101180937 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.190949026 seconds)
  done (took 16.270738725 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.226292739 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.093427673 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.245028966 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.177585885 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.0852397 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.085609891 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.059150106 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 2.065181953 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.157907579 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.064908987 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.095225348 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.060968773 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.064293924 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.065556964 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.06506835 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.065925738 seconds)
  done (took 55.670817603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.068948659 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.069926057 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 2.068867662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.066055081 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.081763599 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.141010344 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.084217187 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.072637667 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.082294682 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.103622591 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.081522572 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 2.073734279 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 2.074333874 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.075352595 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.161575911 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.110054335 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.123052663 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.140188227 seconds)
  done (took 39.664364634 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.145684077 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.075175482 seconds)
  done (took 11.213700782 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.086448763 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.070557883 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.076456011 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.057615445 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.065351881 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.072662624 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.093113332 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.090831957 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.095674675 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.085105421 seconds)
  done (took 72.833051389 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.067540576 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.06796593 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.344651917 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.068189768 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.075166042 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.09435137 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.067982879 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.099282804 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.063038084 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.056422973 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.071716577 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.353737264 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.076788095 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.066070522 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.416537355 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.073685579 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.071074644 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.100058438 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.095616824 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.070285445 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.074199193 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 2.072503581 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.230022538 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.775397263 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.066886739 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.070485686 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.071357532 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.065514502 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.064584369 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.070918288 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.069134382 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.067911979 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.071735113 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.073195013 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.068611437 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.071793979 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.565465626 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.08363525 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.076896438 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.149526354 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.115154703 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.053829803 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.850607837 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.067023911 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.065951337 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.079672732 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.752839544 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.142714528 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.067843554 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.240274671 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.450478006 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.079289211 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.238995331 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.238640217 seconds)
  done (took 143.690957679 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.065073462 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.302905366 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.218816151 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.070153586 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319424281 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274021951 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.063928176 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.111427942 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.065431533 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267261956 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321809835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.169454087 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.064720993 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.065577704 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.064584412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.062561441 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.200722348 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.11320754 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.067550365 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.066162178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.09246689 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.246685454 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.180886819 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.064819406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.084888863 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.258986051 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.183509045 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.167599869 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.885676625 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.067590673 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.130577734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.067378091 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.069711109 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.063600475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.220813497 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.157943893 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.147665235 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.067444975 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.066813736 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.067440918 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.74226594 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266937774 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.159955548 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.187198385 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312621189 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.276920957 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.675328466 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.071166269 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.698056395 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.232890045 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.275024836 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.280022005 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.183762082 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.071130561 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.623824089 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.067486039 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.068600599 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.286308677 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279814092 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.167303077 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.071889685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.069608857 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.065995773 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309509315 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.071214923 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.155783123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.067167251 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.065288105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.165782224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.16814114 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.289131926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.29092845 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.096656741 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.398544511 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.566524438 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.273790082 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.132254103 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288201526 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.069468706 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.067736115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.150262895 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.910204371 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.329012313 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312152641 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266227973 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.098432188 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.723171786 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.070250909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.257324595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.258649895 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.299279919 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315597295 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.308647454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.447594231 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.071067469 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.07309819 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.386355948 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186165754 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.014919168 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.42972907 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.299469959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.598771599 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.096789222 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.398209097 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.19616987 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.075937259 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.718756287 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.073878633 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.276566749 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.111738436 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.070480331 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.072650477 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.261033076 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.037418752 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.073225055 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.038260618 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.131100986 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.071044682 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274637292 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.074698416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.31786236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.071095818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306188609 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.709013674 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.101887993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.298469577 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317315546 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.708198162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313093935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310946475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.184985768 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340860918 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 7.074350273 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.071433113 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.334705327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.073098229 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.074729655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.245125429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.074082322 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.217164063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.077623592 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.339783674 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.09027734 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301824681 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.07717315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.307913249 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.101476322 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.127030871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.076233913 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.202129588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.075793562 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.919424738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.232631859 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.078773615 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.075006397 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.840609393 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.07640113 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.223240045 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30399243 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.090697407 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.14252827 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.635728397 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.074280163 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160041293 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.093971551 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.706110438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.076766332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.329018356 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.051281926 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.55892395 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.076148704 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.312560756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.306595167 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.08252312 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.076624968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.919297671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.076499696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.076219861 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.233007031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.450829626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.999433415 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275479627 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.074688379 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.201879811 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.07447592 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.15678377 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.422647399 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.075924142 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.076121706 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.078192084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.077284243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.077655746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.336636328 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.100313833 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.508588728 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.210525116 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.331663455 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.38214049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.275548003 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.111693334 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.082788568 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.293028937 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.075446417 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.13710096 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.076408578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.096715905 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302677141 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.07961233 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.283878174 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308808633 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.040654515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.124495025 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.07856644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.080695594 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.048833802 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.223897529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.159356638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.077876026 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.079609164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.194911252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.194098213 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.256144156 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.900974721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.200469071 seconds)
  done (took 947.158791539 seconds)
done (took 1288.485291046 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.082112078 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.08091308 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.083055442 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.072214419 seconds)
  done (took 30.320663853 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.081405227 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.082871619 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.079276155 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.083242467 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.080265778 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.08036289 seconds)
  done (took 14.490677775 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.081985397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.081209683 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.07954718 seconds)
  done (took 23.247161358 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.506345449 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.486031285 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.159321653 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.221926463 seconds)
  done (took 11.377166959 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.087510033 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.081677191 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.079131085 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.082427492 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.080511649 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.081416062 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.08327845 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.083213441 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.081466067 seconds)
  done (took 20.751401524 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.210426763 seconds)
done (took 106.399358392 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.08230625 seconds)
    (2/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.293481659 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.112015004 seconds)
    (4/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.351175916 seconds)
    (5/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.109350614 seconds)
    (6/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.324693809 seconds)
    (7/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.178353732 seconds)
    (8/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 5.187773828 seconds)
    (9/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.137156603 seconds)
    (10/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.203929159 seconds)
    (11/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.090148138 seconds)
    (12/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.447458728 seconds)
    (13/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.094420101 seconds)
    (14/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.470585587 seconds)
    (15/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.674077892 seconds)
    (16/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.265411993 seconds)
    (17/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.097748472 seconds)
    (18/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.476983789 seconds)
    (19/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.716089272 seconds)
    (20/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.486688714 seconds)
    (21/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.462654137 seconds)
    (22/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.400121768 seconds)
    (23/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.101738544 seconds)
    (24/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.314853677 seconds)
    (25/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.39177015 seconds)
    (26/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.371600823 seconds)
    (27/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.083130926 seconds)
    (28/341) benchmarking ("sort", Float64, false)...
    done (took 5.857721825 seconds)
    (29/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.87789681 seconds)
    (30/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.157078217 seconds)
    (31/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.526821867 seconds)
    (32/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.413756994 seconds)
    (33/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.402951957 seconds)
    (34/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.097244826 seconds)
    (35/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.028094914 seconds)
    (36/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.942679448 seconds)
    (37/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.346573186 seconds)
    (38/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.178561345 seconds)
    (39/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.278756181 seconds)
    (40/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.06864039 seconds)
    (41/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.381953621 seconds)
    (42/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.087770859 seconds)
    (43/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.214445751 seconds)
    (44/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.398840317 seconds)
    (45/341) benchmarking ("sort", Int8, false)...
    done (took 5.029751246 seconds)
    (46/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.313338333 seconds)
    (47/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.179913896 seconds)
    (48/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.093689403 seconds)
    (49/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.161588022 seconds)
    (50/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.435856429 seconds)
    (51/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.195896195 seconds)
    (52/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.311808955 seconds)
    (53/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.094742042 seconds)
    (54/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.213640503 seconds)
    (55/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.083247431 seconds)
    (56/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.647765212 seconds)
    (57/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.626825659 seconds)
    (58/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.454239313 seconds)
    (59/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.081924854 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.577426967 seconds)
    (61/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.281588907 seconds)
    (62/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.3499641 seconds)
    (63/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.354692061 seconds)
    (64/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.47135492 seconds)
    (65/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.764795728 seconds)
    (66/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.167999777 seconds)
    (67/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 4.341801502 seconds)
    (68/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.491090076 seconds)
    (69/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.086431554 seconds)
    (70/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.386162094 seconds)
    (71/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.334421668 seconds)
    (72/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.095617056 seconds)
    (73/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.35796227 seconds)
    (74/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.215108005 seconds)
    (75/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.083083553 seconds)
    (76/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.638572165 seconds)
    (77/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.255019246 seconds)
    (78/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.67622953 seconds)
    (79/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.350949563 seconds)
    (80/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.08643649 seconds)
    (81/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.215178376 seconds)
    (82/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.113721076 seconds)
    (83/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.15409494 seconds)
    (84/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.708680195 seconds)
    (85/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.191535565 seconds)
    (86/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.103448393 seconds)
    (87/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.166694955 seconds)
    (88/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.288055854 seconds)
    (89/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.101405218 seconds)
    (90/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.980446769 seconds)
    (91/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.226386551 seconds)
    (92/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.475119833 seconds)
    (93/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.165683075 seconds)
    (94/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.024894607 seconds)
    (95/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.856601852 seconds)
    (96/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.189702282 seconds)
    (97/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.085307626 seconds)
    (98/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.299973516 seconds)
    (99/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.417634867 seconds)
    (100/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.845212002 seconds)
    (101/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.425232637 seconds)
    (102/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.424142206 seconds)
    (103/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.091388437 seconds)
    (104/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.358417711 seconds)
    (105/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.201447468 seconds)
    (106/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.092588318 seconds)
    (107/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.556249354 seconds)
    (108/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.170127522 seconds)
    (109/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.573214011 seconds)
    (110/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.086012684 seconds)
    (111/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.327532433 seconds)
    (112/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.09908388 seconds)
    (113/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.476425595 seconds)
    (114/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.105356592 seconds)
    (115/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.218103585 seconds)
    (116/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.493176974 seconds)
    (117/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.088697179 seconds)
    (118/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.403545886 seconds)
    (119/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.208215477 seconds)
    (120/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.098765496 seconds)
    (121/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.101113323 seconds)
    (122/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.392478989 seconds)
    (123/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.832955439 seconds)
    (124/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.086685823 seconds)
    (125/341) benchmarking ("sort", BigInt, false)...
    done (took 7.153577218 seconds)
    (126/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.090835887 seconds)
    (127/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.086112951 seconds)
    (128/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.402318834 seconds)
    (129/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.401271464 seconds)
    (130/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.211517049 seconds)
    (131/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.789326137 seconds)
    (132/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.384745478 seconds)
    (133/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.36159808 seconds)
    (134/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.063954546 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.81565268 seconds)
    (136/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.09743446 seconds)
    (137/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.089670431 seconds)
    (138/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 4.211972008 seconds)
    (139/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.367857427 seconds)
    (140/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.861062691 seconds)
    (141/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.421380185 seconds)
    (142/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.107244871 seconds)
    (143/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.220832366 seconds)
    (144/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.476526325 seconds)
    (145/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.323116027 seconds)
    (146/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.087708699 seconds)
    (147/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.170692003 seconds)
    (148/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.213323341 seconds)
    (149/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.173435675 seconds)
    (150/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.220704368 seconds)
    (151/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.176810553 seconds)
    (152/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.342255509 seconds)
    (153/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.169413172 seconds)
    (154/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.168791636 seconds)
    (155/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.208288024 seconds)
    (156/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.380429621 seconds)
    (157/341) benchmarking ("sort", Bool, false)...
    done (took 2.306648305 seconds)
    (158/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.227027462 seconds)
    (159/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.347783887 seconds)
    (160/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.488824372 seconds)
    (161/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.099596121 seconds)
    (162/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.220174902 seconds)
    (163/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.002761431 seconds)
    (164/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.093440229 seconds)
    (165/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.617989285 seconds)
    (166/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.076526415 seconds)
    (167/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.115584154 seconds)
    (168/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.105922317 seconds)
    (169/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.151890709 seconds)
    (170/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.101483526 seconds)
    (171/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.862870163 seconds)
    (172/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.089276496 seconds)
    (173/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.107948708 seconds)
    (174/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.106638107 seconds)
    (175/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.090439086 seconds)
    (176/341) benchmarking ("sort", Int64, false)...
    done (took 5.76659602 seconds)
    (177/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.444660755 seconds)
    (178/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.176274644 seconds)
    (179/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.573364457 seconds)
    (180/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.851390975 seconds)
    (181/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.127887907 seconds)
    (182/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.299463049 seconds)
    (183/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.37593309 seconds)
    (184/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.219960358 seconds)
    (185/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.871863648 seconds)
    (186/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.51013963 seconds)
    (187/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.094390501 seconds)
    (188/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.211018676 seconds)
    (189/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.111377032 seconds)
    (190/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.102611414 seconds)
    (191/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.894363356 seconds)
    (192/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.249776827 seconds)
    (193/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.881435399 seconds)
    (194/341) benchmarking ("sort", Float32, false)...
    done (took 5.875266214 seconds)
    (195/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.2487685 seconds)
    (196/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.211164905 seconds)
    (197/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.988313666 seconds)
    (198/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.511740471 seconds)
    (199/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.200843597 seconds)
    (200/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.200200571 seconds)
    (201/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.895409434 seconds)
    (202/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.447492925 seconds)
    (203/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.29201672 seconds)
    (204/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.117604546 seconds)
    (205/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.320530333 seconds)
    (206/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.097746644 seconds)
    (207/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.435188423 seconds)
    (208/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.266301344 seconds)
    (209/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.218355724 seconds)
    (210/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.352940686 seconds)
    (211/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.230600405 seconds)
    (212/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.336790739 seconds)
    (213/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.997041398 seconds)
    (214/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.139644679 seconds)
    (215/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.131006762 seconds)
    (216/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.107196077 seconds)
    (217/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.108436464 seconds)
    (218/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.912427538 seconds)
    (219/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.393939307 seconds)
    (220/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.100603419 seconds)
    (221/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.117701339 seconds)
    (222/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.206216235 seconds)
    (223/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.511854046 seconds)
    (224/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.238090293 seconds)
    (225/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.173272391 seconds)
    (226/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.096978748 seconds)
    (227/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.180710775 seconds)
    (228/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.32972527 seconds)
    (229/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.099562581 seconds)
    (230/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 3.920597922 seconds)
    (231/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.224311724 seconds)
    (232/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.280141136 seconds)
    (233/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.184749337 seconds)
    (234/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.494648293 seconds)
    (235/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.299600764 seconds)
    (236/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.986283931 seconds)
    (237/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.230192211 seconds)
    (238/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.441427103 seconds)
    (239/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.38581597 seconds)
    (240/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.765630944 seconds)
    (241/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.172012136 seconds)
    (242/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.194566555 seconds)
    (243/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.100126945 seconds)
    (244/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.096947502 seconds)
    (245/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.11214612 seconds)
    (246/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.253746689 seconds)
    (247/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.762753014 seconds)
    (248/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.098474 seconds)
    (249/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.184165527 seconds)
    (250/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.403295187 seconds)
    (251/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.108271364 seconds)
    (252/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.111721124 seconds)
    (253/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.17367678 seconds)
    (254/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.098575356 seconds)
    (255/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.270816034 seconds)
    (256/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.100104401 seconds)
    (257/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.120789683 seconds)
    (258/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.299277111 seconds)
    (259/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.172580809 seconds)
    (260/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.100837922 seconds)
    (261/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.213643483 seconds)
    (262/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.367904062 seconds)
    (263/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.095102948 seconds)
    (264/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.131583531 seconds)
    (265/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.416647427 seconds)
    (266/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.199016209 seconds)
    (267/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.982591323 seconds)
    (268/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.122339526 seconds)
    (269/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.239954847 seconds)
    (270/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.071119258 seconds)
    (271/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.309565539 seconds)
    (272/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.500859911 seconds)
    (273/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.195971837 seconds)
    (274/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.222620179 seconds)
    (275/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.412370736 seconds)
    (276/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.228899223 seconds)
    (277/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.231756122 seconds)
    (278/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.184226519 seconds)
    (279/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.221001225 seconds)
    (280/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.111352968 seconds)
    (281/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.492437266 seconds)
    (282/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.094003211 seconds)
    (283/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 4.002764858 seconds)
    (284/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.496545406 seconds)
    (285/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.992193208 seconds)
    (286/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.169291912 seconds)
    (287/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.228533452 seconds)
    (288/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.09772597 seconds)
    (289/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.124477197 seconds)
    (290/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.298626745 seconds)
    (291/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.098971479 seconds)
    (292/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.416494433 seconds)
    (293/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.314736728 seconds)
    (294/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.373890871 seconds)
    (295/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.405601096 seconds)
    (296/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.414807028 seconds)
    (297/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.205147073 seconds)
    (298/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.172856484 seconds)
    (299/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.649978598 seconds)
    (300/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.354990739 seconds)
    (301/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.189126836 seconds)
    (302/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.564496221 seconds)
    (303/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.419454336 seconds)
    (304/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.118764226 seconds)
    (305/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.245620597 seconds)
    (306/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.57714158 seconds)
    (307/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.635094255 seconds)
    (308/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.393166471 seconds)
    (309/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.09891954 seconds)
    (310/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.129905844 seconds)
    (311/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.11625001 seconds)
    (312/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.175869391 seconds)
    (313/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.775174104 seconds)
    (314/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.806371746 seconds)
    (315/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.367360746 seconds)
    (316/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.098917504 seconds)
    (317/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.155665696 seconds)
    (318/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.138132847 seconds)
    (319/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.739237634 seconds)
    (320/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.587046838 seconds)
    (321/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.353582771 seconds)
    (322/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.419266812 seconds)
    (323/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.918911247 seconds)
    (324/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.999088404 seconds)
    (325/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.25922293 seconds)
    (326/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.519021008 seconds)
    (327/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.279748908 seconds)
    (328/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.876528827 seconds)
    (329/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.239393951 seconds)
    (330/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.19950576 seconds)
    (331/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.002516089 seconds)
    (332/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.177821163 seconds)
    (333/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.269793548 seconds)
    (334/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.502508796 seconds)
    (335/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.100154582 seconds)
    (336/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 9.954474152 seconds)
    (337/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.283279067 seconds)
    (338/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.729176753 seconds)
    (339/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.991818925 seconds)
    (340/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.203220218 seconds)
    (341/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.177049707 seconds)
  done (took 1166.271241193 seconds)
done (took 1168.366284524 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.156806777 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.110345 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.608093188 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.11284288 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.106444115 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.113269137 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.622054973 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.132787359 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.126349071 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.620549394 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.117184287 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.109329934 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.123439343 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.14180557 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.118479582 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.123777635 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.117004361 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.134957854 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.143521764 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.116461065 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.161620299 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.114201269 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.109997234 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.158601213 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.109041395 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.125717842 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.128294302 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.159112535 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.158826982 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.111440884 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.114760495 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.46773807 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.157554207 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.114601712 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.122704911 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.125954364 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.116172084 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.126919045 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.128280329 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.123316979 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.112237006 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.116850156 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.113017857 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.11167697 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.110992614 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.109518704 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.111001222 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.234861897 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.122343117 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.451548297 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.166557719 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.129486175 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.162737972 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.113439786 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.114667645 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.112798347 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.161489608 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.116166043 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.116105558 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.455132329 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.201836695 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.123552913 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.454230276 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.171075575 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.12160632 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.117719439 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.108831805 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.129885705 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.469947647 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.661034621 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.140772297 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.129992785 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.117635167 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.111436595 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.12849634 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.620275197 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.121898357 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.6882541 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.134592705 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.127544185 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.115279132 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.113414188 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.113930183 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.128984347 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.131740843 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.114969472 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.120881497 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.116083596 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.126010018 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.472629771 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.151539229 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.612436324 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.116164652 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.131342788 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.13072317 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.688766956 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.137551278 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.129123953 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.117055878 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.46997774 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.15038667 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.131617909 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.11635754 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.127974317 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.225655517 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.13144399 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.132703411 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.114012969 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.136046552 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.121679357 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.114632538 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.1291339 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.134736688 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.146850728 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.129408693 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.112866246 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.121266285 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.119722962 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.129237241 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.123612156 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.118369824 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.126269547 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.114144742 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.166041858 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.132017155 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.131010173 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.228440079 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.119143016 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.241025889 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.129720817 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.119944707 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.113632634 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.457116668 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.156320824 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.135202792 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.121992258 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.136219698 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.136288976 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.129746349 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.118793267 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.130249857 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.118880843 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.165962403 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.116763264 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.141190327 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.166657583 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.127297079 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.122163586 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.132751107 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.149508403 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.136214052 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.119658796 seconds)
done (took 332.751186217 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.157544871 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.109552347 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.184592087 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.111163877 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.174870984 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.160856313 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.114665777 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.111038165 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.109975859 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.494523776 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.109566374 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.118204243 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.112226283 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.111558007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.161140126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.113995118 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.110735386 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.343998157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.111349995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.172672308 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.112157108 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.113239588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.113624797 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.501766114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.116023791 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.113105727 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.176122827 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.112207616 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.351783903 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.113966185 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.111878518 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.352655743 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.171615343 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.123115499 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.121026469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.119870488 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.17967205 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.121072764 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.158742006 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.159072804 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.18990098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.145389594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.111574912 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.110388455 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.115488056 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.114391516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.114232781 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.14409425 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.113250783 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.122635885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.343352977 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.119891288 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.125139112 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.115761674 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.116537542 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.127558484 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.113453354 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.118565073 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.17427632 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.117410589 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.163694929 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.505898443 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.496221654 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.116372712 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.119586575 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.115634783 seconds)
  done (took 199.939625097 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.184075755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.189820523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.182503281 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.120132711 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.16444001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.183874402 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.117024411 seconds)
  done (took 17.174622759 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.122694958 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.118793341 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.139921727 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.140379262 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.11545279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.253777477 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.12873579 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.119788145 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.141462563 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.117962362 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.454597301 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.139563503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.121873804 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.117801611 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.131385665 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.146828254 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.120927703 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.119715363 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.21593469 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.19458907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.123401916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.12339647 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.147377808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.130665124 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.120662698 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.118714924 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.117979315 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.12289226 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.118069182 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.1178298 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.117455522 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.131825541 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.119167457 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.117365391 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.115641313 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.118805979 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.117508559 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.12013219 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.118589905 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.11833752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.118884881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.119158338 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.117232649 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.118439967 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.117036138 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.140204206 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.119491492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.120413744 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.11771394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.120523695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.147936062 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.118842004 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.120187752 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.126107505 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.161334034 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.126388571 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.121392664 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.118393026 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.119982575 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.118845815 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.119043306 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.198768701 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.140181403 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.118868763 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.145228243 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.156202036 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.122755602 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.120475843 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.11734404 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.146809448 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.121787147 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.142782167 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.121183403 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.218074479 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.11939042 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.260944657 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.14325121 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.12319443 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.123948775 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.117454899 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.129448467 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.117842944 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.124153494 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.129814508 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.125682374 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.118526994 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.121008921 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.123786503 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.12824507 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.121745488 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.170991003 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.119095998 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.120422567 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.216879776 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.119023774 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.219858769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.147115118 seconds)
  done (took 229.356271538 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.127273748 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.121195366 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.13470757 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.121834133 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.122513127 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.126498703 seconds)
  done (took 14.792152126 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.123506781 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.12453944 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.122611228 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.123204157 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.121196471 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.122462811 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.121406074 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.124879529 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.125781586 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.122277967 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.124561229 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.124113259 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.124750123 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.123795149 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.123549725 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.120590838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.123166322 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.122113116 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.123870883 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.12509654 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.329895468 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.121644704 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.123414336 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.128689608 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.128273844 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.123448447 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.131804304 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.123402823 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.123919873 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.128582394 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.123707367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.123481649 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.125997169 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.129317335 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.126091314 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.128350807 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.128485297 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.125198425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.123484728 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.123976202 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.125863347 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.125254043 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.127079331 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.125051537 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.127259107 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.131656001 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.126912875 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.131917108 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.121722835 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.126498503 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.125702577 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.125692883 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.123310704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.12418705 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.130250796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.132710261 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.129738208 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.125112657 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.12675902 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.126603947 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.12742265 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.126734047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.125795623 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.127820385 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.131264136 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.125794009 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.130396219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.128776213 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.12366907 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.12536306 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.125847875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.125617878 seconds)
  done (took 156.29648301 seconds)
done (took 619.594432563 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.186248038 seconds)
  done (took 9.230041449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.263417139 seconds)
  done (took 9.380387751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.549949669 seconds)
  done (took 12.594599182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.146846529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.147945755 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.136016324 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.125376746 seconds)
  done (took 30.612972031 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.371352359 seconds)
  done (took 9.416709982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.136149735 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.120481768 seconds)
  done (took 16.365424085 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.155560237 seconds)
  done (took 9.199212549 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.283800654 seconds)
  done (took 9.359833596 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.142515672 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.137363455 seconds)
  done (took 16.343706061 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.126644488 seconds)
  done (took 9.167242108 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.909999646 seconds)
  done (took 10.040982024 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.1289272 seconds)
  done (took 9.192990089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.206601541 seconds)
  done (took 9.226503011 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.118836073 seconds)
  done (took 10.162586129 seconds)
done (took 172.339469284 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.133600984 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.125131032 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.126372173 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.123224521 seconds)
  done (took 30.549717452 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.163338837 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.160359013 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.171233445 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.144755392 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.150357462 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.14537267 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.165207048 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.160743071 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.150787351 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.161137574 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.160815657 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.157865239 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.162247021 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.171872566 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.169875909 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.16676248 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.163693661 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.162319886 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.153783969 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.172548269 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.16363305 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.162663378 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.129890242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.129144343 seconds)
  done (took 53.843196539 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.319717675 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.193770391 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.285190577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.174873394 seconds)
  done (took 11.017021924 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.1311702 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.195095621 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.179633998 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.179110432 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.225114813 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.23493557 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.182971654 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.338982754 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.241171408 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.254715431 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.138082914 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.151675019 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.154953903 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.17659291 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.23377709 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.125111784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.12911137 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.243457522 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.19392063 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.340746957 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.128951305 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.183589277 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.219218087 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.182145841 seconds)
  done (took 54.81260189 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.131762184 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.139696607 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.138196688 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.132175746 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.131875707 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.130957818 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.138251213 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.136814702 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.15185834 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.129521451 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.131225527 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.131094578 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.136785911 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.13144886 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.133403233 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.143217879 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.146132822 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.129711085 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.133701187 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.138148872 seconds)
  done (took 44.764979688 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.132056392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.976236733 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.475573919 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.380059033 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.12992569 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.126533905 seconds)
  done (took 33.270015343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.141672295 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.145891442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.139173207 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.153434968 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.179336395 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.137694958 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.191258554 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.266377897 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.133337029 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.190599564 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.149148912 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.143208859 seconds)
  done (took 28.019069385 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.132983288 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.133353378 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.133119317 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.142701091 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.146166606 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.137579335 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.140526066 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.135736676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.144511851 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.146566119 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.136163996 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.146703047 seconds)
  done (took 47.727773005 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.349408585 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.359423217 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.343618234 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.688780413 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.440674543 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.081767395 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.414161993 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.343930758 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.780173575 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.798235284 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.419366149 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.106420062 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.077138988 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.058682118 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.031108397 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.377811141 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.133947844 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.989560393 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.38647088 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.173358594 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.133086497 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.134925684 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.133103552 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.418928987 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.45494134 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.132092618 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.34845206 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.153650581 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.164809359 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.341056413 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.572842575 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.181511797 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.336934685 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.393821852 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.472316928 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.207859363 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.139873354 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.264551324 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174734712 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.17208545 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.147514315 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.146781219 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.676114965 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.149781874 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.406297833 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.13333007 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.159751067 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.123769771 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.055430082 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.381057812 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.234153442 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.135676708 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.169130646 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.569144025 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.255807065 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.379377294 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.142916475 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.267144395 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.185058115 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.316073464 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.272645275 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.142221824 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.348805362 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.063384282 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.464243426 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.242989401 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.139410646 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.139390092 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.839507357 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.382655491 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.216578362 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.378219389 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.877820197 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.138873321 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.14163471 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.179282743 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.234467507 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.133690221 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.429518931 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.117007567 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.062743291 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.235586771 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.536982293 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.144501014 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.137095821 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.144534065 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.98177005 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.063687151 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.23547925 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.317411679 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.446064563 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.137898695 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13598937 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.159205541 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.139923645 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.082296051 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.658581835 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.192473141 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.065887294 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.70263145 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.571698784 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.096086331 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.573175274 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.177315525 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.409113886 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.28155586 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.538715525 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.345949641 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.383494408 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.669119841 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.144194629 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.753151363 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.218001568 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213564359 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.139839287 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.699188594 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.274812362 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.347347383 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.236212277 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.136404938 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.063693818 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.15043145 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.342893499 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.570462296 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.188186067 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.128254026 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.142733446 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.137679748 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.1408553 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.245472977 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154205092 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.422019509 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.202640408 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.138509426 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.065388881 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.140818217 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.419807455 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.726279139 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.188667227 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.391105774 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.393515112 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.833920493 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.733069213 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.086852885 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.401371729 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.198919511 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.210160662 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.708032752 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.261450943 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.229699016 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.136531576 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267782535 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.147137681 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.13833099 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.471766338 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.548486002 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.568109971 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.181930784 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.136697885 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.092220755 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.2713157 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.377448567 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.175472883 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.161390902 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.142561529 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.222452662 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.365369565 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.135461822 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.06669864 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.377691143 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.375550543 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.422239545 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.538694725 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.173745291 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.207194844 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.149922853 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.342783505 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.223459465 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.788340316 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684841691 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.345786428 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.653170523 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.096282103 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.779542784 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.323199002 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.507431529 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.154678836 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.591359853 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.274052977 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.769145908 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.170151734 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.66882411 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.061414805 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.144267358 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.46835608 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.093658936 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.446750319 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.199293945 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.206045384 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.143969728 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.138306781 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.150374421 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.024714007 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.245076072 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211268159 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.214486298 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.068952816 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.737590259 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.178944122 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144827478 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.143631345 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.4227972 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.90567979 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.090134611 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.147646255 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.218736443 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.892519577 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.690654146 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.142782285 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.1442312 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.747900879 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.144538596 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.729652137 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.203896347 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.867900132 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.16367856 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.329606075 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.831149161 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.428717297 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.212361713 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.216541649 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.142123654 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.142516657 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.841849201 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.148386831 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.843709929 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.42139992 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.41485635 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.58229866 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.197442814 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.356118061 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.155935432 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.142986263 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.59494154 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.168596054 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.146704527 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.351080344 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.660200768 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.394543762 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 6.090318582 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.228311419 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.146392842 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.409053231 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.13713447 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.573691726 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.82972685 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.141468204 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.139129555 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.40448902 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.828871172 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145684825 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.121381673 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.152176279 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.360640107 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.344712541 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.410738167 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.43534629 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.591061746 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.07010085 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.153356066 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.166817929 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.388512214 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.145954133 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.183381881 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.594145088 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.190104395 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.57128544 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.42582586 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.461060911 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.772888427 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.40812407 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.206554137 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.156121014 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.802112656 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268696802 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.075398949 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.264298356 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.068800619 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.811078404 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.440558036 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.161626301 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.412367848 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.120177756 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.478187709 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.440045565 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.333841059 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.173639185 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.179422212 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.149761751 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.200485542 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.15162184 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.282832617 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.262861564 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.158590375 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.648361796 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189752071 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.197506947 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.156174312 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.629815733 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.168987734 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.153401966 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.84823091 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.173446135 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.268254397 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220394397 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.873408101 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.617313128 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.261581962 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.027795328 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.794525088 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.419616879 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200937363 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.588391408 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181669813 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.558076554 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.148986858 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.361913774 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.154281487 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.691477312 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193157441 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.415552012 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.09869749 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.358587005 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.348256287 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.171411157 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.15447637 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.07819746 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.314132874 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.018457089 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.128325152 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.152745059 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.833916403 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.532854363 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.306187113 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.559688071 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.975017527 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.154772201 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.434133304 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.532544073 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.732148667 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.179556166 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.155944347 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.408676264 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.272745371 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.384307806 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.430004211 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.161751042 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.182234494 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.3706875 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.279307131 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.073533545 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.628725045 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.737655755 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.855804352 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.165361587 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.361080883 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.406175312 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.372572166 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.18481339 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.234063811 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.560286611 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.415820326 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.2158185 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.07968293 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.15510561 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.549006169 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.556031272 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.255567595 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.397180298 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.459273238 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.717984665 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.597172054 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.556831759 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.522652968 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.587649146 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.559805275 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.362116617 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.510333641 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.475638079 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.749874228 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.569574251 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.367611162 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.256073556 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.424479601 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.016499891 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.865755584 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.399935773 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.162965151 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.087530288 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.364241343 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.162435403 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.581998796 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.684537724 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.405692899 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.339582932 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.626272778 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.698442339 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.296720449 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.178519958 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.126178806 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.185979628 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.177587404 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.158672401 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.640294165 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.443648204 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.17240683 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.100473229 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.827273606 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.085704302 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.374739994 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.295114923 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.192783973 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.716059478 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.34718779 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.24215051 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.447634266 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.345553295 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.193041134 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.084661897 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.820430435 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.103370891 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.197755329 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.583010036 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172718711 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.162246946 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.361941286 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.090584338 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.205070255 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.166720299 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.355636026 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.733907191 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.424294864 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.281225005 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.399179707 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.456294771 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.973926253 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.173567492 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.431873341 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.088913085 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.7676727 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.837171713 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.197697519 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230811622 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.161602211 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.164138295 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.4355657 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.415532344 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.368639563 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.620643471 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.192185392 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.187328607 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.409103648 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.237902425 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.165604116 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.169049258 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.607978582 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.392982492 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.165298137 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.137172886 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.373438693 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.237793632 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.356897573 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.236248514 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.677481028 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.168583769 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.987743884 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.249203828 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.114229785 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.159133104 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.838633529 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.219923647 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.161849168 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.434057242 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.81257806 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.367609056 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.560908074 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.034009387 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.299121896 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.197377887 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.166238398 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.297770579 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.450053727 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.461613034 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.160872106 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.429540787 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.203093514 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.168053888 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.828270037 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.131097393 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.162781103 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.896379622 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.042446442 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.890872462 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.562780293 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.168456436 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.182815786 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.169345826 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.092791407 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.163516435 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.333933772 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.134776288 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.299950791 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.42999125 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.394869411 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.241023921 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.167917073 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.165243742 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.16651873 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.377788619 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.676517518 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182728511 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.86533539 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.365619179 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.173413148 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.64470623 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.611739692 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.367035135 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.199540514 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.301197019 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.401065687 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.700040519 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.303773871 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.137459813 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.388743741 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.167149312 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.439502501 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.440368634 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.166332399 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.375538025 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.614153172 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.44141767 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.511445058 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.475302716 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.224791465 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.31139517 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.061155884 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.163807477 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.168673659 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.430953814 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.2150906 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.167490895 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.175817742 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.721632056 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.831119548 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.625065239 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.316046205 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.417729961 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.904054047 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.920148422 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.169482602 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.094878793 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.165996532 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.190151408 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.169788069 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.095293667 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892651059 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.884355273 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.353417629 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.477289554 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.09531586 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.372212094 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.772776313 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.091542596 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.136579882 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.169080933 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.428392101 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.092955225 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.172879155 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.122078629 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.379068288 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.84407098 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.435185601 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.17086198 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.111472789 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.16750278 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.17102339 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.166119937 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.254062696 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.170900276 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.284967119 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.43084766 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.464413621 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.259254034 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.809869794 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.886797134 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.10372529 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208903259 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.783289879 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.738420836 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.382702014 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.283669977 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.885019772 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.111287529 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.172481094 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.187625659 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.431745648 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171331823 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.17232756 seconds)
  done (took 2243.458376189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.194479251 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.586565552 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.196637364 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.179709244 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.175961586 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.192147249 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.192525936 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.170672845 seconds)
  done (took 59.973848485 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.165810172 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.244279544 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.17711528 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.168494751 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.16840778 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.172709592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.41704261 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.201293206 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.169481304 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.180048438 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.174799404 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.176689604 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.171605346 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.173488999 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.178059217 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.498374583 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.193293031 seconds)
  done (took 81.724440252 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.231767047 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.038690786 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.17750126 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.845404453 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.231000944 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.556765929 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.177909574 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.177386158 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.293848167 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.473070055 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.178565155 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.192917112 seconds)
  done (took 93.667098078 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.17204477 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.174378638 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.177565665 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.175126218 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.172092074 seconds)
  done (took 12.964388812 seconds)
done (took 2797.898484002 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.55460016 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.269870736 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.247500198 seconds)
  done (took 6.611850333 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.316156383 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.366454947 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.482728902 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.503872259 seconds)
  done (took 11.768081945 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.462786582 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.549342242 seconds)
  done (took 7.106907907 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.602708001 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.185472257 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.61521927 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.169199069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.177253803 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.179146505 seconds)
  done (took 23.62290223 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.172803158 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.174374741 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.175147245 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.175899873 seconds)
  done (took 10.793059559 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.172434955 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.948158555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.171819522 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.18196172 seconds)
  done (took 22.568402659 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.376608512 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 3.187368214 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.943865027 seconds)
  done (took 10.602080428 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.799121724 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.613084631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.783178861 seconds)
  done (took 10.288533729 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.318566838 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.160104208 seconds)
  done (took 8.573374819 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.316668954 seconds)
  done (took 4.409838076 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 3.01633866 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.486996917 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.651440874 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.683252675 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.759345891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.391298438 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.508719906 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.436452132 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.569393465 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.586260538 seconds)
  done (took 28.183690124 seconds)
done (took 161.583191601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.614208099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.20278312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.381872669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.557534473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.419569565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.384071295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.480637085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.548409137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.227295942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.214809443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.556443239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.41602685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.42641942 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.201552311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.430479887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.199668122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.418722001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.632085918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.235307103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.4791607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.485555688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.198719711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.400592309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.21338237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.421050451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.333876489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.801726976 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.202075781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.386019068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.817551088 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.33611843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.620373478 seconds)
  done (took 179.343848323 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.056793983 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.179956481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.180013644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.17749146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.516517986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.180710518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1790722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.181981844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.477466079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.47224071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.175905546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.507317318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.166866437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.179310532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.179314447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.178949478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.595729152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.10210719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.178111206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.179082873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.183669249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.383934489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.196582711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.396780175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.589864313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.17805345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.179779844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.180701552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.180050852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.179110984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.18067319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.181659639 seconds)
  done (took 218.155172 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.18142176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.181021754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.180910162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.181342449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.18054923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.182174069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.183288781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.181432975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.922186662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.913861692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.18459818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.180995022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.18483793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.181565455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.17895272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.180064605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.180042192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.181849773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.183239795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.182126767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.184860664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.037471347 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.183225591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.053837926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.184383145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.184984997 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.182259042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.181655732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.183733706 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.181752869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.185205004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.182704995 seconds)
  done (took 231.134194687 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.427557943 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.18236781 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.186350411 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.188632691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.185696742 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.184381649 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.181714685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.428703841 seconds)
  done (took 22.067575188 seconds)
done (took 652.811299937 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.56502381 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.920793941 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.314675456 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.207465728 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.449125151 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.250871852 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.199677378 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.26259074 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.84579556 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.270401637 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.594702585 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.211206198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.898717826 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.233043198 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.319266565 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.261486674 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.547975425 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.811601905 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.341160128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.851403473 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.402542799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.13666129 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.285713324 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.897682849 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.607761692 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.146703506 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.218803652 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.554446734 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.207813397 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.437526264 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.87445104 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.494286422 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.218974232 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.203187676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.257823538 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.236801279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.401314971 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.215485255 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.314853627 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.927108337 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.847810141 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.722927787 seconds)
  done (took 113.070627804 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.191220677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.189566368 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.19083192 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.191806651 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.200614642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.191795144 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.192065167 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.190100508 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.189595306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.176297683 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.190015296 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.199945566 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.190292548 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.200213236 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.190945518 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.190959663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.191196085 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.198941969 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.191588899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.19007613 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.19062521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.18982573 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.186841276 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.189576818 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.190560746 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.190735122 seconds)
  done (took 59.088741999 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.185057823 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.367015505 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.467300922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.222783382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.186818923 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.18947045 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.215572542 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.195728556 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.188620703 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.188526893 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.297873227 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.19325764 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.20043986 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.461788496 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.218886937 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.186479815 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.184520592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.188923161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.373550836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.202669854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.217402583 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.195309091 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.217626384 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.20186618 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.190989308 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.187497536 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.19158819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.609932513 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.202870804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.30170324 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.246801805 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.22002123 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.536774803 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.477229401 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.258335039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.194387531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.187339704 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.348658707 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.201414332 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.188873555 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.218870065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.197659504 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.471846163 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.700520253 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.206411031 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.18783962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.604791882 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.359119052 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.237786325 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.203209494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.474738285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.223730053 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.188219077 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.190337384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.226861945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.202527336 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.189843226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.433609747 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.205402695 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.218939899 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.196776513 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.190260577 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.378954769 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.198211398 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.370015775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.199842964 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.195989974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.190096156 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.470411413 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.225289593 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.687950286 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.206286509 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.189311074 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.307200212 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.373547495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.631553205 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.205133165 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381444546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.556162481 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.2305878 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.201797251 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.594609767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.233274263 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.202266487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.189805304 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.191927393 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.19122458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.234534114 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.220289251 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.616475247 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.69242271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.448750554 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.233921458 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.204709931 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.191932931 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.432998062 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.204309706 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.191440603 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.466450879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.717815917 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.207137863 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.198508339 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.674947256 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.208228471 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.222439898 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.203435006 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.483709504 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.224745952 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.235738623 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.19217099 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.198775639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.194201441 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.221627193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.177048986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.187803094 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.665273021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.366677381 seconds)
  done (took 270.251925985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.195846905 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.192166657 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.191766124 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.190663034 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.191193492 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.193149029 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.194776895 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.192030871 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.19319654 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.191276734 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.192841275 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.194079145 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.194144259 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.189332154 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.229113168 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.195181361 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.681737055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.195773055 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.193152789 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.193499928 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.766245135 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.200315303 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.191582305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.194996052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.196850592 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.194924124 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.196548362 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.226360706 seconds)
  done (took 176.671878764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.194019111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.249049565 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.206908911 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.243000602 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.206359218 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.195076441 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.218628837 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.210931307 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.202496184 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.195648135 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.194684941 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.228107542 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.203206949 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.294207496 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.224820451 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.231361625 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.296407315 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.199927175 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.195541464 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.196645757 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.242664663 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.209894859 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.230001204 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.259746925 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.210700614 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.252365389 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.208450864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.191176698 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.19431243 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.317027433 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.218081488 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.228855413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.235467841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.217441631 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.316959191 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.315993486 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.301530556 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.22876002 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.200925413 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.197253868 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.1993101 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.199383417 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.254060161 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.212639919 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.200365277 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.316777539 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.219499527 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.197486794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.220917701 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.199607291 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.211961685 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.215309839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.230997277 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.310496493 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.245645391 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.211484557 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.222510624 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.216033436 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.19836943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.296514074 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.204388797 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.313285503 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.221812162 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.198621618 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.200997776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.204378787 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.245586279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.238627817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.300118632 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.20729874 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.297157093 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.253615134 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.21227411 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.20200518 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.197879024 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.255394969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.310955248 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.253128677 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.264109573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.238220718 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.208989045 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.199604049 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.201467024 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.227076993 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.207012533 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.315128128 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.316440286 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.204451433 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.200534627 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.199809097 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.201878537 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.225048941 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.265083997 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.228897905 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.30814918 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.239412927 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.241864081 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.209544547 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.216014803 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.206698149 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.237516324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.20977011 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.213248158 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.534375842 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.241497836 seconds)
  done (took 236.741851274 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.566018652 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.245610835 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.272722971 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.488082056 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.556852437 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.09569002 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.240031789 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.25101866 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.261509258 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.374659301 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.313656732 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.291612523 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.239991144 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.224191272 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.251096734 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.261026408 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.285695108 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.544238075 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.349232079 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.809762088 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.241607948 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.529470799 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.543481346 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.594852071 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.289151054 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.621670897 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.848449316 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.344709448 seconds)
  done (took 72.059809001 seconds)
done (took 929.990307046 seconds)
SAVING RESULT...
DONE!
