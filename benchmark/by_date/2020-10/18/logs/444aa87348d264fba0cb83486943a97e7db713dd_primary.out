cset: moving following pidspec: 504
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.868220938 seconds)
loading group "shootout"... done (took 1.221779164 seconds)
loading group "string"... done (took 0.652203748 seconds)
loading group "linalg"... done (took 8.570523558 seconds)
loading group "parallel"... done (took 0.168583346 seconds)
loading group "find"... done (took 2.922937773 seconds)
loading group "tuple"... done (took 2.128224184 seconds)
loading group "union"... done (took 14.942645568 seconds)
loading group "dates"... done (took 1.448202477 seconds)
loading group "micro"... done (took 0.247557376 seconds)
loading group "simd"... done (took 4.786405489 seconds)
loading group "io"... done (took 1.113931811 seconds)
loading group "random"... done (took 9.465957066 seconds)
loading group "problem"... done (took 1.531829984 seconds)
loading group "array"... done (took 25.208822235 seconds)
loading group "misc"... done (took 1.880000803 seconds)
loading group "scalar"... done (took 43.701202469 seconds)
loading group "sort"... done (took 3.339190029 seconds)
loading group "sparse"... done (took 13.095409696 seconds)
loading group "collection"... done (took 19.239258882 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532196866 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123391571 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128009322 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121883285 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187070041 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121309661 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129520384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086298209 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.856440454 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146590308 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11627624 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438404021 seconds)
done (took 5.401368067 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.236812934 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09308632 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082544749 seconds)
  done (took 1.378718104 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.071741222 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.06078119 seconds)
    (3/3) benchmarking "different"...
    done (took 0.067627422 seconds)
  done (took 1.397005321 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.066320325 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135481357 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066312881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067256594 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067836506 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067443841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068327817 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067587321 seconds)
  done (took 1.74063388 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072069242 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06796733 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065858562 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067490901 seconds)
  done (took 1.474367582 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.06839886 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.122225964 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.064805214 seconds)
    (4/4) benchmarking "different"...
    done (took 0.064851158 seconds)
  done (took 1.517965528 seconds)
done (took 9.023486285 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.245960219 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101582763 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.29039845 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.447025468 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.617601685 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.093882245 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075535192 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070878794 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128325499 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33748532 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104312224 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183381122 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091054853 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173323002 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.089936282 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.125579636 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088213597 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126826384 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096677357 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136361337 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.404416094 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080406722 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.075642173 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072845808 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.069731758 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.742105286 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.739788009 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.121999708 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086300798 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.161782 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116280057 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.714144703 seconds)
  done (took 11.243850098 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093112833 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.092583284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068855124 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124181242 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093744918 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070270638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075207128 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068365508 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088842827 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123675091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089523581 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098137367 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066667673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069372258 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073835342 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201819317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080333258 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081249823 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067567255 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081246899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105259372 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078408102 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078173763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078194499 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129628547 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171162246 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101144757 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10073522 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068087095 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079943536 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114706814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124897015 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066485703 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065478175 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118899388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095606067 seconds)
  done (took 4.63743885 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.891146992 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.096272662 seconds)
    (2/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103565168 seconds)
    (3/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.647322091 seconds)
    (4/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066920496 seconds)
    (5/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150790424 seconds)
    (6/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240709094 seconds)
    (7/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074227312 seconds)
    (8/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369334263 seconds)
    (9/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.152236756 seconds)
    (10/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142390795 seconds)
    (11/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14802409 seconds)
    (12/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117937476 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06950913 seconds)
    (14/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.158862049 seconds)
    (15/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11886087 seconds)
    (16/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.561355224 seconds)
    (17/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06887057 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06789428 seconds)
    (19/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06617791 seconds)
    (20/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068736178 seconds)
    (21/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06842305 seconds)
    (22/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064307364 seconds)
    (23/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.094222656 seconds)
    (24/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069384144 seconds)
    (25/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097487374 seconds)
    (26/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088840274 seconds)
    (27/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.170570811 seconds)
    (28/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.08459667 seconds)
    (29/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070518006 seconds)
    (30/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.308211648 seconds)
    (31/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086644327 seconds)
    (32/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085867207 seconds)
    (33/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.745841115 seconds)
    (34/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073272181 seconds)
    (35/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069146635 seconds)
    (36/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083384401 seconds)
    (37/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.482598536 seconds)
    (38/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068568073 seconds)
    (39/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124005053 seconds)
    (40/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066638199 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165577942 seconds)
    (42/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.118542161 seconds)
    (43/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065726701 seconds)
    (44/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.122075711 seconds)
    (45/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079913358 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069958151 seconds)
    (47/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070561643 seconds)
    (48/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.495501382 seconds)
    (49/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070946626 seconds)
    (50/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072947927 seconds)
    (51/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080615063 seconds)
    (52/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102374552 seconds)
    (53/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069177116 seconds)
    (54/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066943758 seconds)
    (55/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172858231 seconds)
    (56/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065390943 seconds)
    (57/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067347565 seconds)
    (58/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067735874 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151380436 seconds)
    (60/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06582589 seconds)
    (61/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143032941 seconds)
    (62/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064974968 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069389891 seconds)
    (64/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.104327319 seconds)
    (65/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069342848 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086342886 seconds)
    (67/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094550354 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.726168712 seconds)
    (69/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.069272775 seconds)
    (70/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.071750614 seconds)
    (71/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.309073843 seconds)
    (72/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080874882 seconds)
    (73/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.068990208 seconds)
    (74/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072116495 seconds)
    (75/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.071422847 seconds)
    (76/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069585232 seconds)
    (77/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069774017 seconds)
    (78/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074973478 seconds)
    (79/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073973101 seconds)
    (80/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07038931 seconds)
    (81/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111769053 seconds)
    (82/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069495831 seconds)
    (83/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.066513989 seconds)
    (84/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.073731705 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068738278 seconds)
    (86/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.074297241 seconds)
    (87/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100106144 seconds)
    (88/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067653581 seconds)
    (89/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.576767643 seconds)
    (90/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100299475 seconds)
    (91/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06689135 seconds)
    (92/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.191095456 seconds)
    (93/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111710705 seconds)
    (94/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068647787 seconds)
    (95/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072044936 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068936118 seconds)
    (97/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068367146 seconds)
    (98/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066959845 seconds)
    (99/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067734911 seconds)
    (100/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070295795 seconds)
    (101/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.098130977 seconds)
    (102/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070682638 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113874043 seconds)
    (104/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.062621496 seconds)
    (105/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07290096 seconds)
    (106/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066512272 seconds)
    (107/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069110707 seconds)
    (108/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074335575 seconds)
    (109/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071659957 seconds)
    (110/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.07121712 seconds)
    (111/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067400566 seconds)
    (112/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070116677 seconds)
    (113/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072295478 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06673866 seconds)
    (115/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065178725 seconds)
    (116/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108191715 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.120943691 seconds)
    (118/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067791345 seconds)
  done (took 24.205965083 seconds)
done (took 42.182048773 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311563347 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078837818 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078944528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079022977 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079206304 seconds)
  done (took 1.880294683 seconds)
done (took 3.171849289 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.132967833 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.082643935 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.065121042 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101419239 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.069413998 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.102065064 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.108833676 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.104301567 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.068823398 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.068913399 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.069586484 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.102860047 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.105266178 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.068756563 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098240502 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.103873685 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.069561714 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065301316 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.068886872 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.069102128 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.06970372 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065952564 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.069238538 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.069032329 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099700483 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.069280501 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.06786899 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099291915 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.069487999 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098763512 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.069208656 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.069819993 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.068961126 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099865485 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.069415304 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099705449 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064772426 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.069013387 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.069145772 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.069041127 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.069176368 seconds)
  done (took 4.620587387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071285394 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082611812 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084105009 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062439356 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072611002 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083099142 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062896976 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08207931 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090897631 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084586802 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084633531 seconds)
  done (took 2.157294566 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070962972 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.084400512 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085302883 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.064202691 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.075825905 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.086095788 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.064252744 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.085296824 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088365727 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.086554699 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.085976145 seconds)
  done (took 2.155160984 seconds)
done (took 10.205421149 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.096657383 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.069018126 seconds)
  done (took 1.429394003 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526574405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.429360482 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.068333508 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086467666 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194883484 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092114307 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.201419055 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.07251699 seconds)
  done (took 8.126603651 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099655532 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072103745 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068977223 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06799344 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069787167 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069667377 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06842389 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070080486 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068576633 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06920094 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069969769 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068749478 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070464992 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069799376 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069075503 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069640207 seconds)
  done (took 2.511372426 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10170262 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.100751951 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073003161 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073427131 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071953412 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070825524 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074193756 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073909968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070369431 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072388986 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073538495 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072296086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071757124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063328541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073824111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073710348 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069880422 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072641313 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073722279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074231842 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073059803 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062916174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071028073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072426392 seconds)
  done (took 3.173664423 seconds)
done (took 16.524996325 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175437329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074459746 seconds)
  done (took 1.506909338 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068517432 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068703963 seconds)
  done (took 1.419955467 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073498146 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061285229 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078198452 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070412193 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062384059 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062056056 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076916333 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061623477 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061410262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062270102 seconds)
  done (took 1.95985141 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063576988 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068903012 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066780339 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064904998 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067220117 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06275663 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065213742 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062961069 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068881723 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061972762 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065912329 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082713916 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066415902 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083815633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065594986 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067036666 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067522314 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064925591 seconds)
  done (took 2.51094416 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061565656 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062664657 seconds)
  done (took 1.420880291 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065382449 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062317983 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064704043 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064203785 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062125557 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061680979 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062380787 seconds)
  done (took 1.734556561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420221259 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122612778 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.345008725 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072441727 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076832633 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253888508 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064744404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068459721 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068718771 seconds)
  done (took 2.828994064 seconds)
done (took 14.687046474 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082872435 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.183029999 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087778119 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.408140445 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094556415 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069696221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113748731 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.170945725 seconds)
done (took 2.526524919 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220555796 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.180181466 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.369789291 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.126653595 seconds)
  done (took 2.978286752 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337852062 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079341716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079410073 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067805041 seconds)
  done (took 1.878509842 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066137684 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072209072 seconds)
  done (took 1.445211896 seconds)
done (took 7.83791833 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065111447 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06425672 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064947674 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064801761 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06487533 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065100417 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064020307 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064342296 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.076020141 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066028505 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065792781 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066483359 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064779459 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064491889 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094885509 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064645425 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064524951 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065094919 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06449968 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064733018 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064307323 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06486575 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06492842 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064011276 seconds)
  done (took 2.934121049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079892558 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066594655 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067511204 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067321452 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068026665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067724603 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067406304 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066318526 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067643223 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066198477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067740301 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067741462 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065973422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068484117 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066584809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068002752 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067747322 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066559669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06630873 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068763497 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068291993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066790539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068462683 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067575971 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067683773 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067789196 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066082689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066465237 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068148324 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067960686 seconds)
  done (took 3.355850101 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067115496 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060847901 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061281936 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07064544 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060815154 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061146382 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061664444 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061128513 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061536039 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062309241 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062093886 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060973366 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0623001 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.061225012 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060705773 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061815945 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065603037 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080228771 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060997894 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061090582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065375466 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.061466507 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061097785 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061367573 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.061631453 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061259713 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060729338 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061628357 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060852499 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.061521873 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060733049 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064758267 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066407975 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.061124575 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071192285 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065883598 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060963757 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065256969 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061587814 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060349986 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060630662 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061026148 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060998294 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060693807 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071090505 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.06136923 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061950094 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.061410608 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061559587 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061014247 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061116441 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062722739 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066389756 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061987798 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060441148 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061882878 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060769952 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061595527 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060760881 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061487744 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062522352 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069132509 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.06376565 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063567033 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082434526 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.063737728 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073066651 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062442959 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063053785 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066096251 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.062684375 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079999563 seconds)
  done (took 5.89429398 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082473415 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08625953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066294241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06601051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061852998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062723515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070786312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063144517 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067687581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083789456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063113916 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067447033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067519533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066969862 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062814619 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067231978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070903569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063455218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063270138 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066986206 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063499215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070708525 seconds)
  done (took 2.843223518 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137024779 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068424013 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10900008 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076944941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071477303 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077031125 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068750223 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068525404 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068670594 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068878149 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069503724 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068906336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07084162 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068779507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067705019 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067115884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067369225 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067059202 seconds)
  done (took 2.690293465 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077608152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066693446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088060591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066445562 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066954645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066623186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070205367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0704526 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066472044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067529787 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0706316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067972282 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067687607 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068464424 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068040021 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068385917 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068290882 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068276982 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072101233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071544066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071438223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072542367 seconds)
  done (took 2.872615409 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077635698 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06563612 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080954177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067068683 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061840526 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061662919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066979379 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066362848 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06672096 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066334693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067390484 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062869017 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068974113 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067856981 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069008512 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067615865 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066815436 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067755558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066918266 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062607225 seconds)
  done (took 2.682077312 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087015235 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064194403 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063827308 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084530743 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06579184 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065333851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085101915 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065329218 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065321073 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087579532 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065716834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065253255 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085463948 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085882418 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064782406 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085910968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085525046 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084498344 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065604846 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065315429 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087162224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06525038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085078402 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0654333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065609155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065355481 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065538664 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086096257 seconds)
  done (took 3.407905281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0651814 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064559379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064431341 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064997077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06540764 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065324419 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067500787 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06701197 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06620423 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066900237 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066549961 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066638791 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066334291 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066510072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066314691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06600966 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066025194 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066814598 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066552279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066953964 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066428945 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066712798 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066068919 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066583827 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066534547 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065496614 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065414645 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066736697 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064967966 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064960115 seconds)
  done (took 3.321597058 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074086272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072948329 seconds)
  done (took 1.486718647 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062736406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078151266 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060982958 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073421024 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069350607 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067460735 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070359552 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070554886 seconds)
  done (took 1.887455714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067716067 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.091464537 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062917064 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063518411 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066102148 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133349991 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075415951 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074770722 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078446856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06705949 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064956848 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.077336858 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064330246 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077555897 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066010191 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073607629 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071966084 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082117022 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077264542 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062881274 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077191311 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065148151 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062947772 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065399282 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064669389 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071123212 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08031646 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077413928 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072530798 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060430084 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081764978 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061907146 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064588966 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073005055 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.067625795 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.063255061 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100887337 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.063944594 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.068821432 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062827321 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075651805 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084718985 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077878499 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.081947585 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065315005 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065542454 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062776932 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.065543473 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067278781 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072745621 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062802337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070518396 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062073972 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064900662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073865909 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063706507 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068409219 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072849892 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076894079 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073568403 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072166246 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079061118 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072326243 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.071797177 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06424368 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083654749 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064906966 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07656665 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078375568 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.064586228 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076903949 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062494461 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06197782 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062644159 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096805137 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063722289 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.06266143 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061688203 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061574846 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.063078905 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070875751 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067373598 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069238193 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064955608 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078817834 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072789399 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.063460785 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06902227 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.0796955 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065271146 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062281905 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077949779 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065070935 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061213463 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078873221 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07172461 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064330902 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064238337 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066580685 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076714937 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064324897 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062074849 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071339047 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.064856317 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.065522843 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.067042271 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070588297 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.062129718 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072415184 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067347556 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.063642125 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06153317 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066790682 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.062874559 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059733956 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069997051 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061167206 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074999419 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06680525 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.075273297 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075301034 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.071377689 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076740531 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.062325299 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061119963 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.080926239 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071802188 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.204893498 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083105132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063142904 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074167654 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062492583 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.064948228 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.072365146 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062436115 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065928518 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06344828 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.068301557 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06452626 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065702875 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068929155 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072624784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076135009 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.064648992 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072648611 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063784792 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079621997 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07381722 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067870343 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06678303 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.063901788 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075792264 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069462769 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072903403 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062795543 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063871805 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065794198 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07376608 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072920303 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064747341 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070553961 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067812887 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063666955 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063875872 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.064805371 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066491604 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066172571 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064117677 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070645987 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072320547 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.077572323 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071100985 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072245462 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062666663 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062952391 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065390508 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062796615 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067313424 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073232626 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078913794 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075637911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084818215 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.063616172 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073093924 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064660895 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081171175 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077551579 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.064457 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.068084302 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062138923 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064645205 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071097402 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075253977 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.077776404 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078680822 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067764193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067566074 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063178366 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078718075 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.063923292 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071893071 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.073147362 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068027316 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.06330849 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064632673 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072415792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067318772 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06336906 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.079483718 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069271107 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062905087 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077955382 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.063837418 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.07413649 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062883591 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067188938 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068726447 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065400654 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072876726 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079490148 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062181219 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063820044 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079271657 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.065213626 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064626018 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071846566 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.078415092 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067775258 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071297133 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073355939 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073033153 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067643448 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07289514 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063861446 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.07265162 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065892201 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073943704 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.063099012 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080770075 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061846967 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.077344777 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062921607 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.07365626 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063343674 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070784373 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061921332 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077676359 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062715811 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.06183477 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072273249 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059472672 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069638618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059580255 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06537523 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066514838 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070160298 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062314195 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070205113 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.205690082 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074421528 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069864718 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073207238 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.074257879 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068844863 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063911247 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072644844 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075021341 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072047367 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065159832 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.065137335 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063890681 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07382044 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065644849 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065254833 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072576356 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068236082 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069525248 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065149721 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065077456 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.065375513 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072855209 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073356418 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08232359 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072543432 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071242442 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073049479 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062839235 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079299627 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.063329893 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071629401 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062372081 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071044939 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073424025 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.063654346 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082916028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064904516 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071920149 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076006778 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072466317 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067603661 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081944082 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.066668321 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071856381 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071970139 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067425049 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069238635 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06506509 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071870849 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073084674 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074483663 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064258901 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071061992 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072628683 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064812781 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.071083758 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067969858 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072045458 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065200929 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062673925 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067392653 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075000171 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067946462 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068685469 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063851394 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062050097 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063712946 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070650073 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06806485 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072018245 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078949569 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062376527 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.064455717 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063004306 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066893313 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082413657 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073450122 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071329037 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068298021 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062478214 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065026713 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.065405644 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.064271657 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.066987751 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06214283 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062951255 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074762731 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.065726618 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067936802 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063961798 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064603112 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072919439 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.068147924 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064326486 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069791639 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.063743213 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068095539 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062787649 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065050713 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067728038 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062902669 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06667875 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07367296 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.080200205 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069789581 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073120665 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064380581 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071549994 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079114921 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070052482 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063611176 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071445245 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061247312 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.081000506 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07254196 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071259409 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072410086 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064398432 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079789486 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066939001 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072374389 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076276485 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062555191 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067461203 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060757793 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075540835 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065113839 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059930792 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068514122 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068727475 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066931224 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071950392 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.20973391 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073390246 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07054788 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06865059 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.066754424 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.065929306 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073090918 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081099071 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.064935061 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068351619 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071760445 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072518057 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068307894 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076174134 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072285047 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064611238 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065356623 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067228295 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065088776 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076374405 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065220593 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068082431 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067595287 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063090188 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070123692 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080373788 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073131325 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072977631 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062839434 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06235685 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.081713944 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067105454 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.066980566 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07159582 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073903713 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076372046 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072791665 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081391657 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064478153 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069369464 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07667871 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.064430815 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.063194269 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067259311 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065371422 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072814469 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074255134 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070979953 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065635649 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070290254 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07748491 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.064987919 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067864795 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066941845 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062508712 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072487143 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071465603 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072684976 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06510393 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063074756 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066996583 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072369842 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071341134 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072908842 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064937517 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.070385377 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.077413974 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071040022 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066542727 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063399771 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067422325 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072747967 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.068222238 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063139024 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068198866 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067214588 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.07059876 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073384634 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068316212 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063318753 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080868717 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072226835 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.073603841 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.068993674 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.065522795 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064723985 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063259245 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075627688 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063744266 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.065493258 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068172251 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.065795728 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.081784596 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072339406 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.079590551 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064210507 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068082942 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063396643 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072838625 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066651276 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.062631756 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072828225 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0627397 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079307859 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.075654584 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068196254 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063059602 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091275265 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071707751 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078310167 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073259036 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071063657 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064662824 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07084842 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062950354 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071931704 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061119974 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060047594 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071253576 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069599263 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07336216 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060812666 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071462087 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062686601 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068774247 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069144907 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06187329 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062089403 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062611122 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070069022 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065080995 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069989447 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.212124285 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081209005 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.064393676 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074537796 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07180172 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073697395 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076508704 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074570702 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07078866 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063369953 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070529521 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07019801 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.063641709 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067629354 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065831144 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.0834512 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063917124 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063771406 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07719438 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.06856844 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062794443 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068685437 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067320296 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072660698 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064023095 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.073300988 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066224142 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.063121465 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066754587 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066476726 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061104582 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061675552 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062175746 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072405851 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066938863 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062189354 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080559553 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063790981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070688728 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073247638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068624458 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.064274019 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06128223 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063705182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077019808 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080376863 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067364319 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072550258 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065426901 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073138392 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062635236 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072407142 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071728381 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072390392 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062686324 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063852836 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078892487 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079005172 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068178075 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073149534 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073393661 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065138098 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086068042 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072773228 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064869782 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.074955286 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065665228 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063140435 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062940797 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.065471845 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07577505 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063613121 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.0668019 seconds)
  done (took 43.333968536 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100879067 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063091187 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061765546 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061920755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072723929 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062779861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06182964 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062760348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062688458 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064137807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062003727 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061932454 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072952902 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075253729 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071621926 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065752983 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061585674 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063037809 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061795723 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062662966 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071533042 seconds)
  done (took 2.859806372 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068194777 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076531936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072442853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077963277 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069578053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066361543 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072727067 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065945588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07368281 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071031815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073272883 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065914865 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071177892 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071851175 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071211408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066822915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075787457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069421301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06549109 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072768261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065969409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07251009 seconds)
  done (took 2.985779443 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06359343 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062930441 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070323036 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061509687 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060920102 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064701488 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.061652264 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.066032371 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.066386449 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.066319993 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071217274 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.064086159 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.062749802 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.068984852 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.062949223 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.064135891 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106753461 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.062957783 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062970264 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.061537876 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064440745 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070805933 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061238753 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061790088 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065916892 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064898585 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.061159593 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063652983 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062378932 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065894702 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06280148 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06125932 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070579825 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069699888 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065705184 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067174436 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.065411499 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064173321 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062953091 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062516056 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071724585 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.064285545 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.063381343 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064568488 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072624109 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.063204882 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.062618187 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072336656 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06257274 seconds)
  done (took 4.658810075 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071899513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115149879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068014305 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095443006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074340481 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06733327 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067220467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096136765 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062963163 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064858265 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077543029 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077475347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066518909 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067590673 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070058961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065935807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066789401 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065700761 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068664332 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06528867 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06857107 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070307842 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075907034 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076474516 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066981014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065316391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066059603 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067804345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076151275 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069440314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067563631 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068232463 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076691111 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070809498 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065746469 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065722336 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077104798 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066372914 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065732016 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064287698 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065527904 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067221704 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070016587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077854819 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066663603 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071053959 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066193354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063907876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076691028 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065998194 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069841372 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077792006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067014281 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066445259 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067728264 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076452692 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066512301 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065222654 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066394649 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075159828 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062990688 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065694334 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075972521 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064143703 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067411683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077426142 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071094727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06767651 seconds)
  done (took 6.388062684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071452615 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096504897 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072545646 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073107762 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073423783 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074069335 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074146671 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074239465 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0740449 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074968565 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074240808 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114849759 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070247707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079549202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074180249 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074287246 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073922127 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07682058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073576017 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073816775 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074160842 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074284092 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073911237 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074111563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076962226 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070741299 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073574517 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073721328 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074594492 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07392077 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076343206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073987022 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074170859 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074287306 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076113739 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077046646 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064432491 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073738908 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073460203 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073984629 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070428138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074316873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074030265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070002538 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073905033 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073995946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074389702 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07701238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081360434 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074736134 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072614547 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072754918 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07209312 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072414315 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072319151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078670187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072908781 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073033795 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071903875 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072063604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072725258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07852959 seconds)
  done (took 6.123354302 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07485855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067943595 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081054196 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06127592 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061850269 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071092383 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061888399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06200547 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068462752 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068072314 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070006549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070946974 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073150322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070485882 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070832694 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072880144 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070793269 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072252153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068985435 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071401582 seconds)
  done (took 2.85716958 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077220545 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080659893 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068074247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070544489 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066934172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070964682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066691868 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067347948 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067909615 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066814997 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072133954 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071936487 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067334705 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071181912 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071887839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071058029 seconds)
  done (took 2.582524879 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.068434319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068425382 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068743522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063109083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067477935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062131874 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062703547 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061541985 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061875923 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0756002 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062762442 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074762712 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06231241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062045083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062209524 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068391939 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062138317 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062563972 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062822843 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067017116 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069090463 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.0631076 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066241315 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062145236 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0673868 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069282918 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063566897 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066622415 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062399662 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062717914 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068173916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068669401 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061976818 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062795122 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061551623 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062742524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062430978 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062860945 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068426085 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062498886 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061278591 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067311165 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062776355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063792396 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061611239 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063179704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062265836 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068614627 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063367095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068192185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062674839 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064555972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06309957 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069597066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064762551 seconds)
  done (took 5.02375433 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07846218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067800695 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061749044 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061665525 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066963803 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067550889 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06667987 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067202638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067228225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06131432 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067282328 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066273578 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067408632 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06712768 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067665152 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066852556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061491854 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066819425 seconds)
  done (took 2.667663884 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073751931 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066193597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071127099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06673227 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066829746 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066620479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06219136 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06195058 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061457385 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066804116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066506425 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066326303 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061740055 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06619737 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066690795 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066226142 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065746326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06220995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066197721 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061622951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066590318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061691499 seconds)
  done (took 2.903529374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089386075 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088191467 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.128188908 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080879068 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089261578 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072357945 seconds)
  done (took 2.011308007 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094448856 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105187727 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066363959 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066289407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074600628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069388208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069718159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069566232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074503971 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073688673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069799889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074630859 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074583666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071493822 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074813386 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076704769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069823878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069349608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066868881 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07715187 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069417243 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074354289 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069611645 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069122479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069641406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071112399 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077144053 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073165447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069539149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075063806 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077158307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069679993 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074810681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073415319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066983033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074939946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069569893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077005355 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074858021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07104976 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066467993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074742372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074838138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07081943 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077310404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071288688 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069615436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069857065 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079952043 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074961559 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071091691 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074876885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077303214 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077428821 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079566878 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073281525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071197098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075401575 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073648093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071396657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075533613 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071682732 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07385648 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077754842 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071305862 seconds)
  done (took 6.315530246 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101628382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067270116 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070896186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073958937 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071304946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070182818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070579722 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070148909 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069630926 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067456918 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108101532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071944164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073506274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073977709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072092598 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072325341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071477099 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072013749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067812188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079592411 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06959486 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071151944 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071221636 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071053745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073321632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078914525 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071480022 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071007459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071399524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071356941 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073763037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07135978 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073169079 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069125024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073393553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072075957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072398353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07359552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071502262 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07713273 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071814624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077433395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069455893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0695113 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073558653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069359987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06979922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066858151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070081919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067506586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073744112 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073633877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073476153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071782372 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069795124 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070066738 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069624449 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07003524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070545663 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07711481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071455139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069918494 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079262319 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069873279 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069670276 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072881023 seconds)
  done (took 6.289609711 seconds)
done (took 131.691873132 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.371978041 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201423189 seconds)
  done (took 2.023353701 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075768764 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099210096 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076413656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178395748 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07336834 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125137673 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121324157 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077446954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072959827 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073368055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073299167 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075715405 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.191204077 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073055214 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073442802 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075373984 seconds)
  done (took 3.014567848 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108257395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.18724968 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116780976 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070550656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111623146 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078127106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07073759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08186355 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074476903 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083348438 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077392515 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076047306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07408155 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076287874 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074939732 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077235021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073820163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077336605 seconds)
  done (took 3.067401595 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099564395 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093347562 seconds)
  done (took 1.674442547 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157872175 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107897728 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148577224 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33428211 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130719752 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127254838 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131734994 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130512134 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114300534 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123598552 seconds)
  done (took 2.984873137 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106856805 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178318337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317689734 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126792193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079563556 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101757071 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127700185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086378445 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083642945 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083143591 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081681559 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078231977 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103053284 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077164953 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075665053 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078028146 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105537345 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074956404 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075911566 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076187813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10734813 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071763 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076785906 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075084311 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078987158 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078783153 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07321976 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071521762 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.0765189 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076772566 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078665517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096970322 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078395817 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.09886353 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075667696 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100460231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075872053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075509482 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076466538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075165375 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07774863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077681861 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08280131 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078746436 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073336935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075866538 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07353761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07191421 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079801715 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072574285 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079381336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078524772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099203931 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072616 seconds)
  done (took 6.323712114 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108691227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10733602 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071062045 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114761524 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10624787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070892803 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105742636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101760964 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109462309 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070586274 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070068515 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070391556 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077190533 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080252132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117907946 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108930651 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072672577 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07110589 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108741141 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107906967 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069869777 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103118197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101964034 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107404941 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06919246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070771388 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06939908 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069744859 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074681307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075808455 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069429558 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076439475 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081400333 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076416221 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069088911 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069652492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069671763 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076449036 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077288366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076895823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075279923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068844668 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069376129 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070497003 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070710279 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069315733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075299387 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076748698 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075624796 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069498577 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069980421 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06913721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070376172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076122054 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074881626 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076870908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076715413 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069534434 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069756454 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071745412 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077499366 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077240958 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076399863 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070784534 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077124003 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069409007 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077969285 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081750369 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069442165 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069806446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069586577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070158062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069816164 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074852651 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075082839 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070509233 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072643632 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069668045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07718779 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075511302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069531221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074532731 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069052108 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069241088 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06998123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070182486 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074743235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076851782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070247529 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069794914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06959264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069105702 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069152744 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074308382 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075850837 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076151711 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075028293 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069380238 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074867841 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07454794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069788052 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074680624 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069061696 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069431854 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069283705 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07361803 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073265449 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075591295 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068202359 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068203051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073168469 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215896899 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071788771 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076675826 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07883486 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076893966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069983546 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079214404 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07040973 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078239441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070072331 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077962313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070007443 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076105997 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070254001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06962472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070170592 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075846613 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070341638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070324667 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070838516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070017149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076178559 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079119418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070835619 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076195935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076433299 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070876436 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075568474 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070046295 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07719268 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070196606 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069959194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069195839 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078570013 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069668543 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069837819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070346515 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078435942 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070302166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078196067 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075654242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07021825 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07979476 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077715457 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075423125 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078610422 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070650649 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070351374 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070505648 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070503765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075142115 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07643144 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071220378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069587192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075014741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077898189 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0694756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075558273 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.393091284 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078701182 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070644261 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071169815 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078691784 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077798978 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075453795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075042412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076194997 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069667629 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07512685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075565242 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069797152 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082496404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069417007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079423867 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076170121 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074902235 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076364545 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077153931 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077622833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077895011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080030217 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069336363 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069596021 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075248872 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069521401 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069990359 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075330906 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070532606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070067942 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080570665 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069782913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077964931 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06942557 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076061568 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068787124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06946203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081538626 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069119105 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06977769 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074952927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069188069 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075000626 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077625784 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075128172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069718641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069560971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075676742 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076032413 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06911602 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068173539 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069056633 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07437317 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073634809 seconds)
  done (took 18.845634608 seconds)
done (took 39.429604736 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212595739 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171188775 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198835047 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117419439 seconds)
  done (took 2.286017006 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092308943 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100490102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076460928 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066616315 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083814188 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066232869 seconds)
  done (took 2.012596803 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.251854395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189558947 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175017159 seconds)
  done (took 2.136292587 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220367376 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196662646 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.507317183 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312485581 seconds)
  done (took 2.859675723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131645273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078234329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064509954 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075134674 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104263234 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.133235415 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086689731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10805094 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076293655 seconds)
  done (took 2.438796668 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130141492 seconds)
done (took 13.418892258 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.179038489 seconds)
    (2/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.154468424 seconds)
    (3/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.244744237 seconds)
    (4/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.239455674 seconds)
    (5/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.180282143 seconds)
    (6/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10802574 seconds)
    (7/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074904689 seconds)
    (8/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076681583 seconds)
    (9/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.207172645 seconds)
    (10/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081932543 seconds)
    (11/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170989648 seconds)
    (12/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077524265 seconds)
    (13/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239755401 seconds)
    (14/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07767792 seconds)
    (15/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067403795 seconds)
    (16/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200922157 seconds)
    (17/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075505373 seconds)
    (18/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.220308503 seconds)
    (19/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207395659 seconds)
    (20/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.178959178 seconds)
    (21/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.076211794 seconds)
    (22/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.148970937 seconds)
    (23/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075281867 seconds)
    (24/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.159398024 seconds)
    (25/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077488064 seconds)
    (26/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075752049 seconds)
    (27/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.118409663 seconds)
    (28/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.133961418 seconds)
    (29/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.180131413 seconds)
    (30/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078217139 seconds)
    (31/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077913968 seconds)
    (32/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07134286 seconds)
    (33/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18541408 seconds)
    (34/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241368731 seconds)
    (35/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.126439952 seconds)
    (36/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.145538007 seconds)
    (37/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.066963651 seconds)
    (38/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075069494 seconds)
    (39/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.222605359 seconds)
    (40/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064833763 seconds)
    (41/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.069147801 seconds)
    (42/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.083465456 seconds)
    (43/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.079269975 seconds)
    (44/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134549143 seconds)
    (45/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.204869045 seconds)
    (46/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086761563 seconds)
    (47/341) benchmarking ("sort", Bool, false)...
    done (took 0.146860425 seconds)
    (48/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081351309 seconds)
    (49/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.202105132 seconds)
    (50/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065584903 seconds)
    (51/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068775563 seconds)
    (52/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.143262104 seconds)
    (53/341) benchmarking ("sort", Int64, false)...
    done (took 0.067751137 seconds)
    (54/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.156555693 seconds)
    (55/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174169626 seconds)
    (56/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08298066 seconds)
    (57/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.167983809 seconds)
    (58/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.121218415 seconds)
    (59/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.150864629 seconds)
    (60/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07768709 seconds)
    (61/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078898603 seconds)
    (62/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065725486 seconds)
    (63/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197952518 seconds)
    (64/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076046422 seconds)
    (65/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064550486 seconds)
    (66/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074379911 seconds)
    (67/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088474497 seconds)
    (68/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.085465703 seconds)
    (69/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.138658984 seconds)
    (70/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094443544 seconds)
    (71/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076635516 seconds)
    (72/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077100216 seconds)
    (73/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12364177 seconds)
    (74/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.150452326 seconds)
    (75/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.066143665 seconds)
    (76/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079544668 seconds)
    (77/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075744156 seconds)
    (78/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198791753 seconds)
    (79/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.235308562 seconds)
    (80/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.237999696 seconds)
    (81/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096461268 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095290121 seconds)
    (83/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.070914598 seconds)
    (84/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.096695764 seconds)
    (85/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124975763 seconds)
    (86/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154781463 seconds)
    (87/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163700287 seconds)
    (88/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079622779 seconds)
    (89/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134943111 seconds)
    (90/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.069487737 seconds)
    (91/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067928526 seconds)
    (92/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075390787 seconds)
    (93/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.067380419 seconds)
    (94/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075823398 seconds)
    (95/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136357859 seconds)
    (96/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.212873319 seconds)
    (97/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163740185 seconds)
    (98/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151819446 seconds)
    (99/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228116104 seconds)
    (100/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.068610822 seconds)
    (101/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126956469 seconds)
    (102/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.141274871 seconds)
    (103/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066166133 seconds)
    (104/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074548931 seconds)
    (105/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085001578 seconds)
    (106/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087970176 seconds)
    (107/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090968061 seconds)
    (108/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.219906443 seconds)
    (109/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074636582 seconds)
    (110/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067147387 seconds)
    (111/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076606953 seconds)
    (112/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077520513 seconds)
    (113/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.156673953 seconds)
    (114/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068030483 seconds)
    (115/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092258447 seconds)
    (116/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067394125 seconds)
    (117/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.07041928 seconds)
    (118/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077690739 seconds)
    (119/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079777909 seconds)
    (120/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202786397 seconds)
    (121/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178908964 seconds)
    (122/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091089444 seconds)
    (123/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074286951 seconds)
    (124/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077143744 seconds)
    (125/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.141942229 seconds)
    (126/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076078224 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085598403 seconds)
    (128/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.145565063 seconds)
    (129/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07639099 seconds)
    (130/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199080295 seconds)
    (131/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067389876 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067039046 seconds)
    (133/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067635583 seconds)
    (134/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094731138 seconds)
    (135/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065775328 seconds)
    (136/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.19708243 seconds)
    (137/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159282857 seconds)
    (138/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.137842851 seconds)
    (139/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075974045 seconds)
    (140/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070255972 seconds)
    (141/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087344556 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076089385 seconds)
    (143/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190981624 seconds)
    (144/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066710799 seconds)
    (145/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088893454 seconds)
    (146/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083371261 seconds)
    (147/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065173218 seconds)
    (148/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065617123 seconds)
    (149/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15987236 seconds)
    (150/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073274041 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124617013 seconds)
    (152/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.08520628 seconds)
    (153/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073912578 seconds)
    (154/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074744349 seconds)
    (155/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159619259 seconds)
    (156/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065326128 seconds)
    (157/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073845185 seconds)
    (158/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069898905 seconds)
    (159/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06544817 seconds)
    (160/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.067221527 seconds)
    (161/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06668376 seconds)
    (162/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091954039 seconds)
    (163/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.066991541 seconds)
    (164/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064851878 seconds)
    (165/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089842645 seconds)
    (166/341) benchmarking ("sort", Int8, false)...
    done (took 0.149187512 seconds)
    (167/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126900896 seconds)
    (168/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081730728 seconds)
    (169/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.070258335 seconds)
    (170/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.068630041 seconds)
    (171/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092802305 seconds)
    (172/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159873292 seconds)
    (173/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091515015 seconds)
    (174/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081683512 seconds)
    (175/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065903714 seconds)
    (176/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176946544 seconds)
    (177/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066214139 seconds)
    (178/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15102695 seconds)
    (179/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064710378 seconds)
    (180/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.065773173 seconds)
    (181/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068426364 seconds)
    (182/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.176905416 seconds)
    (183/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151083099 seconds)
    (184/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066951602 seconds)
    (185/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.367207704 seconds)
    (186/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.071151358 seconds)
    (187/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.077532408 seconds)
    (188/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070725936 seconds)
    (189/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.225570154 seconds)
    (190/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081033076 seconds)
    (191/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.067731329 seconds)
    (192/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.071704226 seconds)
    (193/341) benchmarking ("sort", BigInt, false)...
    done (took 0.273120836 seconds)
    (194/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069069124 seconds)
    (195/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.171108304 seconds)
    (196/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.086136977 seconds)
    (197/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.066584375 seconds)
    (198/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067247463 seconds)
    (199/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067850231 seconds)
    (200/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067037293 seconds)
    (201/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066116007 seconds)
    (202/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078763823 seconds)
    (203/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075787503 seconds)
    (204/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.15585442 seconds)
    (205/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.066856727 seconds)
    (206/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06580826 seconds)
    (207/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.228139729 seconds)
    (208/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073920984 seconds)
    (209/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096066236 seconds)
    (210/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075783268 seconds)
    (211/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074328645 seconds)
    (212/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.144551313 seconds)
    (213/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.083644735 seconds)
    (214/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162634925 seconds)
    (215/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066405976 seconds)
    (216/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088728225 seconds)
    (217/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06808193 seconds)
    (218/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067595213 seconds)
    (219/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130356224 seconds)
    (220/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066495336 seconds)
    (221/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076112922 seconds)
    (222/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068453461 seconds)
    (223/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07560742 seconds)
    (224/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07941337 seconds)
    (225/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.067670166 seconds)
    (226/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094739985 seconds)
    (227/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067717844 seconds)
    (228/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073863012 seconds)
    (229/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14842552 seconds)
    (230/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.083257771 seconds)
    (231/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067978533 seconds)
    (232/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09205543 seconds)
    (233/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.067793735 seconds)
    (234/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074596615 seconds)
    (235/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079268229 seconds)
    (236/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155424924 seconds)
    (237/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067695449 seconds)
    (238/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069398192 seconds)
    (239/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067682662 seconds)
    (240/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067842749 seconds)
    (241/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071604886 seconds)
    (242/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066024464 seconds)
    (243/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079140509 seconds)
    (244/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077095332 seconds)
    (245/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076280278 seconds)
    (246/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.06949047 seconds)
    (247/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147865183 seconds)
    (248/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.066984998 seconds)
    (249/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067872685 seconds)
    (250/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071097361 seconds)
    (251/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06770366 seconds)
    (252/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.084736735 seconds)
    (253/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.066842652 seconds)
    (254/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073716514 seconds)
    (255/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071402328 seconds)
    (256/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065076519 seconds)
    (257/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065874206 seconds)
    (258/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065745549 seconds)
    (259/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075004445 seconds)
    (260/341) benchmarking ("sort", Float64, false)...
    done (took 0.138597637 seconds)
    (261/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065229991 seconds)
    (262/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066854448 seconds)
    (263/341) benchmarking ("sort", Float32, false)...
    done (took 0.139033016 seconds)
    (264/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182104477 seconds)
    (265/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173152062 seconds)
    (266/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075205615 seconds)
    (267/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.067027865 seconds)
    (268/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067513932 seconds)
    (269/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065493265 seconds)
    (270/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.166468365 seconds)
    (271/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067179122 seconds)
    (272/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073513434 seconds)
    (273/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.068778003 seconds)
    (274/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153135345 seconds)
    (275/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14835637 seconds)
    (276/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.066342021 seconds)
    (277/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227067797 seconds)
    (278/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067723424 seconds)
    (279/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068087377 seconds)
    (280/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069784096 seconds)
    (281/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065368573 seconds)
    (282/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.083839052 seconds)
    (283/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172096315 seconds)
    (284/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07212722 seconds)
    (285/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070046846 seconds)
    (286/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.067704415 seconds)
    (287/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118200595 seconds)
    (288/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076086679 seconds)
    (289/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07008008 seconds)
    (290/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0659199 seconds)
    (291/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065365654 seconds)
    (292/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084984571 seconds)
    (293/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068389554 seconds)
    (294/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071238354 seconds)
    (295/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065696128 seconds)
    (296/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074009937 seconds)
    (297/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.069158826 seconds)
    (298/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066939728 seconds)
    (299/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.068773261 seconds)
    (300/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064356575 seconds)
    (301/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083350091 seconds)
    (302/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072726586 seconds)
    (303/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066210337 seconds)
    (304/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.082415964 seconds)
    (305/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066549801 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11494304 seconds)
    (307/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065569551 seconds)
    (308/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066905125 seconds)
    (309/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.066355775 seconds)
    (310/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.239939456 seconds)
    (311/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200136327 seconds)
    (312/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.069399605 seconds)
    (313/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068230853 seconds)
    (314/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067985482 seconds)
    (315/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069891068 seconds)
    (316/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095266767 seconds)
    (317/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066207623 seconds)
    (318/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081549053 seconds)
    (319/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.069876645 seconds)
    (320/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066582363 seconds)
    (321/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155680448 seconds)
    (322/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067121638 seconds)
    (323/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066498498 seconds)
    (324/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067006439 seconds)
    (325/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.070731154 seconds)
    (326/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067269498 seconds)
    (327/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078883968 seconds)
    (328/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.06770318 seconds)
    (329/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066669858 seconds)
    (330/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066036296 seconds)
    (331/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.070701928 seconds)
    (332/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074908646 seconds)
    (333/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065954652 seconds)
    (334/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066616686 seconds)
    (335/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086408942 seconds)
    (336/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067061425 seconds)
    (337/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069183842 seconds)
    (338/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065827153 seconds)
    (339/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.070392411 seconds)
    (340/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066435501 seconds)
    (341/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068103258 seconds)
  done (took 36.972856408 seconds)
done (took 38.515187474 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085171847 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09109143 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074722572 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.08583485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081695727 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100114651 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074795997 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078851299 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081819742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080660015 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079454423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073592206 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076398028 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07649393 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073887353 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089841114 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082483295 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07588132 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075360616 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066035882 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075302966 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067025325 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066100085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073628255 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078909293 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07394874 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076241439 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076125566 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067542989 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067751759 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071918878 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075673849 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066148692 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078490864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075205295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07549972 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077183958 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080406118 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066675015 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067714336 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078359888 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067463904 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075110602 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073546098 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072407593 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07441995 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075759835 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078793391 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089492464 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071963543 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078454085 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077783623 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077725305 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072702312 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072715077 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075562763 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073765439 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089870588 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075761866 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071844706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077949747 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076009377 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074186221 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075503945 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075407413 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07876289 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078411465 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074163458 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078356224 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07449745 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066636294 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075019661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072134062 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066908597 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0782758 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080973644 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065500282 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071290588 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07490625 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075136839 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065982004 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071473667 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065715147 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071519481 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071596303 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073212341 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072306514 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074201096 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066457721 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075635205 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074493499 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075039883 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065911698 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078434667 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066358039 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074081987 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067058625 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067041475 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066202799 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072779043 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06635774 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071649037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075187193 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065647964 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0717075 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079965234 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069517814 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074836997 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065486541 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066672841 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077610186 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078374815 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067185337 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07186341 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066107628 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072883939 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065889268 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066405441 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066265744 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067046057 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072037563 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067210155 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071862769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072773073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079203551 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066687427 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072248789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071308715 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066373163 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073829226 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067074004 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066566342 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065585512 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079210321 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071112172 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066737729 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0726087 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071307811 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074197798 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064654197 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075052399 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072088624 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071243097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.22355399 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067706121 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07916128 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072445658 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072136784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066488497 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067164034 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065957923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066908339 seconds)
done (took 12.969265587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068589804 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106722615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.074061232 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.083166326 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079282413 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068516389 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071407688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083588833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070841807 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.087568188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095752854 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08961271 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09398529 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066787202 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06832786 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068782084 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065871189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075611918 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082396196 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090983461 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096060232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067051802 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069444212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083673825 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077968738 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083449878 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068941854 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068468741 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112925111 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084245545 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092782888 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066912427 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068521253 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081124669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081838748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074336662 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068723302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071696843 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068097741 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067106318 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069417642 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081673404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070543992 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071011561 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068409451 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068610379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067957228 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070553369 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080603691 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070741544 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.075272257 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.079343192 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068722883 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067832875 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065975922 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.071341809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067264135 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068797404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067943371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06772756 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067826435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070062295 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.068033462 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.068149329 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071140699 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069567137 seconds)
  done (took 6.589033045 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084331299 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094209092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082810541 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083293087 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067459026 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067956728 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06760254 seconds)
  done (took 2.204237529 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06822233 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075671914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079949387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080333083 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089774638 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.077432284 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068142142 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10000956 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067010954 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077071945 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.083207429 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081102417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071594492 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079950906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068372719 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.079694657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06806454 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075223516 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075074364 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081617339 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071921958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097970239 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081351302 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068535701 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081421078 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.075104073 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.070559223 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068391528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068561192 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067177706 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067981578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.089678235 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.074334157 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079925812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068748823 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066922363 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072285797 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06864118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.074061134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076276999 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071317079 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06767018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068728557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067996114 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068842334 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.072690819 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068935786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067760903 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067151726 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075019611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066665003 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.073897493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070119471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072845095 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072076652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072502001 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074811487 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068345626 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074943438 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073781926 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067539255 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080049066 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079657531 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071477598 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079073358 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.075880221 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.074035842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071539077 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067377733 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067363522 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068066483 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079203422 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.071064466 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.0698416 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068670661 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072668909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.071672773 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082823976 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083329502 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08112956 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070558715 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067783166 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071312966 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0829695 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072171571 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067834927 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068910441 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066941732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072736498 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067818672 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07211634 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068144245 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.0744454 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070471829 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071107514 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075371806 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067787295 seconds)
  done (took 8.785113197 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070714684 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06937749 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070438719 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069420892 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069764676 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069306395 seconds)
  done (took 2.111851587 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091014111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068642162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080630737 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068564658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.091043335 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075138162 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0750751 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076383677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084236051 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079090407 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.075229344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077546193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074155965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070079043 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074492845 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069016611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074333026 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07121931 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078253585 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070189817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080845717 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069957398 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070325726 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080300424 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071595342 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069350655 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070065968 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07838173 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077698975 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075877607 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069955016 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070998155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076788992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075657949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074703771 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076945117 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068325182 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073630477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070909203 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070842162 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076798642 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070765337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070848691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073654713 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075876012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076521872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07346047 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071704051 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074110901 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073760157 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07371334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068607907 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07132087 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073621028 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077076109 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082175114 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073698201 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073964036 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069796487 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076765679 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068000259 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071733451 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075519367 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071109271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072618667 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073478242 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07662021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07026183 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069934197 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068170441 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073205561 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06826619 seconds)
  done (took 6.990984871 seconds)
done (took 28.330505043 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.550051156 seconds)
  done (took 2.186682503 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605259952 seconds)
  done (took 2.280890383 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.653931934 seconds)
  done (took 10.330120243 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.321047823 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.34997423 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743569393 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133802774 seconds)
  done (took 3.274537913 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.760746495 seconds)
  done (took 2.444790236 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231908869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22124206 seconds)
  done (took 2.150482278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.554717361 seconds)
  done (took 2.231443345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.165014096 seconds)
  done (took 2.85256756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226302552 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160376655 seconds)
  done (took 2.076173035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.516127309 seconds)
  done (took 2.200170474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.331148406 seconds)
  done (took 6.02023808 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236550116 seconds)
  done (took 1.955126222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231388158 seconds)
  done (took 1.898199389 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.100089674 seconds)
  done (took 3.753868131 seconds)
done (took 47.345620517 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085820594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090815576 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088409272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083074558 seconds)
  done (took 1.995154447 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.075938069 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.072033885 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.075455699 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075390041 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073396785 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073631977 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074610002 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07015318 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073295321 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.071740017 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070154737 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.072055825 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074111494 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.071479244 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073925928 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075294981 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.072054885 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071802701 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073572882 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071601345 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073967269 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.071225015 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.069607969 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071584793 seconds)
  done (took 3.420722166 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079632865 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073856959 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07702886 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072966698 seconds)
  done (took 1.984815253 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078099635 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.077784601 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087087781 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091879793 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07819307 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.078457907 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.085326473 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.086196377 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066834943 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.088681231 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.069910827 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.068350588 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.068062801 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087056617 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.084543412 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063889427 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064934572 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.078487652 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077606095 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.081300897 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069831108 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.0671847 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078585892 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.078695482 seconds)
  done (took 3.537291516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080682922 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067008758 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079716482 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092326178 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093638263 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066635771 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080455584 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094250572 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128039499 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066936582 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07313913 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067189005 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105805142 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066803898 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082206348 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110972088 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113413011 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070899581 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10009867 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066624381 seconds)
  done (took 3.396732095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077342867 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070432643 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072097567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06674521 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078122853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074591741 seconds)
  done (took 2.132282689 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069596357 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06949775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068198675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068126869 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073230198 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067952289 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067469473 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069765572 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069288893 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068255622 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067625266 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067232486 seconds)
  done (took 2.511961926 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.155788492 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070481252 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071446231 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066971066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072488616 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068021443 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082573185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069660279 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086049845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068114535 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069402304 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070362828 seconds)
  done (took 2.627022978 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10109613 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.1013646 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.147408958 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118365927 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115880867 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097302373 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120469859 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.094623154 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.161704798 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.137593084 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117443942 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126653727 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088427338 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070824243 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102802288 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102513173 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13674911 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074622141 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115689663 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.19691987 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115443885 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.112900506 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122872461 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117556045 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081622523 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121928929 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095287972 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103263455 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.156625078 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110910123 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119957721 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.0989447 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.073163238 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072074209 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150398865 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.101916385 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.138155583 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.094088989 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101676197 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.089019189 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107718309 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069971408 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.086947712 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.106248799 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085315907 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117425174 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088886603 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104768617 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08193543 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.131764503 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107195515 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099520977 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.089341687 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104470179 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131245518 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096233231 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11155279 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10683441 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083779518 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.118513073 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.100121115 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.257606193 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096621521 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082921292 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.162399192 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091483592 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114348613 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114205271 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.084403095 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.090900313 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104455606 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.132126611 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108323729 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.108907888 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115962948 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.126407043 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111356877 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.093393661 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.130012825 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094833716 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.074588595 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.105751046 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130122139 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086953517 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101503084 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130488763 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.093697931 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108974623 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093019329 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.119327792 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082336119 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.097661238 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071686749 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.099835029 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1082932 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098158597 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112599225 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108984996 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079281491 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126330558 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.11019431 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074792133 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118870023 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100125503 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15488765 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096819159 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.077907161 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100857267 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095374134 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.151629013 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086479227 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081433342 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100664692 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142363223 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095241476 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.171284366 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097497571 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130724038 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098116566 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088686773 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076326183 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.091195072 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102410605 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108355447 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10437056 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089634237 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.077920274 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087945503 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095369193 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.256799533 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08379963 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.116436821 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.10407056 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077222643 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091104396 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.07902501 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127035601 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.079489519 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110787118 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126239147 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.080530964 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106705851 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.129862585 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.139407621 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.099045113 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108774659 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141229013 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116929251 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081486085 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085199327 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109647776 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143296898 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115644007 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087034022 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.077948926 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101395843 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112494494 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.09905471 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.137770786 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128918439 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110171229 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099343149 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14190256 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119586502 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092614979 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096713231 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097754195 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.124234812 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.108056667 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156751232 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095428169 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11981732 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115814494 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141642535 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115030576 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090939597 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086142667 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096585371 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106148083 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106824232 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144964866 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.097662924 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.074833745 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095000904 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132945547 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077802981 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101247539 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.091642981 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.094550778 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.12005462 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084767502 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082188881 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069171234 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101374578 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135662215 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.070335296 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.113987536 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.283900591 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104871817 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.106965951 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.07188111 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101592274 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.146540791 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106820689 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141464525 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117577344 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10271134 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.120325124 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.101443801 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107136114 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081693634 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.129883289 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.135683154 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097773127 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092273994 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136361364 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.119811256 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.135723664 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.098306248 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116123307 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.106347425 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100886895 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104931934 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.101684406 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.145085781 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122006067 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.126714844 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.116895429 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107605479 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.108979753 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137893517 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083762419 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117861562 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07721078 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11381524 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079277898 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109016028 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.08063181 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112597214 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081537118 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101202357 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.071565971 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.075646329 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.143354288 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.113995668 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090681844 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087688955 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.13842499 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.133149258 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082408317 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103382107 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.135733402 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102043909 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103549925 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112357155 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.087871578 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.0952804 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.306013214 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082837415 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084299137 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101123893 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095851659 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109413167 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086121909 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077311071 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137533324 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106264862 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097252115 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110218616 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096641099 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.124075963 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091540189 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08906149 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106647589 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105256687 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141745681 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.092186227 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.099308189 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.118969936 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082141272 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.094211276 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.071214986 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.086681718 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.077734431 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110446823 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077882799 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109727638 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.070472785 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132335682 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088884372 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.094842783 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10414796 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099097805 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129936192 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0941808 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129776561 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092071553 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.103554077 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109835616 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09657715 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11201019 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105132089 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097570026 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11136014 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.097965509 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107781708 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111984914 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095464272 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.14316619 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091294911 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122366122 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107791226 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.10788562 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105314065 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118749607 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138827722 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114007742 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.143944895 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07730344 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084934718 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107406637 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10198352 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146894897 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103066319 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.073541819 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117318132 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091944909 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096075678 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.272096124 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086321888 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145314006 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089821281 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.089553649 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115093065 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09135415 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099530077 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078221433 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097587822 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102123209 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09619137 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096231603 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.135048129 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119264252 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115358497 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.135192867 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.101476963 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.096856353 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.120711591 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113283037 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115939344 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09063843 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089572819 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125058514 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.102944015 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.130505461 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101622522 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096291786 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.102780623 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092308703 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101578508 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098664225 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111452731 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08217097 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078201115 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.070364156 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.074434656 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119664382 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11062085 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103121424 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100600023 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.074187425 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104844893 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098953976 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073487092 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088644292 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095416724 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.127173148 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.085808812 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094136838 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.115790643 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.093175647 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105292655 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.132941505 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130758053 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102123037 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090464602 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.144403705 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130188863 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089493691 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094376315 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.073395384 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080973465 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103192428 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146286186 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118724566 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078182406 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084278651 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077933039 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.254286371 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.075615814 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.090442819 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.092499862 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106569797 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121746702 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.11422373 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105716008 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077392551 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10482959 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099185032 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.094106982 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.098444649 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103258521 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107067827 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12528463 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103027387 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099101887 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078125158 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082406658 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077344854 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08213485 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104665967 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.079766932 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078094968 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131695502 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.093575513 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106146053 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110209588 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08668656 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076689413 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134795395 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071158284 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135253175 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.074174799 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087123137 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.085978747 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08362374 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095463993 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107683064 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097355025 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11477937 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107607952 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106611698 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113308944 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157282992 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072538558 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.151123665 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078132883 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07707633 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078197756 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112698163 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09189145 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.105400719 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144075156 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091030775 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094091144 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078541492 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129801124 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.100491382 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104703029 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084302334 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081068683 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13030052 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081450393 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072821878 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088106656 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.113117278 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.074082615 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.135718537 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.114938661 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080634765 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.282276072 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.634241329 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093573599 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078116501 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091483597 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.151378391 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134831906 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086154267 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110396361 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121533629 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092542021 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.116854151 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109693487 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.18682657 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076809267 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096923134 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.105576497 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099975878 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095148514 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.094014077 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088764709 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.094573572 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.088148015 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08207241 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109389407 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089773783 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093429275 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.125452947 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.084994144 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082000902 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.132650231 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106128664 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08389172 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090808325 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102522479 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089782388 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093176131 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.071269007 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.145658826 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.123278081 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103199537 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.09303198 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10937418 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119957605 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09051523 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113969817 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.090572033 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111174002 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086769563 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080304065 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103779054 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.079549274 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079824136 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11869734 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088477249 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095286251 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106122487 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.09777336 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115582629 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119745377 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113100286 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099468198 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081200032 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087966904 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089271335 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07765149 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079350669 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075520143 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07775174 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107500878 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.253070542 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.116219781 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.116520639 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085574259 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107152617 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102886382 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11163235 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.086016933 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103193649 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111334532 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092233064 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106330506 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10152712 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.130973787 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148338713 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102017259 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.125935877 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134875995 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078560459 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077986717 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.072004204 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.148444169 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081579577 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.082999474 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113406643 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134625453 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.084056145 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096714765 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.234528243 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082585858 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084146205 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09908292 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.071960933 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.085106376 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109068562 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086970751 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082425118 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101238641 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.11492883 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.11971062 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113607298 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091256882 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08468983 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083115014 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095704472 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107255725 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.130913035 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091897148 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077022526 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108277286 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.10524219 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125518795 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074980758 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083121113 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.130927903 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094116373 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105581196 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082166049 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122473178 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.133770146 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.092359756 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135080587 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073209179 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.085161562 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091248235 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.128046889 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076683623 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09019789 seconds)
  done (took 66.747551416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153066345 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.235805373 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.125803638 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117241808 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.202676985 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.270295001 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.13339526 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.133688571 seconds)
  done (took 3.234743497 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070194911 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.084716263 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103329653 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086206143 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068558604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070322932 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.207097178 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084023119 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068210797 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.109593522 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07743194 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070593973 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.366155045 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068018539 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069008989 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076600332 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06943055 seconds)
  done (took 3.609223629 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37329658 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630697759 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.327714963 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077183017 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.008930353 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091762526 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.514338414 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140049073 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085729605 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554376725 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371571367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135896682 seconds)
  done (took 19.150591605 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079024693 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077854566 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081034242 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080795357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077248542 seconds)
  done (took 2.238324135 seconds)
done (took 118.291885393 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.086194557 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.175599952 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07022438 seconds)
  done (took 2.115529386 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084927943 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083587171 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083170684 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.080457149 seconds)
  done (took 2.170544379 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077503324 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078440273 seconds)
  done (took 1.988147495 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.227869869 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.178830919 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.092836571 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086010937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083081332 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08310492 seconds)
  done (took 2.096465949 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073729062 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073718957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073792333 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074652578 seconds)
  done (took 2.125894078 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072806698 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068668748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070572401 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073058605 seconds)
  done (took 2.117906375 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.087160402 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.085071382 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.114316958 seconds)
  done (took 2.11920373 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085318062 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086170542 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080377554 seconds)
  done (took 2.091013037 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111208368 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.099054667 seconds)
  done (took 2.044731528 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082771877 seconds)
  done (took 1.920903371 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092456041 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100724022 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.142398773 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109138163 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14246106 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127252969 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.078319423 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.079274212 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075135818 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074075259 seconds)
  done (took 2.857448806 seconds)
done (took 26.071797163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080808368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376126348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361719563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089129577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674428372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358336947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023016492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093258205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101801775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069850448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086907542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651011816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01256526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332373265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999164513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330672106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652756267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070224309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069604236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070790505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004061027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069269209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069873103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070687178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653286643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375832527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070375941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329437177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069982172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072845041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.3597334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07150137 seconds)
  done (took 16.52957555 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07210563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125917806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07446544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086178421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07201321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071640115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072790303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070591856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112864705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070123563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087564491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06952102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073812021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070699497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090116483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070638808 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072487357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072171561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071208627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071433875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089255117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070939254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071429764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071201173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071348053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083506635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071938814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070350261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070709095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073217671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074327488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072142446 seconds)
  done (took 4.317079547 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12448027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129282646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075625553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111759199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120964902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071807552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154397105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093747886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116184627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070256068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087956467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070523977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105887002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07131606 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090870375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070261172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071776264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072112082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071077175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07108177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089455001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070224287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071010579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07181201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071740668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086314011 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071557286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070782888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070540512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073144459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074670985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07175662 seconds)
  done (took 4.601407377 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071902572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073622884 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081924508 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083444506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069022101 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070880603 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072356059 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069048667 seconds)
  done (took 2.452265109 seconds)
done (took 29.757294789 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081593119 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070494299 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073515847 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090421166 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076703205 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.072413558 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066918218 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077008997 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073451111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072817634 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075326013 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06878573 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072234317 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066961179 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073964784 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06835873 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074186084 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072007625 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073084225 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07455588 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073931351 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074069723 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077398295 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.073224375 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072894941 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07339691 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07797139 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074561051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068984231 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071879105 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070564217 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081498594 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074947013 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074675091 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068843343 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068695049 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072642545 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070743136 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07460718 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077569624 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070667128 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076859554 seconds)
  done (took 4.920780315 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089364274 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095117006 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08728225 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084377122 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.107932143 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084115035 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091522643 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081562537 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079963454 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090735879 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075383248 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080879981 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082541924 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.077363261 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080824774 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076716765 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081789768 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075493543 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080290414 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080242278 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091565962 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073304876 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081772185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082162105 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076122408 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082038689 seconds)
  done (took 4.036499598 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075222763 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.09013234 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094711668 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144736277 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112709456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084899593 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084339289 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104720459 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103864416 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070414123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074286716 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096458592 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099017652 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077284921 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.109674824 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088719855 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0826279 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071886963 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076409425 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104760189 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092735742 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088547216 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103175691 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.09000663 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069409908 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078615249 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076227384 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085136087 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07660861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081908207 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073872908 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072903996 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070138437 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082240211 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073819811 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067414655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091807956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082071818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084842182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107649693 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07979841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071596004 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100088513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135446288 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06946405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071901039 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072992857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082852011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07221864 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101016317 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088210365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069627589 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088583528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071067446 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070912175 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086444452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071403902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071679646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082269571 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075616774 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091287548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074945211 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090379636 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069210816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080750568 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071512857 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071249125 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068644019 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.106658345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077059459 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.122919218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070812878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067817334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081903814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081229341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07632665 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069017728 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088567068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081545119 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073465596 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072373568 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072844537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105608094 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068469953 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06963012 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068984998 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072547083 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07262627 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069660704 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084406051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068745318 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072551993 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085024592 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069676278 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072354007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074303311 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071374451 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068787902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082395503 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075862066 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073277423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082049473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070595806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073036677 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084765617 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079270873 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068892087 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070677535 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074637883 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071256485 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073804105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072683549 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071645418 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07656311 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07682808 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075012468 seconds)
  done (took 11.387298523 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16633918 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155849471 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071593936 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15090965 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07850758 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.074592963 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1514842 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.089665355 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070745673 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072117063 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069699964 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09873631 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.093908156 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105754443 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.074789535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071717051 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097232919 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103952895 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153498522 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148833077 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093752661 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078207319 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072994768 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071721226 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072272888 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079138479 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086532096 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078157334 seconds)
  done (took 4.646872644 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078044759 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113409515 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074988201 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095404852 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089839966 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071288964 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072741441 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071406344 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08776103 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077424565 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070747918 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074836757 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074290278 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071145271 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071681199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077013078 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076741255 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069213099 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074243006 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075158625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080438777 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096342074 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074975789 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070378703 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07301911 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070238369 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076887895 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079865153 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069503207 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100275128 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067363346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074352753 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084994395 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073130723 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072595799 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073543424 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072812198 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073564671 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073515782 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070960618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070615244 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077606098 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071509474 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079560143 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086755907 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08103778 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074222975 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074950457 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074600955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068377475 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074848126 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073642543 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072792954 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078902563 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074116373 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072579491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071791019 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098893324 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076102617 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069345879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069992987 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068487124 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071790604 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077883505 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086866004 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072068851 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06886505 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070552817 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075239185 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084503667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069475425 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075305034 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067816487 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070910856 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072603694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07283331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071341563 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068709032 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069682345 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070163743 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070490346 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069737654 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069728457 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075202865 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070312383 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070980467 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073105212 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073916247 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079823329 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071870536 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073553665 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071423128 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068787571 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072662832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07506976 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072836149 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089876445 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079104431 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070805515 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068403585 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08509871 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072298488 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069121469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075347108 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074859511 seconds)
  done (took 9.81832747 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093407662 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071953283 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090680082 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096796437 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080970772 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075776348 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.085062556 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070950089 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086847741 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069544689 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079473934 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068655745 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083846264 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079774704 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071921441 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080856531 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073140964 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.09159803 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087629248 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069397444 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080179155 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082593005 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.083076397 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089090556 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088099699 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089087036 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082464979 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072658595 seconds)
  done (took 4.192765127 seconds)
done (took 40.860754989 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.942567192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.111714656 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.939980407 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.163610445 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.987555586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.127808865 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.051010031 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.931562153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948793599 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.988831945 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.262683464 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.400856948 seconds)
done (took 67.782689695 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.019829217 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.081600535 seconds)
    (2/2) benchmarking "String"...
    done (took 2.16567807 seconds)
  done (took 6.126554206 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.532763255 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.932455805 seconds)
    (3/3) benchmarking "different"...
    done (took 1.983367574 seconds)
  done (took 8.311664949 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.12145577 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.948421285 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.193331255 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.932230649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.938716212 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.286668775 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.767798369 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.405152187 seconds)
  done (took 32.338950016 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.143869659 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.142653883 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.700771353 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.746303012 seconds)
  done (took 16.647924293 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.535794858 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.196054525 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.195770075 seconds)
    (4/4) benchmarking "different"...
    done (took 2.195997419 seconds)
  done (took 11.048819957 seconds)
done (took 86.584045813 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.968819854 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.946301149 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.998754787 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.964732356 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.936150999 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.936976913 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.905843274 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.937496239 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.982983429 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.028742804 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.935141527 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.941630292 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.937286339 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.964585064 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.548874863 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.99051238 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.954348837 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.936189093 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.936536951 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.990201174 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.94221137 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.173731712 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.459714833 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.140388575 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.569862336 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.158813234 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.304832254 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.412563361 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.94277921 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.934279607 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.998931859 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.059482087 seconds)
  done (took 209.7060041 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.934059004 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.936357489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.996473492 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.957657163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.377191409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.133203248 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.074666451 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.424174895 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.941886611 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.9401809 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.053710411 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.939263025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.066562432 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.874330928 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.928946179 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.974910603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.170655617 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.070846563 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.934571608 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.110154924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.956574665 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.936304248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.86169447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.074743713 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.974058781 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.936531943 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.960730629 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.94694578 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.125638661 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.030743451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.962797881 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.945115481 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.107203156 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.7955674 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.931195961 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.93968334 seconds)
  done (took 175.193913563 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.118767101 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.941447662 seconds)
    (2/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.931843149 seconds)
    (3/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.987425424 seconds)
    (4/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.070106715 seconds)
    (5/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.935473236 seconds)
    (6/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.615407733 seconds)
    (7/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.942375075 seconds)
    (8/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.935660627 seconds)
    (9/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.939177817 seconds)
    (10/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.932422298 seconds)
    (11/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.932970937 seconds)
    (12/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.933161456 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.946663149 seconds)
    (14/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.023144553 seconds)
    (15/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.936579729 seconds)
    (16/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.948238639 seconds)
    (17/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.93465496 seconds)
    (18/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.958208149 seconds)
    (19/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.93569189 seconds)
    (20/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.932411985 seconds)
    (21/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.93279347 seconds)
    (22/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.932839986 seconds)
    (23/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.932894348 seconds)
    (24/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.933342643 seconds)
    (25/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.932507551 seconds)
    (26/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.93408801 seconds)
    (27/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.585882745 seconds)
    (28/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.244103947 seconds)
    (29/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.179926995 seconds)
    (30/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.935411477 seconds)
    (31/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.932857059 seconds)
    (32/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.945643366 seconds)
    (33/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.517383286 seconds)
    (34/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.940793284 seconds)
    (35/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.934127983 seconds)
    (36/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.022737509 seconds)
    (37/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.989503656 seconds)
    (38/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.933967256 seconds)
    (39/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.050813252 seconds)
    (40/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.933618312 seconds)
    (41/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.153534577 seconds)
    (42/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.021120867 seconds)
    (43/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.93475084 seconds)
    (44/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.934763664 seconds)
    (45/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.996614315 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.94651885 seconds)
    (47/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.935346245 seconds)
    (48/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.934481704 seconds)
    (49/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.936703477 seconds)
    (50/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.942340237 seconds)
    (51/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.997115381 seconds)
    (52/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.221478716 seconds)
    (53/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.93539921 seconds)
    (54/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.072898604 seconds)
    (55/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.460792221 seconds)
    (56/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.934906093 seconds)
    (57/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.934744745 seconds)
    (58/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.935098072 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.622422288 seconds)
    (60/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.937288043 seconds)
    (61/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.93532304 seconds)
    (62/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.941155848 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.942410636 seconds)
    (64/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.934374843 seconds)
    (65/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.935100059 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.319600474 seconds)
    (67/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.006616869 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.526468749 seconds)
    (69/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.250061428 seconds)
    (70/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.945789819 seconds)
    (71/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.439894322 seconds)
    (72/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.129718865 seconds)
    (73/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.935395488 seconds)
    (74/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.935965854 seconds)
    (75/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.935419139 seconds)
    (76/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.938558442 seconds)
    (77/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.936659694 seconds)
    (78/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.938853217 seconds)
    (79/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.075090987 seconds)
    (80/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.946531042 seconds)
    (81/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.055730055 seconds)
    (82/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.016964618 seconds)
    (83/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.936226509 seconds)
    (84/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.076792555 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.939853532 seconds)
    (86/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.946299436 seconds)
    (87/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.763343472 seconds)
    (88/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.009862928 seconds)
    (89/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.973846566 seconds)
    (90/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.764747361 seconds)
    (91/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.92516632 seconds)
    (92/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.295470514 seconds)
    (93/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.71962789 seconds)
    (94/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.936918288 seconds)
    (95/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.937504627 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.950482208 seconds)
    (97/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.937060416 seconds)
    (98/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.937020911 seconds)
    (99/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.937460631 seconds)
    (100/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.014854842 seconds)
    (101/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.938013896 seconds)
    (102/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.07807413 seconds)
    (103/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.694477818 seconds)
    (104/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.560446324 seconds)
    (105/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.93966783 seconds)
    (106/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.938406095 seconds)
    (107/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.937566276 seconds)
    (108/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.945895851 seconds)
    (109/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.017241771 seconds)
    (110/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.076616371 seconds)
    (111/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.942486262 seconds)
    (112/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.002430194 seconds)
    (113/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.946006471 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.94053748 seconds)
    (115/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.93845427 seconds)
    (116/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.050481134 seconds)
    (117/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.938485255 seconds)
    (118/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.938873332 seconds)
  done (took 428.9820554 seconds)
done (took 817.918067142 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.599540049 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.602336825 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.690199565 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.574617827 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.545639645 seconds)
  done (took 14.882881481 seconds)
done (took 16.753988845 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.940672307 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.954082682 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.94482454 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.995542674 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.963369485 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.950798961 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.983810656 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.983518208 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.969106035 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.941252927 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.966505674 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.948404634 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.945354596 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.973047432 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.015396023 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.977208405 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.955966974 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.948119996 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.995101386 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.955881873 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.957015789 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.952513393 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.952488286 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.989396081 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.025311695 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.962664097 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.953023782 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.98928214 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.9622147 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.987424089 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.00794214 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.973465708 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.985824503 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.019020504 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.000052098 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.023865884 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.964182777 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.010440095 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.960631218 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.026636816 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.998822177 seconds)
  done (took 82.863952961 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.950486478 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.085665948 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.160874145 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.982519129 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.938196313 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.164115965 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.005289516 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.078239528 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.081472461 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.156034112 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.167854274 seconds)
  done (took 24.64692709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.949964761 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.086948024 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.171866256 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.986871134 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.97236655 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.165895684 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.012895629 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.085473094 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.087590922 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.16842445 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.175672711 seconds)
  done (took 24.745785606 seconds)
done (took 134.129441678 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.330898003 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.978481694 seconds)
  done (took 6.183949091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.96535176 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.102217628 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.946356007 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.947048889 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.946373323 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.946038816 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.94721459 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.94640958 seconds)
  done (took 17.62218528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.94472079 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.945704278 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.945148199 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.944828257 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.945313669 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.945735165 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.945766349 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.94551407 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.945309228 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.94593863 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.946705552 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.945421268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.945899838 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.945714477 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.946241312 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.946851619 seconds)
  done (took 33.00624394 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.948510429 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.946361933 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.947051918 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.949664821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.945810964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.94739857 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.947028577 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.946425273 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.947407132 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.946109491 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.947230414 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.947280377 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.945803887 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.946813708 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.947344445 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.947352123 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.946759446 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.94702952 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.951736222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.946728776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.947027642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.947414464 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.948134824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.949886137 seconds)
  done (took 48.601583058 seconds)
done (took 107.30014575 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.216592175 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.88499198 seconds)
  done (took 8.978194377 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.951610005 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.948977639 seconds)
  done (took 5.844160301 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.947873374 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.949698032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.947317497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.947751591 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.948372565 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.948734081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.949349056 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.947313944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.947031054 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.947516094 seconds)
  done (took 21.358164952 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.948951797 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.947988688 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.949695792 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.947550976 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.948374329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.947433639 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.948444245 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.947959518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.948204343 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.937836459 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.948621522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.948254148 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.948191833 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.949533886 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.949580537 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.94885678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.94943874 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.949842366 seconds)
  done (took 36.942913368 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.948159756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.947991838 seconds)
  done (took 5.774027347 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.948286708 seconds)
    (2/7) benchmarking "second"...
    done (took 1.948088279 seconds)
    (3/7) benchmarking "month"...
    done (took 1.935204217 seconds)
    (4/7) benchmarking "year"...
    done (took 1.928142003 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.93444302 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.948620129 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.948119878 seconds)
  done (took 15.470792876 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.948955082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.096455891 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.141984476 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.568205624 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.947634708 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.948371902 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.80582801 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.947186619 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.937588886 seconds)
  done (took 21.220840513 seconds)
done (took 117.467633917 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.802440972 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.935700667 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.18252424 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.033213768 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.016715839 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.283250923 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.979876782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.546142534 seconds)
done (took 43.654916295 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.955100211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.941589483 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.977862158 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.978809058 seconds)
  done (took 22.772622478 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.944331639 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.282777307 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.969065038 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.881490374 seconds)
  done (took 22.962939337 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.334613292 seconds)
    (2/2) benchmarking "read"...
    done (took 2.304528529 seconds)
  done (took 6.51643733 seconds)
done (took 61.083965636 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.944882133 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.9446001 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.945068835 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.945498456 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.945608838 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.945189944 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.945631125 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.946039932 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.945145333 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.946431197 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945691844 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.945168521 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.945782598 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.94492265 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.946187651 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.945600482 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.945057493 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.944637729 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.945686882 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.947105956 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.945602061 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.94655008 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.946461024 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.945389194 seconds)
  done (took 48.567426006 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.947194798 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.947058637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.946597454 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.94693694 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.946203657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.945314046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.946320168 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.947358278 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.946744987 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.947554117 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.947295446 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.947571036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.947508223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.947347262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.947523605 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.948158744 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.948227502 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.947321915 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.948179186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.947394579 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.94776316 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.947858438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.947893843 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.94736727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.947765672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.947955887 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.948773707 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.947575763 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.948816688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.947926648 seconds)
  done (took 60.300528462 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.947796223 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.948827827 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.948995483 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.948264268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.948250283 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.949183505 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.948600436 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.948798769 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.947793035 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.94855281 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.947653628 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.947862737 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.949462532 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.949217733 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.948682316 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.94858555 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.94972311 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.949424846 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.94936863 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.94879054 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.949329603 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.948936374 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.950069607 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.949231159 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.949939473 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.949122345 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.95035049 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.949521051 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.949902544 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.950670072 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.949983186 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.949211386 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.950437001 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.950307133 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.949564922 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.949687166 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.949660306 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.94928969 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.949690051 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.95106637 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.949540852 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.949347518 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.950596273 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.950244428 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.949099714 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.949749115 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.950244621 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.950304405 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.951378523 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.951091318 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.938952287 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.950985304 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.949554648 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.948501248 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.949020416 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.951059965 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.95069472 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.951658262 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.952291913 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.951997596 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.950189192 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.950687115 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.951321029 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.95213479 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.950862362 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.951788334 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.951574571 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.952131001 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.951212581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.951996147 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.951329892 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.951355408 seconds)
  done (took 142.262644851 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.952077077 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.952577017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.951322454 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.951969401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.952165526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.952622356 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.95276789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.951862615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.952025015 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.951517138 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95245275 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.953411261 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.952556295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.952234139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.953390634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.95214464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.952679611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.953017194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.952826241 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.953101994 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.947261346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.952953194 seconds)
  done (took 44.829463567 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.954238169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.95309861 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.953031938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.952455208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.953482885 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.953720449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.952433469 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.953949425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.954474699 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.953832054 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.953403592 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95424259 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.954003735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.953908206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.95296641 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.953109631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.953667227 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.953153292 seconds)
  done (took 37.045914152 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.954110636 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.953935447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.954522873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.954132363 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.954982222 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.954597982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.954486003 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.954730794 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.954739076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.954996482 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.955050339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.953728357 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.95501521 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.954642395 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.954105404 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.955758604 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.954829383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.954562132 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.954650698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.955210482 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.955198468 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.955569105 seconds)
  done (took 44.886559615 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.95538962 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.955313433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.95576214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.956195078 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.955283432 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.956031027 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.95639155 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.956008697 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.955091909 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.955274948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.955848025 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.95631254 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.956984118 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.956308923 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.956478765 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.956400456 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.95727741 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.956824116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.956926472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.955491488 seconds)
  done (took 41.005877579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.957160964 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.956791237 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.956339184 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.958656468 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.957069882 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.957880612 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.957186911 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.957648769 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.956441465 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.957862711 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.957986587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.95798422 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.958161761 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.958161746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.957951661 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.958228316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.958470014 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.958643444 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.958729308 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.958461398 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.959158448 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.958628088 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.95883361 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.958805782 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.959157494 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.959069307 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.959498492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.958812757 seconds)
  done (took 56.714189924 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.9579421 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.956505898 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.957355462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.957504448 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.958655826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.957911271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.958990819 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.958412419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.958166699 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.95798467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.958591944 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.957404937 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.958530842 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.958852503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.958663692 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.959252441 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.95831219 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.959308463 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.95891406 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.959190868 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.959308429 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95851995 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.959254751 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.958638947 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959416304 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.959253833 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.959977748 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.95974069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.960128801 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.959784932 seconds)
  done (took 60.648753622 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.979655116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.977918221 seconds)
  done (took 5.845242276 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.960313144 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.959751461 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.957962385 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.960249697 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.951540736 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.95607343 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.9606129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.958967745 seconds)
  done (took 17.553976878 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.960690473 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.965081667 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.959975887 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.961114093 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.961039745 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.970190927 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.961983074 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.962098199 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.962480527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.962040264 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.966142849 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.965646255 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.970801952 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.966809186 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.96122036 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.961753202 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.964494133 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.963306542 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.962928829 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.948292316 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.965608471 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.962352022 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.962133065 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.962502047 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.961136215 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.967579637 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.973665402 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.963255237 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.963992478 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.962748987 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.969686827 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.962639021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.962390027 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.963960082 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.962696449 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.96299308 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.970838014 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.96394064 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.963587225 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.963291498 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.965041947 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.965000833 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.965773966 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.9717944 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.964358442 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.962647508 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.963855513 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.954691126 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.957965082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.960411051 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.966259738 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.964044358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.963275059 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.963372309 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.966096449 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.963691791 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.964345886 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.949602168 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.971341412 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.971634296 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.967482722 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.972800925 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.973962252 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.963723851 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.964066783 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.974232527 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.99012808 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.966847239 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.96757979 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.964744693 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.973832628 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.964526918 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.964065042 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.963049316 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.97951157 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.973847389 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.964752904 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.964919865 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.964677272 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.965227654 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.967510606 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.965410025 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.966013485 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.965056658 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.975051101 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.992538819 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.966543787 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.967103321 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.967201052 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.96765312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.970860697 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.967496333 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.965122315 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.965893735 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.967860371 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.968799825 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.964816078 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.965582441 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.967042879 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.976420265 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.96590102 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.965418367 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.970748755 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.975298186 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.965430791 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.967251712 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.967206624 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.965978988 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.974271957 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.967628668 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.96721452 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.966387659 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.967659917 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.971992144 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.966093666 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.971768814 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.976698127 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.975693754 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.96844616 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.972241087 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.971453619 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.970255829 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.978091071 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.993659507 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.967110929 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.971836427 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.973251543 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.980966618 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.972134572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.967312634 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.970802355 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.967841458 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.967496722 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.970403421 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.968155136 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.969298253 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.968815973 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.967969048 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.968019461 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.968231695 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.971535594 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.970894038 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.970604194 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.969349459 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.973384513 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.968613146 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.971323486 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.977172795 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.968844131 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.970135958 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.969747937 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.970777416 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.971014745 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.969609913 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.968502014 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.969400333 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.969686868 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.97108786 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.972194317 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.970651708 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.969549798 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.971348253 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.974316506 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.969767382 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.970434718 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.975929664 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.957407666 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.969818189 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.972546462 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.971687101 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.973897462 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.970995054 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.975818024 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.970262366 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.970360298 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.97226353 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.96973714 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.97047133 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.974841789 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.982879975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.979422206 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.982325165 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.969613406 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.978580961 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.969541394 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.974555924 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.970769921 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.970220847 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.970072326 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.969134743 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.973054753 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.973556652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.991826379 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.979537689 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.971671826 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.97298049 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.969256209 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.967472178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.970601116 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.963996392 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.969189577 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.964714857 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.963815964 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.963191562 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.96262815 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.968144132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.962095694 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.961361214 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.965616594 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.962313304 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.961919638 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.962737658 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.961808808 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.963269883 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.961799256 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.961368473 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.964557535 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.961754612 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.970404378 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.963646196 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.962753383 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.962665223 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.963216806 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.960671752 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.961257555 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.963565307 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.966951543 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.959722024 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.962008617 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.970554443 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.961676324 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.964189773 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.961382287 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.960695128 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.96383507 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.961830623 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.966880759 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.969098108 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.964906965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.959875077 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.966363973 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.962890436 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.964051265 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.959314865 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.961926534 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.961752501 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.968951662 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.95946097 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.960609108 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.968279186 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.963714044 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.966116082 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.959908239 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.962465594 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.960291776 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.961634824 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.959834846 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.963713423 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.967843695 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.966501907 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.961013384 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.963889973 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.961867181 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.962087271 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.965295854 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.962660686 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.975466033 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.970802642 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.960160126 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.959566434 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.960912563 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.964364423 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.961116404 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.960951966 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.969305267 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.962204279 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.963044188 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.964430747 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.961337681 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.960448874 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.969178344 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.963766365 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.965139702 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.963672434 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.96401929 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.95714544 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.961156947 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.968725811 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.961345651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.96240129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.963914264 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.96112378 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.963895287 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.954656881 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.96998885 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.960144347 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.961755414 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.971184289 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.960277049 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.959756913 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.960789423 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.95879095 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.964122572 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.961393945 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.960525205 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.960796637 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.960548608 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.965443587 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.969205367 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.961095649 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.967112011 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.960366993 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.971631132 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.957299509 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.95661339 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.95661637 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.960892407 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.969302092 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.954938859 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.955265413 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.963868245 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.956982447 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.958113267 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.960478063 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.954728621 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.955165424 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.955492061 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.956298189 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.965947426 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.957547233 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.952999502 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.953549254 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.952907855 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.956337693 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.953323887 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.955274421 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.955820408 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.954389481 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.959488841 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.954010465 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.953115021 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.953531148 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.953379342 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.95550889 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.952892527 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.962493864 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.953816434 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.954662311 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.963846053 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.95273047 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.963034132 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.952745353 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.952405252 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.958023691 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.951719577 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.956296985 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.952421391 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.95209612 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.957016165 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.952110967 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.9534468 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.963696806 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.961704081 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.956915652 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.957693187 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.950895759 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.952619674 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.9600633 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.974270781 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.957940574 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.952063614 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.954473876 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.95905655 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.95237165 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.96130405 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.955052516 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.957069539 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.952714629 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.950312833 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.959341866 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.962277125 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.951078002 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.94917286 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.950477395 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.959060142 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.953810286 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.950291073 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.951806949 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.955278653 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.955971132 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.963173515 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.950975145 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.953009336 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.951817034 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.953821796 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.953163728 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.950645364 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.95201616 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.953017487 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.958613012 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.952547491 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.948577729 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.952668399 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.950677023 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.954178806 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.962360212 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.949760919 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.951358201 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.95305363 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.950187358 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.958352252 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.952616014 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.948266203 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.95078999 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.948491291 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.953524457 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.952567612 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.958197479 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.951248671 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.950291362 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.956755996 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.95493865 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.952811074 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.951931759 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.953235066 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.963922464 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.954733382 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.961672154 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.957433908 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.951744787 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.955450446 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.959634737 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.960430331 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.953078951 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.953165589 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.956177081 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.954750929 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.955140992 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.954368598 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.953548722 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.958182282 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.957453141 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.953987112 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.9547939 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.955397599 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.953236099 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.959869067 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.955843788 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.958671446 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.95478582 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.952203681 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.956504237 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.955088572 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.955157172 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.957320834 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.955092654 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.95570328 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.955427354 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.953444112 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.955871973 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.95341585 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.958150019 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.956370334 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.954837 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.955170257 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.957871024 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.956705543 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.954665441 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.957589414 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.962466388 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.954277137 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.95936756 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.954891161 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.959426968 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.954385471 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.952415597 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.958008665 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.952847683 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.962736491 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.954268116 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.954817797 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.960314144 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.954386582 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.959996878 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.958599255 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.960160329 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.960849892 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.953755287 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.954113873 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.957322785 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.962464471 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.955843495 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.962385814 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.959195163 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.957331815 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.956266556 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.951215215 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.957685209 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.953719144 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.955057174 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.956270065 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.957501788 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.959809353 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.953072729 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.955290865 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.953840446 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.956138487 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.958239506 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.950401943 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.956947736 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.961602214 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.964319335 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.957811372 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.954511815 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.954395681 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.955539769 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.964757512 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.957365212 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.955230516 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.952683139 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.955904381 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.953842637 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.96452729 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.964291097 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.959366547 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.954482762 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.959050173 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.977891992 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.960966612 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.965761624 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.986880441 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.961703589 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.96035704 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.961908064 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.958185055 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.960130276 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.961973599 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.958215851 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.968746795 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.961345138 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.958640056 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.966833372 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.96027178 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.961057271 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.957840138 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.958229067 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.964077756 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.95720339 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.9686492 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.957131794 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.957680993 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.957782934 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.959493016 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.959660951 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.956846871 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.955602739 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.959118516 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.955293041 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.960684836 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.968098779 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.957694258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.958551494 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.969895388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.973542334 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.406450323 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.957279718 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.957833164 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.96394689 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.962562153 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.955977085 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.961027269 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.964348453 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.961208754 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.965272263 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.962657648 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.959976208 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.958257773 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.956553546 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.958530156 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.970774279 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.969229435 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.958472382 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.958333049 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.964926784 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.958168989 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.966345695 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.958770352 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.958975431 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.960062158 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.960287582 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.957620255 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.958049967 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.958685359 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.962771664 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.966668611 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.960877693 seconds)
  done (took 1171.88079384 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.958961327 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.959400422 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.956807072 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.958296094 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.959296137 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.960065116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.958918545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.962031303 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.958491994 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.957957189 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.960214953 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.959034137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.965201661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.958034126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.958789555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.957040156 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.958246856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.964505835 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.958791212 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.959740597 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.956400844 seconds)
  done (took 43.033464255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.963854003 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.960387446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.958419004 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.960712867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.958772743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.962895908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.959457811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.959929087 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.95979379 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.960420115 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.963787312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.958664133 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.959507171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.959984021 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959488801 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.963024352 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.962777963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.962205436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.959033882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.961276144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.96053827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.965508817 seconds)
  done (took 45.025741672 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.963395329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.960364872 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.962538999 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.964174568 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.961891461 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.962160583 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.960896584 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.963910717 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.966436054 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.963846181 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.968556681 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.969195963 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.961935831 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.968826008 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.963574919 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.963680466 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.108185818 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.965471986 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.967191044 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.963359459 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.964594541 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.97163818 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.962613681 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.964762327 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.962975098 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.96320944 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.962728535 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.962363931 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.971060644 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.965945183 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.966045803 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.961246993 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.964865904 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.971225336 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.955386075 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.964957077 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.965733939 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.963946598 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.966513919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.961926591 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.971959311 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.982815412 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.962678241 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.967249565 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.974296252 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.963442508 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.962674712 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.965048794 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.970753 seconds)
  done (took 98.333135396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.96305672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.962932715 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.96220612 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.962625984 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.968330419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.963706204 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.962886102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.963282779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.964185752 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.966991638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.963677796 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.961874103 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.963828061 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.963070743 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.96652518 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.963275484 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.964912806 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.963432983 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.964341773 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.968355182 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.965388971 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.964571402 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.962713089 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.964105996 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.966047132 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.964648709 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.96565519 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.964514772 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.965684531 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.970206655 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.965597066 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.964914577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.96532944 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.966170909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.970377878 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.967112297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.965376824 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.96654843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.967318949 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.969176944 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.966371177 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.967422211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.966724468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.966835959 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.971565084 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.96836509 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.966203871 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.967129299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.968552917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.970349018 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.968026874 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.967702955 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.967712072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.967970347 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.96713905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.970319673 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.967730581 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.968475498 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.968068873 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.968050061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.972245867 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.968016811 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.967804597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.966943147 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.966267249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.971998684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.968424258 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.967040946 seconds)
  done (took 135.605388842 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.968098228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.972918917 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.969790146 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.96764632 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.966910759 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.968739309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.973012078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.968311579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.968429748 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.970622369 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.969672716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.972975156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.968201977 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.968522601 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.968521195 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.968434981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.969702648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.969562741 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.968914376 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.968662883 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.970293146 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.973952616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.968004545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.969324006 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.969647758 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.968915163 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.97089213 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.969668788 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.968929337 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.97002038 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.969267711 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.973621628 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.966825254 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.968842982 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.968793716 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.967971035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.972813563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.969955976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.972026847 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.972195113 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.971484547 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.972154371 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.973195793 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.972626708 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.971737509 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.971132047 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.97128205 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.975495902 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.970726245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.97053513 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.970531469 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.97040749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.970248025 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.97172419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.970601506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.971670173 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.970885038 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.975710073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.970205992 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.968233338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.969973139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.968726454 seconds)
  done (took 124.056536138 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.971716134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.970023484 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.970978246 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.970560131 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.974179764 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.972067936 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.972126626 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.971720263 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.970362116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.972909732 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.970749149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.971039522 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.97136468 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.971879848 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.974549266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.973949944 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.969660797 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.971561419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.970316765 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.973425166 seconds)
  done (took 41.3377257 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.972997612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.972472124 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.97243657 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.972874242 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.972047908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.973201593 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.973533191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.974311174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.974451647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.973203624 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.973582082 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.973256161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97389861 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.975674342 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.975790655 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.972686678 seconds)
  done (took 33.476407382 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.975016941 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.973110228 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.974865443 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.973873408 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.973106636 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.973848871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.972991272 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.9744109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.972944523 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.973232536 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.973702923 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.972994696 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.974992348 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.973929707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.972948993 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.972181113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.972841364 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.977527967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.971010666 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.974389038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.972756066 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.974073331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.975916935 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.97484982 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.971868477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.97440029 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.972114523 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.97515825 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.972952204 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.973284046 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.972364199 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.971476478 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.976011317 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.971473704 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.975325408 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.973125827 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.973976163 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.975950371 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.973063797 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.972358697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.974237393 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.974104545 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.975580709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.972505373 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.974261325 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.974919198 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.975346373 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.976207459 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.97458374 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.976672065 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.972241302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.977146284 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.980228584 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.974452807 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.974392451 seconds)
  done (took 110.474613494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.975476755 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.976245725 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.973732832 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.974251053 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.975932434 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.974760297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.979696137 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.974438159 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.976064595 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.973720093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.973893957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.977845841 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.97378838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.97676084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.974143974 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.97500697 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.974963653 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.979768818 seconds)
  done (took 37.462375284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.972966533 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.975437335 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.974640687 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.97570872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.972700087 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.975109046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.974902464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.975449987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.976931873 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.973739693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.974078174 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.974927199 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.973520532 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.977685337 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.973485086 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.974740499 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.973229153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.973278538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.973676608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.975023437 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.971258551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.974586125 seconds)
  done (took 45.339194123 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.976860001 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.975087592 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.987366847 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.993600316 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.995032111 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.012457887 seconds)
  done (took 13.839891809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97642583 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973012328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.975136591 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97949788 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.973555493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974795683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974359232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975165346 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975627439 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974451397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.972931463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973461547 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.972590646 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976694028 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973306647 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975976543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974223669 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.972828191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976838596 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973308966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975050164 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975144426 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.972439788 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974735918 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973378634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975538161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.975101249 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975190688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97682897 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.973474778 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974405281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974962137 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.975461625 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975438131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973915527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.974591291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974242809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974608575 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975374931 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974490135 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.9746094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976132882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974827781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974917332 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978911398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976728873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974834388 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.973921353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975385988 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979295246 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976299608 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975749431 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975416822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973585822 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980689762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975959217 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975956788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974924837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.975326392 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977424064 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976497384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975252521 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976606977 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976218659 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980489757 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976800824 seconds)
  done (took 132.275087013 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976735466 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.977140858 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980765337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978820619 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97677964 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975801262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976931109 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97789488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979394671 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.976187166 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978177013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978248407 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980130343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.977720107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976866557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97760261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.977772061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983812955 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.942535651 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978219507 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978686956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980153354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.98525588 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978864831 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978815438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978150248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978061085 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981487987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978417413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9769264 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976489809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978201592 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984488496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.97805355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.979492458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97779254 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978379836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.982877577 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979466357 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980087032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.980046852 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.979718291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983689776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98207769 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.978638719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979775155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978647061 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985951021 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979840295 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981568306 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979982716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978950803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981033213 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979180236 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980083831 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979616373 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978198397 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986568084 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.98080307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980293419 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981744866 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980701511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984110067 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.981694082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981379353 seconds)
  done (took 132.525328769 seconds)
done (took 2726.209252761 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.073176712 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.062872547 seconds)
  done (took 16.038121398 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.150197264 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.102921107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.987928123 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.008599636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.988133638 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.987521237 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.990119223 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.98872071 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.987991553 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.987823713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.989909686 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.174092371 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.094340301 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.989031389 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.988074745 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.081307211 seconds)
  done (took 54.41542468 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.994732704 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.994007142 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.004406243 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.991968487 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.993774095 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.004883067 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.023355157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.99732493 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.027283886 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.009667599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.0637306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.004792221 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.994084311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.042355565 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.004967371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.008549397 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.086855694 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.066499249 seconds)
  done (took 38.22584811 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.073200963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.999839984 seconds)
  done (took 10.990699127 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.008905257 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.017652627 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.997402094 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.014989738 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.998181661 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.000549654 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.002342727 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.005177113 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.991913895 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.011299364 seconds)
  done (took 71.990411212 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.9974055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.994594534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.99529354 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.993941052 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.988608504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.992937546 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.992694154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.994370102 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.677820082 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.030021973 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.989244601 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.999913879 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.982312651 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.99332715 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.989019849 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.019742743 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.135030881 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.988897919 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.988320537 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.9987773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.992497541 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.067817218 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.004866764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.991858927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.02559345 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.675068224 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.007160508 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.996646085 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.153192285 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.989390219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.9923409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.153700671 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.99894301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.338596006 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.322370482 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.998092468 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.002689228 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.000147052 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.989467903 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.157324219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.994534497 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.999110823 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.922399972 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.30522087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.082106286 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.040578355 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.378886135 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.996228109 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.996159468 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.026993484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.996086188 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.995175847 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.009397806 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.494110478 seconds)
  done (took 139.755834236 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.981645904 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.223497674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.140454865 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.991626872 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.248030916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.198523513 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.994177175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034811336 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.995029629 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.192715967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.248678041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.096582442 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.993300109 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.992594169 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.992882845 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.990775156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139959764 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.060086838 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.994701041 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.990701397 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016178671 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.19079592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110533773 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.993467615 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.018427243 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.197433371 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.113411443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.092265441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.949316859 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.992277153 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.052839406 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.994357351 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.995034519 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.991710727 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.144412198 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.086300581 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076099389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.994255643 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.99109858 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.992714378 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.669118634 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.191910304 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086008958 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.114428974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.24249532 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.205847299 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.683020718 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.993611398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.621035679 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.15750945 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.194267336 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.199248486 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.111011966 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.994390691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.279635608 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.993103881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.993565329 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.213056262 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.210728581 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.092047268 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.993715948 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.994146735 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.994320071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231559152 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.994114781 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.084928162 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.996741192 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.991608891 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086028779 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.094459918 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.220327755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.213231132 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.023914645 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.316855341 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.483397835 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.197101092 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.057347775 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.214105475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.995694658 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.994518672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071929168 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.839981939 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244055677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.234461862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.191045654 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.023590732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.643323002 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.995606722 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.182287333 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.184748381 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.226123636 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.241385257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.230447817 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.338603345 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.995085425 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.995779971 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.307216765 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.112004174 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.987801032 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.345215149 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224873804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.517555459 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.022132729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.276308067 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124544651 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.997061384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.644509842 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.99291857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.200778846 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.033003822 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.995903382 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.995846426 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.186315111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.898478088 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.995894467 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.716342879 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.057857052 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.999121319 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.203628702 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.996367812 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.239888559 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.001125632 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226752979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.895829386 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025977431 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.170705318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.24444908 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.627755135 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309429831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.239127493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11211562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.218826833 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.809551639 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.995766572 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258687243 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.000753987 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.998959098 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.166715118 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.999129238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140701286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.998632002 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.262827192 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017893426 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.224380194 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.000743407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.238720371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.028961143 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045991891 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.002460459 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.122235576 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.002358253 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.844139912 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.155359961 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.997840811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.992195673 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.586012934 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.998157723 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.152028869 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.222748404 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.019512659 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.065771955 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.56485925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.99807349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078558546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.02086319 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.614998694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.001657715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.249057506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.956092469 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.478565351 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.000365016 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.234268291 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.184006138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.000066047 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.99927803 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.841694114 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.997949565 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.999525966 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.154913386 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.414695864 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.934273186 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197777526 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.005455402 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127387758 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.000525662 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.33536471 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.340550248 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.001046557 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.997990543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.000542999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.999831455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.998737782 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.207954224 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.029361198 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.432670474 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.135368078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.253009908 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.308141596 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.198569069 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.042195275 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.004846538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.22081311 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.003423121 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.062207227 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.005717921 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019120412 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.228139206 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.004629661 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.203895745 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.236108496 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.895019792 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045445122 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.004585841 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.993745295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.907528631 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.144460274 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084793719 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.006459376 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.001583691 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.115813324 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117421026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.1851373 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.818061909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.162858243 seconds)
  done (took 929.784356303 seconds)
done (took 1263.108155983 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.001255839 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.003316275 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.00618387 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.003260558 seconds)
  done (took 29.941813248 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.006997551 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.00376978 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.003243433 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.005587786 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.007334144 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.004666409 seconds)
  done (took 13.959806386 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.004460633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.002851345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.003261103 seconds)
  done (took 22.941560898 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.064063558 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.411537906 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.131734606 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.403968754 seconds)
  done (took 10.941388876 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.993937937 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.007297469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.00631583 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.992119683 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.005737275 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.007871183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.006738585 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.006427841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.006610591 seconds)
  done (took 19.963709173 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.510673449 seconds)
done (took 104.189006153 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.143529675 seconds)
    (2/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.02662327 seconds)
    (3/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.638778028 seconds)
    (4/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.31871726 seconds)
    (5/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.398456123 seconds)
    (6/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.021461972 seconds)
    (7/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.019927966 seconds)
    (8/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.975353896 seconds)
    (9/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.258559326 seconds)
    (10/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.011216325 seconds)
    (11/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.225171284 seconds)
    (12/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.025696947 seconds)
    (13/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.389354236 seconds)
    (14/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.246386222 seconds)
    (15/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.970933643 seconds)
    (16/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.479750892 seconds)
    (17/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.160034254 seconds)
    (18/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.206503772 seconds)
    (19/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.182366477 seconds)
    (20/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.140442882 seconds)
    (21/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.021156511 seconds)
    (22/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.092728695 seconds)
    (23/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.020895811 seconds)
    (24/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.738804034 seconds)
    (25/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.19223425 seconds)
    (26/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.020205849 seconds)
    (27/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.797005624 seconds)
    (28/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.011576375 seconds)
    (29/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.250048509 seconds)
    (30/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.025093696 seconds)
    (31/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.088104953 seconds)
    (32/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.087631337 seconds)
    (33/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.006143004 seconds)
    (34/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.006693734 seconds)
    (35/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.061819446 seconds)
    (36/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.120118191 seconds)
    (37/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.109319089 seconds)
    (38/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.171557632 seconds)
    (39/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.117981215 seconds)
    (40/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.18299625 seconds)
    (41/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.111065592 seconds)
    (42/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.885838254 seconds)
    (43/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.141970047 seconds)
    (44/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.10054551 seconds)
    (45/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.37613882 seconds)
    (46/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.422242239 seconds)
    (47/341) benchmarking ("sort", Bool, false)...
    done (took 2.223675797 seconds)
    (48/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.550442445 seconds)
    (49/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353136194 seconds)
    (50/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.10926427 seconds)
    (51/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.011661747 seconds)
    (52/341) benchmarking ("collect", "all", Float64, true)...
    done (took 3.662523351 seconds)
    (53/341) benchmarking ("sort", Int64, false)...
    done (took 5.662063735 seconds)
    (54/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.596281525 seconds)
    (55/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.013741416 seconds)
    (56/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.247720095 seconds)
    (57/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.444628376 seconds)
    (58/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.869774431 seconds)
    (59/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.511807827 seconds)
    (60/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.138901993 seconds)
    (61/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.147121932 seconds)
    (62/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.118989836 seconds)
    (63/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297520458 seconds)
    (64/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.027860842 seconds)
    (65/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.095346038 seconds)
    (66/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.020841966 seconds)
    (67/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.296493927 seconds)
    (68/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.212396539 seconds)
    (69/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.086593507 seconds)
    (70/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.624369647 seconds)
    (71/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.015407495 seconds)
    (72/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.053224488 seconds)
    (73/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.892941709 seconds)
    (74/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.9995918 seconds)
    (75/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.492799767 seconds)
    (76/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.476004425 seconds)
    (77/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.026486553 seconds)
    (78/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.422513677 seconds)
    (79/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.164502937 seconds)
    (80/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.094232028 seconds)
    (81/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.10642905 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.402345936 seconds)
    (83/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.218535594 seconds)
    (84/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.343714406 seconds)
    (85/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.134527158 seconds)
    (86/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.034390495 seconds)
    (87/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.105089125 seconds)
    (88/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.798645586 seconds)
    (89/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.264644079 seconds)
    (90/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 2.962623066 seconds)
    (91/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.446319681 seconds)
    (92/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.024099048 seconds)
    (93/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.212397314 seconds)
    (94/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.322711719 seconds)
    (95/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.108482892 seconds)
    (96/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.412096654 seconds)
    (97/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.261341622 seconds)
    (98/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.010981462 seconds)
    (99/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.390469483 seconds)
    (100/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.100919843 seconds)
    (101/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.013200249 seconds)
    (102/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.151146138 seconds)
    (103/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.263309683 seconds)
    (104/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.217876605 seconds)
    (105/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.272874216 seconds)
    (106/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.025274804 seconds)
    (107/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.88326338 seconds)
    (108/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.71079977 seconds)
    (109/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.13031898 seconds)
    (110/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.353525619 seconds)
    (111/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.019377692 seconds)
    (112/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.0929085 seconds)
    (113/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.020591808 seconds)
    (114/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.239033273 seconds)
    (115/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.352375119 seconds)
    (116/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.38498529 seconds)
    (117/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.355211171 seconds)
    (118/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.016350284 seconds)
    (119/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.694287222 seconds)
    (120/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.236519431 seconds)
    (121/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.152674107 seconds)
    (122/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.014367971 seconds)
    (123/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.587343808 seconds)
    (124/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.308064677 seconds)
    (125/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.110395243 seconds)
    (126/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.030197416 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.160327722 seconds)
    (128/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.246834481 seconds)
    (129/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.988772158 seconds)
    (130/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.43565049 seconds)
    (131/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.018695007 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.406848411 seconds)
    (133/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.013924342 seconds)
    (134/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.397357595 seconds)
    (135/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.092038011 seconds)
    (136/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.822976741 seconds)
    (137/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.165781614 seconds)
    (138/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.149066785 seconds)
    (139/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.025957679 seconds)
    (140/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.071146228 seconds)
    (141/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.059956506 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.256477691 seconds)
    (143/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.015455371 seconds)
    (144/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.01432949 seconds)
    (145/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.058682106 seconds)
    (146/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.308379367 seconds)
    (147/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.395129554 seconds)
    (148/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.318303677 seconds)
    (149/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.141644582 seconds)
    (150/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.021608297 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.019262323 seconds)
    (152/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.727004516 seconds)
    (153/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.107971989 seconds)
    (154/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.022453528 seconds)
    (155/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.190909918 seconds)
    (156/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.099685637 seconds)
    (157/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.032425517 seconds)
    (158/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.074245126 seconds)
    (159/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.77000942 seconds)
    (160/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.75078496 seconds)
    (161/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.647554063 seconds)
    (162/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.665638169 seconds)
    (163/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.108566713 seconds)
    (164/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.033245499 seconds)
    (165/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.893162603 seconds)
    (166/341) benchmarking ("sort", Int8, false)...
    done (took 4.976641891 seconds)
    (167/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.203980982 seconds)
    (168/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.368823695 seconds)
    (169/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.386346534 seconds)
    (170/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.020864078 seconds)
    (171/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.78873208 seconds)
    (172/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.212311482 seconds)
    (173/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.619682546 seconds)
    (174/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.327190962 seconds)
    (175/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.252246355 seconds)
    (176/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.017492317 seconds)
    (177/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.406646195 seconds)
    (178/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.020595332 seconds)
    (179/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119043857 seconds)
    (180/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.121701728 seconds)
    (181/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.945827979 seconds)
    (182/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.358288409 seconds)
    (183/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.015743707 seconds)
    (184/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.315306289 seconds)
    (185/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.060043779 seconds)
    (186/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.418284958 seconds)
    (187/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.168539695 seconds)
    (188/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.015991595 seconds)
    (189/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.093295294 seconds)
    (190/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.05413654 seconds)
    (191/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.516911702 seconds)
    (192/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.149085083 seconds)
    (193/341) benchmarking ("sort", BigInt, false)...
    done (took 7.019456338 seconds)
    (194/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.020661521 seconds)
    (195/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.541930268 seconds)
    (196/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.218246708 seconds)
    (197/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.230400157 seconds)
    (198/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.053322652 seconds)
    (199/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.020544894 seconds)
    (200/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.42838382 seconds)
    (201/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.02345792 seconds)
    (202/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.491987377 seconds)
    (203/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.038309091 seconds)
    (204/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.934267561 seconds)
    (205/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.782411623 seconds)
    (206/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.093131018 seconds)
    (207/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.326378795 seconds)
    (208/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.415419556 seconds)
    (209/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.000955773 seconds)
    (210/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.103876321 seconds)
    (211/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.028879759 seconds)
    (212/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.20474073 seconds)
    (213/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.310460847 seconds)
    (214/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.286866238 seconds)
    (215/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.13741652 seconds)
    (216/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.934671497 seconds)
    (217/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.351844081 seconds)
    (218/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.220426591 seconds)
    (219/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.151821067 seconds)
    (220/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.152627473 seconds)
    (221/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.037026424 seconds)
    (222/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.01766877 seconds)
    (223/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.209208099 seconds)
    (224/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.031882492 seconds)
    (225/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.282090388 seconds)
    (226/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.020298831 seconds)
    (227/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.143277901 seconds)
    (228/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.100624945 seconds)
    (229/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.019354892 seconds)
    (230/341) benchmarking ("map", identity, Int8, true)...
    done (took 4.061876579 seconds)
    (231/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.325925633 seconds)
    (232/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.797174421 seconds)
    (233/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.110363366 seconds)
    (234/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.251760827 seconds)
    (235/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.671634277 seconds)
    (236/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.025073419 seconds)
    (237/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.265796856 seconds)
    (238/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.122652964 seconds)
    (239/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.02064666 seconds)
    (240/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.917974531 seconds)
    (241/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.184387576 seconds)
    (242/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.210316561 seconds)
    (243/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.685000991 seconds)
    (244/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.310099935 seconds)
    (245/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.021661159 seconds)
    (246/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 2.985777955 seconds)
    (247/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.025766427 seconds)
    (248/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.188262585 seconds)
    (249/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.018173217 seconds)
    (250/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 4.050736475 seconds)
    (251/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.441624009 seconds)
    (252/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.258371869 seconds)
    (253/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.153294857 seconds)
    (254/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.02088185 seconds)
    (255/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.097281344 seconds)
    (256/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.097690271 seconds)
    (257/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.126123107 seconds)
    (258/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.403796203 seconds)
    (259/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.032542415 seconds)
    (260/341) benchmarking ("sort", Float64, false)...
    done (took 5.738288981 seconds)
    (261/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.162790042 seconds)
    (262/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.367403159 seconds)
    (263/341) benchmarking ("sort", Float32, false)...
    done (took 5.688620151 seconds)
    (264/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.024116407 seconds)
    (265/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.957766356 seconds)
    (266/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.038794673 seconds)
    (267/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.124760777 seconds)
    (268/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.02550897 seconds)
    (269/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.157638995 seconds)
    (270/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.001429686 seconds)
    (271/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.329164544 seconds)
    (272/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.037112218 seconds)
    (273/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.609615664 seconds)
    (274/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.055140625 seconds)
    (275/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.021422077 seconds)
    (276/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.420055242 seconds)
    (277/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.385121145 seconds)
    (278/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.782732959 seconds)
    (279/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.099180245 seconds)
    (280/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.160280455 seconds)
    (281/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.036776167 seconds)
    (282/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.151292291 seconds)
    (283/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.026755653 seconds)
    (284/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.039971086 seconds)
    (285/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.082308575 seconds)
    (286/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.109469902 seconds)
    (287/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.162551922 seconds)
    (288/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.050584113 seconds)
    (289/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.124127913 seconds)
    (290/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.317305743 seconds)
    (291/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.403504236 seconds)
    (292/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.895545374 seconds)
    (293/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.02814215 seconds)
    (294/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 3.905519157 seconds)
    (295/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.421844584 seconds)
    (296/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.034877609 seconds)
    (297/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.126116702 seconds)
    (298/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.26345702 seconds)
    (299/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.103666177 seconds)
    (300/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.310069161 seconds)
    (301/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.959372545 seconds)
    (302/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.051872916 seconds)
    (303/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.941273325 seconds)
    (304/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.214463768 seconds)
    (305/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.025869958 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.569710352 seconds)
    (307/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.124478923 seconds)
    (308/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.401693694 seconds)
    (309/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.720917661 seconds)
    (310/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.294673718 seconds)
    (311/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.028884131 seconds)
    (312/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.500429519 seconds)
    (313/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.289246489 seconds)
    (314/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.326890959 seconds)
    (315/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.023784235 seconds)
    (316/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 9.710130791 seconds)
    (317/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.400287084 seconds)
    (318/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.81793888 seconds)
    (319/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.404632796 seconds)
    (320/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.202849575 seconds)
    (321/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.025748453 seconds)
    (322/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.332931954 seconds)
    (323/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.327521915 seconds)
    (324/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.333120941 seconds)
    (325/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.308788729 seconds)
    (326/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.191733575 seconds)
    (327/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.956608512 seconds)
    (328/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.304499611 seconds)
    (329/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.332519417 seconds)
    (330/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.24391265 seconds)
    (331/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.500973868 seconds)
    (332/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.041848493 seconds)
    (333/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.164517248 seconds)
    (334/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.277518835 seconds)
    (335/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.185598082 seconds)
    (336/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.427525739 seconds)
    (337/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.790796398 seconds)
    (338/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.239909442 seconds)
    (339/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.118400008 seconds)
    (340/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.245671588 seconds)
    (341/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.387459487 seconds)
  done (took 1142.796806622 seconds)
done (took 1144.829587429 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.060849059 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.048183965 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.031717069 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.052964345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.144692424 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.080231198 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.045857587 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.035669373 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.081703336 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.082252229 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.030429756 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.08041196 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.029909926 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.0344702 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.033155726 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.047214623 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.393269276 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.070269738 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.048846107 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.044191492 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.049389081 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.030836274 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.084760699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.081877897 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.038149357 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.036357422 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.036921286 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.053328725 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.146548994 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.035061378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.038760663 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.045821901 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.393874656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.071181547 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.030927214 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.053349799 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.045966678 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.045906581 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.037657885 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.067432609 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.542603083 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.039131472 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.035920453 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.034510388 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.035435652 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.043030764 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.034082862 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.041986823 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.048201991 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.049203147 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.527815362 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.057420081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.037164598 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.035961943 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.049067083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.036473871 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.038929527 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.049914931 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.051825704 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.048857089 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.377427512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.081158234 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.04177647 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.051777319 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.043317293 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.606494833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.050570751 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.042781194 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.544195936 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.050335643 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.605395937 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.065040819 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.038285473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.049130268 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.070204851 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.396124734 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.072349711 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.034053605 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.043946602 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.033182035 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.050770986 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.049689799 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.044909967 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.035265954 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.052270463 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.085674533 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.04975841 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.036159447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.049934296 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.055159653 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.046113577 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.049837806 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.041192559 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.034467853 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.050612286 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.040013443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.039638194 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.040472465 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.041908883 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.052187545 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.542904136 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.056409552 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.034767373 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.034077245 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.035983649 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.054548206 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.542512804 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.045280703 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.060735311 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.0895807 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.041416824 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.379546493 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.077805159 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.054981292 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.051042714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.032979185 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.037107849 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.379709098 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.570343095 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.061122841 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.02913875 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.037861382 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.041241558 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.039882481 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.034695648 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.397744165 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.07658836 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.055544351 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.161909319 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.053808334 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.070816846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.031200824 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.042726534 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.087011625 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.056600717 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.068800758 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.041950191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.054068988 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.058161603 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.038541624 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.052347071 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.045772808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.039876372 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.047609646 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.037777852 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.074424989 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.052422523 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.052181905 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.059177583 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.160899186 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.038346922 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.383188028 seconds)
done (took 320.650043966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.095779859 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.032272633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.10482436 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.023781302 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.102065289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.087474798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.028314964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.035874083 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.034914015 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.432679713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.03432371 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.039232627 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.035300472 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.034608223 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.086469679 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.034533595 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.036410735 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.272398013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.036619992 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.095105154 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.033808475 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.035346705 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.036519122 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.435711217 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.037431066 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.036234904 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.095985698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.035487788 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279561941 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.033273604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.037466672 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.277251011 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.097096677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.050871985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.043691871 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.043086026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.1044661 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.043781068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.086003775 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.085024134 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.107975734 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.070923368 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.035547251 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.033651166 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.038276235 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.038318482 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.038650365 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.069246551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.036021978 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.04549118 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.2756517 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.041466902 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.043544062 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.039766408 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.038260864 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.052627403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.035714639 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.038988597 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.098589473 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.039205513 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.088333475 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.437710038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.455503724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.037439594 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.038529688 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.036410461 seconds)
  done (took 194.882282352 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.105586324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.098864204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.10614144 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.043226406 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.090300646 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.106550052 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.042722235 seconds)
  done (took 16.553843746 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.04417559 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.037874068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.061739056 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.060719082 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.040233036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.179672218 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.051324379 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.042779869 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.06506633 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.037977897 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.377010022 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.061808344 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.046841116 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.039727872 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.051993844 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.069213206 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.041957557 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.040708001 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.136097414 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.117364846 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.042980849 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.047482223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.071010263 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.052619198 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.039709613 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.040798819 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.043689574 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.046998903 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.040673528 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.039244045 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.041132297 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.052966406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.041052619 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.040963056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.03861431 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.040792745 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.040645882 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.040503088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.039199731 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.041535537 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.04153786 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.041420975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.03975238 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.041875732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.040313062 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.062745658 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.039929503 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.038425325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.040373788 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.04052216 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.071471815 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.040242863 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.042088389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.044440629 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.083124704 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.047025121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.043290976 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.041187659 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.041187192 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.041687967 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.041725087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.116959782 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.0662918 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.039098552 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.065392924 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.080656043 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.039245247 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.039315977 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.043137079 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.068304007 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.041460724 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.067876149 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.044970645 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.143828744 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.040344953 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.188134752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.0672158 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.046276193 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.046283418 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.044308176 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.050656924 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.041288687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.046056748 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.051130486 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.047283616 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.04055016 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.043998757 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.045710003 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.051201052 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.046203662 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.092093177 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.042701423 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.041270826 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.145959577 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.04524351 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.142367511 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.071213848 seconds)
  done (took 221.750874438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.050161835 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.048481441 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.047351909 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.056363498 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.045595619 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.0453753 seconds)
  done (took 14.260671025 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.046354383 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.047628297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.046480905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.044471431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.042368472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.045429192 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.046400136 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.044917445 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.047707326 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.044536885 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.048091823 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.044855116 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.045443681 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.043911667 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.045712594 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.042675915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.046088553 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.044875936 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.044890059 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.046291094 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.189148888 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.04579918 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.045487297 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.049384984 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.050665054 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.046388557 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.056131611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.045017231 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.043906494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.054832655 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.052195707 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.046279247 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.050154614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.054280131 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.050682001 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.049438297 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.049387963 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.049202682 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.047112655 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.048539658 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.047190545 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.046802898 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.046942162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.048898553 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.048158565 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.054766723 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.053089959 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.05572506 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.054484492 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.050194524 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.049444335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.050347474 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.049726178 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.052620303 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.054926991 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.056493993 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.057258485 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.050225611 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.049853361 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.053343858 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.053886575 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.051890161 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.052275025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.053727947 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.056730342 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.048775533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.055292319 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.053566665 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.050507538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.050625216 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.049615689 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.048422771 seconds)
  done (took 150.655979442 seconds)
done (took 600.085881482 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.128006779 seconds)
  done (took 9.099725879 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.253072865 seconds)
  done (took 9.304087026 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.531556034 seconds)
  done (took 12.506145317 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.080576851 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.080060778 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.070189645 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.055240053 seconds)
  done (took 30.269295465 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.211845027 seconds)
  done (took 9.184168502 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.060245151 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.046670833 seconds)
  done (took 16.140080153 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.174871248 seconds)
  done (took 9.147162885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.056370695 seconds)
  done (took 9.040918255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.064209044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.076783055 seconds)
  done (took 16.131953588 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.053030482 seconds)
  done (took 9.025970477 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.795133786 seconds)
  done (took 9.843642949 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.062441184 seconds)
  done (took 9.052915248 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.098324173 seconds)
  done (took 9.070905095 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.989464267 seconds)
  done (took 9.964705325 seconds)
done (took 169.754358353 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.061725518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.052605847 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.052142294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.049632964 seconds)
  done (took 30.186531914 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.089158718 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.087893208 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.096071287 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.087166753 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.079256585 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.077308655 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.085615087 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.088272216 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.077563272 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.083803538 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.073833736 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.083123325 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.085863429 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.079854294 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.097359275 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.085208783 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.089241214 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.087412423 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.076315679 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.096400612 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.08446262 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.090442165 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.052524326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.055399011 seconds)
  done (took 51.962098141 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.24160068 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.120354304 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.207661915 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.096241739 seconds)
  done (took 10.639322056 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.051865293 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.118019538 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.094306572 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.097171878 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.149013227 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.142160204 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.104884916 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.265886259 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.168296634 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.180098964 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.058622074 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.075244233 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.079114738 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.105553927 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.141682201 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.049448542 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.051339082 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.167375898 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.115747943 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.263356049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.05530733 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.108185987 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.139997307 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.106404669 seconds)
  done (took 52.864875389 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.053589058 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.062469029 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.064778367 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.056251466 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.056307527 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.054869535 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.060952375 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.056678181 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.077638264 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.056929426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.054360111 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.055674622 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.061540965 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.055552781 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.055060241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.067484793 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.069738333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.056614593 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.06111782 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.063144404 seconds)
  done (took 43.175377501 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.054035812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.898888681 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.403163664 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.307140221 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.053849713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.052512813 seconds)
  done (took 32.746407753 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.067841522 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.061985254 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.054788792 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.115838683 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.190982615 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.061693425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.054313361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.064713597 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.100295872 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.120897849 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.076700431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.083148691 seconds)
  done (took 27.029027704 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.054393768 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.057043486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.055574758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.067623006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.069103462 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.063461937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.062022069 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.052970045 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.066988453 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.07246555 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.065564697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.069056706 seconds)
  done (took 46.736669568 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.270987453 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.282732535 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.267657088 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.55610959 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.667316934 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.034829958 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.343350867 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.267768585 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.804404677 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.818337875 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.341238588 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.104190126 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.008737732 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.980933869 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.975187026 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.301240146 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058598187 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.914333358 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.302867122 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.104284431 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057095317 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.058599904 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.060922944 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.34629164 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377487649 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.059928819 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.268117225 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073422853 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.067793085 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281702524 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.477332795 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.102431172 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.260448569 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.412978641 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.386033164 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.153588332 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.086870929 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.12040806 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.096415627 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.094729977 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.067055995 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.070109451 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.599684117 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.070738737 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330244221 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05801525 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.117619474 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.046205295 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.98306528 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.391202877 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.159829979 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.057621642 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.093726795 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.490799125 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.176616322 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.30128969 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.062123586 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.125520854 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.109843329 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.332831668 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.25574167 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.064752024 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.27260098 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.983656608 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.429581312 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172074526 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.062401268 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.06469251 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.760294733 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.301622338 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.141925843 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.393855498 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.80736777 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.061673031 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.062767496 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.084408348 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.152298566 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.059827554 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.352593867 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.064579047 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 3.986599894 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.159819878 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.457308839 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064297251 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.057544432 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.068878326 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.90461014 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.078922769 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.156113439 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.341743552 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.370036378 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.062978062 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062353194 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.083255534 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064826759 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.011642995 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.523633366 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.119376136 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.98621487 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.624021616 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.437558996 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.019983341 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.484919083 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.09743844 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.335934517 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.201077684 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.464833851 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.269696925 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.308641505 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.596841037 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.069305121 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.620152227 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.143563049 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.139883578 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.062282751 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.826627667 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.129117943 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.374726732 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.163811764 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.064003918 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.989946868 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.074228666 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.265100462 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.456617577 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.110763977 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.063186188 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.068687646 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.061856241 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.065963423 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.17713085 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.077429681 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.347804044 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.127821021 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.063202432 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.000922933 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.067066212 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.340386979 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.551341931 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121765187 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.311518982 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.325356741 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.777086649 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.074206435 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.073507176 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.323278303 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.129588303 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138556335 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.633137378 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.197423855 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.160546382 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.025699839 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200501989 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.071704447 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.0695717 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.28653561 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.471809937 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.492149691 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.105683281 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.087657687 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.069829027 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.133089495 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.301129771 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.141376998 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.093981016 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.07046473 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.153716778 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.292688999 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.065420142 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.083446974 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.308476877 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.308124165 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.35329021 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.11535226 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.140168109 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.134303899 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.076429629 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.279357795 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.154307807 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.737213645 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.60960331 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.280175576 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.523975775 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.025480665 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.704769839 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.347357275 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.435330759 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.082380878 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.51664891 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.133952958 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.655882671 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.092073933 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.591240107 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.990334156 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.071215742 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.397168293 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.022605841 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.69526159 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.121948961 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.122350524 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.069964375 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.068005647 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.074868884 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.068801311 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.172996949 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.133781855 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.141638946 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.996035961 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.616531741 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.099467891 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070116331 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.069656799 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.407317652 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.855821113 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.016653949 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.068542776 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144950166 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.807516343 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.617692422 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.071333706 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.071729411 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.67018385 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.706792912 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.965932604 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.150089781 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.805618187 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.095470502 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.347572892 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.174614917 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.35893306 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.771406659 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144583422 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.069833106 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.073829681 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.770643047 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.076628331 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.771706406 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.342920424 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.335724823 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.487139526 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.126886948 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.27843014 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.083032173 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.070005333 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.584998616 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.091808755 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.071683255 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272005213 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.5837964 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.427549489 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.701633793 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.153904831 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.10312457 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.331973213 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.064058019 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.449120719 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.742475512 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.064160048 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.098177619 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.311494663 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.755517293 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071852558 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.981094474 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.076572773 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.28293233 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.272283118 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.337135783 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.360385259 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.512755437 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.087887623 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.074802609 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.094904996 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.31425284 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.069506823 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.108178618 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.518779007 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.151289553 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.495665951 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.348291954 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.464286801 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.690586884 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.332089291 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.129448735 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.084300543 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.71929524 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190424584 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.002758041 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.189874963 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.997568706 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.759256767 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359571766 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.09033899 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.333345611 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.046244421 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.417333241 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.362626142 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.352233695 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.103352432 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.101621466 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.055222198 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.127317215 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.092544561 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.157821642 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.184654506 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.077451178 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.506210149 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.10576724 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.12048675 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.0780294 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.59550372 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.091962327 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.077379693 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.782598892 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.734296853 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.191622216 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.146087715 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.82640801 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.472831418 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.120668503 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.957216566 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.72268048 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.337017751 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.124516699 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.520687001 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.113043693 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.477671065 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.086039034 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.28671071 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.078764647 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.556152918 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.113633677 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.342609858 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.028779773 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.287106725 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.271292736 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.098934033 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.078489906 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.997506628 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.182171788 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.940414269 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.059287895 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.07599313 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.075613274 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.508355288 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.16923995 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.531838395 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.893259418 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.078884815 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.444299474 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.453491114 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.594786436 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.102562795 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.077629395 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.444762385 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.844781128 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.415685161 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.357928207 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.084482595 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.755254739 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.286634798 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.199389995 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.993475951 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.570910228 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.636732579 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.777366074 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.086155906 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.277756228 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.439621144 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.243365486 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.105945701 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.148118144 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.479421363 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.33948923 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.7805311 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.003761399 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.076817771 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.472015369 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.10340774 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.173703171 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.320778189 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.391636381 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.543919323 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.462893166 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.116981524 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.478163744 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.519952897 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.487528284 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.290305764 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.442186382 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.400492988 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.961063868 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.490093843 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.289245117 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.17409447 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.352205838 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.947561085 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.788953612 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.319608059 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.085842071 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.006698737 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.286562549 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.090844779 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.398991058 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.614526916 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.089240183 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.376362179 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540250624 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.61860338 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.157415539 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.097846629 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.043867676 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.103034937 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.099303676 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.078876064 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.57216591 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.371736677 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.093077807 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.018802142 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.747762897 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.005062239 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.293849272 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.160821086 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.112194891 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.635749906 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.369426434 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.174374354 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.368601679 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.212977962 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.110194559 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.005000654 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.832991796 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.023837837 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.17751435 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.503869712 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.09352339 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.083392685 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.283585093 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.008253553 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.12512273 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.713372807 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.278767553 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.660641647 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.345248677 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200992259 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.322626158 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382321527 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.08289793 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.038463702 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351016024 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.010315355 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.61558252 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.757074358 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.787924801 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151034404 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.079611205 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.083991448 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352348385 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.439617804 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.172222412 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.575206578 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.109484529 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.102636389 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.429233984 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.162379867 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.083437538 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.085638917 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.472899377 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.307739143 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.083825977 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.117309414 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.293441637 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.155158132 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.276929044 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.158012734 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.597422133 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.087359325 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.085617248 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.11571276 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.029691932 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.047550957 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.80303273 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.14040839 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.089233606 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.348321099 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.720635062 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.284246505 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.476395814 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.947822855 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.167671514 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.104806683 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.085259911 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.074989866 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.470105986 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.380507902 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.079647661 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.349695386 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.125392719 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.084994317 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.094850615 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.050304802 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.083847334 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.840348993 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.968107641 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.813066756 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.480568975 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.090145417 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.110864235 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.079220103 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.013346853 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.102587625 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.113047401 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.066294975 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.086752075 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.449920424 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.173325815 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.163307128 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.084921398 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.085761457 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.089466114 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.296122455 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.597701904 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.100980074 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.784088262 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.28882939 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.087560927 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.576727027 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.522276331 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.231825588 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.118844774 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.16874449 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.321554892 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.630274816 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.171967901 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.056926961 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.311618251 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.086862923 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360578877 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359499903 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.084652757 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.298293964 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.473125409 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.364433096 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.113228166 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.708074254 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.148655519 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.178145567 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.977083075 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.087263392 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.087105714 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.348878861 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.138406829 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.084382452 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.094251388 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.641697266 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.858334927 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.54900047 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244505789 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.445937078 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.932686554 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.840267876 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.088793764 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.013649686 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.087085089 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.108984573 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.088742875 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.107739652 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.78067433 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.808689877 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.301356962 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.357494183 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.012538305 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.292122035 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.667598438 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.015085346 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.056373702 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.075394539 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.353830999 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.016048229 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.090656946 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.116358697 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.155571335 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.707418487 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.35332405 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.087465133 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.032703319 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.091544458 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.089275486 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.088788245 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.178967929 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.091455798 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.204288191 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.350041436 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.491271879 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.185242828 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.727469352 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.793326399 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.024653244 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.129133569 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.648161998 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.657732355 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.160699979 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.883970404 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.797602761 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.032333157 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.093194555 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.106046191 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.347477076 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091911213 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.090886554 seconds)
  done (took 2279.909796554 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.102227157 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.295106528 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.108752122 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.146844532 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.154441496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.248880982 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.128716404 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.121666835 seconds)
  done (took 59.316841704 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.091032287 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.110073558 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.097479157 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.091896846 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.106030609 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.092477576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.28257103 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.10515511 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.093190401 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.095809687 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.092846509 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.093595341 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.396824103 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.120719727 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.090962044 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.088311021 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.096403315 seconds)
  done (took 80.17865685 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.094489932 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.198466476 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.147325507 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.092204074 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.769628149 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.095275485 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.035005923 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.139544449 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.100103611 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.867645131 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.405667775 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.137545708 seconds)
  done (took 93.09676828 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.119601558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.109213069 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.109775415 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.111944557 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.108956833 seconds)
  done (took 12.594021461 seconds)
done (took 2822.466289263 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.524614936 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.212733719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.271071739 seconds)
  done (took 6.511632797 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.258483393 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.301968126 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.417585558 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.421449931 seconds)
  done (took 11.436206601 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.397766535 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.473296675 seconds)
  done (took 6.900338654 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.641378031 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.120366566 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.509459024 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.111955408 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.114422235 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.11274509 seconds)
  done (took 23.376471957 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.112231274 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.112625203 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.111230312 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.112261826 seconds)
  done (took 10.478105487 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.108706738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.838908447 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.113426197 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.120532834 seconds)
  done (took 22.211005791 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.278834021 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.164554753 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.883316727 seconds)
  done (took 9.357990689 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.737246613 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.562476922 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.719692017 seconds)
  done (took 10.048686556 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.265351957 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.087290151 seconds)
  done (took 8.381906661 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.253702678 seconds)
  done (took 4.283519942 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.96515096 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.424337721 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.588768725 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.660190933 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.716478589 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.368825983 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.456107082 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.396219756 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.515837486 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.536206106 seconds)
  done (took 27.647546485 seconds)
done (took 157.458530373 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.566564399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.143787519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.329579004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.591977533 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.363624632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.327670553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.395211174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.544477423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.260297283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.19073617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.502366223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.394048944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.345359257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.144021426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.355865227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.145417312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.355231437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.595323308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.184706254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.421700536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.409728265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.143582855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.347373488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.175214618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.358365597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.287790489 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.755099572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.144462206 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.331664977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.771177208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.284703603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.571437533 seconds)
  done (took 177.771486319 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.007009964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.115955072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.117489207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.117298359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.460775553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.119529392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.116574063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.116134911 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.435249933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.391756945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.117031349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.41251466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.125722813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.117790227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.1178431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.120831415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.518270126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.046145027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.125434055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.120504512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.119107565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.275503318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.135629302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.302296208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.498698676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.116703203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.118209847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.114986943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.119482064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.117791033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.117457645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.11832545 seconds)
  done (took 216.010722497 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.120004476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.106792988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.117280648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.118731751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.105587229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120609557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127568222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.120432974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.881539251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.878501884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.11934968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.118763802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.122357201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.115920227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.11976847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.119319609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11644074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.115531807 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.120362946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.118179761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.121248671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.906583518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.118555079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.950300871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.119656877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.128579849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.117009817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.119751463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.117923631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.119542289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.121515859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.122574723 seconds)
  done (took 228.983496347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.365097811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.121196676 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.125007695 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.128032689 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.12386325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.121129591 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.112475509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.369591477 seconds)
  done (took 21.510077799 seconds)
done (took 646.323673658 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.497063288 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.884748534 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.262726368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.150187821 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.426089433 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.195119573 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.142141593 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.204279072 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.790074111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.212335794 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.5613607 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.149366168 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.885778383 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.161932241 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.259392346 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.198390625 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.484075551 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.746940796 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.28269682 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.834205899 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.297180277 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.092947606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.223521031 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.833066605 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.577185808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.126462018 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.162240864 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.489807437 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.14897487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.292066824 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.809705044 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.404219432 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.163055311 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.145237271 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.197814394 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.173712261 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.339677612 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.157351402 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.260186385 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.899816286 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.839905874 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.673155672 seconds)
  done (took 110.677768431 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.131257584 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.127378348 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.130738041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.127806795 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.136846867 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.126784725 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.127519021 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.128592438 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.127733147 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.126762781 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.129014682 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.137299835 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.126711015 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.138851836 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.127747365 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.130149394 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.128359666 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.138632393 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.130800268 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.128428905 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.131340901 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.128112649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.126764488 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.128137947 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.130597248 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.127918759 seconds)
  done (took 57.435638652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.124059216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.312959081 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.364990887 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137257071 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.126528522 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.129352091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.154044613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.132869409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.127222945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.126295185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.227424779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.130337817 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.14043179 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.363240651 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.14693411 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.124542415 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.124205179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.126317683 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.327265143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.143630311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.155225576 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.132939421 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.157863078 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.144606566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.128220059 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.125697191 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.13175849 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.568354892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.141969458 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.231547122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.186090628 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.163532152 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.489512296 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.379829786 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.185994233 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.134598122 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.128950984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.28178783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.143849585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.128544267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.157188581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.135972569 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.369269766 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.641942549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.144469498 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.127038154 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.569367235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.292354858 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.177865066 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.143517283 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.379062098 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.146188906 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.125878049 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.127994257 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.165469705 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.138792205 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.125472433 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.386703622 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.145342912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.157818515 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.135939975 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.128734276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330350124 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.138958931 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.32037959 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.13824389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.135529657 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.130185754 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.367573692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.147225751 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.651885738 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.144562966 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.129676003 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.232781254 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.324379298 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.597138023 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.145933478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.335390756 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.508358259 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.169108283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.144298563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.55185473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.173962593 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.141799068 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.128341988 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.130137487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.130970445 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.177562495 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.159428782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.563696362 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.643419034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.407679976 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.171551355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.147550345 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.131478156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.385708779 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.142572635 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.130858454 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.36237069 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.664042642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.147665263 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.137176257 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.628206628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.146315513 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.160910265 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.145235948 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.384036016 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.151377097 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.17540679 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.131225521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.135933668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.135261833 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.159955509 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.142993318 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.129933536 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.622401809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.29798289 seconds)
  done (took 262.969084106 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.136532857 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.130155197 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.12940883 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.128373338 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.130378659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.132498267 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.129416935 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.128121618 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.133430989 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.130112158 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.130686432 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.128693416 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.13116715 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.133740275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.172737496 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.132314619 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.617668422 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.132665287 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.130384031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.131289079 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.701988673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.13779996 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.132385496 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.131522232 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.132395582 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.133092812 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.132534828 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.173645367 seconds)
  done (took 174.881491405 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.134847885 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.187199445 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.145261257 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.180925637 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.145864696 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.131899972 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.157675559 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.148638427 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.13783556 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.13466036 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.13397922 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.165039371 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.143617072 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.232511206 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.164437611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.166815299 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.237308737 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.139370401 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.13445006 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.133793509 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.182450375 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.148521437 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.166101265 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.197476891 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.145928907 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.187683937 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.146891489 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.134378383 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.133997865 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.248126229 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.152681655 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.166129444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.171125677 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.156673985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.252860743 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.246889504 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.236384365 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.16439163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.139316118 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.135193247 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.132351417 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.136034375 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.190135538 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.147793963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.135170725 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.249009886 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.152602113 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.13477128 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.153904088 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.135930329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.150022365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.153016452 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.169070967 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.261809706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.180010659 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.161634309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.160435723 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.153172619 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.136548314 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.232688277 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.14227748 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.251249411 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.153904182 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.137843087 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.138925371 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.139978192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.185830803 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.171740198 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.23596728 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.140340593 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.234125423 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.186688917 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.150363823 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.136438132 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.137361006 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.192168315 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.24635854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.191140021 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.198739172 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.173474064 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.143687514 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.137620603 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.13749526 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.165243758 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.145091423 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.251247675 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.252691769 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.142039634 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.138445124 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.135798636 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.137846929 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.162788244 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.200689034 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.177025501 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.244319672 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.174016577 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.176545492 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.147451139 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.150009568 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.141446739 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.172816812 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.148158945 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.147962382 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.47155293 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.179423004 seconds)
  done (took 230.076325226 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.496886671 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.181031654 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.210158827 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.402599294 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.500758773 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.03988157 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.179163545 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.188909304 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.194882727 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.314406817 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.377324091 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.232662516 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.176712648 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.160121636 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.181584764 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.196052169 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.218093086 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.486593351 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.291501281 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.683926192 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.179008384 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.475806639 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.48741016 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.511256806 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.229561051 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.590839443 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.782968678 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.282055589 seconds)
  done (took 70.312613066 seconds)
done (took 908.39355776 seconds)
SAVING RESULT...
DONE!
